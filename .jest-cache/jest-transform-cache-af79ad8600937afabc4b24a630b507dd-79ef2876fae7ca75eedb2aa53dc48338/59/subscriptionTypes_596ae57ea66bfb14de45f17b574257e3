8f83a1fb5000ec760ee291796d79a2c5
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._calculateExpiryDate = exports.SubscriptionPlanType = exports.SubscriptionDuration = exports.SUBSCRIPTION_PLANS = void 0;
function cov_1qpb250xb1() {
  var path = "/Users/kevin/card-show-finder/src/services/subscriptionTypes.ts";
  var hash = "e0f83f4ec91c23dfbe3de01d1cfe10e3e33747b2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/services/subscriptionTypes.ts",
    statementMap: {
      "0": {
        start: {
          line: 48,
          column: 54
        },
        end: {
          line: 124,
          column: 1
        }
      },
      "1": {
        start: {
          line: 131,
          column: 36
        },
        end: {
          line: 151,
          column: 1
        }
      },
      "2": {
        start: {
          line: 133,
          column: 14
        },
        end: {
          line: 133,
          column: 24
        }
      },
      "3": {
        start: {
          line: 137,
          column: 20
        },
        end: {
          line: 137,
          column: 39
        }
      },
      "4": {
        start: {
          line: 140,
          column: 2
        },
        end: {
          line: 148,
          column: 3
        }
      },
      "5": {
        start: {
          line: 142,
          column: 6
        },
        end: {
          line: 142,
          column: 22
        }
      },
      "6": {
        start: {
          line: 143,
          column: 6
        },
        end: {
          line: 143,
          column: 12
        }
      },
      "7": {
        start: {
          line: 146,
          column: 6
        },
        end: {
          line: 146,
          column: 21
        }
      },
      "8": {
        start: {
          line: 147,
          column: 6
        },
        end: {
          line: 147,
          column: 12
        }
      },
      "9": {
        start: {
          line: 150,
          column: 2
        },
        end: {
          line: 150,
          column: 57
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 131,
            column: 36
          },
          end: {
            line: 131,
            column: 37
          }
        },
        loc: {
          start: {
            line: 131,
            column: 70
          },
          end: {
            line: 151,
            column: 1
          }
        },
        line: 131
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 140,
            column: 2
          },
          end: {
            line: 148,
            column: 3
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 141,
            column: 4
          },
          end: {
            line: 143,
            column: 12
          }
        }, {
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 144,
            column: 38
          }
        }, {
          start: {
            line: 145,
            column: 4
          },
          end: {
            line: 147,
            column: 12
          }
        }],
        line: 140
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e0f83f4ec91c23dfbe3de01d1cfe10e3e33747b2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1qpb250xb1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1qpb250xb1();
var SubscriptionPlanType = exports.SubscriptionPlanType = function (SubscriptionPlanType) {
  SubscriptionPlanType["DEALER"] = "dealer";
  SubscriptionPlanType["ORGANIZER"] = "organizer";
  return SubscriptionPlanType;
}({});
var SubscriptionDuration = exports.SubscriptionDuration = function (SubscriptionDuration) {
  SubscriptionDuration[SubscriptionDuration["MONTHLY"] = 1] = "MONTHLY";
  SubscriptionDuration[SubscriptionDuration["ANNUAL"] = 12] = "ANNUAL";
  return SubscriptionDuration;
}({});
var SUBSCRIPTION_PLANS = exports.SUBSCRIPTION_PLANS = (cov_1qpb250xb1().s[0]++, [{
  id: 'mvp-dealer-monthly',
  type: SubscriptionPlanType.DEALER,
  name: 'MVP Dealer Monthly',
  description: 'Preview inventory, interact with collectors & more (_monthly)',
  price: 29.99,
  duration: SubscriptionDuration.MONTHLY,
  trialDays: 7,
  features: ['Preview inventory for upcoming shows you attend', 'Interact with collectors planning to attend those shows', 'View want lists of collectors within a 25-mile radius', 'Share external links (_website, _eBay, WhatNot, etc.)', 'Dealer badge on profile']
}, {
  id: 'mvp-dealer-annual',
  type: SubscriptionPlanType.DEALER,
  name: 'MVP Dealer Annual',
  description: 'Save 25% with annual billing',
  price: 261,
  duration: SubscriptionDuration.ANNUAL,
  trialDays: 7,
  isPopular: true,
  features: ['Preview inventory for upcoming shows you attend', 'Interact with collectors planning to attend those shows', 'View want lists of collectors within a 25-mile radius', 'Share external links (_website, _eBay, WhatNot, etc.)', 'Dealer badge on profile', 'Featured dealer status']
}, {
  id: 'show-organizer-monthly',
  type: SubscriptionPlanType.ORGANIZER,
  name: 'Show Organizer Monthly',
  description: 'Organize shows & engage dealers/collectors (monthly)',
  price: 44.99,
  duration: SubscriptionDuration.MONTHLY,
  trialDays: 7,
  features: ['All MVP Dealer features', 'Claim ownership of recurring shows', 'Message dealers & collectors before/after shows', 'Edit upcoming show times, dates & details', 'Respond to collector reviews', 'Promote your events', 'Access attendee data']
}, {
  id: 'show-organizer-annual',
  type: SubscriptionPlanType.ORGANIZER,
  name: 'Show Organizer Annual',
  description: 'Save 25% with annual billing',
  price: 441,
  duration: SubscriptionDuration.ANNUAL,
  trialDays: 7,
  isPopular: true,
  features: ['All MVP Dealer features', 'Claim ownership of recurring shows', 'Message dealers & collectors before/after shows', 'Edit upcoming show times, dates & details', 'Respond to collector reviews', 'Promote your events', 'Access attendee data', 'Featured show placement']
}]);
cov_1qpb250xb1().s[1]++;
var _calculateExpiryDate = exports._calculateExpiryDate = function _calculateExpiryDate(plan) {
  cov_1qpb250xb1().f[0]++;
  var now = (cov_1qpb250xb1().s[2]++, new Date());
  var MS_IN_DAY = (cov_1qpb250xb1().s[3]++, 24 * 60 * 60 * 1000);
  var daysToAdd;
  cov_1qpb250xb1().s[4]++;
  switch (plan.duration) {
    case SubscriptionDuration.ANNUAL:
      cov_1qpb250xb1().b[0][0]++;
      cov_1qpb250xb1().s[5]++;
      daysToAdd = 365;
      cov_1qpb250xb1().s[6]++;
      break;
    case SubscriptionDuration.MONTHLY:
      cov_1qpb250xb1().b[0][1]++;
    default:
      cov_1qpb250xb1().b[0][2]++;
      cov_1qpb250xb1().s[7]++;
      daysToAdd = 30;
      cov_1qpb250xb1().s[8]++;
      break;
  }
  cov_1qpb250xb1().s[9]++;
  return new Date(now.getTime() + daysToAdd * MS_IN_DAY);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,