bb3eda543e8b37f9038fe37df9e826e8
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
function cov_21wbpfmr70() {
  var path = "/Users/kevin/card-show-finder/src/hooks/useUserSubscriptions.ts";
  var hash = "1f713586b9a70f4580a01ca45ddb12cbb8ef4167";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/hooks/useUserSubscriptions.ts",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 36
        },
        end: {
          line: 84,
          column: 1
        }
      },
      "1": {
        start: {
          line: 11,
          column: 44
        },
        end: {
          line: 11,
          column: 63
        }
      },
      "2": {
        start: {
          line: 12,
          column: 36
        },
        end: {
          line: 12,
          column: 59
        }
      },
      "3": {
        start: {
          line: 13,
          column: 28
        },
        end: {
          line: 13,
          column: 56
        }
      },
      "4": {
        start: {
          line: 14,
          column: 24
        },
        end: {
          line: 14,
          column: 33
        }
      },
      "5": {
        start: {
          line: 15,
          column: 19
        },
        end: {
          line: 15,
          column: 28
        }
      },
      "6": {
        start: {
          line: 17,
          column: 2
        },
        end: {
          line: 81,
          column: 13
        }
      },
      "7": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 23,
          column: 5
        }
      },
      "8": {
        start: {
          line: 20,
          column: 6
        },
        end: {
          line: 20,
          column: 27
        }
      },
      "9": {
        start: {
          line: 21,
          column: 6
        },
        end: {
          line: 21,
          column: 26
        }
      },
      "10": {
        start: {
          line: 22,
          column: 6
        },
        end: {
          line: 22,
          column: 13
        }
      },
      "11": {
        start: {
          line: 25,
          column: 31
        },
        end: {
          line: 78,
          column: 5
        }
      },
      "12": {
        start: {
          line: 26,
          column: 6
        },
        end: {
          line: 77,
          column: 7
        }
      },
      "13": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 27
        }
      },
      "14": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 23
        }
      },
      "15": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 35,
          column: 12
        }
      },
      "16": {
        start: {
          line: 32,
          column: 10
        },
        end: {
          line: 35,
          column: 12
        }
      },
      "17": {
        start: {
          line: 43,
          column: 47
        },
        end: {
          line: 47,
          column: 19
        }
      },
      "18": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "19": {
        start: {
          line: 51,
          column: 10
        },
        end: {
          line: 51,
          column: 96
        }
      },
      "20": {
        start: {
          line: 52,
          column: 10
        },
        end: {
          line: 52,
          column: 88
        }
      },
      "21": {
        start: {
          line: 56,
          column: 23
        },
        end: {
          line: 64,
          column: 14
        }
      },
      "22": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 33
        }
      },
      "23": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 71,
          column: 12
        }
      },
      "24": {
        start: {
          line: 68,
          column: 10
        },
        end: {
          line: 71,
          column: 12
        }
      },
      "25": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 72
        }
      },
      "26": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 86
        }
      },
      "27": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 28
        }
      },
      "28": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 80,
          column: 25
        }
      },
      "29": {
        start: {
          line: 83,
          column: 2
        },
        end: {
          line: 83,
          column: 45
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 36
          },
          end: {
            line: 10,
            column: 37
          }
        },
        loc: {
          start: {
            line: 10,
            column: 42
          },
          end: {
            line: 84,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 12
          },
          end: {
            line: 17,
            column: 13
          }
        },
        loc: {
          start: {
            line: 17,
            column: 18
          },
          end: {
            line: 81,
            column: 3
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 25,
            column: 31
          },
          end: {
            line: 25,
            column: 32
          }
        },
        loc: {
          start: {
            line: 25,
            column: 43
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 25
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 35,
            column: 12
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 35,
            column: 12
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "3": {
        loc: {
          start: {
            line: 52,
            column: 26
          },
          end: {
            line: 52,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 26
          },
          end: {
            line: 52,
            column: 47
          }
        }, {
          start: {
            line: 52,
            column: 51
          },
          end: {
            line: 52,
            column: 86
          }
        }],
        line: 52
      },
      "4": {
        loc: {
          start: {
            line: 56,
            column: 23
          },
          end: {
            line: 64,
            column: 14
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 63,
            column: 13
          }
        }, {
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 64,
            column: 14
          }
        }],
        line: 56
      },
      "5": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 71,
            column: 12
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 71,
            column: 12
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "6": {
        loc: {
          start: {
            line: 74,
            column: 17
          },
          end: {
            line: 74,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 74,
            column: 40
          },
          end: {
            line: 74,
            column: 43
          }
        }, {
          start: {
            line: 74,
            column: 46
          },
          end: {
            line: 74,
            column: 84
          }
        }],
        line: 74
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1f713586b9a70f4580a01ca45ddb12cbb8ef4167"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_21wbpfmr70 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_21wbpfmr70();
import { useState, useEffect } from 'react';
import { supabase } from '../supabase';
import { useAuth } from '../contexts/AuthContext';
cov_21wbpfmr70().s[0]++;
export var useUserSubscriptions = function useUserSubscriptions() {
  cov_21wbpfmr70().f[0]++;
  var _ref = (cov_21wbpfmr70().s[1]++, useState([])),
    _ref2 = _slicedToArray(_ref, 2),
    subscriptions = _ref2[0],
    setSubscriptions = _ref2[1];
  var _ref3 = (cov_21wbpfmr70().s[2]++, useState(true)),
    _ref4 = _slicedToArray(_ref3, 2),
    isLoading = _ref4[0],
    setIsLoading = _ref4[1];
  var _ref5 = (cov_21wbpfmr70().s[3]++, useState(null)),
    _ref6 = _slicedToArray(_ref5, 2),
    error = _ref6[0],
    setError = _ref6[1];
  var _ref7 = (cov_21wbpfmr70().s[4]++, useAuth()),
    authState = _ref7.authState;
  var _ref8 = (cov_21wbpfmr70().s[5]++, authState),
    user = _ref8.user;
  cov_21wbpfmr70().s[6]++;
  useEffect(function () {
    cov_21wbpfmr70().f[1]++;
    cov_21wbpfmr70().s[7]++;
    if (!user) {
      cov_21wbpfmr70().b[0][0]++;
      cov_21wbpfmr70().s[8]++;
      setSubscriptions([]);
      cov_21wbpfmr70().s[9]++;
      setIsLoading(false);
      cov_21wbpfmr70().s[10]++;
      return;
    } else {
      cov_21wbpfmr70().b[0][1]++;
    }
    cov_21wbpfmr70().s[11]++;
    var fetchSubscriptions = function () {
      var _ref9 = _asyncToGenerator(function* () {
        cov_21wbpfmr70().f[2]++;
        cov_21wbpfmr70().s[12]++;
        try {
          cov_21wbpfmr70().s[13]++;
          setIsLoading(true);
          cov_21wbpfmr70().s[14]++;
          setError(null);
          cov_21wbpfmr70().s[15]++;
          if (__DEV__) {
            cov_21wbpfmr70().b[1][0]++;
            cov_21wbpfmr70().s[16]++;
            console.warn('[_useUserSubscriptions] Fetching subscriptions for user:', user.id);
          } else {
            cov_21wbpfmr70().b[1][1]++;
          }
          var _ref0 = (cov_21wbpfmr70().s[17]++, yield supabase.from('profiles').select('subscription_status, subscription_expiry, account_type').eq('id', user.id).single()),
            data = _ref0.data,
            supabaseError = _ref0.error;
          cov_21wbpfmr70().s[18]++;
          if (supabaseError) {
            cov_21wbpfmr70().b[2][0]++;
            cov_21wbpfmr70().s[19]++;
            console.error('[_useUserSubscriptions] Error fetching subscriptions:', supabaseError);
            cov_21wbpfmr70().s[20]++;
            throw new Error((cov_21wbpfmr70().b[3][0]++, supabaseError.message) || (cov_21wbpfmr70().b[3][1]++, 'Failed to fetch subscription data'));
          } else {
            cov_21wbpfmr70().b[2][1]++;
          }
          var mapped = (cov_21wbpfmr70().s[21]++, data ? (cov_21wbpfmr70().b[4][0]++, [{
            status: data.subscription_status,
            expiry: data.subscription_expiry,
            accountType: data.account_type
          }]) : (cov_21wbpfmr70().b[4][1]++, []));
          cov_21wbpfmr70().s[22]++;
          setSubscriptions(mapped);
          cov_21wbpfmr70().s[23]++;
          if (__DEV__) {
            cov_21wbpfmr70().b[5][0]++;
            cov_21wbpfmr70().s[24]++;
            console.warn('[_useUserSubscriptions] Fetched subscriptions:', mapped.length);
          } else {
            cov_21wbpfmr70().b[5][1]++;
          }
        } catch (err) {
          cov_21wbpfmr70().s[25]++;
          console.error('[_useUserSubscriptions] Unexpected error:', err);
          cov_21wbpfmr70().s[26]++;
          setError(err instanceof Error ? (cov_21wbpfmr70().b[6][0]++, err) : (cov_21wbpfmr70().b[6][1]++, new Error('An unknown error occurred')));
        } finally {
          cov_21wbpfmr70().s[27]++;
          setIsLoading(false);
        }
      });
      return function fetchSubscriptions() {
        return _ref9.apply(this, arguments);
      };
    }();
    cov_21wbpfmr70().s[28]++;
    fetchSubscriptions();
  }, [user]);
  cov_21wbpfmr70().s[29]++;
  return {
    subscriptions: subscriptions,
    isLoading: isLoading,
    error: error
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,