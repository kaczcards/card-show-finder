{"version":3,"names":["describe","it","expect","toBe","toHaveLength","toContain","name","toHaveProperty","_asyncToGenerator2","default","result","Promise","resolve","user","id","active","toBeUndefined","getFirst","array","mockFn","jest","fn","toHaveBeenCalled","toHaveBeenCalledWith","data","timestamp","Date","toISOString","split","message","success","toMatchSnapshot","any","String"],"sources":["smoke.unit.test.ts"],"sourcesContent":["/**\n * Smoke Test for Jest + TypeScript Configuration\n * \n * This basic test verifies that:\n * 1. Jest is properly configured and running\n * 2. TypeScript compilation is working\n * 3. Basic test assertions function correctly\n */\n\n// Test basic JavaScript functionality\ndescribe('JavaScript Environment', () => {\n  it('supports basic operations', () => {\n    expect(1 + 1).toBe(2);\n    expect('hello').toHaveLength(5);\n    expect([1, 2, 3]).toContain(2);\n    expect({ name: 'test' }).toHaveProperty('name');\n  });\n\n  it('supports async/await', async () => {\n    const result = await Promise.resolve('async works');\n    expect(result).toBe('async works');\n  });\n});\n\n// Test TypeScript functionality\ndescribe('TypeScript Environment', () => {\n  // Define a TypeScript interface\n  interface User {\n    id: number;\n    name: string;\n    active?: boolean;\n  }\n\n  it('supports TypeScript types', () => {\n    // Create an object with the interface\n    const user: User = {\n      id: 1,\n      name: 'Test User'\n    };\n\n    // TypeScript assertions\n    expect(user.id).toBe(1);\n    expect(user.name).toBe('Test User');\n    expect(user.active).toBeUndefined();\n  });\n\n  it('supports TypeScript generics', () => {\n    // Test with generics\n    function getFirst<T>(array: T[]): T | undefined {\n      return array[0];\n    }\n\n    expect(getFirst([1, 2, 3])).toBe(1);\n    expect(getFirst(['a', 'b', 'c'])).toBe('a');\n    expect(getFirst([])).toBeUndefined();\n  });\n});\n\n// Test Jest environment\ndescribe('Jest Test Environment', () => {\n  it('supports mocks', () => {\n    const mockFn = jest.fn();\n    mockFn('test');\n    \n    expect(mockFn).toHaveBeenCalled();\n    expect(mockFn).toHaveBeenCalledWith('test');\n  });\n\n  it('supports snapshots', () => {\n    const data = {\n      timestamp: new Date().toISOString().split('T')[0], // Just the date part for stability\n      message: 'Smoke test complete',\n      success: true\n    };\n    \n    // This will create a snapshot file on first run\n    expect(data).toMatchSnapshot({\n      timestamp: expect.any(String) // Make snapshot stable\n    });\n  });\n});\n"],"mappings":";;AAUAA,QAAQ,CAAC,wBAAwB,EAAE,YAAM;EACvCC,EAAE,CAAC,2BAA2B,EAAE,YAAM;IACpCC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IACrBD,MAAM,CAAC,OAAO,CAAC,CAACE,YAAY,CAAC,CAAC,CAAC;IAC/BF,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAACG,SAAS,CAAC,CAAC,CAAC;IAC9BH,MAAM,CAAC;MAAEI,IAAI,EAAE;IAAO,CAAC,CAAC,CAACC,cAAc,CAAC,MAAM,CAAC;EACjD,CAAC,CAAC;EAEFN,EAAE,CAAC,sBAAsB,MAAAO,kBAAA,CAAAC,OAAA,EAAE,aAAY;IACrC,IAAMC,MAAM,SAASC,OAAO,CAACC,OAAO,CAAC,aAAa,CAAC;IACnDV,MAAM,CAACQ,MAAM,CAAC,CAACP,IAAI,CAAC,aAAa,CAAC;EACpC,CAAC,EAAC;AACJ,CAAC,CAAC;AAGFH,QAAQ,CAAC,wBAAwB,EAAE,YAAM;EAQvCC,EAAE,CAAC,2BAA2B,EAAE,YAAM;IAEpC,IAAMY,IAAU,GAAG;MACjBC,EAAE,EAAE,CAAC;MACLR,IAAI,EAAE;IACR,CAAC;IAGDJ,MAAM,CAACW,IAAI,CAACC,EAAE,CAAC,CAACX,IAAI,CAAC,CAAC,CAAC;IACvBD,MAAM,CAACW,IAAI,CAACP,IAAI,CAAC,CAACH,IAAI,CAAC,WAAW,CAAC;IACnCD,MAAM,CAACW,IAAI,CAACE,MAAM,CAAC,CAACC,aAAa,CAAC,CAAC;EACrC,CAAC,CAAC;EAEFf,EAAE,CAAC,8BAA8B,EAAE,YAAM;IAEvC,SAASgB,QAAQA,CAAIC,KAAU,EAAiB;MAC9C,OAAOA,KAAK,CAAC,CAAC,CAAC;IACjB;IAEAhB,MAAM,CAACe,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAACd,IAAI,CAAC,CAAC,CAAC;IACnCD,MAAM,CAACe,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAACd,IAAI,CAAC,GAAG,CAAC;IAC3CD,MAAM,CAACe,QAAQ,CAAC,EAAE,CAAC,CAAC,CAACD,aAAa,CAAC,CAAC;EACtC,CAAC,CAAC;AACJ,CAAC,CAAC;AAGFhB,QAAQ,CAAC,uBAAuB,EAAE,YAAM;EACtCC,EAAE,CAAC,gBAAgB,EAAE,YAAM;IACzB,IAAMkB,MAAM,GAAGC,IAAI,CAACC,EAAE,CAAC,CAAC;IACxBF,MAAM,CAAC,MAAM,CAAC;IAEdjB,MAAM,CAACiB,MAAM,CAAC,CAACG,gBAAgB,CAAC,CAAC;IACjCpB,MAAM,CAACiB,MAAM,CAAC,CAACI,oBAAoB,CAAC,MAAM,CAAC;EAC7C,CAAC,CAAC;EAEFtB,EAAE,CAAC,oBAAoB,EAAE,YAAM;IAC7B,IAAMuB,IAAI,GAAG;MACXC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACjDC,OAAO,EAAE,qBAAqB;MAC9BC,OAAO,EAAE;IACX,CAAC;IAGD5B,MAAM,CAACsB,IAAI,CAAC,CAACO,eAAe,CAAC;MAC3BN,SAAS,EAAEvB,MAAM,CAAC8B,GAAG,CAACC,MAAM;IAC9B,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}