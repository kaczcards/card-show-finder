{"version":3,"names":["React","View","Text","StyleSheet","Ionicons","Fragment","_Fragment","jsx","_jsx","jsxs","_jsxs","cov_m7xa33kvf","s","InfoRow","_ref","icon","text","children","f","renderContent","b","undefined","style","styles","infoText","infoRow","name","size","color","infoIcon","textContainer","ShowBasicInfo","_ref2","show","safeShow","getTitle","title","String","getLocation","address","trim","location","formatEntryFee","fee","entry_fee","toFixed","parsed","parseFloat","isNaN","shouldShowEntryFee","container","create","padding","backgroundColor","fontSize","fontWeight","marginBottom","flexDirection","alignItems","marginRight","marginTop","flex"],"sources":["ShowBasicInfo.tsx"],"sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\n\n// Define strict types for the show object\ninterface ShowBasicInfoProps {\n  show: {\n    title?: string;\n    address?: string;\n    location?: string;\n    entry_fee?: number | string | null;\n    [key: string]: any; // Allow for additional properties\n  };\n}\n\n// InfoRow component for consistent \"icon + text\" rows\ntype InfoRowProps = {\n  icon: React.ComponentProps<typeof Ionicons>['name'];\n  text?: string | null;\n  children?: React.ReactNode;\n};\n\n/**\n * A robust InfoRow component that ensures all text is properly wrapped\n * in Text components and handles all edge cases.\n */\nconst InfoRow: React.FC<InfoRowProps> = ({ icon, text, children }) => {\n  // Function to safely render content based on type\n  const renderContent = () => {\n    // If children are provided, handle them based on type\n    if (children !== undefined && children !== null) {\n      /* ------------------------------------------------------------------\n       * Always ensure `children` is wrapped in a fragment so the return\n       * value is guaranteed to be a valid React node regardless of the\n       * type passed in. This covers strings, numbers, elements, arrays,\n       * and other renderable primitives without additional branching.\n       * ----------------------------------------------------------------*/\n      return <>{children}</>;\n    }\n    \n    // If no children but text is provided, render it safely\n    if (text !== undefined && text !== null) {\n      return <Text style={styles.infoText}>{text}</Text>;\n    }\n    \n    // Fallback for no content\n    return <Text style={styles.infoText}>Not specified</Text>;\n  };\n\n  return (\n    <View style={styles.infoRow}>\n      <Ionicons\n        name={icon}\n        size={20}\n        color=\"#666666\"\n        style={styles.infoIcon}\n      />\n      <View style={styles.textContainer}>\n        {renderContent()}\n      </View>\n    </View>\n  );\n};\n\n/**\n * A super-robust ShowBasicInfo component that ensures all text is properly\n * wrapped in Text components and all data access is safely guarded.\n */\nconst ShowBasicInfo: React.FC<ShowBasicInfoProps> = ({ show }) => {\n  // Ensure show object exists\n  const safeShow = show || {};\n  \n  // Safe getters for show properties with fallbacks\n  const getTitle = () => {\n    const title = safeShow.title;\n    if (typeof title === 'string') return title;\n    if (typeof title === 'number') return String(title);\n    return 'Untitled Show';\n  };\n  \n  const getLocation = () => {\n    // Try address first, then location, with fallback\n    if (typeof safeShow.address === 'string' && safeShow.address.trim() !== '') {\n      return safeShow.address;\n    }\n    if (typeof safeShow.location === 'string' && safeShow.location.trim() !== '') {\n      return safeShow.location;\n    }\n    return 'Location not specified';\n  };\n  \n  // Safe entry fee formatting with comprehensive type checking\n  const formatEntryFee = () => {\n    const fee = safeShow.entry_fee;\n    \n    // Handle undefined or null\n    if (fee === undefined || fee === null) {\n      return 'Entry fee not specified';\n    }\n    \n    // Handle numeric values\n    if (typeof fee === 'number') {\n      return `Entry Fee: $${fee.toFixed(2)}`;\n    }\n    \n    // Handle string values that might be numeric\n    if (typeof fee === 'string') {\n      if (fee.trim() === '') {\n        return 'Entry fee not specified';\n      }\n      \n      // Try to parse as number if it looks like one\n      const parsed = parseFloat(fee);\n      if (!isNaN(parsed)) {\n        return `Entry Fee: $${parsed.toFixed(2)}`;\n      }\n      \n      // Otherwise return as is\n      return `Entry Fee: ${fee}`;\n    }\n    \n    // Fallback for unexpected types\n    return 'Entry fee not specified';\n  };\n  \n  // Check if entry fee exists and should be displayed\n  const shouldShowEntryFee = () => {\n    const fee = safeShow.entry_fee;\n    return fee !== undefined && fee !== null && fee !== '';\n  };\n\n  return (\n    <View style={styles.container}>\n      {/* Title with fallback */}\n      <Text style={styles.title}>{getTitle()}</Text>\n      \n      {/* Location with icon */}\n      <InfoRow icon=\"location\">\n        <Text style={styles.infoText}>{getLocation()}</Text>\n      </InfoRow>\n      \n      {/* Entry fee with icon - only shown if it exists */}\n      {shouldShowEntryFee() && (\n        <InfoRow icon=\"cash\">\n          <Text style={styles.infoText}>{formatEntryFee()}</Text>\n        </InfoRow>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    backgroundColor: '#ffffff',\n  },\n  title: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    color: '#333333',\n  },\n  infoRow: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    marginBottom: 12,\n  },\n  infoIcon: {\n    marginRight: 10,\n    marginTop: 2,\n  },\n  textContainer: {\n    flex: 1,\n  },\n  infoText: {\n    fontSize: 16,\n    color: '#333333',\n    flex: 1,\n  },\n});\n\nexport default ShowBasicInfo;\n"],"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","ignoreList":[]}