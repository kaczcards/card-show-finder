{"version":3,"names":["normalizeUrl","url","cov_1ijighphm9","f","s","b","undefined","trimmed","trim","startsWith","validateZip","zip","digitsOnly","replace","length","validatePhone","phone","normalizeSocials","input","result","facebookUrl","facebook_url","instagramUrl","instagram_url","twitterUrl","twitter_url","whatnotUrl","whatnot_url","ebayStoreUrl","ebay_store_url","validateProfileForm","fields","normalized","Object","assign","errors","socials","validZip","validPhone"],"sources":["profileValidation.ts"],"sourcesContent":["export function normalizeUrl(url?: string): string | undefined {\n  if (!url) return undefined;\n  \n  const trimmed = url.trim();\n  if (!trimmed) return undefined;\n  \n  if (trimmed.startsWith('http://') || trimmed.startsWith('https://')) {\n    return trimmed;\n  }\n  \n  return `https://${trimmed}`;\n}\n\nexport function validateZip(zip?: string): string | undefined {\n  if (!zip) return undefined;\n  \n  const digitsOnly = zip.replace(/\\D/g, '');\n  \n  if (digitsOnly.length === 5) {\n    return digitsOnly;\n  }\n  \n  return undefined;\n}\n\nexport function validatePhone(phone?: string): string | undefined {\n  if (!phone) return undefined;\n  \n  const digitsOnly = phone.replace(/\\D/g, '');\n  \n  if (digitsOnly.length < 7) {\n    return undefined;\n  }\n  \n  // E.164 format for US numbers\n  if (digitsOnly.length === 10) {\n    return `+1${digitsOnly}`;\n  }\n  \n  if (digitsOnly.length === 11 && digitsOnly.startsWith('1')) {\n    return `+${digitsOnly}`;\n  }\n  \n  return digitsOnly;\n}\n\nexport function normalizeSocials(input: Record<string, any>): Record<string, string | undefined> {\n  const result: Record<string, string | undefined> = {};\n  \n  // Handle both snake_case and camelCase\n  result.facebookUrl = normalizeUrl(input.facebookUrl || input.facebook_url);\n  result.instagramUrl = normalizeUrl(input.instagramUrl || input.instagram_url);\n  result.twitterUrl = normalizeUrl(input.twitterUrl || input.twitter_url);\n  result.whatnotUrl = normalizeUrl(input.whatnotUrl || input.whatnot_url);\n  result.ebayStoreUrl = normalizeUrl(input.ebayStoreUrl || input.ebay_store_url);\n  \n  return result;\n}\n\nexport function validateProfileForm(fields: Record<string, any>): { \n  normalized: Record<string, any>; \n  errors: Record<string, string> \n} {\n  const normalized: Record<string, any> = { ...fields };\n  const errors: Record<string, string> = {};\n  \n  // Normalize social URLs\n  const socials = normalizeSocials(fields);\n  Object.assign(normalized, socials);\n  \n  // Validate ZIP\n  const validZip = validateZip(fields.zip);\n  if (fields.zip && !validZip) {\n    errors.zip = 'Please enter a valid 5-digit ZIP code';\n  }\n  normalized.zip = validZip;\n  \n  // Validate phone\n  const validPhone = validatePhone(fields.phone);\n  if (fields.phone && !validPhone) {\n    errors.phone = 'Please enter a valid phone number (at least 7 digits)';\n  }\n  normalized.phone = validPhone;\n  \n  return { normalized, errors };\n}\n"],"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","ignoreList":[]}