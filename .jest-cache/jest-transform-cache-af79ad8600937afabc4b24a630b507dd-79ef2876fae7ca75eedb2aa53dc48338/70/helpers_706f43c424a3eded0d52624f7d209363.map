{"version":3,"names":["debounce","func","delay","cov_nui3gzykb","f","timeoutId","s","_len","arguments","length","args","Array","_key","b","clearTimeout","setTimeout","apply"],"sources":["helpers.ts"],"sourcesContent":["/**\n * General utility functions for the app\n */\n\n/**\n * Creates a debounced version of a function that only calls the original \n * function after a specified delay has passed without any new calls.\n * \n * @param func The function to debounce\n * @param delay The delay in milliseconds\n * @returns A debounced version of the function\n */\nexport const debounce = <T extends (...args: any[]) => any>(\n  func: T,\n  delay: number\n): ((...args: Parameters<T>) => void) => {\n  let timeoutId: ReturnType<typeof setTimeout> | null = null;\n\n  return (...args: Parameters<T>) => {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n    \n    timeoutId = setTimeout(() => {\n      func(...args);\n      timeoutId = null;\n    }, delay);\n  };\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYA,OAAO,IAAMA,QAAQ,GAAG,SAAXA,QAAQA,CACnBC,IAAO,EACPC,KAAa,EAC0B;EAAAC,aAAA,GAAAC,CAAA;EACvC,IAAIC,SAA+C,IAAAF,aAAA,GAAAG,CAAA,OAAG,IAAI;EAACH,aAAA,GAAAG,CAAA;EAE3D,OAAO,YAA4B;IAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAxBC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IAAAT,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAG,CAAA;IACb,IAAID,SAAS,EAAE;MAAAF,aAAA,GAAAU,CAAA;MAAAV,aAAA,GAAAG,CAAA;MACbQ,YAAY,CAACT,SAAS,CAAC;IACzB,CAAC;MAAAF,aAAA,GAAAU,CAAA;IAAA;IAAAV,aAAA,GAAAG,CAAA;IAEDD,SAAS,GAAGU,UAAU,CAAC,YAAM;MAAAZ,aAAA,GAAAC,CAAA;MAAAD,aAAA,GAAAG,CAAA;MAC3BL,IAAI,CAAAe,KAAA,SAAIN,IAAI,CAAC;MAACP,aAAA,GAAAG,CAAA;MACdD,SAAS,GAAG,IAAI;IAClB,CAAC,EAAEH,KAAK,CAAC;EACX,CAAC;AACH,CAAC","ignoreList":[]}