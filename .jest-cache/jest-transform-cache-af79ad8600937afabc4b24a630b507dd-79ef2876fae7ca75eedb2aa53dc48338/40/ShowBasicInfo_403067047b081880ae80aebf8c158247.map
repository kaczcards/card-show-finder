{"version":3,"names":["React","View","Text","StyleSheet","Ionicons","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","cov_m7xa33kvf","s","InfoRow","_ref","icon","text","children","f","renderContent","b","undefined","style","styles","infoText","toString","isValidElement","e","console","error","infoRow","name","size","color","infoIcon","textContainer","ShowBasicInfo","_ref2","show","safeShow","getTitle","title","getLocation","address","trim","location","formatEntryFee","fee","entry_fee","toFixed","parsed","parseFloat","isNaN","shouldShowEntryFee","container","create","padding","backgroundColor","fontSize","fontWeight","marginBottom","flexDirection","alignItems","marginRight","marginTop","flex"],"sources":["ShowBasicInfo.tsx"],"sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\n\n// Define strict types for the show object\ninterface ShowBasicInfoProps {\n  show: {\n    title?: string;\n    address?: string;\n    location?: string;\n    entry_fee?: number | string | null;\n    [key: string]: any; // Allow for additional properties\n  };\n}\n\n// InfoRow component for consistent \"icon + text\" rows\ntype InfoRowProps = {\n  icon: React.ComponentProps<typeof Ionicons>['name'];\n  text?: string | null;\n  children?: React.ReactNode;\n};\n\n/**\n * A robust InfoRow component that ensures all text is properly wrapped\n * in Text components and handles all edge cases.\n */\nconst InfoRow: React.FC<InfoRowProps> = ({ icon, text, children }) => {\n  // Function to safely render content based on type\n  const renderContent = () => {\n    // If children are provided, handle them based on type\n    if (children !== undefined && children !== null) {\n      // If children is a string or number, wrap in a Text component\n      if (typeof children === 'string' || typeof children === 'number') {\n        return <Text style={styles.infoText}>{children.toString()}</Text>;\n      }\n      \n      // If children is a valid React element, return it directly\n      if (React.isValidElement(children)) {\n        return children;\n      }\n      \n      // For any other case, wrap in a fragment and ensure it's safe\n      try {\n        return <>{children}</>;\n      } catch (e) {\n        console.error('Error rendering children:', e);\n        return <Text style={styles.infoText}>Error displaying content</Text>;\n      }\n    }\n    \n    // If no children but text is provided, render it safely\n    if (text !== undefined && text !== null) {\n      return <Text style={styles.infoText}>{text.toString()}</Text>;\n    }\n    \n    // Fallback for no content\n    return <Text style={styles.infoText}>Not specified</Text>;\n  };\n\n  return (\n    <View style={styles.infoRow}>\n      <Ionicons\n        name={icon}\n        size={20}\n        color=\"#666666\"\n        style={styles.infoIcon}\n      />\n      <View style={styles.textContainer}>\n        {renderContent()}\n      </View>\n    </View>\n  );\n};\n\n/**\n * A super-robust ShowBasicInfo component that ensures all text is properly\n * wrapped in Text components and all data access is safely guarded.\n */\nconst ShowBasicInfo: React.FC<ShowBasicInfoProps> = ({ show }) => {\n  // Ensure show object exists\n  const safeShow = show || {};\n  \n  // Safe getters for show properties with fallbacks\n  const getTitle = () => {\n    if (typeof safeShow.title === 'string') return safeShow.title;\n    if (typeof safeShow.title === 'number') return safeShow.title.toString();\n    return 'Untitled Show';\n  };\n  \n  const getLocation = () => {\n    // Try address first, then location, with fallback\n    if (typeof safeShow.address === 'string' && safeShow.address.trim() !== '') {\n      return safeShow.address;\n    }\n    if (typeof safeShow.location === 'string' && safeShow.location.trim() !== '') {\n      return safeShow.location;\n    }\n    return 'Location not specified';\n  };\n  \n  // Safe entry fee formatting with comprehensive type checking\n  const formatEntryFee = () => {\n    const fee = safeShow.entry_fee;\n    \n    // Handle undefined or null\n    if (fee === undefined || fee === null) {\n      return 'Entry fee not specified';\n    }\n    \n    // Handle numeric values\n    if (typeof fee === 'number') {\n      return `Entry Fee: $${fee.toFixed(2)}`;\n    }\n    \n    // Handle string values that might be numeric\n    if (typeof fee === 'string') {\n      if (fee.trim() === '') {\n        return 'Entry fee not specified';\n      }\n      \n      // Try to parse as number if it looks like one\n      const parsed = parseFloat(fee);\n      if (!isNaN(parsed)) {\n        return `Entry Fee: $${parsed.toFixed(2)}`;\n      }\n      \n      // Otherwise return as is\n      return `Entry Fee: ${fee}`;\n    }\n    \n    // Fallback for unexpected types\n    return 'Entry fee not specified';\n  };\n  \n  // Check if entry fee exists and should be displayed\n  const shouldShowEntryFee = () => {\n    const fee = safeShow.entry_fee;\n    return fee !== undefined && fee !== null && fee !== '';\n  };\n\n  return (\n    <View style={styles.container}>\n      {/* Title with fallback */}\n      <Text style={styles.title}>{getTitle()}</Text>\n      \n      {/* Location with icon */}\n      <InfoRow icon=\"location\">\n        <Text style={styles.infoText}>{getLocation()}</Text>\n      </InfoRow>\n      \n      {/* Entry fee with icon - only shown if it exists */}\n      {shouldShowEntryFee() && (\n        <InfoRow icon=\"cash\">\n          <Text style={styles.infoText}>{formatEntryFee()}</Text>\n        </InfoRow>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    backgroundColor: '#ffffff',\n  },\n  title: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    color: '#333333',\n  },\n  infoRow: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    marginBottom: 12,\n  },\n  infoIcon: {\n    marginRight: 10,\n    marginTop: 2,\n  },\n  textContainer: {\n    flex: 1,\n  },\n  infoText: {\n    fontSize: 16,\n    color: '#333333',\n    flex: 1,\n  },\n});\n\nexport default ShowBasicInfo;\n"],"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","ignoreList":[]}