{"version":3,"names":["React","View","Text","StyleSheet","ScrollView","SafeAreaView","useNavigation","SentryTester","jsx","_jsx","jsxs","_jsxs","cov_1teu8em1vg","s","SentryTestScreen","f","navigation","useLayoutEffect","setOptions","headerTitle","headerBackTitle","style","styles","container","edges","children","contentContainerStyle","scrollContent","headerContainer","headerDescription","divider","noteContainer","noteText","create","flex","backgroundColor","flexGrow","padding","marginBottom","fontSize","fontWeight","color","lineHeight","height","marginVertical","marginTop","borderRadius","borderLeftWidth","borderLeftColor"],"sources":["SentryTestScreen.tsx"],"sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useNavigation } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\n\nimport SentryTester from '../components/SentryTester';\n\n/**\n * SentryTestScreen\n * \n * This screen provides a UI for testing Sentry integration features.\n * It allows developers to trigger various error scenarios and verify\n * that they are properly captured in the Sentry dashboard.\n */\nconst SentryTestScreen: React.FC = () => {\n  const navigation = useNavigation<NativeStackNavigationProp<any>>();\n\n  // Set navigation options\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerTitle: 'Sentry Testing',\n      headerBackTitle: 'Back',\n    });\n  }, [navigation]);\n\n  return (\n    <SafeAreaView style={styles.container} edges={['bottom', 'left', 'right']}>\n      <ScrollView contentContainerStyle={styles.scrollContent}>\n        <View style={styles.headerContainer}>\n          <Text style={styles.headerTitle}>Sentry Error Reporting</Text>\n          <Text style={styles.headerDescription}>\n            This screen allows you to test Sentry error reporting functionality.\n            Use the tools below to generate different types of errors and check\n            that they appear correctly in your Sentry dashboard.\n          </Text>\n        </View>\n        \n        <View style={styles.divider} />\n        \n        {/* The SentryTester component contains all the testing functionality */}\n        <SentryTester />\n        \n        <View style={styles.noteContainer}>\n          <Text style={styles.noteText}>\n            Note: Make sure you have set up your EXPO_PUBLIC_SENTRY_DSN in the .env file\n            and configured your Sentry project correctly.\n          </Text>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f8f9fa',\n  },\n  scrollContent: {\n    flexGrow: 1,\n    padding: 16,\n  },\n  headerContainer: {\n    marginBottom: 16,\n  },\n  headerTitle: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    color: '#343a40',\n    marginBottom: 8,\n  },\n  headerDescription: {\n    fontSize: 16,\n    color: '#6c757d',\n    lineHeight: 22,\n  },\n  divider: {\n    height: 1,\n    backgroundColor: '#dee2e6',\n    marginVertical: 16,\n  },\n  noteContainer: {\n    marginTop: 24,\n    padding: 16,\n    backgroundColor: '#e9ecef',\n    borderRadius: 8,\n    borderLeftWidth: 4,\n    borderLeftColor: '#6c757d',\n  },\n  noteText: {\n    fontSize: 14,\n    color: '#495057',\n    lineHeight: 20,\n  },\n});\n\nexport default SentryTestScreen;\n"],"mappings":"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","ignoreList":[]}