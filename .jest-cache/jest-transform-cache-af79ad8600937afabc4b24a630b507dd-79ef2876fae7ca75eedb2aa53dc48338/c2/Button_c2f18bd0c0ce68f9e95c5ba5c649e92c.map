{"version":3,"names":["React","useRef","TouchableOpacity","Text","Animated","ActivityIndicator","useTheme","jsx","_jsx","cov_1khdmb7izr","s","Button","_ref","_ref$variant","variant","b","label","onPress","_ref$disabled","disabled","_ref$loading","loading","style","textStyle","_ref$animated","animated","f","_ref2","theme","scaleValue","Value","current","buttonStyle","components","buttons","animationProps","animations","animation","buttonPress","containerStyle","container","disabledContainer","labelStyle","text","disabledText","View","children","Object","assign","activeOpacity","onPressIn","onPressOut","color","size"],"sources":["Button.tsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport { \n  TouchableOpacity, \n  Text, \n  StyleSheet, \n  StyleProp, \n  ViewStyle,\n  TextStyle,\n  Animated,\n  ActivityIndicator,\n} from 'react-native';\nimport { useTheme } from '../../contexts/ThemeContext';\n\ninterface ButtonProps {\n  /**\n   * Button type: primary, secondary, outline, or text\n   */\n  variant?: 'primary' | 'secondary' | 'outline' | 'text';\n  \n  /**\n   * The text label for the button\n   */\n  label: string;\n  \n  /**\n   * The function to call when the button is pressed\n   */\n  onPress: () => void;\n  \n  /**\n   * Whether the button should be disabled\n   */\n  disabled?: boolean;\n  \n  /**\n   * Whether the button should show a loading indicator\n   */\n  loading?: boolean;\n  \n  /**\n   * Optional custom style for the button container\n   */\n  style?: StyleProp<ViewStyle>;\n  \n  /**\n   * Optional custom style for the button text\n   */\n  textStyle?: StyleProp<TextStyle>;\n  \n  /**\n   * Whether to animate the button press\n   */\n  animated?: boolean;\n}\n\n/**\n * Button - A standardized button component\n * \n * This component provides a consistent button style throughout the app,\n * with support for different variants, loading states, and animations.\n */\nconst Button: React.FC<ButtonProps> = ({\n  variant = 'primary',\n  label,\n  onPress,\n  disabled = false,\n  loading = false,\n  style,\n  textStyle,\n  animated = true,\n}) => {\n  // Get theme from context\n  const { theme } = useTheme();\n  \n  // Animation value for scale\n  const scaleValue = useRef(new Animated.Value(1)).current;\n  \n  // Get button styles based on variant\n  const buttonStyle = theme.components.buttons[variant];\n  \n  // Setup animation handlers if animated is true\n  const animationProps = animated ? theme.animations.animation.buttonPress(scaleValue) : {};\n  \n  // Determine final styles based on state\n  const containerStyle = [\n    buttonStyle.container,\n    disabled && buttonStyle.disabledContainer,\n    style,\n  ];\n  \n  const labelStyle = [\n    buttonStyle.text,\n    disabled && buttonStyle.disabledText,\n    textStyle,\n  ];\n  \n  return (\n    <Animated.View style={animationProps.style}>\n      <TouchableOpacity\n        activeOpacity={0.8}\n        onPress={onPress}\n        disabled={disabled || loading}\n        style={containerStyle}\n        {...(animated ? {\n          onPressIn: animationProps.onPressIn,\n          onPressOut: animationProps.onPressOut,\n        } : {})}\n      >\n        {loading ? (\n          <ActivityIndicator \n            color={buttonStyle.text.color} \n            size=\"small\" \n          />\n        ) : (\n          <Text style={labelStyle}>{label}</Text>\n        )}\n      </TouchableOpacity>\n    </Animated.View>\n  );\n};\n\nexport default Button;\n"],"mappings":"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","ignoreList":[]}