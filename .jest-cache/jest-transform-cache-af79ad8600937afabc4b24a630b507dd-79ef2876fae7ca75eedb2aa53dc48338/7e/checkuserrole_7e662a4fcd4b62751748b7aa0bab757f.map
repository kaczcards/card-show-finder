{"version":3,"names":["_ref","cov_qtrntxm1y","s","require","createClient","config","_supabaseUrl","b","process","env","REACT_APP_SUPABASE_URL","SUPABASE_URL","_supabaseKey","REACT_APP_SUPABASE_ANON_KEY","SUPABASE_ANON_KEY","console","error","exit","_supabase","_USER_ID","checkUserRole","_checkUserRole","apply","arguments","_asyncToGenerator","f","warn","_ref2","from","select","eq","single","data","id","firstName","lastName","email","role","accountType","_err","then","catch","err"],"sources":["check-user-role.js"],"sourcesContent":["// src/scripts/check-user-role.js\nconst { createClient } = require('@supabase/supabase-js');\nrequire('dotenv').config();\n\n// Initialize Supabase client\nconst _supabaseUrl =\n  process.env.REACT_APP_SUPABASE_URL || process.env.SUPABASE_URL;\nconst _supabaseKey =\n  process.env.REACT_APP_SUPABASE_ANON_KEY || process.env.SUPABASE_ANON_KEY;\n\nif (!_supabaseUrl || !_supabaseKey) {\n  console.error('Error: Supabase URL or key not found in environment variables');\n  console.error('Please set SUPABASE_URL and SUPABASE_ANON_KEY in your .env file');\n  process.exit(1);\n}\n\nconst _supabase = createClient(_supabaseUrl, _supabaseKey);\n\n// User ID to check\nconst _USER_ID = '50dddcd7-77b5-46d1-9072-22b7b93d5835';\n\nasync function checkUserRole() {\n  try {\n     \nconsole.warn(`Checking role for user ID: ${_USER_ID}`);\n    \n    // Query the user from the database\n    const { data, error } = await _supabase\n      .from('users')\n      .select('id, _email, firstName, lastName, role, accountType')\n      .eq('id', _USER_ID)\n      .single();\n    \n    if (error) {\n      console.error('Error fetching user data:', error);\n      return;\n    }\n    \n    if (!data) {\n       \nconsole.warn(`No user found with ID: ${_USER_ID}`);\n      return;\n    }\n    \n    // Display user information\n     \nconsole.warn('\\nUser Information:');\n     \nconsole.warn('----------------');\n     \nconsole.warn(`ID: ${data.id}`);\n     \nconsole.warn(`Name: ${data.firstName} ${data.lastName || ''}`);\n     \nconsole.warn(`Email: ${data.email}`);\n     \nconsole.warn(`Role: ${data.role}`);\n     \nconsole.warn(`Account Type: ${data.accountType}`);\n    \n    // Check if the role is what we expect\n    if (data.role === 'dealer') {\n       \nconsole.warn('\\n✅ User has the DEALER role (should see upgrade message);');\n    } else if (data.role === 'mvp_dealer') {\n       \nconsole.warn('\\n❌ User has the MVP_DEALER role (will NOT see upgrade message);');\n       \nconsole.warn('To fix: Update the user role to \"dealer\" in the database');\n    } else {\n       \nconsole.warn(`\\nUser has role: ${data.role}`);\n    }\n    \n  } catch (_err) {\n    console.error('Unexpected error:', _err);\n  }\n}\n\n// Run the function\ncheckUserRole()\n   \n  .then(() => console.warn('\\nDone!'))\n  // Preserve original error logging semantics\n  .catch((err) => console.error('Fatal error:', err));\n"],"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","ignoreList":[]}