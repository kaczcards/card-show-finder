ae956e307cdc68958c2ed8e9f2f84083
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
function cov_2dzz45n8do() {
  var path = "/Users/kevin/card-show-finder/src/components/ErrorBoundary.tsx";
  var hash = "fa3823c40df9bba53095eed4e13a1ade08e8913e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/components/ErrorBoundary.tsx",
    statementMap: {
      "0": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 17
        }
      },
      "1": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 37
        }
      },
      "2": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 49
        }
      },
      "3": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 37
        }
      },
      "4": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "5": {
        start: {
          line: 53,
          column: 6
        },
        end: {
          line: 64,
          column: 7
        }
      },
      "6": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 63,
          column: 11
        }
      },
      "7": {
        start: {
          line: 67,
          column: 6
        },
        end: {
          line: 69,
          column: 7
        }
      },
      "8": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 72
        }
      },
      "9": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 76,
          column: 5
        }
      },
      "10": {
        start: {
          line: 74,
          column: 6
        },
        end: {
          line: 74,
          column: 61
        }
      },
      "11": {
        start: {
          line: 75,
          column: 6
        },
        end: {
          line: 75,
          column: 66
        }
      },
      "12": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 83,
          column: 57
        }
      },
      "13": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 111,
          column: 5
        }
      },
      "14": {
        start: {
          line: 89,
          column: 6
        },
        end: {
          line: 91,
          column: 7
        }
      },
      "15": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 35
        }
      },
      "16": {
        start: {
          line: 94,
          column: 6
        },
        end: {
          line: 110,
          column: 8
        }
      },
      "17": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 114,
          column: 31
        }
      },
      "18": {
        start: {
          line: 118,
          column: 15
        },
        end: {
          line: 162,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 34,
            column: 2
          },
          end: {
            line: 34,
            column: 3
          }
        },
        loc: {
          start: {
            line: 34,
            column: 41
          },
          end: {
            line: 38,
            column: 3
          }
        },
        line: 34
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 43,
            column: 2
          },
          end: {
            line: 43,
            column: 3
          }
        },
        loc: {
          start: {
            line: 43,
            column: 68
          },
          end: {
            line: 45,
            column: 3
          }
        },
        line: 43
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 50,
            column: 2
          },
          end: {
            line: 50,
            column: 3
          }
        },
        loc: {
          start: {
            line: 50,
            column: 68
          },
          end: {
            line: 77,
            column: 3
          }
        },
        line: 50
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 82,
            column: 2
          },
          end: {
            line: 82,
            column: 3
          }
        },
        loc: {
          start: {
            line: 82,
            column: 21
          },
          end: {
            line: 84,
            column: 3
          }
        },
        line: 82
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 86,
            column: 2
          },
          end: {
            line: 86,
            column: 3
          }
        },
        loc: {
          start: {
            line: 86,
            column: 28
          },
          end: {
            line: 115,
            column: 3
          }
        },
        line: 86
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 53,
            column: 6
          },
          end: {
            line: 64,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 6
          },
          end: {
            line: 64,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "1": {
        loc: {
          start: {
            line: 53,
            column: 10
          },
          end: {
            line: 53,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 10
          },
          end: {
            line: 53,
            column: 16
          }
        }, {
          start: {
            line: 53,
            column: 20
          },
          end: {
            line: 53,
            column: 33
          }
        }, {
          start: {
            line: 53,
            column: 37
          },
          end: {
            line: 53,
            column: 89
          }
        }],
        line: 53
      },
      "2": {
        loc: {
          start: {
            line: 57,
            column: 16
          },
          end: {
            line: 57,
            column: 48
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 57,
            column: 26
          },
          end: {
            line: 57,
            column: 43
          }
        }, {
          start: {
            line: 57,
            column: 46
          },
          end: {
            line: 57,
            column: 48
          }
        }],
        line: 57
      },
      "3": {
        loc: {
          start: {
            line: 67,
            column: 6
          },
          end: {
            line: 69,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 6
          },
          end: {
            line: 69,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "4": {
        loc: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "5": {
        loc: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "6": {
        loc: {
          start: {
            line: 89,
            column: 6
          },
          end: {
            line: 91,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 6
          },
          end: {
            line: 91,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fa3823c40df9bba53095eed4e13a1ade08e8913e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2dzz45n8do = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2dzz45n8do();
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
import React from 'react';
import { View, Text, StyleSheet, TouchableOpacity, Platform } from 'react-native';
import * as Sentry from 'sentry-expo';
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
var ErrorBoundary = function (_React$Component) {
  function ErrorBoundary(props) {
    var _this;
    _classCallCheck(this, ErrorBoundary);
    cov_2dzz45n8do().f[0]++;
    cov_2dzz45n8do().s[0]++;
    _this = _callSuper(this, ErrorBoundary, [props]);
    cov_2dzz45n8do().s[1]++;
    _this.state = {
      hasError: false
    };
    cov_2dzz45n8do().s[2]++;
    _this.resetError = _this.resetError.bind(_this);
    return _this;
  }
  _inherits(ErrorBoundary, _React$Component);
  return _createClass(ErrorBoundary, [{
    key: "componentDidCatch",
    value: function componentDidCatch(error, errorInfo) {
      cov_2dzz45n8do().f[2]++;
      cov_2dzz45n8do().s[4]++;
      try {
        cov_2dzz45n8do().s[5]++;
        if ((cov_2dzz45n8do().b[1][0]++, Sentry) && (cov_2dzz45n8do().b[1][1]++, Sentry.Native) && (cov_2dzz45n8do().b[1][2]++, typeof Sentry.Native.captureException === 'function')) {
          cov_2dzz45n8do().b[0][0]++;
          cov_2dzz45n8do().s[6]++;
          Sentry.Native.captureException(error, {
            extra: Object.assign({
              componentStack: errorInfo.componentStack
            }, __DEV__ ? (cov_2dzz45n8do().b[2][0]++, {
              devMode: true
            }) : (cov_2dzz45n8do().b[2][1]++, {})),
            tags: {
              errorSource: 'ReactErrorBoundary',
              platform: Platform.OS
            }
          });
        } else {
          cov_2dzz45n8do().b[0][1]++;
        }
      } catch (sentryError) {
        cov_2dzz45n8do().s[7]++;
        if (__DEV__) {
          cov_2dzz45n8do().b[3][0]++;
          cov_2dzz45n8do().s[8]++;
          console.error('Failed to report error to Sentry:', sentryError);
        } else {
          cov_2dzz45n8do().b[3][1]++;
        }
      }
      cov_2dzz45n8do().s[9]++;
      if (__DEV__) {
        cov_2dzz45n8do().b[4][0]++;
        cov_2dzz45n8do().s[10]++;
        console.error('Error caught by ErrorBoundary:', error);
        cov_2dzz45n8do().s[11]++;
        console.error('Component stack:', errorInfo.componentStack);
      } else {
        cov_2dzz45n8do().b[4][1]++;
      }
    }
  }, {
    key: "resetError",
    value: function resetError() {
      cov_2dzz45n8do().f[3]++;
      cov_2dzz45n8do().s[12]++;
      this.setState({
        hasError: false,
        error: undefined
      });
    }
  }, {
    key: "render",
    value: function render() {
      cov_2dzz45n8do().f[4]++;
      cov_2dzz45n8do().s[13]++;
      if (this.state.hasError) {
        cov_2dzz45n8do().b[5][0]++;
        cov_2dzz45n8do().s[14]++;
        if (this.props.fallback) {
          cov_2dzz45n8do().b[6][0]++;
          cov_2dzz45n8do().s[15]++;
          return this.props.fallback;
        } else {
          cov_2dzz45n8do().b[6][1]++;
        }
        cov_2dzz45n8do().s[16]++;
        return _jsx(View, {
          style: styles.container,
          children: _jsxs(View, {
            style: styles.errorContainer,
            children: [_jsx(Text, {
              style: styles.errorTitle,
              children: "Something went wrong"
            }), _jsx(Text, {
              style: styles.errorMessage,
              children: "The app encountered an unexpected error."
            }), _jsx(TouchableOpacity, {
              style: styles.retryButton,
              onPress: this.resetError,
              activeOpacity: 0.7,
              children: _jsx(Text, {
                style: styles.retryButtonText,
                children: "Reload"
              })
            })]
          })
        });
      } else {
        cov_2dzz45n8do().b[5][1]++;
      }
      cov_2dzz45n8do().s[17]++;
      return this.props.children;
    }
  }], [{
    key: "getDerivedStateFromError",
    value: function getDerivedStateFromError(error) {
      cov_2dzz45n8do().f[1]++;
      cov_2dzz45n8do().s[3]++;
      return {
        hasError: true,
        error: error
      };
    }
  }]);
}((React.Component));
var styles = (cov_2dzz45n8do().s[18]++, StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#f8f9fa',
    padding: 20
  },
  errorContainer: {
    backgroundColor: 'white',
    borderRadius: 8,
    padding: 20,
    width: '90%',
    maxWidth: 400,
    alignItems: 'center',
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 2
    },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3
  },
  errorTitle: {
    fontSize: 20,
    fontWeight: 'bold',
    marginBottom: 10,
    color: '#dc3545'
  },
  errorMessage: {
    fontSize: 16,
    textAlign: 'center',
    marginBottom: 20,
    color: '#343a40'
  },
  retryButton: {
    backgroundColor: '#007bff',
    paddingHorizontal: 20,
    paddingVertical: 10,
    borderRadius: 4
  },
  retryButtonText: {
    color: 'white',
    fontSize: 16,
    fontWeight: '500'
  }
}));
export default ErrorBoundary;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,