{"version":3,"names":["React","View","Text","StyleSheet","TouchableOpacity","Platform","Sentry","jsx","_jsx","jsxs","_jsxs","ErrorBoundary","_React$Component","props","_this","_classCallCheck","cov_2dzz45n8do","f","s","_callSuper","state","hasError","resetError","bind","_inherits","_createClass","key","value","componentDidCatch","error","errorInfo","b","Native","captureException","extra","Object","assign","componentStack","__DEV__","devMode","tags","errorSource","platform","OS","sentryError","console","setState","undefined","render","fallback","style","styles","container","children","errorContainer","errorTitle","errorMessage","retryButton","onPress","activeOpacity","retryButtonText","getDerivedStateFromError","Component","create","flex","justifyContent","alignItems","backgroundColor","padding","borderRadius","width","maxWidth","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","fontSize","fontWeight","marginBottom","color","textAlign","paddingHorizontal","paddingVertical"],"sources":["ErrorBoundary.tsx"],"sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Platform } from 'react-native';\nimport * as Sentry from 'sentry-expo';\n\ninterface ErrorBoundaryProps {\n  children: React.ReactNode;\n  fallback?: React.ReactNode;\n}\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n  error?: Error;\n}\n\n/**\n * ErrorBoundary component that catches JavaScript errors in its child component tree,\n * logs those errors, and displays a fallback UI instead of the component tree that crashed.\n * \n * Usage:\n * ```tsx\n * <ErrorBoundary>\n *   <YourComponent />\n * </ErrorBoundary>\n * ```\n * \n * With custom fallback:\n * ```tsx\n * <ErrorBoundary fallback={<CustomErrorView onRetry={() => {}} />}>\n *   <YourComponent />\n * </ErrorBoundary>\n * ```\n */\nclass ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = { hasError: false };\n    this.resetError = this.resetError.bind(this);\n  }\n\n  /**\n   * Update state so the next render will show the fallback UI.\n   */\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    return { hasError: true, error };\n  }\n\n  /**\n   * Log the error to Sentry if available.\n   */\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n    // Report to Sentry if available\n    try {\n      if (Sentry && Sentry.Native && typeof Sentry.Native.captureException === 'function') {\n        Sentry.Native.captureException(error, {\n          extra: {\n            componentStack: errorInfo.componentStack,\n            ...(__DEV__ ? { devMode: true } : {}),\n          },\n          tags: {\n            errorSource: 'ReactErrorBoundary',\n            platform: Platform.OS,\n          },\n        });\n      }\n    } catch (sentryError) {\n      // Fail silently if Sentry reporting fails\n      if (__DEV__) {\n        console.error('Failed to report error to Sentry:', sentryError);\n      }\n    }\n\n    // Log to console in development\n    if (__DEV__) {\n      console.error('Error caught by ErrorBoundary:', error);\n      console.error('Component stack:', errorInfo.componentStack);\n    }\n  }\n\n  /**\n   * Reset the error state to re-render the children.\n   */\n  resetError(): void {\n    this.setState({ hasError: false, error: undefined });\n  }\n\n  render(): React.ReactNode {\n    if (this.state.hasError) {\n      // If a custom fallback is provided, use it\n      if (this.props.fallback) {\n        return this.props.fallback;\n      }\n\n      // Otherwise, use the default fallback UI\n      return (\n        <View style={styles.container}>\n          <View style={styles.errorContainer}>\n            <Text style={styles.errorTitle}>Something went wrong</Text>\n            <Text style={styles.errorMessage}>\n              The app encountered an unexpected error.\n            </Text>\n            <TouchableOpacity\n              style={styles.retryButton}\n              onPress={this.resetError}\n              activeOpacity={0.7}\n            >\n              <Text style={styles.retryButtonText}>Reload</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      );\n    }\n\n    // When there's no error, render children normally\n    return this.props.children;\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f8f9fa',\n    padding: 20,\n  },\n  errorContainer: {\n    backgroundColor: 'white',\n    borderRadius: 8,\n    padding: 20,\n    width: '90%',\n    maxWidth: 400,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  errorTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: '#dc3545',\n  },\n  errorMessage: {\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 20,\n    color: '#343a40',\n  },\n  retryButton: {\n    backgroundColor: '#007bff',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 4,\n  },\n  retryButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: '500',\n  },\n});\n\nexport default ErrorBoundary;\n"],"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","ignoreList":[]}