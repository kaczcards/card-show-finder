e66403fded4d8a4ef4349834f4158a56
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
function cov_sa5xt6wt7() {
  var path = "/Users/kevin/card-show-finder/src/services/messagingService.ts";
  var hash = "f434a103c7f626afe2ad58213d4585fcf1b575e0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/services/messagingService.ts",
    statementMap: {
      "0": {
        start: {
          line: 49,
          column: 27
        },
        end: {
          line: 103,
          column: 1
        }
      },
      "1": {
        start: {
          line: 56,
          column: 2
        },
        end: {
          line: 102,
          column: 3
        }
      },
      "2": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "3": {
        start: {
          line: 59,
          column: 6
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "4": {
        start: {
          line: 86,
          column: 33
        },
        end: {
          line: 96,
          column: 5
        }
      },
      "5": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 98,
          column: 23
        }
      },
      "6": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 100,
          column: 52
        }
      },
      "7": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 101,
          column: 16
        }
      },
      "8": {
        start: {
          line: 112,
          column: 31
        },
        end: {
          line: 137,
          column: 1
        }
      },
      "9": {
        start: {
          line: 117,
          column: 2
        },
        end: {
          line: 136,
          column: 3
        }
      },
      "10": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 119,
          column: 68
        }
      },
      "11": {
        start: {
          line: 119,
          column: 17
        },
        end: {
          line: 119,
          column: 68
        }
      },
      "12": {
        start: {
          line: 132,
          column: 4
        },
        end: {
          line: 132,
          column: 14
        }
      },
      "13": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 134,
          column: 57
        }
      },
      "14": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 135,
          column: 14
        }
      },
      "15": {
        start: {
          line: 144,
          column: 33
        },
        end: {
          line: 162,
          column: 1
        }
      },
      "16": {
        start: {
          line: 145,
          column: 2
        },
        end: {
          line: 161,
          column: 3
        }
      },
      "17": {
        start: {
          line: 147,
          column: 4
        },
        end: {
          line: 147,
          column: 69
        }
      },
      "18": {
        start: {
          line: 147,
          column: 17
        },
        end: {
          line: 147,
          column: 69
        }
      },
      "19": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 157,
          column: 16
        }
      },
      "20": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 159,
          column: 59
        }
      },
      "21": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 160,
          column: 17
        }
      },
      "22": {
        start: {
          line: 170,
          column: 29
        },
        end: {
          line: 189,
          column: 1
        }
      },
      "23": {
        start: {
          line: 171,
          column: 2
        },
        end: {
          line: 188,
          column: 3
        }
      },
      "24": {
        start: {
          line: 173,
          column: 4
        },
        end: {
          line: 173,
          column: 62
        }
      },
      "25": {
        start: {
          line: 173,
          column: 17
        },
        end: {
          line: 173,
          column: 62
        }
      },
      "26": {
        start: {
          line: 184,
          column: 4
        },
        end: {
          line: 184,
          column: 16
        }
      },
      "27": {
        start: {
          line: 186,
          column: 4
        },
        end: {
          line: 186,
          column: 52
        }
      },
      "28": {
        start: {
          line: 187,
          column: 4
        },
        end: {
          line: 187,
          column: 17
        }
      },
      "29": {
        start: {
          line: 199,
          column: 36
        },
        end: {
          line: 235,
          column: 1
        }
      },
      "30": {
        start: {
          line: 205,
          column: 2
        },
        end: {
          line: 234,
          column: 3
        }
      },
      "31": {
        start: {
          line: 207,
          column: 4
        },
        end: {
          line: 213,
          column: 9
        }
      },
      "32": {
        start: {
          line: 208,
          column: 6
        },
        end: {
          line: 213,
          column: 9
        }
      },
      "33": {
        start: {
          line: 216,
          column: 32
        },
        end: {
          line: 216,
          column: 34
        }
      },
      "34": {
        start: {
          line: 217,
          column: 4
        },
        end: {
          line: 228,
          column: 5
        }
      },
      "35": {
        start: {
          line: 218,
          column: 22
        },
        end: {
          line: 224,
          column: 7
        }
      },
      "36": {
        start: {
          line: 225,
          column: 6
        },
        end: {
          line: 227,
          column: 7
        }
      },
      "37": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 226,
          column: 31
        }
      },
      "38": {
        start: {
          line: 230,
          column: 4
        },
        end: {
          line: 230,
          column: 20
        }
      },
      "39": {
        start: {
          line: 232,
          column: 4
        },
        end: {
          line: 232,
          column: 61
        }
      },
      "40": {
        start: {
          line: 233,
          column: 4
        },
        end: {
          line: 233,
          column: 16
        }
      },
      "41": {
        start: {
          line: 238,
          column: 32
        },
        end: {
          line: 244,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 49,
            column: 27
          },
          end: {
            line: 49,
            column: 28
          }
        },
        loc: {
          start: {
            line: 55,
            column: 30
          },
          end: {
            line: 103,
            column: 1
          }
        },
        line: 55
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 112,
            column: 31
          },
          end: {
            line: 112,
            column: 32
          }
        },
        loc: {
          start: {
            line: 116,
            column: 25
          },
          end: {
            line: 137,
            column: 1
          }
        },
        line: 116
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 144,
            column: 33
          },
          end: {
            line: 144,
            column: 34
          }
        },
        loc: {
          start: {
            line: 144,
            column: 80
          },
          end: {
            line: 162,
            column: 1
          }
        },
        line: 144
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 170,
            column: 29
          },
          end: {
            line: 170,
            column: 30
          }
        },
        loc: {
          start: {
            line: 170,
            column: 93
          },
          end: {
            line: 189,
            column: 1
          }
        },
        line: 170
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 199,
            column: 36
          },
          end: {
            line: 199,
            column: 37
          }
        },
        loc: {
          start: {
            line: 204,
            column: 32
          },
          end: {
            line: 235,
            column: 1
          }
        },
        line: 204
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 53,
            column: 2
          },
          end: {
            line: 53,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 53,
            column: 22
          },
          end: {
            line: 53,
            column: 40
          }
        }],
        line: 53
      },
      "1": {
        loc: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 65,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 65,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "2": {
        loc: {
          start: {
            line: 114,
            column: 2
          },
          end: {
            line: 114,
            column: 21
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 114,
            column: 19
          },
          end: {
            line: 114,
            column: 21
          }
        }],
        line: 114
      },
      "3": {
        loc: {
          start: {
            line: 115,
            column: 2
          },
          end: {
            line: 115,
            column: 21
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 115,
            column: 20
          },
          end: {
            line: 115,
            column: 21
          }
        }],
        line: 115
      },
      "4": {
        loc: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 119,
            column: 68
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 119,
            column: 68
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "5": {
        loc: {
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 147,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 147,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "6": {
        loc: {
          start: {
            line: 173,
            column: 4
          },
          end: {
            line: 173,
            column: 62
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 4
          },
          end: {
            line: 173,
            column: 62
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "7": {
        loc: {
          start: {
            line: 207,
            column: 4
          },
          end: {
            line: 213,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 4
          },
          end: {
            line: 213,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "8": {
        loc: {
          start: {
            line: 225,
            column: 6
          },
          end: {
            line: 227,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 6
          },
          end: {
            line: 227,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 225
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f434a103c7f626afe2ad58213d4585fcf1b575e0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_sa5xt6wt7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_sa5xt6wt7();
export var MessageType = function (MessageType) {
  MessageType["DIRECT"] = "direct";
  MessageType["BROADCAST"] = "broadcast";
  MessageType["NOTIFICATION"] = "notification";
  return MessageType;
}({});
export var MessageStatus = function (MessageStatus) {
  MessageStatus["SENT"] = "sent";
  MessageStatus["DELIVERED"] = "delivered";
  MessageStatus["READ"] = "read";
  MessageStatus["FAILED"] = "failed";
  return MessageStatus;
}({});
cov_sa5xt6wt7().s[0]++;
export var sendMessage = function () {
  var _ref = _asyncToGenerator(function* (senderId, recipientId, content) {
    var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : (cov_sa5xt6wt7().b[0][0]++, MessageType.DIRECT);
    var metadata = arguments.length > 4 ? arguments[4] : undefined;
    cov_sa5xt6wt7().f[0]++;
    cov_sa5xt6wt7().s[1]++;
    try {
      cov_sa5xt6wt7().s[2]++;
      if (__DEV__) {
        cov_sa5xt6wt7().b[1][0]++;
        cov_sa5xt6wt7().s[3]++;
        console.warn('Sending message:', {
          senderId: senderId,
          recipientId: recipientId,
          content: content,
          type: type,
          metadata: metadata
        });
      } else {
        cov_sa5xt6wt7().b[1][1]++;
      }
      var mockMessage = (cov_sa5xt6wt7().s[4]++, {
        id: `msg_${Date.now()}`,
        senderId: senderId,
        recipientId: recipientId,
        content: content,
        type: type,
        status: MessageStatus.SENT,
        metadata: metadata,
        createdAt: new Date().toISOString(),
        updatedAt: new Date().toISOString()
      });
      cov_sa5xt6wt7().s[5]++;
      return mockMessage;
    } catch (_error) {
      cov_sa5xt6wt7().s[6]++;
      console.error('Error sending message:', _error);
      cov_sa5xt6wt7().s[7]++;
      return null;
    }
  });
  return function sendMessage(_x, _x2, _x3) {
    return _ref.apply(this, arguments);
  };
}();
cov_sa5xt6wt7().s[8]++;
export var getUserMessages = function () {
  var _ref2 = _asyncToGenerator(function* (userId) {
    var _limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (cov_sa5xt6wt7().b[2][0]++, 20);
    var _offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : (cov_sa5xt6wt7().b[3][0]++, 0);
    cov_sa5xt6wt7().f[1]++;
    cov_sa5xt6wt7().s[9]++;
    try {
      cov_sa5xt6wt7().s[10]++;
      if (__DEV__) {
        cov_sa5xt6wt7().b[4][0]++;
        cov_sa5xt6wt7().s[11]++;
        console.warn('Getting messages for user:', userId);
      } else {
        cov_sa5xt6wt7().b[4][1]++;
      }
      cov_sa5xt6wt7().s[12]++;
      return [];
    } catch (error) {
      cov_sa5xt6wt7().s[13]++;
      console.error('Error getting user messages:', error);
      cov_sa5xt6wt7().s[14]++;
      return [];
    }
  });
  return function getUserMessages(_x4) {
    return _ref2.apply(this, arguments);
  };
}();
cov_sa5xt6wt7().s[15]++;
export var markMessageAsRead = function () {
  var _ref3 = _asyncToGenerator(function* (messageId) {
    cov_sa5xt6wt7().f[2]++;
    cov_sa5xt6wt7().s[16]++;
    try {
      cov_sa5xt6wt7().s[17]++;
      if (__DEV__) {
        cov_sa5xt6wt7().b[5][0]++;
        cov_sa5xt6wt7().s[18]++;
        console.warn('Marking message as read:', messageId);
      } else {
        cov_sa5xt6wt7().b[5][1]++;
      }
      cov_sa5xt6wt7().s[19]++;
      return true;
    } catch (error) {
      cov_sa5xt6wt7().s[20]++;
      console.error('Error marking message as read:', error);
      cov_sa5xt6wt7().s[21]++;
      return false;
    }
  });
  return function markMessageAsRead(_x5) {
    return _ref3.apply(this, arguments);
  };
}();
cov_sa5xt6wt7().s[22]++;
export var deleteMessage = function () {
  var _ref4 = _asyncToGenerator(function* (messageId, _userId) {
    cov_sa5xt6wt7().f[3]++;
    cov_sa5xt6wt7().s[23]++;
    try {
      cov_sa5xt6wt7().s[24]++;
      if (__DEV__) {
        cov_sa5xt6wt7().b[6][0]++;
        cov_sa5xt6wt7().s[25]++;
        console.warn('Deleting message:', messageId);
      } else {
        cov_sa5xt6wt7().b[6][1]++;
      }
      cov_sa5xt6wt7().s[26]++;
      return true;
    } catch (error) {
      cov_sa5xt6wt7().s[27]++;
      console.error('Error deleting message:', error);
      cov_sa5xt6wt7().s[28]++;
      return false;
    }
  });
  return function deleteMessage(_x6, _x7) {
    return _ref4.apply(this, arguments);
  };
}();
cov_sa5xt6wt7().s[29]++;
export var sendBroadcastMessage = function () {
  var _ref5 = _asyncToGenerator(function* (senderId, recipientIds, content, metadata) {
    cov_sa5xt6wt7().f[4]++;
    cov_sa5xt6wt7().s[30]++;
    try {
      cov_sa5xt6wt7().s[31]++;
      if (__DEV__) {
        cov_sa5xt6wt7().b[7][0]++;
        cov_sa5xt6wt7().s[32]++;
        console.warn('Sending broadcast message:', {
          senderId: senderId,
          recipientIds: recipientIds,
          content: content,
          metadata: metadata
        });
      } else {
        cov_sa5xt6wt7().b[7][1]++;
      }
      var messages = (cov_sa5xt6wt7().s[33]++, []);
      cov_sa5xt6wt7().s[34]++;
      for (var recipientId of recipientIds) {
        var message = (cov_sa5xt6wt7().s[35]++, yield sendMessage(senderId, recipientId, content, MessageType.BROADCAST, metadata));
        cov_sa5xt6wt7().s[36]++;
        if (message) {
          cov_sa5xt6wt7().b[8][0]++;
          cov_sa5xt6wt7().s[37]++;
          messages.push(message);
        } else {
          cov_sa5xt6wt7().b[8][1]++;
        }
      }
      cov_sa5xt6wt7().s[38]++;
      return messages;
    } catch (error) {
      cov_sa5xt6wt7().s[39]++;
      console.error('Error sending broadcast message:', error);
      cov_sa5xt6wt7().s[40]++;
      return null;
    }
  });
  return function sendBroadcastMessage(_x8, _x9, _x0, _x1) {
    return _ref5.apply(this, arguments);
  };
}();
export var messagingService = (cov_sa5xt6wt7().s[41]++, {
  sendMessage: sendMessage,
  getUserMessages: getUserMessages,
  markMessageAsRead: markMessageAsRead,
  deleteMessage: deleteMessage,
  sendBroadcastMessage: sendBroadcastMessage
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,