{"version":3,"names":["React","View","Text","StyleSheet","ScrollView","TouchableOpacity","Ionicons","jsx","_jsx","jsxs","_jsxs","SECONDARY_COLOR","cov_2igzbdxicv","s","FilterChips","_ref","filters","onRemoveFilter","style","f","defaultFilters","radius","startDate","Date","endDate","setDate","getDate","formatDate","date","b","dateObj","toLocaleDateString","month","day","generateFilterChips","chips","push","key","label","toDateString","startDateStr","endDateStr","maxEntryFee","undefined","categories","length","forEach","category","value","features","feature","filterChips","styles","container","children","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","scrollContent","map","chip","index","onPress","activeOpacity","chipText","removeIcon","name","size","color","create","marginVertical","paddingHorizontal","paddingVertical","backgroundColor","borderRadius","paddingLeft","paddingRight","marginRight","flexDirection","alignItems","position","fontSize","fontWeight","right","top","bottom","width","borderTopRightRadius","borderBottomRightRadius","justifyContent"],"sources":["FilterChips.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  TouchableOpacity,\n} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { ShowFilters } from '../types';\n\n// Constants\nconst SECONDARY_COLOR = '#0057B8'; // Blue\n\ninterface FilterChipsProps {\n  filters: ShowFilters;\n  onRemoveFilter: (key: string, value?: string) => void;\n  style?: object;\n}\n\nconst FilterChips: React.FC<FilterChipsProps> = ({\n  filters,\n  onRemoveFilter,\n  style,\n}) => {\n  // Default filters for comparison\n  const defaultFilters: ShowFilters = {\n    radius: 25,\n    startDate: new Date(),\n    endDate: new Date(new Date().setDate(new Date().getDate() + 30)),\n  };\n\n  // Format date for display\n  const formatDate = (date: Date | string | null | undefined) => {\n    if (!date) return '';\n    const dateObj = new Date(date);\n    return dateObj.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n    });\n  };\n\n  // Generate chips based on active filters\n  const generateFilterChips = () => {\n    const chips = [];\n\n    // Radius chip\n    if (filters.radius && filters.radius !== defaultFilters.radius) {\n      chips.push({\n        key: 'radius',\n        label: `${filters.radius} miles`,\n      });\n    }\n\n    // Date range chip\n    if (\n      (filters.startDate &&\n        new Date(filters.startDate).toDateString() !==\n          new Date(defaultFilters.startDate!).toDateString()) ||\n      (filters.endDate &&\n        new Date(filters.endDate).toDateString() !==\n          new Date(defaultFilters.endDate!).toDateString())\n    ) {\n      const startDateStr = filters.startDate ? formatDate(filters.startDate) : 'Any';\n      const endDateStr = filters.endDate ? formatDate(filters.endDate) : 'Any';\n      chips.push({\n        key: 'dateRange',\n        label: `${startDateStr} - ${endDateStr}`,\n      });\n    }\n\n    // Max entry fee chip\n    if (filters.maxEntryFee !== undefined) {\n      chips.push({\n        key: 'maxEntryFee',\n        label: `$${filters.maxEntryFee} max`,\n      });\n    }\n\n    // Category chips\n    if (filters.categories && filters.categories.length > 0) {\n      filters.categories.forEach(category => {\n        chips.push({\n          key: 'category',\n          value: category,\n          label: category,\n        });\n      });\n    }\n\n    // Feature chips\n    if (filters.features && filters.features.length > 0) {\n      filters.features.forEach(feature => {\n        chips.push({\n          key: 'feature',\n          value: feature,\n          label: feature,\n        });\n      });\n    }\n\n    return chips;\n  };\n\n  const filterChips = generateFilterChips();\n\n  // If no active filters, don't render anything\n  if (filterChips.length === 0) {\n    return null;\n  }\n\n  return (\n    <View style={[styles.container, style]}>\n      <ScrollView\n        horizontal\n        showsHorizontalScrollIndicator={false}\n        contentContainerStyle={styles.scrollContent}\n      >\n        {filterChips.map((chip, index) => (\n          <TouchableOpacity\n            key={`${chip.key}-${index}`}\n            style={styles.chip}\n            onPress={() => onRemoveFilter(chip.key)}\n            activeOpacity={0.7}\n          >\n            <Text style={styles.chipText}>{chip.label}</Text>\n            <View style={styles.removeIcon}>\n              <Ionicons name=\"close\" size={14} color=\"white\" />\n            </View>\n          </TouchableOpacity>\n        ))}\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginVertical: 8,\n  },\n  scrollContent: {\n    paddingHorizontal: 15,\n    paddingVertical: 4,\n  },\n  chip: {\n    backgroundColor: SECONDARY_COLOR,\n    borderRadius: 20,\n    paddingVertical: 6,\n    paddingLeft: 12,\n    paddingRight: 28,\n    marginRight: 8,\n    flexDirection: 'row',\n    alignItems: 'center',\n    position: 'relative',\n  },\n  chipText: {\n    color: 'white',\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  removeIcon: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    bottom: 0,\n    width: 24,\n    backgroundColor: 'rgba(0,0,0,0.15)',\n    borderTopRightRadius: 20,\n    borderBottomRightRadius: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default FilterChips;\n"],"mappingszB,SACEC,IAAI,EACJC,IAAI,EACJC,UAAU,EACVC,UAAU,EACVC,gBAAgB,QACX,cAAc;AACrB,SAASC,QAAQ,QAAQ,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAI9C,IAAMC,eAAe,IAAAC,cAAA,GAAAC,CAAA,OAAG,SAAS;AAACD,cAAA,GAAAC,CAAA;AAQlC,IAAMC,WAAuC,GAAG,SAA1CA,WAAuCA,CAAAC,IAAA,EAIvC;EAAA,IAHJC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IACPC,cAAc,GAAAF,IAAA,CAAdE,cAAc;IACdC,KAAK,GAAAH,IAAA,CAALG,KAAK;EAAAN,cAAA,GAAAO,CAAA;EAGL,IAAMC,cAA2B,IAAAR,cAAA,GAAAC,CAAA,OAAG;IAClCQ,MAAM,EAAE,EAAE;IACVC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC;IACrBC,OAAO,EAAE,IAAID,IAAI,CAAC,IAAIA,IAAI,CAAC,CAAC,CAACE,OAAO,CAAC,IAAIF,IAAI,CAAC,CAAC,CAACG,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;EACjE,CAAC;EAACd,cAAA,GAAAC,CAAA;EAGF,IAAMc,UAAU,GAAG,SAAbA,UAAUA,CAAIC,IAAsC,EAAK;IAAAhB,cAAA,GAAAO,CAAA;IAAAP,cAAA,GAAAC,CAAA;IAC7D,IAAI,CAACe,IAAI,EAAE;MAAAhB,cAAA,GAAAiB,CAAA;MAAAjB,cAAA,GAAAC,CAAA;MAAA,OAAO,EAAE;IAAA,CAAC;MAAAD,cAAA,GAAAiB,CAAA;IAAA;IACrB,IAAMC,OAAO,IAAAlB,cAAA,GAAAC,CAAA,OAAG,IAAIU,IAAI,CAACK,IAAI,CAAC;IAAChB,cAAA,GAAAC,CAAA;IAC/B,OAAOiB,OAAO,CAACC,kBAAkB,CAAC,OAAO,EAAE;MACzCC,KAAK,EAAE,OAAO;MACdC,GAAG,EAAE;IACP,CAAC,CAAC;EACJ,CAAC;EAACrB,cAAA,GAAAC,CAAA;EAGF,IAAMqB,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;IAAAtB,cAAA,GAAAO,CAAA;IAChC,IAAMgB,KAAK,IAAAvB,cAAA,GAAAC,CAAA,OAAG,EAAE;IAACD,cAAA,GAAAC,CAAA;IAGjB,IAAI,CAAAD,cAAA,GAAAiB,CAAA,UAAAb,OAAO,CAACK,MAAM,MAAAT,cAAA,GAAAiB,CAAA,UAAIb,OAAO,CAACK,MAAM,KAAKD,cAAc,CAACC,MAAM,GAAE;MAAAT,cAAA,GAAAiB,CAAA;MAAAjB,cAAA,GAAAC,CAAA;MAC9DsB,KAAK,CAACC,IAAI,CAAC;QACTC,GAAG,EAAE,QAAQ;QACbC,KAAK,EAAE,GAAGtB,OAAO,CAACK,MAAM;MAC1B,CAAC,CAAC;IACJ,CAAC;MAAAT,cAAA,GAAAiB,CAAA;IAAA;IAAAjB,cAAA,GAAAC,CAAA;IAGD,IACG,CAAAD,cAAA,GAAAiB,CAAA,UAAAb,OAAO,CAACM,SAAS,MAAAV,cAAA,GAAAiB,CAAA,UAChB,IAAIN,IAAI,CAACP,OAAO,CAACM,SAAS,CAAC,CAACiB,YAAY,CAAC,CAAC,KACxC,IAAIhB,IAAI,CAACH,cAAc,CAACE,SAAU,CAAC,CAACiB,YAAY,CAAC,CAAC,KACrD,CAAA3B,cAAA,GAAAiB,CAAA,UAAAb,OAAO,CAACQ,OAAO,MAAAZ,cAAA,GAAAiB,CAAA,UACd,IAAIN,IAAI,CAACP,OAAO,CAACQ,OAAO,CAAC,CAACe,YAAY,CAAC,CAAC,KACtC,IAAIhB,IAAI,CAACH,cAAc,CAACI,OAAQ,CAAC,CAACe,YAAY,CAAC,CAAC,CAAC,EACrD;MAAA3B,cAAA,GAAAiB,CAAA;MACA,IAAMW,YAAY,IAAA5B,cAAA,GAAAC,CAAA,QAAGG,OAAO,CAACM,SAAS,IAAAV,cAAA,GAAAiB,CAAA,UAAGF,UAAU,CAACX,OAAO,CAACM,SAAS,CAAC,KAAAV,cAAA,GAAAiB,CAAA,UAAG,KAAK;MAC9E,IAAMY,UAAU,IAAA7B,cAAA,GAAAC,CAAA,QAAGG,OAAO,CAACQ,OAAO,IAAAZ,cAAA,GAAAiB,CAAA,UAAGF,UAAU,CAACX,OAAO,CAACQ,OAAO,CAAC,KAAAZ,cAAA,GAAAiB,CAAA,UAAG,KAAK;MAACjB,cAAA,GAAAC,CAAA;MACzEsB,KAAK,CAACC,IAAI,CAAC;QACTC,GAAG,EAAE,WAAW;QAChBC,KAAK,EAAE,GAAGE,YAAY,MAAMC,UAAU;MACxC,CAAC,CAAC;IACJ,CAAC;MAAA7B,cAAA,GAAAiB,CAAA;IAAA;IAAAjB,cAAA,GAAAC,CAAA;IAGD,IAAIG,OAAO,CAAC0B,WAAW,KAAKC,SAAS,EAAE;MAAA/B,cAAA,GAAAiB,CAAA;MAAAjB,cAAA,GAAAC,CAAA;MACrCsB,KAAK,CAACC,IAAI,CAAC;QACTC,GAAG,EAAE,aAAa;QAClBC,KAAK,EAAE,IAAItB,OAAO,CAAC0B,WAAW;MAChC,CAAC,CAAC;IACJ,CAAC;MAAA9B,cAAA,GAAAiB,CAAA;IAAA;IAAAjB,cAAA,GAAAC,CAAA;IAGD,IAAI,CAAAD,cAAA,GAAAiB,CAAA,UAAAb,OAAO,CAAC4B,UAAU,MAAAhC,cAAA,GAAAiB,CAAA,UAAIb,OAAO,CAAC4B,UAAU,CAACC,MAAM,GAAG,CAAC,GAAE;MAAAjC,cAAA,GAAAiB,CAAA;MAAAjB,cAAA,GAAAC,CAAA;MACvDG,OAAO,CAAC4B,UAAU,CAACE,OAAO,CAAC,UAAAC,QAAQ,EAAI;QAAAnC,cAAA,GAAAO,CAAA;QAAAP,cAAA,GAAAC,CAAA;QACrCsB,KAAK,CAACC,IAAI,CAAC;UACTC,GAAG,EAAE,UAAU;UACfW,KAAK,EAAED,QAAQ;UACfT,KAAK,EAAES;QACT,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;MAAAnC,cAAA,GAAAiB,CAAA;IAAA;IAAAjB,cAAA,GAAAC,CAAA;IAGD,IAAI,CAAAD,cAAA,GAAAiB,CAAA,WAAAb,OAAO,CAACiC,QAAQ,MAAArC,cAAA,GAAAiB,CAAA,WAAIb,OAAO,CAACiC,QAAQ,CAACJ,MAAM,GAAG,CAAC,GAAE;MAAAjC,cAAA,GAAAiB,CAAA;MAAAjB,cAAA,GAAAC,CAAA;MACnDG,OAAO,CAACiC,QAAQ,CAACH,OAAO,CAAC,UAAAI,OAAO,EAAI;QAAAtC,cAAA,GAAAO,CAAA;QAAAP,cAAA,GAAAC,CAAA;QAClCsB,KAAK,CAACC,IAAI,CAAC;UACTC,GAAG,EAAE,SAAS;UACdW,KAAK,EAAEE,OAAO;UACdZ,KAAK,EAAEY;QACT,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;MAAAtC,cAAA,GAAAiB,CAAA;IAAA;IAAAjB,cAAA,GAAAC,CAAA;IAED,OAAOsB,KAAK;EACd,CAAC;EAED,IAAMgB,WAAW,IAAAvC,cAAA,GAAAC,CAAA,QAAGqB,mBAAmB,CAAC,CAAC;EAACtB,cAAA,GAAAC,CAAA;EAG1C,IAAIsC,WAAW,CAACN,MAAM,KAAK,CAAC,EAAE;IAAAjC,cAAA,GAAAiB,CAAA;IAAAjB,cAAA,GAAAC,CAAA;IAC5B,OAAO,IAAI;EACb,CAAC;IAAAD,cAAA,GAAAiB,CAAA;EAAA;EAAAjB,cAAA,GAAAC,CAAA;EAED,OACEL,IAAA,CAACP,IAAI;IAACiB,KAAK,EAAE,CAACkC,MAAM,CAACC,SAAS,EAAEnC,KAAK,CAAE;IAAAoC,QAAA,EACrC9C,IAAA,CAACJ,UAAU;MACTmD,UAAU;MACVC,8BAA8B,EAAE,KAAM;MACtCC,qBAAqB,EAAEL,MAAM,CAACM,aAAc;MAAAJ,QAAA,EAE3CH,WAAW,CAACQ,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK,EAC3B;QAAAjD,cAAA,GAAAO,CAAA;QAAAP,cAAA,GAAAC,CAAA;QAAA,OAAAH,KAAA,CAACL,gBAAgB;UAEfa,KAAK,EAAEkC,MAAM,CAACQ,IAAK;UACnBE,OAAO,EAAE,SAATA,OAAOA,CAAA,EAAQ;YAAAlD,cAAA,GAAAO,CAAA;YAAAP,cAAA,GAAAC,CAAA;YAAA,OAAAI,cAAc,CAAC2C,IAAI,CAACvB,GAAG,CAAC;UAAD,CAAE;UACxC0B,aAAa,EAAE,GAAI;UAAAT,QAAA,GAEnB9C,IAAA,CAACN,IAAI;YAACgB,KAAK,EAAEkC,MAAM,CAACY,QAAS;YAAAV,QAAA,EAAEM,IAAI,CAACtB;UAAK,CAAO,CAAC,EACjD9B,IAAA,CAACP,IAAI;YAACiB,KAAK,EAAEkC,MAAM,CAACa,UAAW;YAAAX,QAAA,EAC7B9C,IAAA,CAACF,QAAQ;cAAC4D,IAAI,EAAC,OAAO;cAACC,IAAI,EAAE,EAAG;cAACC,KAAK,EAAC;YAAO,CAAE;UAAC,CAC7C,CAAC;QAAA,GARF,GAAGR,IAAI,CAACvB,GAAG,IAAIwB,KAAK,EAST,CAAC;MAAD,CACnB;IAAC,CACQ;EAAC,CACT,CAAC;AAEX,CAAC;AAED,IAAMT,MAAM,IAAAxC,cAAA,GAAAC,CAAA,QAAGV,UAAU,CAACkE,MAAM,CAAC;EAC/BhB,SAAS,EAAE;IACTiB,cAAc,EAAE;EAClB,CAAC;EACDZ,aAAa,EAAE;IACba,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE;EACnB,CAAC;EACDZ,IAAI,EAAE;IACJa,eAAe,EAAE9D,eAAe;IAChC+D,YAAY,EAAE,EAAE;IAChBF,eAAe,EAAE,CAAC;IAClBG,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE,CAAC;IACdC,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBC,QAAQ,EAAE;EACZ,CAAC;EACDhB,QAAQ,EAAE;IACRI,KAAK,EAAE,OAAO;IACda,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDjB,UAAU,EAAE;IACVe,QAAQ,EAAE,UAAU;IACpBG,KAAK,EAAE,CAAC;IACRC,GAAG,EAAE,CAAC;IACNC,MAAM,EAAE,CAAC;IACTC,KAAK,EAAE,EAAE;IACTb,eAAe,EAAE,kBAAkB;IACnCc,oBAAoB,EAAE,EAAE;IACxBC,uBAAuB,EAAE,EAAE;IAC3BT,UAAU,EAAE,QAAQ;IACpBU,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAe3E,WAAW","ignoreList":[]}