58ebe5711eff59742a176a431aaae012
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import { env as _env } from "expo/virtual/env";
function cov_2672s7zqdg() {
  var path = "/Users/kevin/card-show-finder/src/services/stripePaymentService.ts";
  var hash = "67fa8597a89edf89e4a420c88069ba6ed399ecfb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/services/stripePaymentService.ts",
    statementMap: {
      "0": {
        start: {
          line: 54,
          column: 31
        },
        end: {
          line: 54,
          column: 77
        }
      },
      "1": {
        start: {
          line: 55,
          column: 35
        },
        end: {
          line: 55,
          column: 111
        }
      },
      "2": {
        start: {
          line: 64,
          column: 32
        },
        end: {
          line: 71,
          column: 1
        }
      },
      "3": {
        start: {
          line: 65,
          column: 2
        },
        end: {
          line: 68,
          column: 3
        }
      },
      "4": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 97
        }
      },
      "5": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 17
        }
      },
      "6": {
        start: {
          line: 70,
          column: 2
        },
        end: {
          line: 70,
          column: 14
        }
      },
      "7": {
        start: {
          line: 83,
          column: 49
        },
        end: {
          line: 186,
          column: 1
        }
      },
      "8": {
        start: {
          line: 89,
          column: 15
        },
        end: {
          line: 89,
          column: 62
        }
      },
      "9": {
        start: {
          line: 89,
          column: 46
        },
        end: {
          line: 89,
          column: 61
        }
      },
      "10": {
        start: {
          line: 90,
          column: 2
        },
        end: {
          line: 92,
          column: 3
        }
      },
      "11": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 91,
          column: 69
        }
      },
      "12": {
        start: {
          line: 94,
          column: 2
        },
        end: {
          line: 185,
          column: 3
        }
      },
      "13": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 40
        }
      },
      "14": {
        start: {
          line: 104,
          column: 24
        },
        end: {
          line: 104,
          column: 45
        }
      },
      "15": {
        start: {
          line: 106,
          column: 21
        },
        end: {
          line: 119,
          column: 6
        }
      },
      "16": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 124,
          column: 5
        }
      },
      "17": {
        start: {
          line: 122,
          column: 24
        },
        end: {
          line: 122,
          column: 45
        }
      },
      "18": {
        start: {
          line: 123,
          column: 6
        },
        end: {
          line: 123,
          column: 77
        }
      },
      "19": {
        start: {
          line: 130,
          column: 31
        },
        end: {
          line: 130,
          column: 52
        }
      },
      "20": {
        start: {
          line: 133,
          column: 33
        },
        end: {
          line: 140,
          column: 6
        }
      },
      "21": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 154,
          column: 5
        }
      },
      "22": {
        start: {
          line: 143,
          column: 6
        },
        end: {
          line: 143,
          column: 65
        }
      },
      "23": {
        start: {
          line: 144,
          column: 6
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "24": {
        start: {
          line: 153,
          column: 6
        },
        end: {
          line: 153,
          column: 86
        }
      },
      "25": {
        start: {
          line: 157,
          column: 36
        },
        end: {
          line: 157,
          column: 63
        }
      },
      "26": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 175,
          column: 5
        }
      },
      "27": {
        start: {
          line: 161,
          column: 6
        },
        end: {
          line: 163,
          column: 7
        }
      },
      "28": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 66
        }
      },
      "29": {
        start: {
          line: 164,
          column: 6
        },
        end: {
          line: 164,
          column: 71
        }
      },
      "30": {
        start: {
          line: 165,
          column: 6
        },
        end: {
          line: 173,
          column: 9
        }
      },
      "31": {
        start: {
          line: 174,
          column: 6
        },
        end: {
          line: 174,
          column: 82
        }
      },
      "32": {
        start: {
          line: 178,
          column: 4
        },
        end: {
          line: 178,
          column: 65
        }
      },
      "33": {
        start: {
          line: 180,
          column: 4
        },
        end: {
          line: 180,
          column: 59
        }
      },
      "34": {
        start: {
          line: 183,
          column: 4
        },
        end: {
          line: 183,
          column: 73
        }
      },
      "35": {
        start: {
          line: 184,
          column: 4
        },
        end: {
          line: 184,
          column: 84
        }
      },
      "36": {
        start: {
          line: 196,
          column: 41
        },
        end: {
          line: 268,
          column: 1
        }
      },
      "37": {
        start: {
          line: 201,
          column: 2
        },
        end: {
          line: 267,
          column: 3
        }
      },
      "38": {
        start: {
          line: 210,
          column: 23
        },
        end: {
          line: 210,
          column: 48
        }
      },
      "39": {
        start: {
          line: 214,
          column: 6
        },
        end: {
          line: 214,
          column: 76
        }
      },
      "40": {
        start: {
          line: 217,
          column: 4
        },
        end: {
          line: 221,
          column: 6
        }
      },
      "41": {
        start: {
          line: 224,
          column: 4
        },
        end: {
          line: 231,
          column: 7
        }
      },
      "42": {
        start: {
          line: 234,
          column: 4
        },
        end: {
          line: 248,
          column: 5
        }
      },
      "43": {
        start: {
          line: 238,
          column: 6
        },
        end: {
          line: 247,
          column: 7
        }
      },
      "44": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 243,
          column: 11
        }
      },
      "45": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 246,
          column: 71
        }
      },
      "46": {
        start: {
          line: 251,
          column: 4
        },
        end: {
          line: 254,
          column: 6
        }
      },
      "47": {
        start: {
          line: 258,
          column: 4
        },
        end: {
          line: 266,
          column: 7
        }
      },
      "48": {
        start: {
          line: 277,
          column: 42
        },
        end: {
          line: 298,
          column: 1
        }
      },
      "49": {
        start: {
          line: 282,
          column: 20
        },
        end: {
          line: 292,
          column: 21
        }
      },
      "50": {
        start: {
          line: 294,
          column: 2
        },
        end: {
          line: 297,
          column: 3
        }
      },
      "51": {
        start: {
          line: 295,
          column: 4
        },
        end: {
          line: 295,
          column: 75
        }
      },
      "52": {
        start: {
          line: 296,
          column: 4
        },
        end: {
          line: 296,
          column: 68
        }
      },
      "53": {
        start: {
          line: 305,
          column: 19
        },
        end: {
          line: 312,
          column: 1
        }
      },
      "54": {
        start: {
          line: 306,
          column: 20
        },
        end: {
          line: 306,
          column: 71
        }
      },
      "55": {
        start: {
          line: 308,
          column: 2
        },
        end: {
          line: 311,
          column: 3
        }
      },
      "56": {
        start: {
          line: 309,
          column: 4
        },
        end: {
          line: 309,
          column: 63
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 64,
            column: 32
          },
          end: {
            line: 64,
            column: 33
          }
        },
        loc: {
          start: {
            line: 64,
            column: 47
          },
          end: {
            line: 71,
            column: 1
          }
        },
        line: 64
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 83,
            column: 49
          },
          end: {
            line: 83,
            column: 50
          }
        },
        loc: {
          start: {
            line: 88,
            column: 35
          },
          end: {
            line: 186,
            column: 1
          }
        },
        line: 88
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 89,
            column: 39
          },
          end: {
            line: 89,
            column: 40
          }
        },
        loc: {
          start: {
            line: 89,
            column: 46
          },
          end: {
            line: 89,
            column: 61
          }
        },
        line: 89
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 196,
            column: 41
          },
          end: {
            line: 196,
            column: 42
          }
        },
        loc: {
          start: {
            line: 200,
            column: 20
          },
          end: {
            line: 268,
            column: 1
          }
        },
        line: 200
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 277,
            column: 42
          },
          end: {
            line: 277,
            column: 43
          }
        },
        loc: {
          start: {
            line: 281,
            column: 20
          },
          end: {
            line: 298,
            column: 1
          }
        },
        line: 281
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 305,
            column: 19
          },
          end: {
            line: 305,
            column: 20
          }
        },
        loc: {
          start: {
            line: 305,
            column: 69
          },
          end: {
            line: 312,
            column: 1
          }
        },
        line: 305
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 65,
            column: 2
          },
          end: {
            line: 68,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 2
          },
          end: {
            line: 68,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "1": {
        loc: {
          start: {
            line: 90,
            column: 2
          },
          end: {
            line: 92,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 2
          },
          end: {
            line: 92,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "2": {
        loc: {
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 111,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 111,
            column: 26
          },
          end: {
            line: 111,
            column: 68
          }
        }, {
          start: {
            line: 111,
            column: 71
          },
          end: {
            line: 111,
            column: 73
          }
        }],
        line: 111
      },
      "3": {
        loc: {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "4": {
        loc: {
          start: {
            line: 123,
            column: 22
          },
          end: {
            line: 123,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 22
          },
          end: {
            line: 123,
            column: 37
          }
        }, {
          start: {
            line: 123,
            column: 41
          },
          end: {
            line: 123,
            column: 75
          }
        }],
        line: 123
      },
      "5": {
        loc: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "6": {
        loc: {
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 175,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 175,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "7": {
        loc: {
          start: {
            line: 161,
            column: 6
          },
          end: {
            line: 163,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 6
          },
          end: {
            line: 163,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "8": {
        loc: {
          start: {
            line: 184,
            column: 36
          },
          end: {
            line: 184,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 184,
            column: 36
          },
          end: {
            line: 184,
            column: 49
          }
        }, {
          start: {
            line: 184,
            column: 53
          },
          end: {
            line: 184,
            column: 81
          }
        }],
        line: 184
      },
      "9": {
        loc: {
          start: {
            line: 214,
            column: 6
          },
          end: {
            line: 214,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 214,
            column: 31
          },
          end: {
            line: 214,
            column: 50
          }
        }, {
          start: {
            line: 214,
            column: 53
          },
          end: {
            line: 214,
            column: 76
          }
        }],
        line: 214
      },
      "10": {
        loc: {
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 248,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 248,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "11": {
        loc: {
          start: {
            line: 235,
            column: 6
          },
          end: {
            line: 236,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 235,
            column: 6
          },
          end: {
            line: 235,
            column: 47
          }
        }, {
          start: {
            line: 236,
            column: 6
          },
          end: {
            line: 236,
            column: 52
          }
        }],
        line: 235
      },
      "12": {
        loc: {
          start: {
            line: 294,
            column: 2
          },
          end: {
            line: 297,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 294,
            column: 2
          },
          end: {
            line: 297,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 294
      },
      "13": {
        loc: {
          start: {
            line: 308,
            column: 2
          },
          end: {
            line: 311,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 308,
            column: 2
          },
          end: {
            line: 311,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 308
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "67fa8597a89edf89e4a420c88069ba6ed399ecfb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2672s7zqdg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2672s7zqdg();
import { supabase } from '../supabase';
import { SUBSCRIPTION_PLANS, _calculateExpiryDate as calculateExpiryDate, SubscriptionPlanType, SubscriptionDuration } from './subscriptionTypes';
import { UserRole } from './userRoleService';
var STRIPE_PUBLISHABLE_KEY = (cov_2672s7zqdg().s[0]++, _env.EXPO_PUBLIC_STRIPE_PUBLISHABLE_KEY);
var SUPABASE_EDGE_FUNCTION_URL = (cov_2672s7zqdg().s[1]++, `${_env.EXPO_PUBLIC_SUPABASE_URL}/functions/v1/create-payment-intent`);
cov_2672s7zqdg().s[2]++;
export var initializeStripe = function initializeStripe() {
  cov_2672s7zqdg().f[0]++;
  cov_2672s7zqdg().s[3]++;
  if (!STRIPE_PUBLISHABLE_KEY) {
    cov_2672s7zqdg().b[0][0]++;
    cov_2672s7zqdg().s[4]++;
    console.error('Stripe publishable key is not set. Please check your environment variables.');
    cov_2672s7zqdg().s[5]++;
    return false;
  } else {
    cov_2672s7zqdg().b[0][1]++;
  }
  cov_2672s7zqdg().s[6]++;
  return true;
};
cov_2672s7zqdg().s[7]++;
export var createPaymentSheetForSubscription = function () {
  var _ref = _asyncToGenerator(function* (userId, planId, initPaymentSheet, presentPaymentSheet) {
    cov_2672s7zqdg().f[1]++;
    var plan = (cov_2672s7zqdg().s[8]++, SUBSCRIPTION_PLANS.find(function (p) {
      cov_2672s7zqdg().f[2]++;
      cov_2672s7zqdg().s[9]++;
      return p.id === planId;
    }));
    cov_2672s7zqdg().s[10]++;
    if (!plan) {
      cov_2672s7zqdg().b[1][0]++;
      cov_2672s7zqdg().s[11]++;
      return {
        success: false,
        error: 'Subscription plan not found.'
      };
    } else {
      cov_2672s7zqdg().b[1][1]++;
    }
    cov_2672s7zqdg().s[12]++;
    try {
      var _ref2 = (cov_2672s7zqdg().s[13]++, yield supabase.auth.getSession()),
        session = _ref2.data.session;
      var accessToken = (cov_2672s7zqdg().s[14]++, session == null ? void 0 : session.access_token);
      var response = (cov_2672s7zqdg().s[15]++, yield fetch(SUPABASE_EDGE_FUNCTION_URL, {
        method: 'POST',
        headers: Object.assign({
          'Content-Type': 'application/json'
        }, accessToken ? (cov_2672s7zqdg().b[2][0]++, {
          Authorization: `Bearer ${accessToken}`
        }) : (cov_2672s7zqdg().b[2][1]++, {})),
        body: JSON.stringify({
          amount: plan.price * 100,
          currency: 'usd',
          userId: userId,
          planId: plan.id
        })
      }));
      cov_2672s7zqdg().s[16]++;
      if (!response.ok) {
        cov_2672s7zqdg().b[3][0]++;
        var errorBody = (cov_2672s7zqdg().s[17]++, yield response.json());
        cov_2672s7zqdg().s[18]++;
        throw new Error((cov_2672s7zqdg().b[4][0]++, errorBody.error) || (cov_2672s7zqdg().b[4][1]++, 'Failed to create payment intent.'));
      } else {
        cov_2672s7zqdg().b[3][1]++;
      }
      var _ref3 = (cov_2672s7zqdg().s[19]++, yield response.json()),
        paymentIntent = _ref3.paymentIntent,
        ephemeralKey = _ref3.ephemeralKey,
        customer = _ref3.customer;
      var _ref4 = (cov_2672s7zqdg().s[20]++, yield initPaymentSheet({
          merchantDisplayName: 'Card Show Finder, LLC.',
          customerId: customer,
          customerEphemeralKeySecret: ephemeralKey,
          paymentIntentClientSecret: paymentIntent,
          allowsDelayedPaymentMethods: true,
          returnURL: 'cardshowfinder://stripe-redirect'
        })),
        initError = _ref4.error;
      cov_2672s7zqdg().s[21]++;
      if (initError) {
        cov_2672s7zqdg().b[5][0]++;
        cov_2672s7zqdg().s[22]++;
        console.error('Stripe initPaymentSheet error:', initError);
        cov_2672s7zqdg().s[23]++;
        yield logPayment({
          user_id: userId,
          plan_id: plan.id,
          amount: plan.price,
          currency: 'usd',
          status: 'failed',
          transaction_id: paymentIntent,
          error_message: `Init Error: ${initError.message}`
        });
        cov_2672s7zqdg().s[24]++;
        return {
          success: false,
          error: `Initialization failed: ${initError.message}`
        };
      } else {
        cov_2672s7zqdg().b[5][1]++;
      }
      var _ref5 = (cov_2672s7zqdg().s[25]++, yield presentPaymentSheet()),
        presentError = _ref5.error;
      cov_2672s7zqdg().s[26]++;
      if (presentError) {
        cov_2672s7zqdg().b[6][0]++;
        cov_2672s7zqdg().s[27]++;
        if (presentError.code === 'Canceled') {
          cov_2672s7zqdg().b[7][0]++;
          cov_2672s7zqdg().s[28]++;
          return {
            success: false,
            error: 'Payment was canceled.'
          };
        } else {
          cov_2672s7zqdg().b[7][1]++;
        }
        cov_2672s7zqdg().s[29]++;
        console.error('Stripe presentPaymentSheet error:', presentError);
        cov_2672s7zqdg().s[30]++;
        yield logPayment({
          user_id: userId,
          plan_id: plan.id,
          amount: plan.price,
          currency: 'usd',
          status: 'failed',
          transaction_id: paymentIntent,
          error_message: `Present Error: ${presentError.message}`
        });
        cov_2672s7zqdg().s[31]++;
        return {
          success: false,
          error: `Payment failed: ${presentError.message}`
        };
      } else {
        cov_2672s7zqdg().b[6][1]++;
      }
      cov_2672s7zqdg().s[32]++;
      yield processSubscriptionUpdate(userId, plan, paymentIntent);
      cov_2672s7zqdg().s[33]++;
      return {
        success: true,
        transactionId: paymentIntent
      };
    } catch (error) {
      cov_2672s7zqdg().s[34]++;
      console.error('An unexpected error occurred during payment:', error);
      cov_2672s7zqdg().s[35]++;
      return {
        success: false,
        error: (cov_2672s7zqdg().b[8][0]++, error.message) || (cov_2672s7zqdg().b[8][1]++, 'An unknown error occurred.')
      };
    }
  });
  return function createPaymentSheetForSubscription(_x, _x2, _x3, _x4) {
    return _ref.apply(this, arguments);
  };
}();
cov_2672s7zqdg().s[36]++;
export var processSubscriptionUpdate = function () {
  var _ref6 = _asyncToGenerator(function* (userId, plan, transactionId) {
    cov_2672s7zqdg().f[3]++;
    cov_2672s7zqdg().s[37]++;
    try {
      var expiryDate = (cov_2672s7zqdg().s[38]++, calculateExpiryDate(plan));
      var newRole = (cov_2672s7zqdg().s[39]++, plan.type === 'dealer' ? (cov_2672s7zqdg().b[9][0]++, UserRole.MVP_DEALER) : (cov_2672s7zqdg().b[9][1]++, UserRole.SHOW_ORGANIZER));
      cov_2672s7zqdg().s[40]++;
      yield updateUserProfileWithSubscription(userId, newRole, expiryDate.toISOString());
      cov_2672s7zqdg().s[41]++;
      yield logPayment({
        user_id: userId,
        plan_id: plan.id,
        amount: plan.price,
        currency: 'usd',
        status: 'succeeded',
        transaction_id: transactionId
      });
      cov_2672s7zqdg().s[42]++;
      if ((cov_2672s7zqdg().b[11][0]++, plan.type === SubscriptionPlanType.DEALER) && (cov_2672s7zqdg().b[11][1]++, plan.duration === SubscriptionDuration.MONTHLY)) {
        cov_2672s7zqdg().b[10][0]++;
        cov_2672s7zqdg().s[43]++;
        try {
          cov_2672s7zqdg().s[44]++;
          yield supabase.rpc('award_referral_on_payment', {
            p_user_id: userId,
            p_payment_id: transactionId,
            p_paid_at: new Date().toISOString()
          });
        } catch (rpcErr) {
          cov_2672s7zqdg().s[45]++;
          console.error('award_referral_on_payment RPC failed:', rpcErr);
        }
      } else {
        cov_2672s7zqdg().b[10][1]++;
      }
    } catch (error) {
      cov_2672s7zqdg().s[46]++;
      console.error('Failed to process subscription update after payment:', error);
      cov_2672s7zqdg().s[47]++;
      yield logPayment({
        user_id: userId,
        plan_id: plan.id,
        amount: plan.price,
        currency: 'usd',
        status: 'failed',
        transaction_id: transactionId,
        error_message: 'Post-payment profile update failed.'
      });
    }
  });
  return function processSubscriptionUpdate(_x5, _x6, _x7) {
    return _ref6.apply(this, arguments);
  };
}();
cov_2672s7zqdg().s[48]++;
var updateUserProfileWithSubscription = function () {
  var _ref7 = _asyncToGenerator(function* (userId, newRole, expiryDateISO) {
    cov_2672s7zqdg().f[4]++;
    var _ref8 = (cov_2672s7zqdg().s[49]++, yield supabase.from('profiles').update({
        role: newRole,
        subscription_status: 'active',
        payment_status: 'paid',
        subscription_expiry: expiryDateISO,
        updated_at: new Date().toISOString()
      }).eq('id', userId)),
      error = _ref8.error;
    cov_2672s7zqdg().s[50]++;
    if (error) {
      cov_2672s7zqdg().b[12][0]++;
      cov_2672s7zqdg().s[51]++;
      console.error('Error updating user profile with subscription:', error);
      cov_2672s7zqdg().s[52]++;
      throw new Error('Failed to update user profile after payment.');
    } else {
      cov_2672s7zqdg().b[12][1]++;
    }
  });
  return function updateUserProfileWithSubscription(_x8, _x9, _x0) {
    return _ref7.apply(this, arguments);
  };
}();
cov_2672s7zqdg().s[53]++;
var logPayment = function () {
  var _ref9 = _asyncToGenerator(function* (paymentData) {
    cov_2672s7zqdg().f[5]++;
    var _ref0 = (cov_2672s7zqdg().s[54]++, yield supabase.from('payments').insert(paymentData)),
      error = _ref0.error;
    cov_2672s7zqdg().s[55]++;
    if (error) {
      cov_2672s7zqdg().b[13][0]++;
      cov_2672s7zqdg().s[56]++;
      console.error('Error logging payment transaction:', error);
    } else {
      cov_2672s7zqdg().b[13][1]++;
    }
  });
  return function logPayment(_x1) {
    return _ref9.apply(this, arguments);
  };
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzdXBhYmFzZSIsIlNVQlNDUklQVElPTl9QTEFOUyIsIl9jYWxjdWxhdGVFeHBpcnlEYXRlIiwiY2FsY3VsYXRlRXhwaXJ5RGF0ZSIsIlN1YnNjcmlwdGlvblBsYW5UeXBlIiwiU3Vic2NyaXB0aW9uRHVyYXRpb24iLCJVc2VyUm9sZSIsIlNUUklQRV9QVUJMSVNIQUJMRV9LRVkiLCJjb3ZfMjY3MnM3enFkZyIsInMiLCJfZW52IiwiRVhQT19QVUJMSUNfU1RSSVBFX1BVQkxJU0hBQkxFX0tFWSIsIlNVUEFCQVNFX0VER0VfRlVOQ1RJT05fVVJMIiwiRVhQT19QVUJMSUNfU1VQQUJBU0VfVVJMIiwiaW5pdGlhbGl6ZVN0cmlwZSIsImYiLCJiIiwiY29uc29sZSIsImVycm9yIiwiY3JlYXRlUGF5bWVudFNoZWV0Rm9yU3Vic2NyaXB0aW9uIiwiX3JlZiIsIl9hc3luY1RvR2VuZXJhdG9yIiwidXNlcklkIiwicGxhbklkIiwiaW5pdFBheW1lbnRTaGVldCIsInByZXNlbnRQYXltZW50U2hlZXQiLCJwbGFuIiwiZmluZCIsInAiLCJpZCIsInN1Y2Nlc3MiLCJfcmVmMiIsImF1dGgiLCJnZXRTZXNzaW9uIiwic2Vzc2lvbiIsImRhdGEiLCJhY2Nlc3NUb2tlbiIsImFjY2Vzc190b2tlbiIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiT2JqZWN0IiwiYXNzaWduIiwiQXV0aG9yaXphdGlvbiIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiYW1vdW50IiwicHJpY2UiLCJjdXJyZW5jeSIsIm9rIiwiZXJyb3JCb2R5IiwianNvbiIsIkVycm9yIiwiX3JlZjMiLCJwYXltZW50SW50ZW50IiwiZXBoZW1lcmFsS2V5IiwiY3VzdG9tZXIiLCJfcmVmNCIsIm1lcmNoYW50RGlzcGxheU5hbWUiLCJjdXN0b21lcklkIiwiY3VzdG9tZXJFcGhlbWVyYWxLZXlTZWNyZXQiLCJwYXltZW50SW50ZW50Q2xpZW50U2VjcmV0IiwiYWxsb3dzRGVsYXllZFBheW1lbnRNZXRob2RzIiwicmV0dXJuVVJMIiwiaW5pdEVycm9yIiwibG9nUGF5bWVudCIsInVzZXJfaWQiLCJwbGFuX2lkIiwic3RhdHVzIiwidHJhbnNhY3Rpb25faWQiLCJlcnJvcl9tZXNzYWdlIiwibWVzc2FnZSIsIl9yZWY1IiwicHJlc2VudEVycm9yIiwiY29kZSIsInByb2Nlc3NTdWJzY3JpcHRpb25VcGRhdGUiLCJ0cmFuc2FjdGlvbklkIiwiX3giLCJfeDIiLCJfeDMiLCJfeDQiLCJhcHBseSIsImFyZ3VtZW50cyIsIl9yZWY2IiwiZXhwaXJ5RGF0ZSIsIm5ld1JvbGUiLCJ0eXBlIiwiTVZQX0RFQUxFUiIsIlNIT1dfT1JHQU5JWkVSIiwidXBkYXRlVXNlclByb2ZpbGVXaXRoU3Vic2NyaXB0aW9uIiwidG9JU09TdHJpbmciLCJERUFMRVIiLCJkdXJhdGlvbiIsIk1PTlRITFkiLCJycGMiLCJwX3VzZXJfaWQiLCJwX3BheW1lbnRfaWQiLCJwX3BhaWRfYXQiLCJEYXRlIiwicnBjRXJyIiwiX3g1IiwiX3g2IiwiX3g3IiwiX3JlZjciLCJleHBpcnlEYXRlSVNPIiwiX3JlZjgiLCJmcm9tIiwidXBkYXRlIiwicm9sZSIsInN1YnNjcmlwdGlvbl9zdGF0dXMiLCJwYXltZW50X3N0YXR1cyIsInN1YnNjcmlwdGlvbl9leHBpcnkiLCJ1cGRhdGVkX2F0IiwiZXEiLCJfeDgiLCJfeDkiLCJfeDAiLCJfcmVmOSIsInBheW1lbnREYXRhIiwiX3JlZjAiLCJpbnNlcnQiLCJfeDEiXSwic291cmNlcyI6WyJzdHJpcGVQYXltZW50U2VydmljZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdHJpcGVQcm92aWRlciBhcyBfU3RyaXBlUHJvdmlkZXIsIHVzZVN0cmlwZSBhcyBfdXNlU3RyaXBlIH0gZnJvbSAnQHN0cmlwZS9zdHJpcGUtcmVhY3QtbmF0aXZlJztcbmltcG9ydCB7IHN1cGFiYXNlIH0gZnJvbSAnLi4vc3VwYWJhc2UnO1xuLy8gVGhlIGhlbHBlciBpbiBgc3Vic2NyaXB0aW9uVHlwZXNgIHdhcyBhY2NpZGVudGFsbHkgZXhwb3J0ZWQgd2l0aCBhbiB1bmRlcnNjb3JlIOKAk1xuLy8gYWxpYXMgaXQgbG9jYWxseSBzbyB3ZSBjYW4ga2VlcCB0aGUgbmljZSBuYW1lIGluIHRoZSByZXN0IG9mIHRoaXMgZmlsZS5cbmltcG9ydCB7XG4gIFN1YnNjcmlwdGlvblBsYW4sXG4gIFNVQlNDUklQVElPTl9QTEFOUyxcbiAgX2NhbGN1bGF0ZUV4cGlyeURhdGUgYXMgY2FsY3VsYXRlRXhwaXJ5RGF0ZSxcbiAgU3Vic2NyaXB0aW9uUGxhblR5cGUsXG4gIFN1YnNjcmlwdGlvbkR1cmF0aW9uLFxufSBmcm9tICcuL3N1YnNjcmlwdGlvblR5cGVzJztcbmltcG9ydCB7IFVzZXJSb2xlIH0gZnJvbSAnLi91c2VyUm9sZVNlcnZpY2UnO1xuXG4vLyAtLS0gVHlwZSBEZWZpbml0aW9ucyAtLS1cblxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBvdXRjb21lIG9mIGEgcGF5bWVudCBvcGVyYXRpb24uXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgU3RyaXBlUGF5bWVudFJlc3VsdCB7XG4gIHN1Y2Nlc3M6IGJvb2xlYW47XG4gIGVycm9yPzogc3RyaW5nO1xuICB0cmFuc2FjdGlvbklkPzogc3RyaW5nO1xufVxuXG4vKipcbiAqIERlZmluZXMgdGhlIGV4cGVjdGVkIEpTT04gcmVzcG9uc2UgZnJvbSB0aGUgYmFja2VuZCAoU3VwYWJhc2UgRWRnZSBGdW5jdGlvbilcbiAqIHdoZW4gY3JlYXRpbmcgYSBwYXltZW50IGludGVudC5cbiAqL1xuaW50ZXJmYWNlIFBheW1lbnRJbnRlbnRSZXNwb25zZSB7XG4gIHBheW1lbnRJbnRlbnQ6IHN0cmluZzsgLy8gVGhlIFBheW1lbnQgSW50ZW50IGNsaWVudCBzZWNyZXRcbiAgZXBoZW1lcmFsS2V5OiBzdHJpbmc7ICAvLyBUaGUgRXBoZW1lcmFsIEtleSBzZWNyZXQgZm9yIHRoZSBjdXN0b21lclxuICBjdXN0b21lcjogc3RyaW5nOyAgICAgIC8vIFRoZSBTdHJpcGUgQ3VzdG9tZXIgSURcbiAgcHVibGlzaGFibGVLZXk6IHN0cmluZzsgLy8gVGhlIFN0cmlwZSBwdWJsaXNoYWJsZSBrZXlcbn1cblxuLyoqXG4gKiBEZWZpbmVzIHRoZSBzdHJ1Y3R1cmUgZm9yIGxvZ2dpbmcgYSBwYXltZW50IHRyYW5zYWN0aW9uIGluIFN1cGFiYXNlLlxuICovXG5pbnRlcmZhY2UgUGF5bWVudExvZyB7XG4gIGlkPzogc3RyaW5nO1xuICB1c2VyX2lkOiBzdHJpbmc7XG4gIHBsYW5faWQ6IHN0cmluZztcbiAgYW1vdW50OiBudW1iZXI7XG4gIGN1cnJlbmN5OiBzdHJpbmc7XG4gIHN0YXR1czogJ3N1Y2NlZWRlZCcgfCAnZmFpbGVkJyB8ICdwZW5kaW5nJztcbiAgdHJhbnNhY3Rpb25faWQ6IHN0cmluZzsgLy8gU3RyaXBlIFBheW1lbnQgSW50ZW50IElEXG4gIGVycm9yX21lc3NhZ2U/OiBzdHJpbmc7XG4gIGNyZWF0ZWRfYXQ/OiBzdHJpbmc7XG59XG5cbi8vIC0tLSBDb25zdGFudHMgLS0tXG5cbi8vIEl0J3MgY3J1Y2lhbCB0byBsb2FkIHRoaXMgZnJvbSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgYW5kIG5vdCBoYXJkY29kZSBpdC5cbmNvbnN0IFNUUklQRV9QVUJMSVNIQUJMRV9LRVkgPSBwcm9jZXNzLmVudi5FWFBPX1BVQkxJQ19TVFJJUEVfUFVCTElTSEFCTEVfS0VZO1xuY29uc3QgU1VQQUJBU0VfRURHRV9GVU5DVElPTl9VUkwgPSBgJHtwcm9jZXNzLmVudi5FWFBPX1BVQkxJQ19TVVBBQkFTRV9VUkx9L2Z1bmN0aW9ucy92MS9jcmVhdGUtcGF5bWVudC1pbnRlbnRgO1xuXG4vLyAtLS0gU2VydmljZSBJbXBsZW1lbnRhdGlvbiAtLS1cblxuLyoqXG4gKiBJbml0aWFsaXplcyB0aGUgU3RyaXBlIFNESy5cbiAqIFRoaXMgc2hvdWxkIGJlIGNhbGxlZCBvbmNlIGF0IHRoZSByb290IG9mIHlvdXIgYXBwbGljYXRpb24uXG4gKiBAcmV0dXJucyB7X2Jvb2xlYW59IFRydWUgaWYgaW5pdGlhbGl6YXRpb24gd2FzIHN1Y2Nlc3NmdWwsIGZhbHNlIG90aGVyd2lzZS5cbiAqL1xuZXhwb3J0IGNvbnN0IGluaXRpYWxpemVTdHJpcGUgPSAoKTogYm9vbGVhbiA9PiB7XG4gIGlmICghU1RSSVBFX1BVQkxJU0hBQkxFX0tFWSkge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1N0cmlwZSBwdWJsaXNoYWJsZSBrZXkgaXMgbm90IHNldC4gUGxlYXNlIGNoZWNrIHlvdXIgZW52aXJvbm1lbnQgdmFyaWFibGVzLicpO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICAvLyBUaGUgU3RyaXBlUHJvdmlkZXIgY29tcG9uZW50IGhhbmRsZXMgaW5pdGlhbGl6YXRpb24uIFRoaXMgZnVuY3Rpb24gaXMgZm9yIHZhbGlkYXRpb24uXG4gIHJldHVybiB0cnVlO1xufTtcblxuLyoqXG4gKiBDcmVhdGVzIGFuZCBwcmVzZW50cyB0aGUgU3RyaXBlIFBheW1lbnQgU2hlZXQgZm9yIGEgZ2l2ZW4gc3Vic2NyaXB0aW9uIHBsYW4uXG4gKiBUaGlzIGZ1bmN0aW9uIG9yY2hlc3RyYXRlcyB0aGUgZW50aXJlIGNsaWVudC1zaWRlIHBheW1lbnQgZmxvdy5cbiAqXG4gKiBAcGFyYW0gdXNlcklkIC0gVGhlIElEIG9mIHRoZSB1c2VyIHB1cmNoYXNpbmcgdGhlIHN1YnNjcmlwdGlvbi5cbiAqIEBwYXJhbSBwbGFuSWQgLSBUaGUgSUQgb2YgdGhlIHN1YnNjcmlwdGlvbiBwbGFuIGJlaW5nIHB1cmNoYXNlZC5cbiAqIEBwYXJhbSBpbml0UGF5bWVudFNoZWV0IC0gVGhlIGBpbml0UGF5bWVudFNoZWV0YCBmdW5jdGlvbiBmcm9tIHRoZSBgdXNlU3RyaXBlYCBob29rLlxuICogQHBhcmFtIHByZXNlbnRQYXltZW50U2hlZXQgLSBUaGUgYHByZXNlbnRQYXltZW50U2hlZXRgIGZ1bmN0aW9uIGZyb20gdGhlIGB1c2VTdHJpcGVgIGhvb2suXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxTdHJpcGVQYXltZW50UmVzdWx0Pn0gVGhlIHJlc3VsdCBvZiB0aGUgcGF5bWVudCBvcGVyYXRpb24uXG4gKi9cbmV4cG9ydCBjb25zdCBjcmVhdGVQYXltZW50U2hlZXRGb3JTdWJzY3JpcHRpb24gPSBhc3luYyAoXG4gIHVzZXJJZDogc3RyaW5nLFxuICBwbGFuSWQ6IHN0cmluZyxcbiAgaW5pdFBheW1lbnRTaGVldDogKHBhcmFtczogYW55KSA9PiBQcm9taXNlPGFueT4sXG4gIHByZXNlbnRQYXltZW50U2hlZXQ6ICgpID0+IFByb21pc2U8YW55PlxuKTogUHJvbWlzZTxTdHJpcGVQYXltZW50UmVzdWx0PiA9PiB7XG4gIGNvbnN0IHBsYW4gPSBTVUJTQ1JJUFRJT05fUExBTlMuZmluZCgocCkgPT4gcC5pZCA9PT0gcGxhbklkKTtcbiAgaWYgKCFwbGFuKSB7XG4gICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiAnU3Vic2NyaXB0aW9uIHBsYW4gbm90IGZvdW5kLicgfTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgLy8gMS4gQ3JlYXRlIGEgcGF5bWVudCBpbnRlbnQgb24gdGhlIHNlcnZlciAodmlhIFN1cGFiYXNlIEVkZ2UgRnVuY3Rpb24pXG5cbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIC8vIFJldHJpZXZlIHRoZSBjdXJyZW50IGFjY2Vzcy10b2tlbiBmcm9tIFN1cGFiYXNlIGF1dGggc2Vzc2lvblxuICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgY29uc3Qge1xuICAgICAgZGF0YTogeyBzZXNzaW9uIH0sXG4gICAgfSA9IGF3YWl0IHN1cGFiYXNlLmF1dGguZ2V0U2Vzc2lvbigpO1xuXG4gICAgY29uc3QgYWNjZXNzVG9rZW4gPSBzZXNzaW9uPy5hY2Nlc3NfdG9rZW47XG5cbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKFNVUEFCQVNFX0VER0VfRlVOQ1RJT05fVVJMLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgLy8gUGFzcyB0aGUgYWNjZXNzIHRva2VuIG9ubHkgaWYgd2UgYWN0dWFsbHkgaGF2ZSBvbmVcbiAgICAgICAgLi4uKGFjY2Vzc1Rva2VuID8geyBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7YWNjZXNzVG9rZW59YCB9IDoge30pLFxuICAgICAgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgYW1vdW50OiBwbGFuLnByaWNlICogMTAwLCAvLyBTdHJpcGUgZXhwZWN0cyBhbW91bnQgaW4gY2VudHNcbiAgICAgICAgY3VycmVuY3k6ICd1c2QnLFxuICAgICAgICB1c2VySWQ6IHVzZXJJZCxcbiAgICAgICAgcGxhbklkOiBwbGFuLmlkLFxuICAgICAgfSksXG4gICAgfSk7XG5cbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICBjb25zdCBlcnJvckJvZHkgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3JCb2R5LmVycm9yIHx8ICdGYWlsZWQgdG8gY3JlYXRlIHBheW1lbnQgaW50ZW50LicpO1xuICAgIH1cblxuICAgIGNvbnN0IHtcbiAgICAgIHBheW1lbnRJbnRlbnQsXG4gICAgICBlcGhlbWVyYWxLZXksXG4gICAgICBjdXN0b21lcixcbiAgICB9OiBQYXltZW50SW50ZW50UmVzcG9uc2UgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG5cbiAgICAvLyAyLiBJbml0aWFsaXplIHRoZSBQYXltZW50IFNoZWV0XG4gICAgY29uc3QgeyBlcnJvcjogaW5pdEVycm9yIH0gPSBhd2FpdCBpbml0UGF5bWVudFNoZWV0KHtcbiAgICAgIG1lcmNoYW50RGlzcGxheU5hbWU6ICdDYXJkIFNob3cgRmluZGVyLCBMTEMuJyxcbiAgICAgIGN1c3RvbWVySWQ6IGN1c3RvbWVyLFxuICAgICAgY3VzdG9tZXJFcGhlbWVyYWxLZXlTZWNyZXQ6IGVwaGVtZXJhbEtleSxcbiAgICAgIHBheW1lbnRJbnRlbnRDbGllbnRTZWNyZXQ6IHBheW1lbnRJbnRlbnQsXG4gICAgICBhbGxvd3NEZWxheWVkUGF5bWVudE1ldGhvZHM6IHRydWUsXG4gICAgICByZXR1cm5VUkw6ICdjYXJkc2hvd2ZpbmRlcjovL3N0cmlwZS1yZWRpcmVjdCcsIC8vIEN1c3RvbSBVUkwgc2NoZW1lXG4gICAgfSk7XG5cbiAgICBpZiAoaW5pdEVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdTdHJpcGUgaW5pdFBheW1lbnRTaGVldCBlcnJvcjonLCBpbml0RXJyb3IpO1xuICAgICAgYXdhaXQgbG9nUGF5bWVudCh7XG4gICAgICAgIHVzZXJfaWQ6IHVzZXJJZCxcbiAgICAgICAgcGxhbl9pZDogcGxhbi5pZCxcbiAgICAgICAgYW1vdW50OiBwbGFuLnByaWNlLFxuICAgICAgICBjdXJyZW5jeTogJ3VzZCcsXG4gICAgICAgIHN0YXR1czogJ2ZhaWxlZCcsXG4gICAgICAgIHRyYW5zYWN0aW9uX2lkOiBwYXltZW50SW50ZW50LFxuICAgICAgICBlcnJvcl9tZXNzYWdlOiBgSW5pdCBFcnJvcjogJHtpbml0RXJyb3IubWVzc2FnZX1gLFxuICAgICAgfSk7XG4gICAgICByZXR1cm4geyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6IGBJbml0aWFsaXphdGlvbiBmYWlsZWQ6ICR7aW5pdEVycm9yLm1lc3NhZ2V9YCB9O1xuICAgIH1cblxuICAgIC8vIDMuIFByZXNlbnQgdGhlIFBheW1lbnQgU2hlZXRcbiAgICBjb25zdCB7IGVycm9yOiBwcmVzZW50RXJyb3IgfSA9IGF3YWl0IHByZXNlbnRQYXltZW50U2hlZXQoKTtcblxuICAgIGlmIChwcmVzZW50RXJyb3IpIHtcbiAgICAgIC8vIFVzZXIgY2FuY2VsbGVkIG9yIHBheW1lbnQgZmFpbGVkXG4gICAgICBpZiAocHJlc2VudEVycm9yLmNvZGUgPT09ICdDYW5jZWxlZCcpIHtcbiAgICAgICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiAnUGF5bWVudCB3YXMgY2FuY2VsZWQuJyB9O1xuICAgICAgfVxuICAgICAgY29uc29sZS5lcnJvcignU3RyaXBlIHByZXNlbnRQYXltZW50U2hlZXQgZXJyb3I6JywgcHJlc2VudEVycm9yKTtcbiAgICAgIGF3YWl0IGxvZ1BheW1lbnQoe1xuICAgICAgICB1c2VyX2lkOiB1c2VySWQsXG4gICAgICAgIHBsYW5faWQ6IHBsYW4uaWQsXG4gICAgICAgIGFtb3VudDogcGxhbi5wcmljZSxcbiAgICAgICAgY3VycmVuY3k6ICd1c2QnLFxuICAgICAgICBzdGF0dXM6ICdmYWlsZWQnLFxuICAgICAgICB0cmFuc2FjdGlvbl9pZDogcGF5bWVudEludGVudCxcbiAgICAgICAgZXJyb3JfbWVzc2FnZTogYFByZXNlbnQgRXJyb3I6ICR7cHJlc2VudEVycm9yLm1lc3NhZ2V9YCxcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiBgUGF5bWVudCBmYWlsZWQ6ICR7cHJlc2VudEVycm9yLm1lc3NhZ2V9YCB9O1xuICAgIH1cblxuICAgIC8vIDQuIFBheW1lbnQgc3VjY2VlZGVkLCBwcm9jZXNzIHRoZSBzdWJzY3JpcHRpb25cbiAgICBhd2FpdCBwcm9jZXNzU3Vic2NyaXB0aW9uVXBkYXRlKHVzZXJJZCwgcGxhbiwgcGF5bWVudEludGVudCk7XG5cbiAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCB0cmFuc2FjdGlvbklkOiBwYXltZW50SW50ZW50IH07XG5cbiAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0FuIHVuZXhwZWN0ZWQgZXJyb3Igb2NjdXJyZWQgZHVyaW5nIHBheW1lbnQ6JywgZXJyb3IpO1xuICAgIHJldHVybiB7IHN1Y2Nlc3M6IGZhbHNlLCBlcnJvcjogZXJyb3IubWVzc2FnZSB8fCAnQW4gdW5rbm93biBlcnJvciBvY2N1cnJlZC4nIH07XG4gIH1cbn07XG5cbi8qKlxuICogSGFuZGxlcyB0aGUgbG9naWMgYWZ0ZXIgYSBzdWNjZXNzZnVsIHBheW1lbnQ6IGNhbGN1bGF0ZXMgZXhwaXJ5LCB1cGRhdGVzIHRoZSB1c2VyJ3MgcHJvZmlsZSxcbiAqIGFuZCBsb2dzIHRoZSB0cmFuc2FjdGlvbi5cbiAqXG4gKiBAcGFyYW0gdXNlcklkIC0gVGhlIElEIG9mIHRoZSB1c2VyLlxuICogQHBhcmFtIHBsYW4gLSBUaGUgc3Vic2NyaXB0aW9uIHBsYW4gdGhhdCB3YXMgcHVyY2hhc2VkLlxuICogQHBhcmFtIHRyYW5zYWN0aW9uSWQgLSBUaGUgU3RyaXBlIFBheW1lbnQgSW50ZW50IElEIGZvciBsb2dnaW5nLlxuICovXG5leHBvcnQgY29uc3QgcHJvY2Vzc1N1YnNjcmlwdGlvblVwZGF0ZSA9IGFzeW5jIChcbiAgdXNlcklkOiBzdHJpbmcsXG4gIHBsYW46IFN1YnNjcmlwdGlvblBsYW4sXG4gIHRyYW5zYWN0aW9uSWQ6IHN0cmluZ1xuKTogUHJvbWlzZTx2b2lkPiA9PiB7XG4gIHRyeSB7XG4gICAgLyoqXG4gICAgICogQ2FsY3VsYXRlIHRoZSBleHBpcnkgZGF0ZSBmb3IgdGhlICoqcGFpZCoqIHN1YnNjcmlwdGlvbi5cbiAgICAgKiBXZSBpbnRlbnRpb25hbGx5IGlnbm9yZSBhbnkgZnJlZS10cmlhbCBkYXRhIGhlcmUgYmVjYXVzZSBhbiB1cGdyYWRlXG4gICAgICogc2hvdWxkIHRlcm1pbmF0ZSB0aGUgdHJpYWwgYW5kIHN0YXJ0IHRoZSBwYWlkIHBlcmlvZCBpbW1lZGlhdGVseS5cbiAgICAgKiBUaGUgaGVscGVyIGluIGBzdWJzY3JpcHRpb25UeXBlc2AgYWxyZWFkeSBlbmNvZGVzOlxuICAgICAqICAg4oCiIEFubnVhbCAg4oaSICszNjUgZGF5c1xuICAgICAqICAg4oCiIE1vbnRobHkg4oaSICszMCAgZGF5c1xuICAgICAqL1xuICAgIGNvbnN0IGV4cGlyeURhdGUgPSBjYWxjdWxhdGVFeHBpcnlEYXRlKHBsYW4pO1xuXG4gICAgLy8gRGV0ZXJtaW5lIHRoZSBuZXcgcm9sZSBiYXNlZCBvbiB0aGUgc3Vic2NyaXB0aW9uIHR5cGVcbiAgICBjb25zdCBuZXdSb2xlID1cbiAgICAgIHBsYW4udHlwZSA9PT0gJ2RlYWxlcicgPyBVc2VyUm9sZS5NVlBfREVBTEVSIDogVXNlclJvbGUuU0hPV19PUkdBTklaRVI7XG5cbiAgICAvLyBVcGRhdGUgdXNlciBwcm9maWxlIGluIFN1cGFiYXNlXG4gICAgYXdhaXQgdXBkYXRlVXNlclByb2ZpbGVXaXRoU3Vic2NyaXB0aW9uKFxuICAgICAgdXNlcklkLFxuICAgICAgbmV3Um9sZSxcbiAgICAgIGV4cGlyeURhdGUudG9JU09TdHJpbmcoKSxcbiAgICApO1xuXG4gICAgLy8gTG9nIHRoZSBzdWNjZXNzZnVsIHBheW1lbnRcbiAgICBhd2FpdCBsb2dQYXltZW50KHtcbiAgICAgIHVzZXJfaWQ6IHVzZXJJZCxcbiAgICAgIHBsYW5faWQ6IHBsYW4uaWQsXG4gICAgICBhbW91bnQ6IHBsYW4ucHJpY2UsXG4gICAgICBjdXJyZW5jeTogJ3VzZCcsXG4gICAgICBzdGF0dXM6ICdzdWNjZWVkZWQnLFxuICAgICAgdHJhbnNhY3Rpb25faWQ6IHRyYW5zYWN0aW9uSWQsXG4gICAgfSk7XG5cbiAgICAvLyAtLS0gT3JnYW5pemVyIHJlZmVycmFsIGVhcm5pbmdzIChkZWFsZXIgbW9udGhseSBvbmx5KSAtLS0tLS0tLS0tLS0tLS0tLVxuICAgIGlmIChcbiAgICAgIHBsYW4udHlwZSA9PT0gU3Vic2NyaXB0aW9uUGxhblR5cGUuREVBTEVSICYmXG4gICAgICBwbGFuLmR1cmF0aW9uID09PSBTdWJzY3JpcHRpb25EdXJhdGlvbi5NT05USExZXG4gICAgKSB7XG4gICAgICB0cnkge1xuICAgICAgICBhd2FpdCBzdXBhYmFzZS5ycGMoJ2F3YXJkX3JlZmVycmFsX29uX3BheW1lbnQnLCB7XG4gICAgICAgICAgcF91c2VyX2lkOiB1c2VySWQsXG4gICAgICAgICAgcF9wYXltZW50X2lkOiB0cmFuc2FjdGlvbklkLFxuICAgICAgICAgIHBfcGFpZF9hdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgICB9KTtcbiAgICAgIH0gY2F0Y2ggKHJwY0VycjogYW55KSB7XG4gICAgICAgIC8vIE5vbi1jcml0aWNhbDogbG9nICYgY29udGludWVcbiAgICAgICAgY29uc29sZS5lcnJvcignYXdhcmRfcmVmZXJyYWxfb25fcGF5bWVudCBSUEMgZmFpbGVkOicsIHJwY0Vycik7XG4gICAgICB9XG4gICAgfVxuXG4gIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbiAgICBjb25zb2xlLmVycm9yKFxuICAgICAgJ0ZhaWxlZCB0byBwcm9jZXNzIHN1YnNjcmlwdGlvbiB1cGRhdGUgYWZ0ZXIgcGF5bWVudDonLFxuICAgICAgZXJyb3IsXG4gICAgKTtcbiAgICAvLyBFdmVuIGlmIHBvc3QtcGF5bWVudCBwcm9jZXNzaW5nIGZhaWxzLCB0aGUgcGF5bWVudCB3YXMgc3VjY2Vzc2Z1bC5cbiAgICAvLyBUaGlzIHNob3VsZCBiZSBoYW5kbGVkIHdpdGggYSByZWNvbmNpbGlhdGlvbiBwcm9jZXNzIG9yIG1vbml0b3JpbmcuXG4gICAgLy8gRm9yIG5vdywgd2UgbG9nIHRoZSBlcnJvci5cbiAgICBhd2FpdCBsb2dQYXltZW50KHtcbiAgICAgIHVzZXJfaWQ6IHVzZXJJZCxcbiAgICAgIHBsYW5faWQ6IHBsYW4uaWQsXG4gICAgICBhbW91bnQ6IHBsYW4ucHJpY2UsXG4gICAgICBjdXJyZW5jeTogJ3VzZCcsXG4gICAgICBzdGF0dXM6ICdmYWlsZWQnLCAvLyBMb2cgYXMgJ2ZhaWxlZCcgdG8gaW5kaWNhdGUgYSBwcm9jZXNzaW5nIGZhaWx1cmUgcG9zdC1wYXltZW50XG4gICAgICB0cmFuc2FjdGlvbl9pZDogdHJhbnNhY3Rpb25JZCxcbiAgICAgIGVycm9yX21lc3NhZ2U6ICdQb3N0LXBheW1lbnQgcHJvZmlsZSB1cGRhdGUgZmFpbGVkLicsXG4gICAgfSk7XG4gIH1cbn07XG5cbi8qKlxuICogVXBkYXRlcyB0aGUgdXNlcidzIHByb2ZpbGUgaW4gdGhlIFN1cGFiYXNlICdwcm9maWxlcycgdGFibGUgd2l0aCBuZXcgc3Vic2NyaXB0aW9uIGRldGFpbHMuXG4gKlxuICogQHBhcmFtIHVzZXJJZCAtIFRoZSB1c2VyJ3MgSUQuXG4gKiBAcGFyYW0gbmV3Um9sZSAtIFRoZSBuZXcgcm9sZSB0byBhc3NpZ24gdG8gdGhlIHVzZXIuXG4gKiBAcGFyYW0gZXhwaXJ5RGF0ZUlTTyAtIFRoZSBJU08gc3RyaW5nIG9mIHRoZSBzdWJzY3JpcHRpb24gZXhwaXJ5IGRhdGUuXG4gKi9cbmNvbnN0IHVwZGF0ZVVzZXJQcm9maWxlV2l0aFN1YnNjcmlwdGlvbiA9IGFzeW5jIChcbiAgdXNlcklkOiBzdHJpbmcsXG4gIG5ld1JvbGU6IFVzZXJSb2xlLFxuICBleHBpcnlEYXRlSVNPOiBzdHJpbmdcbik6IFByb21pc2U8dm9pZD4gPT4ge1xuICBjb25zdCB7IGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgIC5mcm9tKCdwcm9maWxlcycpXG4gICAgLnVwZGF0ZSh7XG4gICAgICByb2xlOiBuZXdSb2xlLFxuICAgICAgc3Vic2NyaXB0aW9uX3N0YXR1czogJ2FjdGl2ZScsXG4gICAgICAvLyBNYXJrIHRoZSB1c2VyIGFzIGhhdmluZyBjb21wbGV0ZWQgcGF5bWVudCBzbyBVSSBkb2VzIG5vdCBzaG93IOKAnFRyaWFs4oCdIGJhbm5lcnNcbiAgICAgIHBheW1lbnRfc3RhdHVzOiAncGFpZCcsXG4gICAgICBzdWJzY3JpcHRpb25fZXhwaXJ5OiBleHBpcnlEYXRlSVNPLFxuICAgICAgdXBkYXRlZF9hdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgIH0pXG4gICAgLmVxKCdpZCcsIHVzZXJJZCk7XG5cbiAgaWYgKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgdXBkYXRpbmcgdXNlciBwcm9maWxlIHdpdGggc3Vic2NyaXB0aW9uOicsIGVycm9yKTtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byB1cGRhdGUgdXNlciBwcm9maWxlIGFmdGVyIHBheW1lbnQuJyk7XG4gIH1cbn07XG5cbi8qKlxuICogTG9ncyBhIHBheW1lbnQgdHJhbnNhY3Rpb24gdG8gdGhlICdwYXltZW50cycgdGFibGUgaW4gU3VwYWJhc2UuXG4gKlxuICogQHBhcmFtIHBheW1lbnREYXRhIC0gVGhlIHBheW1lbnQgZGV0YWlscyB0byBsb2cuXG4gKi9cbmNvbnN0IGxvZ1BheW1lbnQgPSBhc3luYyAocGF5bWVudERhdGE6IFBheW1lbnRMb2cpOiBQcm9taXNlPHZvaWQ+ID0+IHtcbiAgY29uc3QgeyBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2UuZnJvbSgncGF5bWVudHMnKS5pbnNlcnQocGF5bWVudERhdGEpO1xuXG4gIGlmIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGxvZ2dpbmcgcGF5bWVudCB0cmFuc2FjdGlvbjonLCBlcnJvcik7XG4gICAgLy8gVGhpcyBpcyBhIG5vbi1jcml0aWNhbCBlcnJvciBmb3IgdGhlIHVzZXIgZmxvdywgYnV0IGltcG9ydGFudCBmb3IgYW5hbHl0aWNzL2RlYnVnZ2luZy5cbiAgfVxufTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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