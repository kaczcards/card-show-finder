a5804711435ed2c36adf705feabae681
import { env as _env } from "expo/virtual/env";
var _Constants$expoConfig, _Constants$expoConfig2;
function cov_1sukd5hs0x() {
  var path = "/Users/kevin/card-show-finder/src/supabase.ts";
  var hash = "c1310d9a60b4cfdfcd576074153217f3913cef64";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/supabase.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 20
        },
        end: {
          line: 6,
          column: 106
        }
      },
      "1": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 7,
          column: 119
        }
      },
      "2": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 20,
          column: 2
        }
      },
      "3": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 32,
          column: 1
        }
      },
      "4": {
        start: {
          line: 28,
          column: 2
        },
        end: {
          line: 31,
          column: 4
        }
      },
      "5": {
        start: {
          line: 43,
          column: 24
        },
        end: {
          line: 50,
          column: 2
        }
      },
      "6": {
        start: {
          line: 56,
          column: 24
        },
        end: {
          line: 56,
          column: 41
        }
      },
      "7": {
        start: {
          line: 65,
          column: 37
        },
        end: {
          line: 72,
          column: 1
        }
      },
      "8": {
        start: {
          line: 66,
          column: 2
        },
        end: {
          line: 71,
          column: 3
        }
      },
      "9": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 64
        }
      },
      "10": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 66
        }
      },
      "11": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 17
        }
      },
      "12": {
        start: {
          line: 78,
          column: 27
        },
        end: {
          line: 85,
          column: 1
        }
      },
      "13": {
        start: {
          line: 79,
          column: 2
        },
        end: {
          line: 83,
          column: 3
        }
      },
      "14": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 82,
          column: 6
        }
      },
      "15": {
        start: {
          line: 84,
          column: 2
        },
        end: {
          line: 84,
          column: 27
        }
      },
      "16": {
        start: {
          line: 91,
          column: 38
        },
        end: {
          line: 101,
          column: 1
        }
      },
      "17": {
        start: {
          line: 92,
          column: 2
        },
        end: {
          line: 99,
          column: 5
        }
      },
      "18": {
        start: {
          line: 100,
          column: 2
        },
        end: {
          line: 100,
          column: 27
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 65,
            column: 37
          },
          end: {
            line: 65,
            column: 38
          }
        },
        loc: {
          start: {
            line: 65,
            column: 52
          },
          end: {
            line: 72,
            column: 1
          }
        },
        line: 65
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 78,
            column: 27
          },
          end: {
            line: 78,
            column: 28
          }
        },
        loc: {
          start: {
            line: 78,
            column: 33
          },
          end: {
            line: 85,
            column: 1
          }
        },
        line: 78
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 91,
            column: 38
          },
          end: {
            line: 91,
            column: 39
          }
        },
        loc: {
          start: {
            line: 91,
            column: 44
          },
          end: {
            line: 101,
            column: 1
          }
        },
        line: 91
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 6,
            column: 56
          }
        }, {
          start: {
            line: 6,
            column: 60
          },
          end: {
            line: 6,
            column: 100
          }
        }, {
          start: {
            line: 6,
            column: 104
          },
          end: {
            line: 6,
            column: 106
          }
        }],
        line: 6
      },
      "1": {
        loc: {
          start: {
            line: 7,
            column: 24
          },
          end: {
            line: 7,
            column: 119
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 7,
            column: 24
          },
          end: {
            line: 7,
            column: 65
          }
        }, {
          start: {
            line: 7,
            column: 69
          },
          end: {
            line: 7,
            column: 113
          }
        }, {
          start: {
            line: 7,
            column: 117
          },
          end: {
            line: 7,
            column: 119
          }
        }],
        line: 7
      },
      "2": {
        loc: {
          start: {
            line: 17,
            column: 22
          },
          end: {
            line: 17,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 22
          },
          end: {
            line: 17,
            column: 33
          }
        }, {
          start: {
            line: 17,
            column: 37
          },
          end: {
            line: 17,
            column: 46
          }
        }],
        line: 17
      },
      "3": {
        loc: {
          start: {
            line: 18,
            column: 22
          },
          end: {
            line: 18,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 22
          },
          end: {
            line: 18,
            column: 50
          }
        }, {
          start: {
            line: 18,
            column: 54
          },
          end: {
            line: 18,
            column: 63
          }
        }],
        line: 18
      },
      "4": {
        loc: {
          start: {
            line: 26,
            column: 0
          },
          end: {
            line: 32,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 0
          },
          end: {
            line: 32,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "5": {
        loc: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 16
          }
        }, {
          start: {
            line: 26,
            column: 20
          },
          end: {
            line: 26,
            column: 36
          }
        }],
        line: 26
      },
      "6": {
        loc: {
          start: {
            line: 67,
            column: 19
          },
          end: {
            line: 67,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 19
          },
          end: {
            line: 67,
            column: 36
          }
        }, {
          start: {
            line: 67,
            column: 40
          },
          end: {
            line: 67,
            column: 62
          }
        }],
        line: 67
      },
      "7": {
        loc: {
          start: {
            line: 79,
            column: 2
          },
          end: {
            line: 83,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 2
          },
          end: {
            line: 83,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c1310d9a60b4cfdfcd576074153217f3913cef64"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1sukd5hs0x = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1sukd5hs0x();
import { createClient } from '@supabase/supabase-js';
import AsyncStorage from '@react-native-async-storage/async-storage';
import Constants from 'expo-constants';
var supabaseUrl = (cov_1sukd5hs0x().s[0]++, (cov_1sukd5hs0x().b[0][0]++, _env.EXPO_PUBLIC_SUPABASE_URL) || (cov_1sukd5hs0x().b[0][1]++, (_Constants$expoConfig = Constants.expoConfig) == null || (_Constants$expoConfig = _Constants$expoConfig.extra) == null ? void 0 : _Constants$expoConfig.supabaseUrl) || (cov_1sukd5hs0x().b[0][2]++, ''));
var supabaseAnonKey = (cov_1sukd5hs0x().s[1]++, (cov_1sukd5hs0x().b[1][0]++, _env.EXPO_PUBLIC_SUPABASE_ANON_KEY) || (cov_1sukd5hs0x().b[1][1]++, (_Constants$expoConfig2 = Constants.expoConfig) == null || (_Constants$expoConfig2 = _Constants$expoConfig2.extra) == null ? void 0 : _Constants$expoConfig2.supabaseAnonKey) || (cov_1sukd5hs0x().b[1][2]++, ''));
cov_1sukd5hs0x().s[2]++;
console.log('\n================= [SUPABASE CONFIG] =================\n' + `• SUPABASE URL : ${(cov_1sukd5hs0x().b[2][0]++, supabaseUrl) || (cov_1sukd5hs0x().b[2][1]++, '<EMPTY>')}\n` + `• ANON KEY     : ${(cov_1sukd5hs0x().b[3][0]++, supabaseAnonKey == null ? void 0 : supabaseAnonKey.slice(0, 8)) || (cov_1sukd5hs0x().b[3][1]++, '<EMPTY>')}…\n` + '====================================================\n');
cov_1sukd5hs0x().s[3]++;
if ((cov_1sukd5hs0x().b[5][0]++, !supabaseUrl) || (cov_1sukd5hs0x().b[5][1]++, !supabaseAnonKey)) {
  cov_1sukd5hs0x().b[4][0]++;
  cov_1sukd5hs0x().s[4]++;
  console.error('[Supabase] Missing configuration. ' + 'Ensure EXPO_PUBLIC_SUPABASE_URL and EXPO_PUBLIC_SUPABASE_ANON_KEY are set.');
} else {
  cov_1sukd5hs0x().b[4][1]++;
}
var supabaseSingleton = (cov_1sukd5hs0x().s[5]++, createClient(supabaseUrl, supabaseAnonKey, {
  auth: {
    storage: AsyncStorage,
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: false
  }
}));
export var supabase = (cov_1sukd5hs0x().s[6]++, supabaseSingleton);
cov_1sukd5hs0x().s[7]++;
export var isSupabaseInitialized = function isSupabaseInitialized() {
  cov_1sukd5hs0x().f[0]++;
  cov_1sukd5hs0x().s[8]++;
  try {
    cov_1sukd5hs0x().s[9]++;
    return Boolean((cov_1sukd5hs0x().b[6][0]++, supabaseSingleton) && (cov_1sukd5hs0x().b[6][1]++, supabaseSingleton.auth));
  } catch (err) {
    cov_1sukd5hs0x().s[10]++;
    console.error('[Supabase] initialization check failed:', err);
    cov_1sukd5hs0x().s[11]++;
    return false;
  }
};
cov_1sukd5hs0x().s[12]++;
export var getSupabase = function getSupabase() {
  cov_1sukd5hs0x().f[1]++;
  cov_1sukd5hs0x().s[13]++;
  if (!isSupabaseInitialized()) {
    cov_1sukd5hs0x().b[7][0]++;
    cov_1sukd5hs0x().s[14]++;
    throw new Error('[Supabase] Client not initialised – check environment variables.');
  } else {
    cov_1sukd5hs0x().b[7][1]++;
  }
  cov_1sukd5hs0x().s[15]++;
  return supabaseSingleton;
};
cov_1sukd5hs0x().s[16]++;
export var recreateSupabaseClient = function recreateSupabaseClient() {
  cov_1sukd5hs0x().f[2]++;
  cov_1sukd5hs0x().s[17]++;
  supabaseSingleton = createClient(supabaseUrl, supabaseAnonKey, {
    auth: {
      storage: AsyncStorage,
      autoRefreshToken: true,
      persistSession: true,
      detectSessionInUrl: false
    }
  });
  cov_1sukd5hs0x().s[18]++;
  return supabaseSingleton;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjcmVhdGVDbGllbnQiLCJBc3luY1N0b3JhZ2UiLCJDb25zdGFudHMiLCJzdXBhYmFzZVVybCIsImNvdl8xc3VrZDVoczB4IiwicyIsImIiLCJfZW52IiwiRVhQT19QVUJMSUNfU1VQQUJBU0VfVVJMIiwiX0NvbnN0YW50cyRleHBvQ29uZmlnIiwiZXhwb0NvbmZpZyIsImV4dHJhIiwic3VwYWJhc2VBbm9uS2V5IiwiRVhQT19QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkiLCJfQ29uc3RhbnRzJGV4cG9Db25maWcyIiwiY29uc29sZSIsImxvZyIsInNsaWNlIiwiZXJyb3IiLCJzdXBhYmFzZVNpbmdsZXRvbiIsImF1dGgiLCJzdG9yYWdlIiwiYXV0b1JlZnJlc2hUb2tlbiIsInBlcnNpc3RTZXNzaW9uIiwiZGV0ZWN0U2Vzc2lvbkluVXJsIiwic3VwYWJhc2UiLCJpc1N1cGFiYXNlSW5pdGlhbGl6ZWQiLCJmIiwiQm9vbGVhbiIsImVyciIsImdldFN1cGFiYXNlIiwiRXJyb3IiLCJyZWNyZWF0ZVN1cGFiYXNlQ2xpZW50Il0sInNvdXJjZXMiOlsic3VwYWJhc2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ2xpZW50IH0gZnJvbSAnQHN1cGFiYXNlL3N1cGFiYXNlLWpzJztcbmltcG9ydCBBc3luY1N0b3JhZ2UgZnJvbSAnQHJlYWN0LW5hdGl2ZS1hc3luYy1zdG9yYWdlL2FzeW5jLXN0b3JhZ2UnO1xuaW1wb3J0IENvbnN0YW50cyBmcm9tICdleHBvLWNvbnN0YW50cyc7XG5cbi8vIFN1cGFiYXNlIGNvbmZpZ3VyYXRpb24gLSBpZGVhbGx5IGZyb20gZW52aXJvbm1lbnQgdmFyaWFibGVzXG5jb25zdCBzdXBhYmFzZVVybCA9IHByb2Nlc3MuZW52LkVYUE9fUFVCTElDX1NVUEFCQVNFX1VSTCB8fCBDb25zdGFudHMuZXhwb0NvbmZpZz8uZXh0cmE/LnN1cGFiYXNlVXJsIHx8ICcnO1xuY29uc3Qgc3VwYWJhc2VBbm9uS2V5ID0gcHJvY2Vzcy5lbnYuRVhQT19QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkgfHwgQ29uc3RhbnRzLmV4cG9Db25maWc/LmV4dHJhPy5zdXBhYmFzZUFub25LZXkgfHwgJyc7XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAg8J+UjSBESUFHTk9TVElDUyDigJMgUFJJTlQgU1VQQUJBU0UgQ1JFRFMgSU4gREVWICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vLyBOT1RFOiBUaGVzZSB2YWx1ZXMgYXJlICoqcHVibGljKiogKGFub24ga2V5ICYgcHJvamVjdCBVUkwpIHNvIGl0J3Mgc2FmZVxuLy8gdG8gbG9nIHRoZW0gZm9yIGRlYnVnZ2luZy4gIFJlbW92ZSBvciB3cmFwIGJlaGluZCBhbiBlbnbigJBndWFyZCBiZWZvcmVcbi8vIHNoaXBwaW5nIHByb2R1Y3Rpb24gYnVpbGRzIGlmIGRlc2lyZWQuXG5jb25zb2xlLmxvZyhcbiAgJ1xcbj09PT09PT09PT09PT09PT09IFtTVVBBQkFTRSBDT05GSUddID09PT09PT09PT09PT09PT09XFxuJyArXG4gIGDigKIgU1VQQUJBU0UgVVJMIDogJHtzdXBhYmFzZVVybCB8fCAnPEVNUFRZPid9XFxuYCArXG4gIGDigKIgQU5PTiBLRVkgICAgIDogJHtzdXBhYmFzZUFub25LZXk/LnNsaWNlKDAsIDgpIHx8ICc8RU1QVFk+J33igKZcXG5gICtcbiAgJz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cXG4nXG4pO1xuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogMS4gR3VhcmQtcmFpbHMgLyBjb25maWd1cmF0aW9uIHZhbGlkYXRpb24gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cbmlmICghc3VwYWJhc2VVcmwgfHwgIXN1cGFiYXNlQW5vbktleSkge1xuICAvLyBGYWlsIGZhc3Qg4oCTIHJ1bm5pbmcgd2l0aCBhIGJyb2tlbiBjbGllbnQgbGVhZHMgdG8gc3VidGxlIGJ1Z3MgbGF0ZXJcbiAgY29uc29sZS5lcnJvcihcbiAgICAnW1N1cGFiYXNlXSBNaXNzaW5nIGNvbmZpZ3VyYXRpb24uICcgK1xuICAgICAgJ0Vuc3VyZSBFWFBPX1BVQkxJQ19TVVBBQkFTRV9VUkwgYW5kIEVYUE9fUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZIGFyZSBzZXQuJ1xuICApO1xufVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogMi4gU2luZ2xldG9uIGNsaWVudCBjcmVhdGlvbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cbi8qKlxuICogSW50ZXJuYWwgaG9sZGVyIGZvciB0aGUgU3VwYWJhc2Ugc2luZ2xldG9uLlxuICogV2Uga2VlcCBpdCBpbiBhIGBsZXRgIHNvIHRlc3RzIChvciBhIGxvZ291dCBmbG93KSBjYW4gZm9yY2UtcmVjcmVhdGUgaXRcbiAqIHZpYSBgcmVjcmVhdGVTdXBhYmFzZUNsaWVudCgpYC5cbiAqL1xubGV0IHN1cGFiYXNlU2luZ2xldG9uID0gY3JlYXRlQ2xpZW50KHN1cGFiYXNlVXJsLCBzdXBhYmFzZUFub25LZXksIHtcbiAgYXV0aDoge1xuICAgIHN0b3JhZ2U6IEFzeW5jU3RvcmFnZSxcbiAgICBhdXRvUmVmcmVzaFRva2VuOiB0cnVlLFxuICAgIHBlcnNpc3RTZXNzaW9uOiB0cnVlLFxuICAgIGRldGVjdFNlc3Npb25JblVybDogZmFsc2UsIC8vIHdlIG5ldmVyIHVzZSBicm93c2VyLWJhc2VkIGF1dGggcmVkaXJlY3RzXG4gIH0sXG59KTtcblxuLyoqXG4gKiBQdWJsaWMgYWNjZXNzb3IgdXNlZCB0aHJvdWdob3V0IHRoZSBjb2RlYmFzZSB0byBhdm9pZCBpbXBvcnRpbmdcbiAqIGBjcmVhdGVDbGllbnRgIGVsc2V3aGVyZS4gIEFsd2F5cyByZXR1cm5zICoqdGhlIHNhbWUqKiBpbnN0YW5jZS5cbiAqL1xuZXhwb3J0IGNvbnN0IHN1cGFiYXNlID0gc3VwYWJhc2VTaW5nbGV0b247XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAzLiBIZWxwZXIgdXRpbGl0aWVzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuLyoqXG4gKiBEZWZlbnNpdmUgY2hlY2sgdXNlZCBieSBsZWdhY3kgY29kZSAoYGlzU3VwYWJhc2VJbml0aWFsaXplZCgpYCkuXG4gKi9cbmV4cG9ydCBjb25zdCBpc1N1cGFiYXNlSW5pdGlhbGl6ZWQgPSAoKTogYm9vbGVhbiA9PiB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIEJvb2xlYW4oc3VwYWJhc2VTaW5nbGV0b24gJiYgc3VwYWJhc2VTaW5nbGV0b24uYXV0aCk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1tTdXBhYmFzZV0gaW5pdGlhbGl6YXRpb24gY2hlY2sgZmFpbGVkOicsIGVycik7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59O1xuXG4vKipcbiAqIFByb3ZpZGVzIHRoZSBzaW5nbGV0b24gY2xpZW50IG9yIHRocm93cyBhIGRlc2NyaXB0aXZlIGVycm9yLlxuICogUHJlZmVyIHRoaXMgaGVscGVyIGluIG5ld2x5LXdyaXR0ZW4gY29kZSBzbyBlcnJvcnMgc3VyZmFjZSBlYXJseS5cbiAqL1xuZXhwb3J0IGNvbnN0IGdldFN1cGFiYXNlID0gKCkgPT4ge1xuICBpZiAoIWlzU3VwYWJhc2VJbml0aWFsaXplZCgpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgJ1tTdXBhYmFzZV0gQ2xpZW50IG5vdCBpbml0aWFsaXNlZCDigJMgY2hlY2sgZW52aXJvbm1lbnQgdmFyaWFibGVzLidcbiAgICApO1xuICB9XG4gIHJldHVybiBzdXBhYmFzZVNpbmdsZXRvbjtcbn07XG5cbi8qKlxuICogT3B0aW9uYWwgaGVscGVyIHRvICoqcmUqKmNyZWF0ZSB0aGUgY2xpZW50IChlLmcuIGFmdGVyIGxvZ291dCB0byBwdXJnZVxuICogY2FjaGVkIGF1dGggc3RhdGUsIG9yIGluc2lkZSBFMkUgdGVzdHMpLiAgTW9zdCBhcHBzIHdpbGwgbmV2ZXIgbmVlZCB0aGlzLlxuICovXG5leHBvcnQgY29uc3QgcmVjcmVhdGVTdXBhYmFzZUNsaWVudCA9ICgpID0+IHtcbiAgc3VwYWJhc2VTaW5nbGV0b24gPSBjcmVhdGVDbGllbnQoc3VwYWJhc2VVcmwsIHN1cGFiYXNlQW5vbktleSwge1xuICAgIGF1dGg6IHtcbiAgICAgIHN0b3JhZ2U6IEFzeW5jU3RvcmFnZSxcbiAgICAgIGF1dG9SZWZyZXNoVG9rZW46IHRydWUsXG4gICAgICBwZXJzaXN0U2Vzc2lvbjogdHJ1ZSxcbiAgICAgIGRldGVjdFNlc3Npb25JblVybDogZmFsc2UsXG4gICAgfSxcbiAgfSk7XG4gIHJldHVybiBzdXBhYmFzZVNpbmdsZXRvbjtcbn07XG5cbi8vIEV4cG9ydCB0eXBlcyBmcm9tIFN1cGFiYXNlIGZvciB1c2UgaW4gb3RoZXIgZmlsZXNcbmV4cG9ydCB0eXBlIHsgVXNlciwgU2Vzc2lvbiB9IGZyb20gJ0BzdXBhYmFzZS9zdXBhYmFzZS1qcyc7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsU0FBU0EsWUFBWSxRQUFRLHVCQUF1QjtBQUNwRCxPQUFPQyxZQUFZLE1BQU0sMkNBQTJDO0FBQ3BFLE9BQU9DLFNBQVMsTUFBTSxnQkFBZ0I7QUFHdEMsSUFBTUMsV0FBVyxJQUFBQyxjQUFBLEdBQUFDLENBQUEsT0FBRyxDQUFBRCxjQUFBLEdBQUFF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