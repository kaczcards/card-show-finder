7af4584a8fe2d1d1069df24120c39512
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
function cov_1avokyrpyh() {
  var path = "/Users/kevin/card-show-finder/src/screens/Auth/ForgotPasswordScreen.tsx";
  var hash = "3b7d6d57af56eefe8e56222c849f76237cef452d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/screens/Auth/ForgotPasswordScreen.tsx",
    statementMap: {
      "0": {
        start: {
          line: 29,
          column: 46
        },
        end: {
          line: 167,
          column: 1
        }
      },
      "1": {
        start: {
          line: 31,
          column: 28
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "2": {
        start: {
          line: 34,
          column: 51
        },
        end: {
          line: 34,
          column: 60
        }
      },
      "3": {
        start: {
          line: 35,
          column: 31
        },
        end: {
          line: 35,
          column: 40
        }
      },
      "4": {
        start: {
          line: 38,
          column: 24
        },
        end: {
          line: 52,
          column: 3
        }
      },
      "5": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "6": {
        start: {
          line: 40,
          column: 6
        },
        end: {
          line: 40,
          column: 62
        }
      },
      "7": {
        start: {
          line: 41,
          column: 6
        },
        end: {
          line: 41,
          column: 19
        }
      },
      "8": {
        start: {
          line: 45,
          column: 23
        },
        end: {
          line: 45,
          column: 51
        }
      },
      "9": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "10": {
        start: {
          line: 47,
          column: 6
        },
        end: {
          line: 47,
          column: 65
        }
      },
      "11": {
        start: {
          line: 48,
          column: 6
        },
        end: {
          line: 48,
          column: 19
        }
      },
      "12": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 16
        }
      },
      "13": {
        start: {
          line: 55,
          column: 30
        },
        end: {
          line: 70,
          column: 3
        }
      },
      "14": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "15": {
        start: {
          line: 57,
          column: 6
        },
        end: {
          line: 57,
          column: 13
        }
      },
      "16": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 69,
          column: 5
        }
      },
      "17": {
        start: {
          line: 61,
          column: 6
        },
        end: {
          line: 61,
          column: 33
        }
      },
      "18": {
        start: {
          line: 62,
          column: 6
        },
        end: {
          line: 66,
          column: 8
        }
      },
      "19": {
        start: {
          line: 65,
          column: 38
        },
        end: {
          line: 65,
          column: 66
        }
      },
      "20": {
        start: {
          line: 68,
          column: 6
        },
        end: {
          line: 68,
          column: 63
        }
      },
      "21": {
        start: {
          line: 73,
          column: 25
        },
        end: {
          line: 76,
          column: 3
        }
      },
      "22": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 74,
          column: 17
        }
      },
      "23": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 75,
          column: 32
        }
      },
      "24": {
        start: {
          line: 78,
          column: 2
        },
        end: {
          line: 166,
          column: 4
        }
      },
      "25": {
        start: {
          line: 90,
          column: 27
        },
        end: {
          line: 90,
          column: 50
        }
      },
      "26": {
        start: {
          line: 147,
          column: 31
        },
        end: {
          line: 147,
          column: 54
        }
      },
      "27": {
        start: {
          line: 169,
          column: 15
        },
        end: {
          line: 284,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 29,
            column: 46
          },
          end: {
            line: 29,
            column: 47
          }
        },
        loc: {
          start: {
            line: 29,
            column: 66
          },
          end: {
            line: 167,
            column: 1
          }
        },
        line: 29
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 38,
            column: 24
          },
          end: {
            line: 38,
            column: 25
          }
        },
        loc: {
          start: {
            line: 38,
            column: 30
          },
          end: {
            line: 52,
            column: 3
          }
        },
        line: 38
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 55,
            column: 30
          },
          end: {
            line: 55,
            column: 31
          }
        },
        loc: {
          start: {
            line: 55,
            column: 42
          },
          end: {
            line: 70,
            column: 3
          }
        },
        line: 55
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 65,
            column: 32
          },
          end: {
            line: 65,
            column: 33
          }
        },
        loc: {
          start: {
            line: 65,
            column: 38
          },
          end: {
            line: 65,
            column: 66
          }
        },
        line: 65
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 73,
            column: 25
          },
          end: {
            line: 73,
            column: 26
          }
        },
        loc: {
          start: {
            line: 73,
            column: 63
          },
          end: {
            line: 76,
            column: 3
          }
        },
        line: 73
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 90,
            column: 21
          },
          end: {
            line: 90,
            column: 22
          }
        },
        loc: {
          start: {
            line: 90,
            column: 27
          },
          end: {
            line: 90,
            column: 50
          }
        },
        line: 90
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 147,
            column: 25
          },
          end: {
            line: 147,
            column: 26
          }
        },
        loc: {
          start: {
            line: 147,
            column: 31
          },
          end: {
            line: 147,
            column: 54
          }
        },
        line: 147
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "1": {
        loc: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "2": {
        loc: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "3": {
        loc: {
          start: {
            line: 68,
            column: 34
          },
          end: {
            line: 68,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 34
          },
          end: {
            line: 68,
            column: 39
          }
        }, {
          start: {
            line: 68,
            column: 43
          },
          end: {
            line: 68,
            column: 61
          }
        }],
        line: 68
      },
      "4": {
        loc: {
          start: {
            line: 82,
            column: 18
          },
          end: {
            line: 82,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 82,
            column: 42
          },
          end: {
            line: 82,
            column: 51
          }
        }, {
          start: {
            line: 82,
            column: 54
          },
          end: {
            line: 82,
            column: 62
          }
        }],
        line: 82
      },
      "5": {
        loc: {
          start: {
            line: 110,
            column: 13
          },
          end: {
            line: 114,
            column: 20
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 111,
            column: 14
          },
          end: {
            line: 113,
            column: 21
          }
        }, {
          start: {
            line: 114,
            column: 16
          },
          end: {
            line: 114,
            column: 20
          }
        }],
        line: 110
      },
      "6": {
        loc: {
          start: {
            line: 133,
            column: 37
          },
          end: {
            line: 133,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 133,
            column: 37
          },
          end: {
            line: 133,
            column: 46
          }
        }, {
          start: {
            line: 133,
            column: 50
          },
          end: {
            line: 133,
            column: 71
          }
        }],
        line: 133
      },
      "7": {
        loc: {
          start: {
            line: 137,
            column: 15
          },
          end: {
            line: 141,
            column: 15
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 138,
            column: 16
          },
          end: {
            line: 138,
            column: 50
          }
        }, {
          start: {
            line: 140,
            column: 16
          },
          end: {
            line: 140,
            column: 70
          }
        }],
        line: 137
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3b7d6d57af56eefe8e56222c849f76237cef452d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1avokyrpyh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1avokyrpyh();
import React, { useState } from 'react';
import { View, Text, TextInput, TouchableOpacity, StyleSheet, ActivityIndicator, KeyboardAvoidingView, Platform, ScrollView, Alert, Image } from 'react-native';
import { SafeAreaView } from 'react-native-safe-area-context';
import { Ionicons } from '@expo/vector-icons';
import { useAuth } from '../../contexts/AuthContext';
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
cov_1avokyrpyh().s[0]++;
var ForgotPasswordScreen = function ForgotPasswordScreen(_ref) {
  var navigation = _ref.navigation;
  cov_1avokyrpyh().f[0]++;
  var _ref2 = (cov_1avokyrpyh().s[1]++, useState('')),
    _ref3 = _slicedToArray(_ref2, 2),
    email = _ref3[0],
    setEmail = _ref3[1];
  var _ref4 = (cov_1avokyrpyh().s[2]++, useAuth()),
    authState = _ref4.authState,
    resetPassword = _ref4.resetPassword,
    clearError = _ref4.clearError;
  var _ref5 = (cov_1avokyrpyh().s[3]++, authState),
    isLoading = _ref5.isLoading,
    error = _ref5.error;
  cov_1avokyrpyh().s[4]++;
  var validateEmail = function validateEmail() {
    cov_1avokyrpyh().f[1]++;
    cov_1avokyrpyh().s[5]++;
    if (!email) {
      cov_1avokyrpyh().b[0][0]++;
      cov_1avokyrpyh().s[6]++;
      Alert.alert('Error', 'Please enter your email address');
      cov_1avokyrpyh().s[7]++;
      return false;
    } else {
      cov_1avokyrpyh().b[0][1]++;
    }
    var emailRegex = (cov_1avokyrpyh().s[8]++, /^[^\s@]+@[^\s@]+\.[^\s@]+$/);
    cov_1avokyrpyh().s[9]++;
    if (!emailRegex.test(email)) {
      cov_1avokyrpyh().b[1][0]++;
      cov_1avokyrpyh().s[10]++;
      Alert.alert('Error', 'Please enter a valid email address');
      cov_1avokyrpyh().s[11]++;
      return false;
    } else {
      cov_1avokyrpyh().b[1][1]++;
    }
    cov_1avokyrpyh().s[12]++;
    return true;
  };
  cov_1avokyrpyh().s[13]++;
  var handleResetPassword = function () {
    var _ref6 = _asyncToGenerator(function* () {
      cov_1avokyrpyh().f[2]++;
      cov_1avokyrpyh().s[14]++;
      if (!validateEmail()) {
        cov_1avokyrpyh().b[2][0]++;
        cov_1avokyrpyh().s[15]++;
        return;
      } else {
        cov_1avokyrpyh().b[2][1]++;
      }
      cov_1avokyrpyh().s[16]++;
      try {
        cov_1avokyrpyh().s[17]++;
        yield resetPassword(email);
        cov_1avokyrpyh().s[18]++;
        Alert.alert('Password Reset Email Sent', 'Please check your email for instructions to reset your password.', [{
          text: 'OK',
          onPress: function onPress() {
            cov_1avokyrpyh().f[3]++;
            cov_1avokyrpyh().s[19]++;
            return navigation.navigate('Login');
          }
        }]);
      } catch (err) {
        cov_1avokyrpyh().s[20]++;
        Alert.alert('Reset Failed', (cov_1avokyrpyh().b[3][0]++, error) || (cov_1avokyrpyh().b[3][1]++, 'Please try again'));
      }
    });
    return function handleResetPassword() {
      return _ref6.apply(this, arguments);
    };
  }();
  cov_1avokyrpyh().s[21]++;
  var handleNavigate = function handleNavigate(screen) {
    cov_1avokyrpyh().f[4]++;
    cov_1avokyrpyh().s[22]++;
    clearError();
    cov_1avokyrpyh().s[23]++;
    navigation.navigate(screen);
  };
  cov_1avokyrpyh().s[24]++;
  return _jsx(SafeAreaView, {
    style: styles.safeArea,
    children: _jsx(KeyboardAvoidingView, {
      style: styles.container,
      behavior: Platform.OS === 'ios' ? (cov_1avokyrpyh().b[4][0]++, 'padding') : (cov_1avokyrpyh().b[4][1]++, 'height'),
      children: _jsxs(ScrollView, {
        contentContainerStyle: styles.scrollContent,
        keyboardShouldPersistTaps: "handled",
        children: [_jsx(TouchableOpacity, {
          style: styles.backButton,
          onPress: function onPress() {
            cov_1avokyrpyh().f[5]++;
            cov_1avokyrpyh().s[25]++;
            return handleNavigate('Login');
          },
          children: _jsx(Ionicons, {
            name: "arrow-back",
            size: 24,
            color: "#007AFF"
          })
        }), _jsxs(View, {
          style: styles.logoContainer,
          children: [_jsx(Image, {
            source: require('../../../assets/splash-icon.png'),
            style: styles.logo,
            resizeMode: "contain"
          }), _jsx(Text, {
            style: styles.appName,
            children: "Card Show Finder"
          })]
        }), _jsxs(View, {
          style: styles.formContainer,
          children: [_jsx(Text, {
            style: styles.title,
            children: "Reset Password"
          }), _jsx(Text, {
            style: styles.subtitle,
            children: "Enter your email address and we'll send you instructions to reset your password."
          }), error ? (cov_1avokyrpyh().b[5][0]++, _jsx(View, {
            style: styles.errorContainer,
            children: _jsx(Text, {
              style: styles.errorText,
              children: error
            })
          })) : (cov_1avokyrpyh().b[5][1]++, null), _jsxs(View, {
            style: styles.inputContainer,
            children: [_jsx(Ionicons, {
              name: "mail-outline",
              size: 20,
              color: "#666",
              style: styles.inputIcon
            }), _jsx(TextInput, {
              style: styles.input,
              placeholder: "Email",
              placeholderTextColor: "#999",
              value: email,
              onChangeText: setEmail,
              autoCapitalize: "none",
              keyboardType: "email-address",
              autoCorrect: false,
              editable: !isLoading,
              autoFocus: true
            })]
          }), _jsx(TouchableOpacity, {
            style: [styles.button, (cov_1avokyrpyh().b[6][0]++, isLoading) && (cov_1avokyrpyh().b[6][1]++, styles.buttonDisabled)],
            onPress: handleResetPassword,
            disabled: isLoading,
            children: isLoading ? (cov_1avokyrpyh().b[7][0]++, _jsx(ActivityIndicator, {
              color: "#fff"
            })) : (cov_1avokyrpyh().b[7][1]++, _jsx(Text, {
              style: styles.buttonText,
              children: "Send Reset Link"
            }))
          }), _jsxs(View, {
            style: styles.loginContainer,
            children: [_jsx(Text, {
              style: styles.loginText,
              children: "Remember your password? "
            }), _jsx(TouchableOpacity, {
              onPress: function onPress() {
                cov_1avokyrpyh().f[6]++;
                cov_1avokyrpyh().s[26]++;
                return handleNavigate('Login');
              },
              disabled: isLoading,
              children: _jsx(Text, {
                style: styles.loginLink,
                children: "Sign In"
              })
            })]
          })]
        }), _jsx(View, {
          style: styles.miniLogoContainer,
          children: _jsx(Image, {
            source: require('../../../assets/splash-icon.png'),
            style: styles.miniLogo,
            resizeMode: "contain"
          })
        })]
      })
    })
  });
};
var styles = (cov_1avokyrpyh().s[27]++, StyleSheet.create({
  safeArea: {
    flex: 1,
    backgroundColor: '#fff'
  },
  container: {
    flex: 1
  },
  scrollContent: {
    flexGrow: 1,
    padding: 20
  },
  backButton: {
    padding: 8,
    alignSelf: 'flex-start',
    marginBottom: 16
  },
  logoContainer: {
    alignItems: 'center',
    marginBottom: 50
  },
  logo: {
    width: 100,
    height: 100,
    marginBottom: 10
  },
  appName: {
    fontSize: 22,
    fontWeight: 'bold',
    color: '#FF6A00'
  },
  miniLogoContainer: {
    alignItems: 'center',
    marginTop: 40,
    marginBottom: 10
  },
  miniLogo: {
    width: 60,
    height: 60
  },
  formContainer: {
    width: '100%'
  },
  title: {
    fontSize: 28,
    fontWeight: 'bold',
    marginBottom: 8,
    color: '#333'
  },
  subtitle: {
    fontSize: 16,
    color: '#666',
    marginBottom: 24
  },
  errorContainer: {
    backgroundColor: '#FEE2E2',
    padding: 10,
    borderRadius: 8,
    marginBottom: 16
  },
  errorText: {
    color: '#DC2626',
    fontSize: 14
  },
  inputContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    borderWidth: 1,
    borderColor: '#ddd',
    borderRadius: 8,
    marginBottom: 24,
    paddingHorizontal: 10,
    height: 50
  },
  inputIcon: {
    marginRight: 10
  },
  input: {
    flex: 1,
    height: 50,
    color: '#333',
    fontSize: 16
  },
  button: {
    backgroundColor: '#007AFF',
    borderRadius: 8,
    height: 50,
    alignItems: 'center',
    justifyContent: 'center',
    marginBottom: 16
  },
  buttonDisabled: {
    backgroundColor: '#99C9FF'
  },
  buttonText: {
    color: '#fff',
    fontSize: 16,
    fontWeight: 'bold'
  },
  loginContainer: {
    flexDirection: 'row',
    justifyContent: 'center',
    marginTop: 16
  },
  loginText: {
    color: '#666',
    fontSize: 14
  },
  loginLink: {
    color: '#007AFF',
    fontSize: 14,
    fontWeight: 'bold'
  }
}));
export default ForgotPasswordScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,