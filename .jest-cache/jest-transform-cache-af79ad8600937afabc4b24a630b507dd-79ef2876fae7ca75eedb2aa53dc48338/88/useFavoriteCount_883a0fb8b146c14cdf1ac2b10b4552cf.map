{"version":3,"names":["useState","useCallback","useEffect","useAuth","supabase","cov_3qi10g90u","s","useFavoriteCount","f","_ref","authState","_ref2","user","_ref3","_ref4","_slicedToArray","count","setCount","refresh","_asyncToGenerator","id","b","_ref8","_ref6","from","select","eq","single","data","error","__DEV__","console","warn","message","code","_ref7","head","rowCount","countError","favoriteCount","favorite_shows_count","err"],"sources":["useFavoriteCount.ts"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport { supabase } from '../../../supabase';\n\nexport const useFavoriteCount = () => {\n  const { authState } = useAuth();\n  const { user } = authState;\n  const [count, setCount] = useState(0);\n\n  const refresh = useCallback(async () => {\n    if (!user?.id) {\n      setCount(0);\n      return;\n    }\n\n    try {\n      // Try to read the counter column directly\n      const { data, error } = await supabase\n        .from('profiles')\n        .select('favorite_shows_count')\n        .eq('id', user.id)\n        .single();\n\n      if (error) {\n        if (__DEV__) {\n          console.warn(\n            '[useFavoriteCount] Error fetching favorite_shows_count:',\n            error.message\n          );\n        }\n\n        // 42703 = column does not exist -> migration not applied yet\n        if (error.code === '42703') {\n          if (__DEV__) {\n            console.warn(\n              '[useFavoriteCount] Falling back to counting records in user_favorite_shows'\n            );\n          }\n\n          // Fallback – count rows in join table\n          const {\n            count: rowCount,\n            error: countError,\n          } = await supabase\n            .from('user_favorite_shows')\n            .select('*', { count: 'exact', head: true })\n            .eq('user_id', user.id);\n\n          if (countError) {\n            console.error(\n              '[useFavoriteCount] Error counting favorites:',\n              countError\n            );\n            return;\n          }\n\n          setCount(rowCount || 0);\n          return;\n        }\n\n        console.error(\n          '[useFavoriteCount] Unexpected error fetching favorite_shows_count:',\n          error\n        );\n        return;\n      }\n\n      // Success path – column exists\n      const favoriteCount = data?.favorite_shows_count ?? 0;\n      if (__DEV__) {\n        console.warn('[useFavoriteCount] Fetched favorite_shows_count:', favoriteCount);\n      }\n      setCount(favoriteCount);\n    } catch (err) {\n      console.error('[useFavoriteCount] Unexpected error:', err);\n    }\n  }, [user?.id]);\n\n  useEffect(() => {\n    refresh();\n  }, [refresh, user?.id]);\n\n  return { count, refresh };\n};\n\nexport default useFavoriteCount;\n"],"mappingsxD,SAASC,OAAO,QAAQ,+BAA+B;AACvD,SAASC,QAAQ,QAAQ,mBAAmB;AAACC,aAAA,GAAAC,CAAA;AAE7C,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;EAAAF,aAAA,GAAAG,CAAA;EACpC,IAAAC,IAAA,IAAAJ,aAAA,GAAAC,CAAA,OAAsBH,OAAO,CAAC,CAAC;IAAvBO,SAAS,GAAAD,IAAA,CAATC,SAAS;EACjB,IAAAC,KAAA,IAAAN,aAAA,GAAAC,CAAA,OAAiBI,SAAS;IAAlBE,IAAI,GAAAD,KAAA,CAAJC,IAAI;EACZ,IAAAC,KAAA,IAAAR,aAAA,GAAAC,CAAA,OAA0BN,QAAQ,CAAC,CAAC,CAAC;IAAAc,KAAA,GAAAC,cAAA,CAAAF,KAAA;IAA9BG,KAAK,GAAAF,KAAA;IAAEG,QAAQ,GAAAH,KAAA;EAEtB,IAAMI,OAAO,IAAAb,aAAA,GAAAC,CAAA,OAAGL,WAAW,CAAAkB,iBAAA,CAAC,aAAY;IAAAd,aAAA,GAAAG,CAAA;IAAAH,aAAA,GAAAC,CAAA;IACtC,IAAI,EAACM,IAAI,YAAJA,IAAI,CAAEQ,EAAE,GAAE;MAAAf,aAAA,GAAAgB,CAAA;MAAAhB,aAAA,GAAAC,CAAA;MACbW,QAAQ,CAAC,CAAC,CAAC;MAACZ,aAAA,GAAAC,CAAA;MACZ;IACF,CAAC;MAAAD,aAAA,GAAAgB,CAAA;IAAA;IAAAhB,aAAA,GAAAC,CAAA;IAED,IAAI;MAAA,IAAAgB,KAAA;MAEF,IAAAC,KAAA,IAAAlB,aAAA,GAAAC,CAAA,aAA8BF,QAAQ,CACnCoB,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,sBAAsB,CAAC,CAC9BC,EAAE,CAAC,IAAI,EAAEd,IAAI,CAACQ,EAAE,CAAC,CACjBO,MAAM,CAAC,CAAC;QAJHC,IAAI,GAAAL,KAAA,CAAJK,IAAI;QAAEC,KAAK,GAAAN,KAAA,CAALM,KAAK;MAIPxB,aAAA,GAAAC,CAAA;MAEZ,IAAIuB,KAAK,EAAE;QAAAxB,aAAA,GAAAgB,CAAA;QAAAhB,aAAA,GAAAC,CAAA;QACT,IAAIwB,OAAO,EAAE;UAAAzB,aAAA,GAAAgB,CAAA;UAAAhB,aAAA,GAAAC,CAAA;UACXyB,OAAO,CAACC,IAAI,CACV,yDAAyD,EACzDH,KAAK,CAACI,OACR,CAAC;QACH,CAAC;UAAA5B,aAAA,GAAAgB,CAAA;QAAA;QAAAhB,aAAA,GAAAC,CAAA;QAGD,IAAIuB,KAAK,CAACK,IAAI,KAAK,OAAO,EAAE;UAAA7B,aAAA,GAAAgB,CAAA;UAAAhB,aAAA,GAAAC,CAAA;UAC1B,IAAIwB,OAAO,EAAE;YAAAzB,aAAA,GAAAgB,CAAA;YAAAhB,aAAA,GAAAC,CAAA;YACXyB,OAAO,CAACC,IAAI,CACV,4EACF,CAAC;UACH,CAAC;YAAA3B,aAAA,GAAAgB,CAAA;UAAA;UAGD,IAAAc,KAAA,IAAA9B,aAAA,GAAAC,CAAA,cAGUF,QAAQ,CACfoB,IAAI,CAAC,qBAAqB,CAAC,CAC3BC,MAAM,CAAC,GAAG,EAAE;cAAET,KAAK,EAAE,OAAO;cAAEoB,IAAI,EAAE;YAAK,CAAC,CAAC,CAC3CV,EAAE,CAAC,SAAS,EAAEd,IAAI,CAACQ,EAAE,CAAC;YALhBiB,QAAQ,GAAAF,KAAA,CAAfnB,KAAK;YACEsB,UAAU,GAAAH,KAAA,CAAjBN,KAAK;UAImBxB,aAAA,GAAAC,CAAA;UAE1B,IAAIgC,UAAU,EAAE;YAAAjC,aAAA,GAAAgB,CAAA;YAAAhB,aAAA,GAAAC,CAAA;YACdyB,OAAO,CAACF,KAAK,CACX,8CAA8C,EAC9CS,UACF,CAAC;YAACjC,aAAA,GAAAC,CAAA;YACF;UACF,CAAC;YAAAD,aAAA,GAAAgB,CAAA;UAAA;UAAAhB,aAAA,GAAAC,CAAA;UAEDW,QAAQ,CAAC,CAAAZ,aAAA,GAAAgB,CAAA,UAAAgB,QAAQ,MAAAhC,aAAA,GAAAgB,CAAA,UAAI,CAAC,EAAC;UAAChB,aAAA,GAAAC,CAAA;UACxB;QACF,CAAC;UAAAD,aAAA,GAAAgB,CAAA;QAAA;QAAAhB,aAAA,GAAAC,CAAA;QAEDyB,OAAO,CAACF,KAAK,CACX,oEAAoE,EACpEA,KACF,CAAC;QAACxB,aAAA,GAAAC,CAAA;QACF;MACF,CAAC;QAAAD,aAAA,GAAAgB,CAAA;MAAA;MAGD,IAAMkB,aAAa,IAAAlC,aAAA,GAAAC,CAAA,SAAAgB,KAAA,IAAAjB,aAAA,GAAAgB,CAAA,UAAGO,IAAI,oBAAJA,IAAI,CAAEY,oBAAoB,aAAAlB,KAAA,IAAAjB,aAAA,GAAAgB,CAAA,UAAI,CAAC;MAAChB,aAAA,GAAAC,CAAA;MACtD,IAAIwB,OAAO,EAAE;QAAAzB,aAAA,GAAAgB,CAAA;QAAAhB,aAAA,GAAAC,CAAA;QACXyB,OAAO,CAACC,IAAI,CAAC,kDAAkD,EAAEO,aAAa,CAAC;MACjF,CAAC;QAAAlC,aAAA,GAAAgB,CAAA;MAAA;MAAAhB,aAAA,GAAAC,CAAA;MACDW,QAAQ,CAACsB,aAAa,CAAC;IACzB,CAAC,CAAC,OAAOE,GAAG,EAAE;MAAApC,aAAA,GAAAC,CAAA;MACZyB,OAAO,CAACF,KAAK,CAAC,sCAAsC,EAAEY,GAAG,CAAC;IAC5D;EACF,CAAC,GAAE,CAAC7B,IAAI,oBAAJA,IAAI,CAAEQ,EAAE,CAAC,CAAC;EAACf,aAAA,GAAAC,CAAA;EAEfJ,SAAS,CAAC,YAAM;IAAAG,aAAA,GAAAG,CAAA;IAAAH,aAAA,GAAAC,CAAA;IACdY,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,CAACA,OAAO,EAAEN,IAAI,oBAAJA,IAAI,CAAEQ,EAAE,CAAC,CAAC;EAACf,aAAA,GAAAC,CAAA;EAExB,OAAO;IAAEU,KAAK,EAALA,KAAK;IAAEE,OAAO,EAAPA;EAAQ,CAAC;AAC3B,CAAC;AAED,eAAeX,gBAAgB","ignoreList":[]}