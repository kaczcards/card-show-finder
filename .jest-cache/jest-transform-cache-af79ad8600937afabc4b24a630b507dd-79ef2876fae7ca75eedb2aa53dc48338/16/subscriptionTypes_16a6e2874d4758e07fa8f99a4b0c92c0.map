{"version":3,"names":["SubscriptionPlanType","SubscriptionDuration","SUBSCRIPTION_PLANS","cov_1qpb250xb1","s","id","type","DEALER","name","description","price","duration","MONTHLY","trialDays","features","ANNUAL","isPopular","ORGANIZER","_calculateExpiryDate","plan","f","now","Date","MS_IN_DAY","daysToAdd","b","getTime"],"sources":["subscriptionTypes.ts"],"sourcesContent":["// src/services/subscriptionTypes.ts\nimport { UserRole as _UserRole } from './userRoleService';\n\n/**\n * Subscription plan types available in the app\n */\nexport enum SubscriptionPlanType {\n  DEALER = 'dealer',\n  ORGANIZER = 'organizer'\n}\n\n/**\n * Subscription plan durations in months\n */\nexport enum SubscriptionDuration {\n  MONTHLY = 1,\n  ANNUAL = 12\n}\n\n/**\n * Subscription plan details\n */\nexport interface SubscriptionPlan {\n  id: string;\n  type: SubscriptionPlanType;\n  name: string;\n  description: string;\n  price: number; // Price in USD\n  duration: SubscriptionDuration; // Duration in months\n  features: string[];\n  /** Free-trial length in days (_optional, e.g. 7-day trial) */\n  trialDays?: number;\n  isPopular?: boolean;\n}\n\n/**\n * Represents the outcome of a payment operation.\n */\nexport interface StripePaymentResult {\n  success: boolean;\n  error?: string;\n  transactionId?: string;\n}\n\n/**\n * Available subscription plans\n */\nexport const SUBSCRIPTION_PLANS: SubscriptionPlan[] = [\n  /* ---------- MVP DEALER ---------- */\n  {\n    id: 'mvp-dealer-monthly',\n    type: SubscriptionPlanType.DEALER,\n    name: 'MVP Dealer Monthly',\n    description: 'Preview inventory, interact with collectors & more (_monthly)',\n    price: 29,\n    duration: SubscriptionDuration.MONTHLY,\n    trialDays: 7,\n    features: [\n      'Preview inventory for upcoming shows you attend',\n      'Interact with collectors planning to attend those shows',\n      'View want lists of collectors within a 25-mile radius',\n      'Share external links (_website, _eBay, WhatNot, etc.)',\n      'Dealer badge on profile'\n    ]\n  },\n  {\n    id: 'mvp-dealer-annual',\n    type: SubscriptionPlanType.DEALER,\n    name: 'MVP Dealer Annual',\n    description: 'Save 25% with annual billing',\n    price: 261, // $29 × 12 × 0.75\n    duration: SubscriptionDuration.ANNUAL,\n    trialDays: 7,\n    isPopular: true,\n    features: [\n      'Preview inventory for upcoming shows you attend',\n      'Interact with collectors planning to attend those shows',\n      'View want lists of collectors within a 25-mile radius',\n      'Share external links (_website, _eBay, WhatNot, etc.)',\n      'Dealer badge on profile',\n      'Featured dealer status'\n    ]\n  },\n\n  /* ---------- SHOW ORGANIZER ---------- */\n  {\n    id: 'show-organizer-monthly',\n    type: SubscriptionPlanType.ORGANIZER,\n    name: 'Show Organizer Monthly',\n    description: 'Organize shows & engage dealers/collectors (monthly)',\n    price: 49,\n    duration: SubscriptionDuration.MONTHLY,\n    trialDays: 7,\n    features: [\n      'All MVP Dealer features',\n      'Claim ownership of recurring shows',\n      'Message dealers & collectors before/after shows',\n      'Edit upcoming show times, dates & details',\n      'Respond to collector reviews',\n      'Promote your events',\n      'Access attendee data'\n    ]\n  },\n  {\n    id: 'show-organizer-annual',\n    type: SubscriptionPlanType.ORGANIZER,\n    name: 'Show Organizer Annual',\n    description: 'Save 25% with annual billing',\n    price: 441, // $49 × 12 × 0.75\n    duration: SubscriptionDuration.ANNUAL,\n    trialDays: 7,\n    isPopular: true,\n    features: [\n      'All MVP Dealer features',\n      'Claim ownership of recurring shows',\n      'Message dealers & collectors before/after shows',\n      'Edit upcoming show times, dates & details',\n      'Respond to collector reviews',\n      'Promote your events',\n      'Access attendee data',\n      'Featured show placement'\n    ]\n  }\n];\n\n/**\n * Helper function to calculate the expiry date based on the current date and plan duration\n * @param plan The subscription plan\n * @returns Date when the subscription will expire\n */\nexport const _calculateExpiryDate = (plan: SubscriptionPlan): Date => {\n  // Current time reference\n  const now = new Date();\n\n  // We purposely ignore `trialDays` here; trials are applied in higher-level\n  // payment logic.  This helper strictly converts *paid* duration → expiry.\n  const MS_IN_DAY = 24 * 60 * 60 * 1000;\n\n  let daysToAdd: number;\n  switch (plan.duration) {\n    case SubscriptionDuration.ANNUAL:\n      daysToAdd = 365;           // Fixed-length year to keep math explicit\n      break;\n    case SubscriptionDuration.MONTHLY:\n    default:\n      daysToAdd = 30;            // Fixed-length “billing month”\n      break;\n  }\n\n  return new Date(now.getTime() + daysToAdd * MS_IN_DAY);\n};\n"],"mappings":"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","ignoreList":[]}