b737835fad4e33238229d86a200057c5
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import { env as _env } from "expo/virtual/env";
function cov_2672s7zqdg() {
  var path = "/Users/kevin/card-show-finder/src/services/stripePaymentService.ts";
  var hash = "536987c896635b46e5428b85e53362ad7dd3ac9b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/services/stripePaymentService.ts",
    statementMap: {
      "0": {
        start: {
          line: 46,
          column: 31
        },
        end: {
          line: 46,
          column: 77
        }
      },
      "1": {
        start: {
          line: 47,
          column: 35
        },
        end: {
          line: 47,
          column: 111
        }
      },
      "2": {
        start: {
          line: 56,
          column: 32
        },
        end: {
          line: 63,
          column: 1
        }
      },
      "3": {
        start: {
          line: 57,
          column: 2
        },
        end: {
          line: 60,
          column: 3
        }
      },
      "4": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 97
        }
      },
      "5": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 17
        }
      },
      "6": {
        start: {
          line: 62,
          column: 2
        },
        end: {
          line: 62,
          column: 14
        }
      },
      "7": {
        start: {
          line: 75,
          column: 49
        },
        end: {
          line: 163,
          column: 1
        }
      },
      "8": {
        start: {
          line: 81,
          column: 15
        },
        end: {
          line: 81,
          column: 60
        }
      },
      "9": {
        start: {
          line: 81,
          column: 44
        },
        end: {
          line: 81,
          column: 59
        }
      },
      "10": {
        start: {
          line: 82,
          column: 2
        },
        end: {
          line: 84,
          column: 3
        }
      },
      "11": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 83,
          column: 69
        }
      },
      "12": {
        start: {
          line: 86,
          column: 2
        },
        end: {
          line: 162,
          column: 3
        }
      },
      "13": {
        start: {
          line: 88,
          column: 21
        },
        end: {
          line: 100,
          column: 6
        }
      },
      "14": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 105,
          column: 5
        }
      },
      "15": {
        start: {
          line: 103,
          column: 24
        },
        end: {
          line: 103,
          column: 45
        }
      },
      "16": {
        start: {
          line: 104,
          column: 6
        },
        end: {
          line: 104,
          column: 77
        }
      },
      "17": {
        start: {
          line: 107,
          column: 77
        },
        end: {
          line: 107,
          column: 98
        }
      },
      "18": {
        start: {
          line: 110,
          column: 33
        },
        end: {
          line: 117,
          column: 6
        }
      },
      "19": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 131,
          column: 5
        }
      },
      "20": {
        start: {
          line: 120,
          column: 6
        },
        end: {
          line: 120,
          column: 65
        }
      },
      "21": {
        start: {
          line: 121,
          column: 6
        },
        end: {
          line: 129,
          column: 9
        }
      },
      "22": {
        start: {
          line: 130,
          column: 6
        },
        end: {
          line: 130,
          column: 86
        }
      },
      "23": {
        start: {
          line: 134,
          column: 36
        },
        end: {
          line: 134,
          column: 63
        }
      },
      "24": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 152,
          column: 5
        }
      },
      "25": {
        start: {
          line: 138,
          column: 6
        },
        end: {
          line: 140,
          column: 7
        }
      },
      "26": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 66
        }
      },
      "27": {
        start: {
          line: 141,
          column: 6
        },
        end: {
          line: 141,
          column: 71
        }
      },
      "28": {
        start: {
          line: 142,
          column: 6
        },
        end: {
          line: 150,
          column: 9
        }
      },
      "29": {
        start: {
          line: 151,
          column: 6
        },
        end: {
          line: 151,
          column: 82
        }
      },
      "30": {
        start: {
          line: 155,
          column: 4
        },
        end: {
          line: 155,
          column: 65
        }
      },
      "31": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 157,
          column: 59
        }
      },
      "32": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 160,
          column: 73
        }
      },
      "33": {
        start: {
          line: 161,
          column: 4
        },
        end: {
          line: 161,
          column: 84
        }
      },
      "34": {
        start: {
          line: 173,
          column: 41
        },
        end: {
          line: 220,
          column: 1
        }
      },
      "35": {
        start: {
          line: 178,
          column: 2
        },
        end: {
          line: 219,
          column: 3
        }
      },
      "36": {
        start: {
          line: 187,
          column: 23
        },
        end: {
          line: 187,
          column: 48
        }
      },
      "37": {
        start: {
          line: 190,
          column: 20
        },
        end: {
          line: 190,
          column: 90
        }
      },
      "38": {
        start: {
          line: 193,
          column: 4
        },
        end: {
          line: 193,
          column: 87
        }
      },
      "39": {
        start: {
          line: 196,
          column: 4
        },
        end: {
          line: 203,
          column: 7
        }
      },
      "40": {
        start: {
          line: 206,
          column: 4
        },
        end: {
          line: 206,
          column: 81
        }
      },
      "41": {
        start: {
          line: 210,
          column: 4
        },
        end: {
          line: 218,
          column: 7
        }
      },
      "42": {
        start: {
          line: 229,
          column: 42
        },
        end: {
          line: 250,
          column: 1
        }
      },
      "43": {
        start: {
          line: 234,
          column: 20
        },
        end: {
          line: 244,
          column: 21
        }
      },
      "44": {
        start: {
          line: 246,
          column: 2
        },
        end: {
          line: 249,
          column: 3
        }
      },
      "45": {
        start: {
          line: 247,
          column: 4
        },
        end: {
          line: 247,
          column: 75
        }
      },
      "46": {
        start: {
          line: 248,
          column: 4
        },
        end: {
          line: 248,
          column: 68
        }
      },
      "47": {
        start: {
          line: 257,
          column: 19
        },
        end: {
          line: 264,
          column: 1
        }
      },
      "48": {
        start: {
          line: 258,
          column: 20
        },
        end: {
          line: 258,
          column: 71
        }
      },
      "49": {
        start: {
          line: 260,
          column: 2
        },
        end: {
          line: 263,
          column: 3
        }
      },
      "50": {
        start: {
          line: 261,
          column: 4
        },
        end: {
          line: 261,
          column: 63
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 56,
            column: 32
          },
          end: {
            line: 56,
            column: 33
          }
        },
        loc: {
          start: {
            line: 56,
            column: 47
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 56
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 75,
            column: 49
          },
          end: {
            line: 75,
            column: 50
          }
        },
        loc: {
          start: {
            line: 80,
            column: 35
          },
          end: {
            line: 163,
            column: 1
          }
        },
        line: 80
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 81,
            column: 39
          },
          end: {
            line: 81,
            column: 40
          }
        },
        loc: {
          start: {
            line: 81,
            column: 44
          },
          end: {
            line: 81,
            column: 59
          }
        },
        line: 81
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 173,
            column: 41
          },
          end: {
            line: 173,
            column: 42
          }
        },
        loc: {
          start: {
            line: 177,
            column: 20
          },
          end: {
            line: 220,
            column: 1
          }
        },
        line: 177
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 229,
            column: 42
          },
          end: {
            line: 229,
            column: 43
          }
        },
        loc: {
          start: {
            line: 233,
            column: 20
          },
          end: {
            line: 250,
            column: 1
          }
        },
        line: 233
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 257,
            column: 19
          },
          end: {
            line: 257,
            column: 20
          }
        },
        loc: {
          start: {
            line: 257,
            column: 69
          },
          end: {
            line: 264,
            column: 1
          }
        },
        line: 257
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 57,
            column: 2
          },
          end: {
            line: 60,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 2
          },
          end: {
            line: 60,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "1": {
        loc: {
          start: {
            line: 82,
            column: 2
          },
          end: {
            line: 84,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 2
          },
          end: {
            line: 84,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "2": {
        loc: {
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "3": {
        loc: {
          start: {
            line: 104,
            column: 22
          },
          end: {
            line: 104,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 22
          },
          end: {
            line: 104,
            column: 37
          }
        }, {
          start: {
            line: 104,
            column: 41
          },
          end: {
            line: 104,
            column: 75
          }
        }],
        line: 104
      },
      "4": {
        loc: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 131,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 131,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "5": {
        loc: {
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "6": {
        loc: {
          start: {
            line: 138,
            column: 6
          },
          end: {
            line: 140,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 6
          },
          end: {
            line: 140,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "7": {
        loc: {
          start: {
            line: 161,
            column: 36
          },
          end: {
            line: 161,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 161,
            column: 36
          },
          end: {
            line: 161,
            column: 49
          }
        }, {
          start: {
            line: 161,
            column: 53
          },
          end: {
            line: 161,
            column: 81
          }
        }],
        line: 161
      },
      "8": {
        loc: {
          start: {
            line: 190,
            column: 20
          },
          end: {
            line: 190,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 190,
            column: 45
          },
          end: {
            line: 190,
            column: 64
          }
        }, {
          start: {
            line: 190,
            column: 67
          },
          end: {
            line: 190,
            column: 90
          }
        }],
        line: 190
      },
      "9": {
        loc: {
          start: {
            line: 246,
            column: 2
          },
          end: {
            line: 249,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 2
          },
          end: {
            line: 249,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "10": {
        loc: {
          start: {
            line: 260,
            column: 2
          },
          end: {
            line: 263,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 2
          },
          end: {
            line: 263,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 260
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "536987c896635b46e5428b85e53362ad7dd3ac9b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2672s7zqdg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2672s7zqdg();
import { supabase } from '../supabase';
import { SUBSCRIPTION_PLANS, calculateExpiryDate } from './subscriptionTypes';
import { UserRole } from './userRoleService';
var STRIPE_PUBLISHABLE_KEY = (cov_2672s7zqdg().s[0]++, _env.EXPO_PUBLIC_STRIPE_PUBLISHABLE_KEY);
var SUPABASE_EDGE_FUNCTION_URL = (cov_2672s7zqdg().s[1]++, `${_env.EXPO_PUBLIC_SUPABASE_URL}/functions/v1/create-payment-intent`);
cov_2672s7zqdg().s[2]++;
export var initializeStripe = function initializeStripe() {
  cov_2672s7zqdg().f[0]++;
  cov_2672s7zqdg().s[3]++;
  if (!STRIPE_PUBLISHABLE_KEY) {
    cov_2672s7zqdg().b[0][0]++;
    cov_2672s7zqdg().s[4]++;
    console.error('Stripe publishable key is not set. Please check your environment variables.');
    cov_2672s7zqdg().s[5]++;
    return false;
  } else {
    cov_2672s7zqdg().b[0][1]++;
  }
  cov_2672s7zqdg().s[6]++;
  return true;
};
cov_2672s7zqdg().s[7]++;
export var createPaymentSheetForSubscription = function () {
  var _ref = _asyncToGenerator(function* (userId, planId, initPaymentSheet, presentPaymentSheet) {
    cov_2672s7zqdg().f[1]++;
    var plan = (cov_2672s7zqdg().s[8]++, SUBSCRIPTION_PLANS.find(function (p) {
      cov_2672s7zqdg().f[2]++;
      cov_2672s7zqdg().s[9]++;
      return p.id === planId;
    }));
    cov_2672s7zqdg().s[10]++;
    if (!plan) {
      cov_2672s7zqdg().b[1][0]++;
      cov_2672s7zqdg().s[11]++;
      return {
        success: false,
        error: 'Subscription plan not found.'
      };
    } else {
      cov_2672s7zqdg().b[1][1]++;
    }
    cov_2672s7zqdg().s[12]++;
    try {
      var _supabase$auth$getSes;
      var response = (cov_2672s7zqdg().s[13]++, yield fetch(SUPABASE_EDGE_FUNCTION_URL, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${(_supabase$auth$getSes = supabase.auth.getSession()) == null || (_supabase$auth$getSes = _supabase$auth$getSes.data.session) == null ? void 0 : _supabase$auth$getSes.access_token}`
        },
        body: JSON.stringify({
          amount: plan.price * 100,
          currency: 'usd',
          userId: userId,
          planId: plan.id
        })
      }));
      cov_2672s7zqdg().s[14]++;
      if (!response.ok) {
        cov_2672s7zqdg().b[2][0]++;
        var errorBody = (cov_2672s7zqdg().s[15]++, yield response.json());
        cov_2672s7zqdg().s[16]++;
        throw new Error((cov_2672s7zqdg().b[3][0]++, errorBody.error) || (cov_2672s7zqdg().b[3][1]++, 'Failed to create payment intent.'));
      } else {
        cov_2672s7zqdg().b[2][1]++;
      }
      var _ref2 = (cov_2672s7zqdg().s[17]++, yield response.json()),
        paymentIntent = _ref2.paymentIntent,
        ephemeralKey = _ref2.ephemeralKey,
        customer = _ref2.customer;
      var _ref3 = (cov_2672s7zqdg().s[18]++, yield initPaymentSheet({
          merchantDisplayName: 'Card Show Finder, LLC.',
          customerId: customer,
          customerEphemeralKeySecret: ephemeralKey,
          paymentIntentClientSecret: paymentIntent,
          allowsDelayedPaymentMethods: true,
          returnURL: 'cardshowfinder://stripe-redirect'
        })),
        initError = _ref3.error;
      cov_2672s7zqdg().s[19]++;
      if (initError) {
        cov_2672s7zqdg().b[4][0]++;
        cov_2672s7zqdg().s[20]++;
        console.error('Stripe initPaymentSheet error:', initError);
        cov_2672s7zqdg().s[21]++;
        yield logPayment({
          user_id: userId,
          plan_id: plan.id,
          amount: plan.price,
          currency: 'usd',
          status: 'failed',
          transaction_id: paymentIntent,
          error_message: `Init Error: ${initError.message}`
        });
        cov_2672s7zqdg().s[22]++;
        return {
          success: false,
          error: `Initialization failed: ${initError.message}`
        };
      } else {
        cov_2672s7zqdg().b[4][1]++;
      }
      var _ref4 = (cov_2672s7zqdg().s[23]++, yield presentPaymentSheet()),
        presentError = _ref4.error;
      cov_2672s7zqdg().s[24]++;
      if (presentError) {
        cov_2672s7zqdg().b[5][0]++;
        cov_2672s7zqdg().s[25]++;
        if (presentError.code === 'Canceled') {
          cov_2672s7zqdg().b[6][0]++;
          cov_2672s7zqdg().s[26]++;
          return {
            success: false,
            error: 'Payment was canceled.'
          };
        } else {
          cov_2672s7zqdg().b[6][1]++;
        }
        cov_2672s7zqdg().s[27]++;
        console.error('Stripe presentPaymentSheet error:', presentError);
        cov_2672s7zqdg().s[28]++;
        yield logPayment({
          user_id: userId,
          plan_id: plan.id,
          amount: plan.price,
          currency: 'usd',
          status: 'failed',
          transaction_id: paymentIntent,
          error_message: `Present Error: ${presentError.message}`
        });
        cov_2672s7zqdg().s[29]++;
        return {
          success: false,
          error: `Payment failed: ${presentError.message}`
        };
      } else {
        cov_2672s7zqdg().b[5][1]++;
      }
      cov_2672s7zqdg().s[30]++;
      yield processSubscriptionUpdate(userId, plan, paymentIntent);
      cov_2672s7zqdg().s[31]++;
      return {
        success: true,
        transactionId: paymentIntent
      };
    } catch (error) {
      cov_2672s7zqdg().s[32]++;
      console.error('An unexpected error occurred during payment:', error);
      cov_2672s7zqdg().s[33]++;
      return {
        success: false,
        error: (cov_2672s7zqdg().b[7][0]++, error.message) || (cov_2672s7zqdg().b[7][1]++, 'An unknown error occurred.')
      };
    }
  });
  return function createPaymentSheetForSubscription(_x, _x2, _x3, _x4) {
    return _ref.apply(this, arguments);
  };
}();
cov_2672s7zqdg().s[34]++;
export var processSubscriptionUpdate = function () {
  var _ref5 = _asyncToGenerator(function* (userId, plan, transactionId) {
    cov_2672s7zqdg().f[3]++;
    cov_2672s7zqdg().s[35]++;
    try {
      var expiryDate = (cov_2672s7zqdg().s[36]++, calculateExpiryDate(plan));
      var newRole = (cov_2672s7zqdg().s[37]++, plan.type === 'dealer' ? (cov_2672s7zqdg().b[8][0]++, UserRole.MVP_DEALER) : (cov_2672s7zqdg().b[8][1]++, UserRole.SHOW_ORGANIZER));
      cov_2672s7zqdg().s[38]++;
      yield updateUserProfileWithSubscription(userId, newRole, expiryDate.toISOString());
      cov_2672s7zqdg().s[39]++;
      yield logPayment({
        user_id: userId,
        plan_id: plan.id,
        amount: plan.price,
        currency: 'usd',
        status: 'succeeded',
        transaction_id: transactionId
      });
    } catch (error) {
      cov_2672s7zqdg().s[40]++;
      console.error('Failed to process subscription update after payment:', error);
      cov_2672s7zqdg().s[41]++;
      yield logPayment({
        user_id: userId,
        plan_id: plan.id,
        amount: plan.price,
        currency: 'usd',
        status: 'failed',
        transaction_id: transactionId,
        error_message: 'Post-payment profile update failed.'
      });
    }
  });
  return function processSubscriptionUpdate(_x5, _x6, _x7) {
    return _ref5.apply(this, arguments);
  };
}();
cov_2672s7zqdg().s[42]++;
var updateUserProfileWithSubscription = function () {
  var _ref6 = _asyncToGenerator(function* (userId, newRole, expiryDateISO) {
    cov_2672s7zqdg().f[4]++;
    var _ref7 = (cov_2672s7zqdg().s[43]++, yield supabase.from('profiles').update({
        role: newRole,
        subscription_status: 'active',
        payment_status: 'paid',
        subscription_expiry: expiryDateISO,
        updated_at: new Date().toISOString()
      }).eq('id', userId)),
      error = _ref7.error;
    cov_2672s7zqdg().s[44]++;
    if (error) {
      cov_2672s7zqdg().b[9][0]++;
      cov_2672s7zqdg().s[45]++;
      console.error('Error updating user profile with subscription:', error);
      cov_2672s7zqdg().s[46]++;
      throw new Error('Failed to update user profile after payment.');
    } else {
      cov_2672s7zqdg().b[9][1]++;
    }
  });
  return function updateUserProfileWithSubscription(_x8, _x9, _x0) {
    return _ref6.apply(this, arguments);
  };
}();
cov_2672s7zqdg().s[47]++;
var logPayment = function () {
  var _ref8 = _asyncToGenerator(function* (paymentData) {
    cov_2672s7zqdg().f[5]++;
    var _ref9 = (cov_2672s7zqdg().s[48]++, yield supabase.from('payments').insert(paymentData)),
      error = _ref9.error;
    cov_2672s7zqdg().s[49]++;
    if (error) {
      cov_2672s7zqdg().b[10][0]++;
      cov_2672s7zqdg().s[50]++;
      console.error('Error logging payment transaction:', error);
    } else {
      cov_2672s7zqdg().b[10][1]++;
    }
  });
  return function logPayment(_x1) {
    return _ref8.apply(this, arguments);
  };
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,