3a77fd842643905b35373e2a063ef6bd
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
function cov_2jkwhs2ywk() {
  var path = "/Users/kevin/card-show-finder/src/hooks/useInfiniteShows.ts";
  var hash = "138d957aa0db1ce400f3141cf4a42e0ac7a050cb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/hooks/useInfiniteShows.ts",
    statementMap: {
      "0": {
        start: {
          line: 88,
          column: 32
        },
        end: {
          line: 230,
          column: 1
        }
      },
      "1": {
        start: {
          line: 99,
          column: 6
        },
        end: {
          line: 99,
          column: 12
        }
      },
      "2": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 122,
          column: 40
        }
      },
      "3": {
        start: {
          line: 124,
          column: 44
        },
        end: {
          line: 126,
          column: 47
        }
      },
      "4": {
        start: {
          line: 128,
          column: 2
        },
        end: {
          line: 135,
          column: 3
        }
      },
      "5": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 134,
          column: 6
        }
      },
      "6": {
        start: {
          line: 147,
          column: 6
        },
        end: {
          line: 198,
          column: 4
        }
      },
      "7": {
        start: {
          line: 162,
          column: 19
        },
        end: {
          line: 162,
          column: 41
        }
      },
      "8": {
        start: {
          line: 163,
          column: 48
        },
        end: {
          line: 174,
          column: 7
        }
      },
      "9": {
        start: {
          line: 177,
          column: 21
        },
        end: {
          line: 177,
          column: 57
        }
      },
      "10": {
        start: {
          line: 180,
          column: 6
        },
        end: {
          line: 182,
          column: 7
        }
      },
      "11": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 38
        }
      },
      "12": {
        start: {
          line: 184,
          column: 6
        },
        end: {
          line: 184,
          column: 20
        }
      },
      "13": {
        start: {
          line: 188,
          column: 6
        },
        end: {
          line: 190,
          column: 7
        }
      },
      "14": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 25
        }
      },
      "15": {
        start: {
          line: 193,
          column: 6
        },
        end: {
          line: 193,
          column: 49
        }
      },
      "16": {
        start: {
          line: 201,
          column: 18
        },
        end: {
          line: 203,
          column: 3
        }
      },
      "17": {
        start: {
          line: 202,
          column: 4
        },
        end: {
          line: 202,
          column: 20
        }
      },
      "18": {
        start: {
          line: 207,
          column: 4
        },
        end: {
          line: 207,
          column: 72
        }
      },
      "19": {
        start: {
          line: 207,
          column: 56
        },
        end: {
          line: 207,
          column: 65
        }
      },
      "20": {
        start: {
          line: 210,
          column: 21
        },
        end: {
          line: 210,
          column: 63
        }
      },
      "21": {
        start: {
          line: 213,
          column: 23
        },
        end: {
          line: 213,
          column: 96
        }
      },
      "22": {
        start: {
          line: 215,
          column: 2
        },
        end: {
          line: 229,
          column: 4
        }
      },
      "23": {
        start: {
          line: 220,
          column: 6
        },
        end: {
          line: 222,
          column: 7
        }
      },
      "24": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 221,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 88,
            column: 32
          },
          end: {
            line: 88,
            column: 33
          }
        },
        loc: {
          start: {
            line: 88,
            column: 86
          },
          end: {
            line: 230,
            column: 1
          }
        },
        line: 88
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 160,
            column: 13
          },
          end: {
            line: 160,
            column: 14
          }
        },
        loc: {
          start: {
            line: 160,
            column: 42
          },
          end: {
            line: 185,
            column: 5
          }
        },
        line: 160
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 186,
            column: 22
          },
          end: {
            line: 186,
            column: 23
          }
        },
        loc: {
          start: {
            line: 186,
            column: 58
          },
          end: {
            line: 194,
            column: 5
          }
        },
        line: 186
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 201,
            column: 18
          },
          end: {
            line: 201,
            column: 19
          }
        },
        loc: {
          start: {
            line: 201,
            column: 45
          },
          end: {
            line: 203,
            column: 3
          }
        },
        line: 201
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 207,
            column: 24
          },
          end: {
            line: 207,
            column: 25
          }
        },
        loc: {
          start: {
            line: 207,
            column: 56
          },
          end: {
            line: 207,
            column: 65
          }
        },
        line: 207
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 219,
            column: 19
          },
          end: {
            line: 219,
            column: 20
          }
        },
        loc: {
          start: {
            line: 219,
            column: 31
          },
          end: {
            line: 223,
            column: 5
          }
        },
        line: 219
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 91,
            column: 15
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 91,
            column: 13
          },
          end: {
            line: 91,
            column: 15
          }
        }],
        line: 91
      },
      "1": {
        loc: {
          start: {
            line: 92,
            column: 4
          },
          end: {
            line: 92,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 92,
            column: 16
          },
          end: {
            line: 92,
            column: 26
          }
        }],
        line: 92
      },
      "2": {
        loc: {
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 93,
            column: 69
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 93,
            column: 14
          },
          end: {
            line: 93,
            column: 69
          }
        }],
        line: 93
      },
      "3": {
        loc: {
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 97,
            column: 17
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 97,
            column: 15
          },
          end: {
            line: 97,
            column: 17
          }
        }],
        line: 97
      },
      "4": {
        loc: {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 98,
            column: 18
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 98,
            column: 14
          },
          end: {
            line: 98,
            column: 18
          }
        }],
        line: 98
      },
      "5": {
        loc: {
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 122,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 118,
            column: 15
          }
        }, {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 119,
            column: 44
          }
        }, {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 120,
            column: 45
          }
        }, {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 121,
            column: 39
          }
        }, {
          start: {
            line: 122,
            column: 4
          },
          end: {
            line: 122,
            column: 40
          }
        }],
        line: 118
      },
      "6": {
        loc: {
          start: {
            line: 124,
            column: 44
          },
          end: {
            line: 126,
            column: 47
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 125,
            column: 6
          },
          end: {
            line: 125,
            column: 17
          }
        }, {
          start: {
            line: 126,
            column: 6
          },
          end: {
            line: 126,
            column: 47
          }
        }],
        line: 124
      },
      "7": {
        loc: {
          start: {
            line: 128,
            column: 2
          },
          end: {
            line: 135,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 2
          },
          end: {
            line: 135,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "8": {
        loc: {
          start: {
            line: 160,
            column: 22
          },
          end: {
            line: 160,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 160,
            column: 34
          },
          end: {
            line: 160,
            column: 35
          }
        }],
        line: 160
      },
      "9": {
        loc: {
          start: {
            line: 162,
            column: 19
          },
          end: {
            line: 162,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 162,
            column: 19
          },
          end: {
            line: 162,
            column: 36
          }
        }, {
          start: {
            line: 162,
            column: 40
          },
          end: {
            line: 162,
            column: 41
          }
        }],
        line: 162
      },
      "10": {
        loc: {
          start: {
            line: 180,
            column: 6
          },
          end: {
            line: 182,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 6
          },
          end: {
            line: 182,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      },
      "11": {
        loc: {
          start: {
            line: 188,
            column: 6
          },
          end: {
            line: 190,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 6
          },
          end: {
            line: 190,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "12": {
        loc: {
          start: {
            line: 207,
            column: 4
          },
          end: {
            line: 207,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 207,
            column: 4
          },
          end: {
            line: 207,
            column: 66
          }
        }, {
          start: {
            line: 207,
            column: 70
          },
          end: {
            line: 207,
            column: 72
          }
        }],
        line: 207
      },
      "13": {
        loc: {
          start: {
            line: 210,
            column: 21
          },
          end: {
            line: 210,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 210,
            column: 21
          },
          end: {
            line: 210,
            column: 58
          }
        }, {
          start: {
            line: 210,
            column: 62
          },
          end: {
            line: 210,
            column: 63
          }
        }],
        line: 210
      },
      "14": {
        loc: {
          start: {
            line: 213,
            column: 23
          },
          end: {
            line: 213,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 213,
            column: 33
          },
          end: {
            line: 213,
            column: 89
          }
        }, {
          start: {
            line: 213,
            column: 92
          },
          end: {
            line: 213,
            column: 96
          }
        }],
        line: 213
      },
      "15": {
        loc: {
          start: {
            line: 213,
            column: 33
          },
          end: {
            line: 213,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 33
          },
          end: {
            line: 213,
            column: 63
          }
        }, {
          start: {
            line: 213,
            column: 67
          },
          end: {
            line: 213,
            column: 89
          }
        }],
        line: 213
      },
      "16": {
        loc: {
          start: {
            line: 220,
            column: 6
          },
          end: {
            line: 222,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 6
          },
          end: {
            line: 222,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "17": {
        loc: {
          start: {
            line: 220,
            column: 10
          },
          end: {
            line: 220,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 220,
            column: 10
          },
          end: {
            line: 220,
            column: 21
          }
        }, {
          start: {
            line: 220,
            column: 25
          },
          end: {
            line: 220,
            column: 44
          }
        }],
        line: 220
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0, 0, 0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "138d957aa0db1ce400f3141cf4a42e0ac7a050cb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2jkwhs2ywk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2jkwhs2ywk();
import { useInfiniteQuery } from '@tanstack/react-query';
import { getPaginatedShows } from '../services/showService';
cov_2jkwhs2ywk().s[0]++;
export var useInfiniteShows = function useInfiniteShows(params) {
  var _data$pages$;
  cov_2jkwhs2ywk().f[0]++;
  var _ref = (cov_2jkwhs2ywk().s[1]++, params),
    coordinates = _ref.coordinates,
    _ref$radius = _ref.radius,
    radius = _ref$radius === void 0 ? (cov_2jkwhs2ywk().b[0][0]++, 25) : _ref$radius,
    _ref$startDate = _ref.startDate,
    startDate = _ref$startDate === void 0 ? (cov_2jkwhs2ywk().b[1][0]++, new Date()) : _ref$startDate,
    _ref$endDate = _ref.endDate,
    endDate = _ref$endDate === void 0 ? (cov_2jkwhs2ywk().b[2][0]++, new Date(new Date().setDate(new Date().getDate() + 30))) : _ref$endDate,
    maxEntryFee = _ref.maxEntryFee,
    features = _ref.features,
    categories = _ref.categories,
    _ref$pageSize = _ref.pageSize,
    pageSize = _ref$pageSize === void 0 ? (cov_2jkwhs2ywk().b[3][0]++, 20) : _ref$pageSize,
    _ref$enabled = _ref.enabled,
    enabled = _ref$enabled === void 0 ? (cov_2jkwhs2ywk().b[4][0]++, true) : _ref$enabled;
  var isValidCoordinates = (cov_2jkwhs2ywk().s[2]++, (cov_2jkwhs2ywk().b[5][0]++, coordinates) && (cov_2jkwhs2ywk().b[5][1]++, typeof coordinates.latitude === 'number') && (cov_2jkwhs2ywk().b[5][2]++, typeof coordinates.longitude === 'number') && (cov_2jkwhs2ywk().b[5][3]++, !Number.isNaN(coordinates.latitude)) && (cov_2jkwhs2ywk().b[5][4]++, !Number.isNaN(coordinates.longitude)));
  var effectiveCoordinates = (cov_2jkwhs2ywk().s[3]++, isValidCoordinates ? (cov_2jkwhs2ywk().b[6][0]++, coordinates) : (cov_2jkwhs2ywk().b[6][1]++, {
    latitude: 39.9784,
    longitude: -86.118
  }));
  cov_2jkwhs2ywk().s[4]++;
  if (!isValidCoordinates) {
    cov_2jkwhs2ywk().b[7][0]++;
    cov_2jkwhs2ywk().s[5]++;
    console.warn('[useInfiniteShows] Invalid or missing coordinates supplied. ' + 'Falling back to default coordinates (Carmel, IN).', coordinates);
  } else {
    cov_2jkwhs2ywk().b[7][1]++;
  }
  var _ref2 = (cov_2jkwhs2ywk().s[6]++, useInfiniteQuery({
      queryKey: ['shows', 'infinite', {
        coordinates: effectiveCoordinates,
        radius: radius,
        startDate: startDate,
        endDate: endDate,
        maxEntryFee: maxEntryFee,
        features: features,
        categories: categories,
        pageSize: pageSize
      }],
      initialPageParam: 1,
      queryFn: function () {
        var _queryFn = _asyncToGenerator(function* (_ref3) {
          var _ref3$pageParam = _ref3.pageParam,
            pageParam = _ref3$pageParam === void 0 ? (cov_2jkwhs2ywk().b[8][0]++, 1) : _ref3$pageParam;
          cov_2jkwhs2ywk().f[1]++;
          var page = (cov_2jkwhs2ywk().s[7]++, (cov_2jkwhs2ywk().b[9][0]++, Number(pageParam)) || (cov_2jkwhs2ywk().b[9][1]++, 1));
          var queryParams = (cov_2jkwhs2ywk().s[8]++, {
            latitude: effectiveCoordinates.latitude,
            longitude: effectiveCoordinates.longitude,
            radius: radius,
            startDate: startDate,
            endDate: endDate,
            maxEntryFee: maxEntryFee,
            features: features,
            categories: categories,
            pageSize: pageSize,
            page: page
          });
          var result = (cov_2jkwhs2ywk().s[9]++, yield getPaginatedShows(queryParams));
          cov_2jkwhs2ywk().s[10]++;
          if (result.error) {
            cov_2jkwhs2ywk().b[10][0]++;
            cov_2jkwhs2ywk().s[11]++;
            throw new Error(result.error);
          } else {
            cov_2jkwhs2ywk().b[10][1]++;
          }
          cov_2jkwhs2ywk().s[12]++;
          return result;
        });
        function queryFn(_x) {
          return _queryFn.apply(this, arguments);
        }
        return queryFn;
      }(),
      getNextPageParam: function getNextPageParam(lastPage) {
        cov_2jkwhs2ywk().f[2]++;
        cov_2jkwhs2ywk().s[13]++;
        if (lastPage.pagination.currentPage >= lastPage.pagination.totalPages) {
          cov_2jkwhs2ywk().b[11][0]++;
          cov_2jkwhs2ywk().s[14]++;
          return undefined;
        } else {
          cov_2jkwhs2ywk().b[11][1]++;
        }
        cov_2jkwhs2ywk().s[15]++;
        return lastPage.pagination.currentPage + 1;
      },
      enabled: enabled,
      staleTime: 60 * 1000,
      refetchOnWindowFocus: false
    })),
    data = _ref2.data,
    _fetchNextPage = _ref2.fetchNextPage,
    hasNextPage = _ref2.hasNextPage,
    isFetchingNextPage = _ref2.isFetchingNextPage,
    isLoading = _ref2.isLoading,
    isError = _ref2.isError,
    queryError = _ref2.error,
    refetch = _ref2.refetch;
  cov_2jkwhs2ywk().s[16]++;
  var refresh = function () {
    var _ref4 = _asyncToGenerator(function* () {
      cov_2jkwhs2ywk().f[3]++;
      cov_2jkwhs2ywk().s[17]++;
      yield refetch();
    });
    return function refresh() {
      return _ref4.apply(this, arguments);
    };
  }();
  var flattenedShows = (cov_2jkwhs2ywk().s[18]++, (cov_2jkwhs2ywk().b[12][0]++, data == null ? void 0 : data.pages.flatMap(function (page) {
    cov_2jkwhs2ywk().f[4]++;
    cov_2jkwhs2ywk().s[19]++;
    return page.data;
  })) || (cov_2jkwhs2ywk().b[12][1]++, []));
  var totalCount = (cov_2jkwhs2ywk().s[20]++, (cov_2jkwhs2ywk().b[13][0]++, data == null || (_data$pages$ = data.pages[0]) == null ? void 0 : _data$pages$.pagination.totalCount) || (cov_2jkwhs2ywk().b[13][1]++, 0));
  var errorMessage = (cov_2jkwhs2ywk().s[21]++, isError ? (cov_2jkwhs2ywk().b[14][0]++, (cov_2jkwhs2ywk().b[15][0]++, queryError == null ? void 0 : queryError.message) || (cov_2jkwhs2ywk().b[15][1]++, 'Failed to load shows')) : (cov_2jkwhs2ywk().b[14][1]++, null));
  cov_2jkwhs2ywk().s[22]++;
  return {
    shows: flattenedShows,
    totalCount: totalCount,
    hasNextPage: !!hasNextPage,
    fetchNextPage: function () {
      var _fetchNextPage2 = _asyncToGenerator(function* () {
        cov_2jkwhs2ywk().f[5]++;
        cov_2jkwhs2ywk().s[23]++;
        if ((cov_2jkwhs2ywk().b[17][0]++, hasNextPage) && (cov_2jkwhs2ywk().b[17][1]++, !isFetchingNextPage)) {
          cov_2jkwhs2ywk().b[16][0]++;
          cov_2jkwhs2ywk().s[24]++;
          yield _fetchNextPage();
        } else {
          cov_2jkwhs2ywk().b[16][1]++;
        }
      });
      function fetchNextPage() {
        return _fetchNextPage2.apply(this, arguments);
      }
      return fetchNextPage;
    }(),
    refresh: refresh,
    isLoading: isLoading,
    isFetchingNextPage: isFetchingNextPage,
    isRefreshing: false,
    error: errorMessage
  };
};
export default useInfiniteShows;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,