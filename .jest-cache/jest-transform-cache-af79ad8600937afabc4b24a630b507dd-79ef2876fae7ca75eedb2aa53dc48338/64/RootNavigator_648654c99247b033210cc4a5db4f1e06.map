{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","AuthNavigator","MainNavigator","AdminNavigator","useAuth","Loading","jsx","_jsx","jsxs","_jsxs","cov_7erf6tfa6","s","RootNavigator","f","_ref","authState","_ref2","isAuthenticated","isLoading","RootStack","b","type","message","linking","prefixes","config","screens","ResetPassword","path","children","Navigator","screenOptions","headerShown","Screen","name","component"],"sources":["RootNavigator.tsx"],"sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\n// Import navigators\nimport AuthNavigator from './AuthNavigator';\nimport MainNavigator from './MainNavigator';\nimport AdminNavigator from './AdminNavigator';\n\n// Import auth context\nimport { useAuth } from '../contexts/AuthContext';\n\n// Import UI components\nimport { Loading } from '../components/ui';\n\n/**\n * RootNavigator - Handles top-level navigation based on auth state\n * Shows either the auth flow or main app based on authentication status\n */\nconst RootNavigator: React.FC = () => {\n  const { authState } = useAuth();\n  const { isAuthenticated, isLoading } = authState;\n  \n  // Root stack that will hold the main app and the admin tools\n  const RootStack = createNativeStackNavigator();\n\n  // Show loading indicator while auth state is being determined\n  if (isLoading) {\n    return (\n      <Loading \n        type=\"fullScreen\"\n        message=\"Loading...\"\n      />\n    );\n  }\n\n  /**\n   * Deep-link configuration\n   *  – Recognises our custom URL scheme `cardshowfinder://`\n   *  – Handles the password-reset flow (`cardshowfinder://reset-password?token=XYZ`)\n   *\n   *  The `ResetPassword` route lives inside the AuthNavigator stack.\n   *  React Navigation will automatically drill into nested navigators\n   *  as long as we declare the screen name in the config.\n   */\n  const linking = {\n    // Accept both the custom-scheme URL and the universal https link\n    prefixes: [\n      'cardshowfinder://',\n      'https://cardshowfinder.app',\n    ],\n    config: {\n      screens: {\n        // Auth flow\n        ResetPassword: {\n          path: 'reset-password',\n        },\n      },\n    },\n  };\n\n  return (\n    <NavigationContainer linking={linking}>\n      {isAuthenticated ? (\n        <RootStack.Navigator screenOptions={{ headerShown: false }}>\n          {/* Main user‐facing app */}\n          <RootStack.Screen name=\"Main\" component={MainNavigator} />\n          {/* Admin tools – only navigated to manually or via deep links */}\n          <RootStack.Screen name=\"Admin\" component={AdminNavigator} />\n        </RootStack.Navigator>\n      ) : (\n        <AuthNavigator />\n      )}\n    </NavigationContainer>\n  );\n};\n\nexport default RootNavigator;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAG3E,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAG7C,SAASC,OAAO,QAAQ,yBAAyB;AAGjD,SAASC,OAAO,QAAQ,kBAAkB;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAAAC,aAAA,GAAAC,CAAA;AAM3C,IAAMC,aAAuB,GAAG,SAA1BA,aAAuBA,CAAA,EAAS;EAAAF,aAAA,GAAAG,CAAA;EACpC,IAAAC,IAAA,IAAAJ,aAAA,GAAAC,CAAA,OAAsBP,OAAO,CAAC,CAAC;IAAvBW,SAAS,GAAAD,IAAA,CAATC,SAAS;EACjB,IAAAC,KAAA,IAAAN,aAAA,GAAAC,CAAA,OAAuCI,SAAS;IAAxCE,eAAe,GAAAD,KAAA,CAAfC,eAAe;IAAEC,SAAS,GAAAF,KAAA,CAATE,SAAS;EAGlC,IAAMC,SAAS,IAAAT,aAAA,GAAAC,CAAA,OAAGX,0BAA0B,CAAC,CAAC;EAACU,aAAA,GAAAC,CAAA;EAG/C,IAAIO,SAAS,EAAE;IAAAR,aAAA,GAAAU,CAAA;IAAAV,aAAA,GAAAC,CAAA;IACb,OACEJ,IAAA,CAACF,OAAO;MACNgB,IAAI,EAAC,YAAY;MACjBC,OAAO,EAAC;IAAY,CACrB,CAAC;EAEN,CAAC;IAAAZ,aAAA,GAAAU,CAAA;EAAA;EAWD,IAAMG,OAAO,IAAAb,aAAA,GAAAC,CAAA,OAAG;IAEda,QAAQ,EAAE,CACR,mBAAmB,EACnB,4BAA4B,CAC7B;IACDC,MAAM,EAAE;MACNC,OAAO,EAAE;QAEPC,aAAa,EAAE;UACbC,IAAI,EAAE;QACR;MACF;IACF;EACF,CAAC;EAAClB,aAAA,GAAAC,CAAA;EAEF,OACEJ,IAAA,CAACR,mBAAmB;IAACwB,OAAO,EAAEA,OAAQ;IAAAM,QAAA,EACnCZ,eAAe,IAAAP,aAAA,GAAAU,CAAA,UACdX,KAAA,CAACU,SAAS,CAACW,SAAS;MAACC,aAAa,EAAE;QAAEC,WAAW,EAAE;MAAM,CAAE;MAAAH,QAAA,GAEzDtB,IAAA,CAACY,SAAS,CAACc,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,SAAS,EAAEjC;MAAc,CAAE,CAAC,EAE1DK,IAAA,CAACY,SAAS,CAACc,MAAM;QAACC,IAAI,EAAC,OAAO;QAACC,SAAS,EAAEhC;MAAe,CAAE,CAAC;IAAA,CACzC,CAAC,KAAAO,aAAA,GAAAU,CAAA,UAEtBb,IAAA,CAACN,aAAa,IAAE,CAAC;EAClB,CACkB,CAAC;AAE1B,CAAC;AAED,eAAeW,aAAa","ignoreList":[]}