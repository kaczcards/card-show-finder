f4b4da1cda07eafc7fd5539394dbbecb
import { env as _env } from "expo/virtual/env";
var _Constants$expoConfig, _Constants$expoConfig2;
function cov_1sukd5hs0x() {
  var path = "/Users/kevin/card-show-finder/src/supabase.ts";
  var hash = "354da6a4693fa1da0dd3bcb3e5159dab23a136c6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/supabase.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 21
        },
        end: {
          line: 6,
          column: 107
        }
      },
      "1": {
        start: {
          line: 7,
          column: 25
        },
        end: {
          line: 7,
          column: 120
        }
      },
      "2": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 20,
          column: 2
        }
      },
      "3": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 32,
          column: 1
        }
      },
      "4": {
        start: {
          line: 28,
          column: 2
        },
        end: {
          line: 31,
          column: 4
        }
      },
      "5": {
        start: {
          line: 43,
          column: 25
        },
        end: {
          line: 50,
          column: 2
        }
      },
      "6": {
        start: {
          line: 56,
          column: 25
        },
        end: {
          line: 56,
          column: 43
        }
      },
      "7": {
        start: {
          line: 65,
          column: 38
        },
        end: {
          line: 72,
          column: 1
        }
      },
      "8": {
        start: {
          line: 66,
          column: 2
        },
        end: {
          line: 71,
          column: 3
        }
      },
      "9": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 66
        }
      },
      "10": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 68
        }
      },
      "11": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 17
        }
      },
      "12": {
        start: {
          line: 78,
          column: 28
        },
        end: {
          line: 85,
          column: 1
        }
      },
      "13": {
        start: {
          line: 79,
          column: 2
        },
        end: {
          line: 83,
          column: 3
        }
      },
      "14": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 82,
          column: 6
        }
      },
      "15": {
        start: {
          line: 84,
          column: 2
        },
        end: {
          line: 84,
          column: 28
        }
      },
      "16": {
        start: {
          line: 91,
          column: 39
        },
        end: {
          line: 101,
          column: 1
        }
      },
      "17": {
        start: {
          line: 92,
          column: 2
        },
        end: {
          line: 99,
          column: 5
        }
      },
      "18": {
        start: {
          line: 100,
          column: 2
        },
        end: {
          line: 100,
          column: 28
        }
      },
      "19": {
        start: {
          line: 114,
          column: 24
        },
        end: {
          line: 114,
          column: 33
        }
      },
      "20": {
        start: {
          line: 115,
          column: 37
        },
        end: {
          line: 115,
          column: 59
        }
      },
      "21": {
        start: {
          line: 116,
          column: 27
        },
        end: {
          line: 116,
          column: 39
        }
      },
      "22": {
        start: {
          line: 117,
          column: 38
        },
        end: {
          line: 117,
          column: 61
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 65,
            column: 38
          },
          end: {
            line: 65,
            column: 39
          }
        },
        loc: {
          start: {
            line: 65,
            column: 53
          },
          end: {
            line: 72,
            column: 1
          }
        },
        line: 65
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 78,
            column: 28
          },
          end: {
            line: 78,
            column: 29
          }
        },
        loc: {
          start: {
            line: 78,
            column: 34
          },
          end: {
            line: 85,
            column: 1
          }
        },
        line: 78
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 91,
            column: 39
          },
          end: {
            line: 91,
            column: 40
          }
        },
        loc: {
          start: {
            line: 91,
            column: 45
          },
          end: {
            line: 101,
            column: 1
          }
        },
        line: 91
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 6,
            column: 21
          },
          end: {
            line: 6,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 21
          },
          end: {
            line: 6,
            column: 57
          }
        }, {
          start: {
            line: 6,
            column: 61
          },
          end: {
            line: 6,
            column: 101
          }
        }, {
          start: {
            line: 6,
            column: 105
          },
          end: {
            line: 6,
            column: 107
          }
        }],
        line: 6
      },
      "1": {
        loc: {
          start: {
            line: 7,
            column: 25
          },
          end: {
            line: 7,
            column: 120
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 7,
            column: 25
          },
          end: {
            line: 7,
            column: 66
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 114
          }
        }, {
          start: {
            line: 7,
            column: 118
          },
          end: {
            line: 7,
            column: 120
          }
        }],
        line: 7
      },
      "2": {
        loc: {
          start: {
            line: 17,
            column: 22
          },
          end: {
            line: 17,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 22
          },
          end: {
            line: 17,
            column: 34
          }
        }, {
          start: {
            line: 17,
            column: 38
          },
          end: {
            line: 17,
            column: 47
          }
        }],
        line: 17
      },
      "3": {
        loc: {
          start: {
            line: 18,
            column: 22
          },
          end: {
            line: 18,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 22
          },
          end: {
            line: 18,
            column: 51
          }
        }, {
          start: {
            line: 18,
            column: 55
          },
          end: {
            line: 18,
            column: 64
          }
        }],
        line: 18
      },
      "4": {
        loc: {
          start: {
            line: 26,
            column: 0
          },
          end: {
            line: 32,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 0
          },
          end: {
            line: 32,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "5": {
        loc: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 17
          }
        }, {
          start: {
            line: 26,
            column: 21
          },
          end: {
            line: 26,
            column: 38
          }
        }],
        line: 26
      },
      "6": {
        loc: {
          start: {
            line: 67,
            column: 19
          },
          end: {
            line: 67,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 19
          },
          end: {
            line: 67,
            column: 37
          }
        }, {
          start: {
            line: 67,
            column: 41
          },
          end: {
            line: 67,
            column: 64
          }
        }],
        line: 67
      },
      "7": {
        loc: {
          start: {
            line: 79,
            column: 2
          },
          end: {
            line: 83,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 2
          },
          end: {
            line: 83,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "354da6a4693fa1da0dd3bcb3e5159dab23a136c6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1sukd5hs0x = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1sukd5hs0x();
import { createClient } from '@supabase/supabase-js';
import AsyncStorage from '@react-native-async-storage/async-storage';
import Constants from 'expo-constants';
var _supabaseUrl = (cov_1sukd5hs0x().s[0]++, (cov_1sukd5hs0x().b[0][0]++, _env.EXPO_PUBLIC_SUPABASE_URL) || (cov_1sukd5hs0x().b[0][1]++, (_Constants$expoConfig = Constants.expoConfig) == null || (_Constants$expoConfig = _Constants$expoConfig.extra) == null ? void 0 : _Constants$expoConfig.supabaseUrl) || (cov_1sukd5hs0x().b[0][2]++, ''));
var _supabaseAnonKey = (cov_1sukd5hs0x().s[1]++, (cov_1sukd5hs0x().b[1][0]++, _env.EXPO_PUBLIC_SUPABASE_ANON_KEY) || (cov_1sukd5hs0x().b[1][1]++, (_Constants$expoConfig2 = Constants.expoConfig) == null || (_Constants$expoConfig2 = _Constants$expoConfig2.extra) == null ? void 0 : _Constants$expoConfig2.supabaseAnonKey) || (cov_1sukd5hs0x().b[1][2]++, ''));
cov_1sukd5hs0x().s[2]++;
console.warn('\n================= [SUPABASE CONFIG] =================\n' + `• SUPABASE URL : ${(cov_1sukd5hs0x().b[2][0]++, _supabaseUrl) || (cov_1sukd5hs0x().b[2][1]++, '<EMPTY>')}\n` + `• ANON KEY     : ${(cov_1sukd5hs0x().b[3][0]++, _supabaseAnonKey == null ? void 0 : _supabaseAnonKey.slice(0, 8)) || (cov_1sukd5hs0x().b[3][1]++, '<EMPTY>')}…\n` + '====================================================\n');
cov_1sukd5hs0x().s[3]++;
if ((cov_1sukd5hs0x().b[5][0]++, !_supabaseUrl) || (cov_1sukd5hs0x().b[5][1]++, !_supabaseAnonKey)) {
  cov_1sukd5hs0x().b[4][0]++;
  cov_1sukd5hs0x().s[4]++;
  console.error('[_Supabase] Missing configuration. ' + 'Ensure EXPO_PUBLIC_SUPABASE_URL and EXPO_PUBLIC_SUPABASE_ANON_KEY are set.');
} else {
  cov_1sukd5hs0x().b[4][1]++;
}
var _supabaseSingleton = (cov_1sukd5hs0x().s[5]++, createClient(_supabaseUrl, _supabaseAnonKey, {
  auth: {
    storage: AsyncStorage,
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: false
  }
}));
export var _supabase = (cov_1sukd5hs0x().s[6]++, _supabaseSingleton);
cov_1sukd5hs0x().s[7]++;
export var _isSupabaseInitialized = function _isSupabaseInitialized() {
  cov_1sukd5hs0x().f[0]++;
  cov_1sukd5hs0x().s[8]++;
  try {
    cov_1sukd5hs0x().s[9]++;
    return Boolean((cov_1sukd5hs0x().b[6][0]++, _supabaseSingleton) && (cov_1sukd5hs0x().b[6][1]++, _supabaseSingleton.auth));
  } catch (_err) {
    cov_1sukd5hs0x().s[10]++;
    console.error('[_Supabase] initialization check failed:', _err);
    cov_1sukd5hs0x().s[11]++;
    return false;
  }
};
cov_1sukd5hs0x().s[12]++;
export var _getSupabase = function _getSupabase() {
  cov_1sukd5hs0x().f[1]++;
  cov_1sukd5hs0x().s[13]++;
  if (!_isSupabaseInitialized()) {
    cov_1sukd5hs0x().b[7][0]++;
    cov_1sukd5hs0x().s[14]++;
    throw new Error('[_Supabase] Client not initialised – check environment variables.');
  } else {
    cov_1sukd5hs0x().b[7][1]++;
  }
  cov_1sukd5hs0x().s[15]++;
  return _supabaseSingleton;
};
cov_1sukd5hs0x().s[16]++;
export var _recreateSupabaseClient = function _recreateSupabaseClient() {
  cov_1sukd5hs0x().f[2]++;
  cov_1sukd5hs0x().s[17]++;
  _supabaseSingleton = createClient(_supabaseUrl, _supabaseAnonKey, {
    auth: {
      storage: AsyncStorage,
      autoRefreshToken: true,
      persistSession: true,
      detectSessionInUrl: false
    }
  });
  cov_1sukd5hs0x().s[18]++;
  return _supabaseSingleton;
};
export var supabase = (cov_1sukd5hs0x().s[19]++, _supabase);
export var isSupabaseInitialized = (cov_1sukd5hs0x().s[20]++, _isSupabaseInitialized);
export var getSupabase = (cov_1sukd5hs0x().s[21]++, _getSupabase);
export var recreateSupabaseClient = (cov_1sukd5hs0x().s[22]++, _recreateSupabaseClient);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,