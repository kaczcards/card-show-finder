{"version":3,"names":["createClient","AsyncStorage","Constants","_supabaseUrl","cov_1sukd5hs0x","s","b","_env","EXPO_PUBLIC_SUPABASE_URL","_Constants$expoConfig","expoConfig","extra","supabaseUrl","_supabaseAnonKey","EXPO_PUBLIC_SUPABASE_ANON_KEY","_Constants$expoConfig2","supabaseAnonKey","console","warn","slice","error","_supabaseSingleton","auth","storage","autoRefreshToken","persistSession","detectSessionInUrl","_supabase","_isSupabaseInitialized","f","Boolean","_err","_getSupabase","Error","_recreateSupabaseClient","supabase","isSupabaseInitialized","getSupabase","recreateSupabaseClient"],"sources":["supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Constants from 'expo-constants';\n\n// Supabase configuration - ideally from environment variables\nconst _supabaseUrl = process.env.EXPO_PUBLIC_SUPABASE_URL || Constants.expoConfig?.extra?.supabaseUrl || '';\nconst _supabaseAnonKey = process.env.EXPO_PUBLIC_SUPABASE_ANON_KEY || Constants.expoConfig?.extra?.supabaseAnonKey || '';\n\n/* -------------------------------------------------------------------------- */\n/*  üîç DIAGNOSTICS ‚Äì PRINT SUPABASE CREDS IN DEV                              */\n/* -------------------------------------------------------------------------- */\n// NOTE: These values are **public** (anon key & project URL) so it's safe\n// to log them for debugging.  Remove or wrap behind an env‚Äêguard before\n// shipping production builds if desired.\nconsole.warn(\n  '\\n================= [SUPABASE CONFIG] =================\\n' +\n  `‚Ä¢ SUPABASE URL : ${_supabaseUrl || '<EMPTY>'}\\n` +\n  `‚Ä¢ ANON KEY     : ${_supabaseAnonKey?.slice(0, 8) || '<EMPTY>'}‚Ä¶\\n` +\n  '====================================================\\n'\n);\n\n/* -------------------------------------------------------------------------- */\n/* 1. Guard-rails / configuration validation                                  */\n/* -------------------------------------------------------------------------- */\n\nif (!_supabaseUrl || !_supabaseAnonKey) {\n  // Fail fast ‚Äì running with a broken client leads to subtle bugs later\n  console.error(\n    '[_Supabase] Missing configuration. ' +\n      'Ensure EXPO_PUBLIC_SUPABASE_URL and EXPO_PUBLIC_SUPABASE_ANON_KEY are set.'\n  );\n}\n\n/* -------------------------------------------------------------------------- */\n/* 2. Singleton client creation                                               */\n/* -------------------------------------------------------------------------- */\n\n/**\n * Internal holder for the Supabase singleton.\n * We keep it in a `let` so tests (or a logout flow) can force-recreate it\n * via `recreateSupabaseClient()`.\n */\nlet _supabaseSingleton = createClient(_supabaseUrl, _supabaseAnonKey, {\n  auth: {\n    storage: AsyncStorage,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: false, // we never use browser-based auth redirects\n  },\n});\n\n/**\n * Public accessor used throughout the codebase to avoid importing\n * `createClient` elsewhere.  Always returns **the same** instance.\n */\nexport const _supabase = _supabaseSingleton;\n\n/* -------------------------------------------------------------------------- */\n/* 3. Helper utilities                                                        */\n/* -------------------------------------------------------------------------- */\n\n/**\n * Defensive check used by legacy code (`isSupabaseInitialized()`).\n */\nexport const _isSupabaseInitialized = (): boolean => {\n  try {\n    return Boolean(_supabaseSingleton && _supabaseSingleton.auth);\n  } catch (_err) {\n    console.error('[_Supabase] initialization check failed:', _err);\n    return false;\n  }\n};\n\n/**\n * Provides the singleton client or throws a descriptive error.\n * Prefer this helper in newly-written code so errors surface early.\n */\nexport const _getSupabase = () => {\n  if (!_isSupabaseInitialized()) {\n    throw new Error(\n      '[_Supabase] Client not initialised ‚Äì check environment variables.'\n    );\n  }\n  return _supabaseSingleton;\n};\n\n/**\n * Optional helper to **re**create the client (e.g. after logout to purge\n * cached auth state, or inside E2E tests).  Most apps will never need this.\n */\nexport const _recreateSupabaseClient = () => {\n  _supabaseSingleton = createClient(_supabaseUrl, _supabaseAnonKey, {\n    auth: {\n      storage: AsyncStorage,\n      autoRefreshToken: true,\n      persistSession: true,\n      detectSessionInUrl: false,\n    },\n  });\n  return _supabaseSingleton;\n};\n\n// Export types from Supabase for use in other files\nexport type { User, Session } from '@supabase/supabase-js';\n\n/* -------------------------------------------------------------------------- */\n/* 4. Back-compat exports (non-underscore names)                               */\n/* -------------------------------------------------------------------------- */\n// Many legacy modules still import these helpers without the leading\n// underscore.  Re-export them here so existing imports continue to work\n// while new code can adopt the explicit ‚Äúprivate‚Äù underscore versions.\n\n// eslint-disable-next-line import/prefer-default-export\nexport const supabase = _supabase;\nexport const isSupabaseInitialized = _isSupabaseInitialized;\nexport const getSupabase = _getSupabase;\nexport const recreateSupabaseClient = _recreateSupabaseClient;\n"],"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","ignoreList":[]}