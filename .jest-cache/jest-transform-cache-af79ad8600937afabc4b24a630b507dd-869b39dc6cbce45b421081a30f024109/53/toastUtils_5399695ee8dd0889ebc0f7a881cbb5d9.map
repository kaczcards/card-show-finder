{"version":3,"names":["Toast","DURATIONS","cov_ncso5k284","s","SHORT","NORMAL","LONG","_showSuccessToast","message","subText","duration","arguments","length","undefined","b","f","show","type","text1","text2","visibilityTime","position","showInfoToast","showErrorToast","showWarningToast","_showLocationChangedToast","_zipCode","_showGpsLocationToast","locationName","_showLocationFailedToast","_fallbackZip","_hideToast","hide","showSuccessToast","showLocationChangedToast","showGpsLocationToast","showLocationFailedToast","hideToast","durations"],"sources":["toastUtils.ts"],"sourcesContent":["/**\n * Toast Utilities\n * \n * This file contains utility functions for displaying toast notifications\n * throughout the app using react-native-toast-message.\n */\n\nimport Toast from 'react-native-toast-message';\n\n// Default durations in milliseconds\nconst DURATIONS = {\n  SHORT: 2000,\n  NORMAL: 3500,\n  LONG: 5000\n};\n\n/**\n * Show a success toast notification\n * \n * @param message Primary message text\n * @param subText Optional secondary text\n * @param duration Time in ms to show the toast\n */\nexport const _showSuccessToast = (\n  message: string, \n  subText?: string, \n  duration: number = DURATIONS.NORMAL\n) => {\n  Toast.show({\n    type: 'success',\n    text1: message,\n    text2: subText,\n    visibilityTime: duration,\n    position: 'bottom',\n  });\n};\n\n/**\n * Show an info toast notification\n * \n * @param message Primary message text\n * @param subText Optional secondary text\n * @param duration Time in ms to show the toast\n */\nexport const showInfoToast = (\n  message: string, \n  subText?: string, \n  duration: number = DURATIONS.NORMAL\n) => {\n  Toast.show({\n    type: 'info',\n    text1: message,\n    text2: subText,\n    visibilityTime: duration,\n    position: 'bottom',\n  });\n};\n\n/**\n * Show an error toast notification\n * \n * @param message Primary message text\n * @param subText Optional secondary text\n * @param duration Time in ms to show the toast\n */\nexport const showErrorToast = (\n  message: string, \n  subText?: string, \n  duration: number = DURATIONS.LONG\n) => {\n  Toast.show({\n    type: 'error',\n    text1: message,\n    text2: subText,\n    visibilityTime: duration,\n    position: 'bottom',\n  });\n};\n\n/**\n * Show a warning toast notification\n * \n * @param message Primary message text\n * @param subText Optional secondary text\n * @param duration Time in ms to show the toast\n */\nexport const showWarningToast = (\n  message: string, \n  subText?: string, \n  duration: number = DURATIONS.NORMAL\n) => {\n  Toast.show({\n    type: 'warning',\n    text1: message,\n    text2: subText,\n    visibilityTime: duration,\n    position: 'bottom',\n  });\n};\n\n/**\n * Location-specific toast notifications\n */\n\n/**\n * Show a toast notification when the map location changes to a new ZIP code\n * \n * @param zipCode The ZIP code the map has centered on\n */\nexport const _showLocationChangedToast = (_zipCode: string) => {\n  showInfoToast(\n    `Map centered on ${_zipCode}`,\n    'Your location has been updated',\n    DURATIONS.SHORT\n  );\n};\n\n/**\n * Show a toast notification when GPS location is used\n * \n * @param locationName Optional name of the location (_city, _neighborhood)\n */\nexport const _showGpsLocationToast = (locationName?: string) => {\n  showInfoToast(\n    locationName \n      ? `Using current location: ${locationName}`\n      : 'Using your current location',\n    'Shows within your selected radius will appear',\n    DURATIONS.SHORT\n  );\n};\n\n/**\n * Show a toast notification when location services fail\n * \n * @param fallbackZip The ZIP code being used as fallback\n */\nexport const _showLocationFailedToast = (_fallbackZip?: string) => {\n  if (_fallbackZip) {\n    showWarningToast(\n      'Location services unavailable',\n      `Using your home ZIP code (${_fallbackZip}) instead`,\n      DURATIONS.NORMAL\n    );\n  } else {\n    showErrorToast(\n      'Location services unavailable',\n      'Please set your home ZIP code in your profile',\n      DURATIONS.LONG\n    );\n  }\n};\n\n/**\n * Hide any currently displayed toast\n */\nexport const _hideToast = () => {\n  Toast.hide();\n};\n\n// Export all toast functions\nexport default {\n  showSuccessToast: _showSuccessToast,\n  showInfoToast: showInfoToast,\n  showErrorToast: showErrorToast,\n  showWarningToast: showWarningToast,\n  showLocationChangedToast: _showLocationChangedToast,\n  showGpsLocationToast: _showGpsLocationToast,\n  showLocationFailedToast: _showLocationFailedToast,\n  hideToast: _hideToast,\n  durations: DURATIONS\n};\n\n/* -------------------------------------------------------------------------- */\n/* Back-compat named exports (non-underscore aliases)                         */\n/* -------------------------------------------------------------------------- */\n\n// ---------------------------------------------------------------------------\n// Additional named exports for backward compatibility with existing imports\n// ---------------------------------------------------------------------------\nexport const showSuccessToast = _showSuccessToast;\nexport const showLocationChangedToast = _showLocationChangedToast;\nexport const showGpsLocationToast = _showGpsLocationToast;\nexport const showLocationFailedToast = _showLocationFailedToast;\nexport const hideToast = _hideToast;\n\n// Note: explicit re-exports are unnecessary; the functions are already\n// exported above (either directly or via default export). Removing the\n// duplicates prevents identifier conflicts.\n"],"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","ignoreList":[]}