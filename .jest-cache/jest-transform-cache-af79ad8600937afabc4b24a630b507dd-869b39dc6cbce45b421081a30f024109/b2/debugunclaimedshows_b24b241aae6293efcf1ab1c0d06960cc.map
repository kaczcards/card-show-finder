{"version":3,"names":["cov_un1urhoal","actualCoverage","s","exports","testUnclaimedShowsDataHandling","showSeriesService_1","require","f","console","log","unclaimedSeries","showSeriesService","getAllShowSeries","organizerId","Array","isArray","b","length","safeSeries","unclaimedShows","getUnclaimedShows","safeShows","combinedItems","error"],"sources":["/Users/kevin/card-show-finder/src/debug-unclaimed-shows.ts"],"sourcesContent":["// Temporary debug file to test the useUnclaimedShows hook\nimport { showSeriesService } from './services/showSeriesService';\n\nasync function testUnclaimedShowsDataHandling() {\n  console.log('---- STARTING DEBUG TEST ----');\n  \n  try {\n    // Test getAllShowSeries function\n    console.log('[TEST] Testing getAllShowSeries...');\n    const unclaimedSeries = await showSeriesService.getAllShowSeries({\n      organizerId: null\n    });\n    console.log('[DEBUG] Value of unclaimedSeries:', unclaimedSeries);\n    console.log('[DEBUG] Type of unclaimedSeries:', Array.isArray(unclaimedSeries) ? 'array' : typeof unclaimedSeries);\n    console.log('[DEBUG] Length of unclaimedSeries:', Array.isArray(unclaimedSeries) ? unclaimedSeries.length : 'N/A');\n    \n    // Ensure it's an array even if empty\n    const safeSeries = unclaimedSeries || [];\n    console.log('[DEBUG] Safe series is array:', Array.isArray(safeSeries));\n    \n    // Test getUnclaimedShows function\n    console.log('[TEST] Testing getUnclaimedShows...');\n    const unclaimedShows = await showSeriesService.getUnclaimedShows();\n    console.log('[DEBUG] Value of unclaimedShows:', unclaimedShows);\n    console.log('[DEBUG] Type of unclaimedShows:', Array.isArray(unclaimedShows) ? 'array' : typeof unclaimedShows);\n    console.log('[DEBUG] Length of unclaimedShows:', Array.isArray(unclaimedShows) ? unclaimedShows.length : 'N/A');\n    \n    // Ensure it's an array even if empty\n    const safeShows = unclaimedShows || [];\n    console.log('[DEBUG] Safe shows is array:', Array.isArray(safeShows));\n    \n    // Test the combined data\n    console.log('[TEST] Testing combined data...');\n    // This would crash if either unclaimedSeries or unclaimedShows is undefined\n    const combinedItems = [\n      ...safeSeries,\n      ...safeShows\n    ];\n    console.log('[DEBUG] Combined items length:', combinedItems.length);\n    \n    console.log('---- DEBUG TEST SUCCESSFUL ----');\n  } catch (error) {\n    console.error('[ERROR] Debug test failed:', error);\n  }\n}\n\n// Export for use in other modules if needed\nexport { testUnclaimedShowsDataHandling };\n"],"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","ignoreList":[]}