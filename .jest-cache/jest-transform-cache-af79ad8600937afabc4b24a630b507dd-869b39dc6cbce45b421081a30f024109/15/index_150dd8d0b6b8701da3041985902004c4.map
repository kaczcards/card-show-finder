{"version":3,"names":["React","createContext","useContext","useColorScheme","theme","jsx","_jsx","_ThemeContext","cov_1njwizf1fz","s","colorScheme","ThemeProvider","_ref","children","f","_colorScheme","b","Provider","value","_useTheme","ThemeContext","useTheme"],"sources":["index.tsx"],"sourcesContent":["import React, { createContext, useContext, ReactNode } from 'react';\nimport { useColorScheme } from 'react-native';\nimport theme from '../../constants/theme';\n\n// Define the theme context type\ntype ThemeContextType = {\n  theme: typeof theme;\n  colorScheme: 'light' | 'dark';\n};\n\n// Create the theme context with default values\nconst _ThemeContext = createContext<ThemeContextType>({\n  theme,\n  colorScheme: 'light',\n});\n\n// Props for the ThemeProvider component\ninterface ThemeProviderProps {\n  children: ReactNode;\n}\n\n/**\n * ThemeProvider - Provides theme context to the entire application\n * \n * This component wraps the application and provides access to theme settings\n * and color scheme information. It also handles dark/light mode detection.\n */\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\n  // Get device color scheme (light/dark)\n  const _colorScheme = useColorScheme() || 'light';\n  \n  // We're just using the default theme for now, but this is where\n  // you would implement any theme switching logic (e.g., dark mode)\n  \n  // Provide the theme context to the component tree\n  return (\n    <_ThemeContext.Provider value={{ theme, colorScheme: _colorScheme }}>\n      {children}\n    </_ThemeContext.Provider>\n  );\n};\n\n/**\n * useTheme - Custom hook to access theme context\n * \n * Use this hook in components to access theme values:\n * const { theme, colorScheme } = useTheme();\n */\nexport const _useTheme = () => useContext(_ThemeContext);\n\nexport default ThemeProvider;\n\n// Backward-compatible exports\nexport const ThemeContext = _ThemeContext;\nexport const useTheme = _useTheme;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAmB,OAAO;AACnE,SAASC,cAAc,QAAQ,cAAc;AAC7C,OAAOC,KAAK,MAAM,uBAAuB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAS1C,IAAMC,aAAa,IAAAC,cAAA,GAAAC,CAAA,OAAGR,aAAa,CAAmB;EACpDG,KAAK,EAALA,KAAK;EACLM,WAAW,EAAE;AACf,CAAC,CAAC;AAACF,cAAA,GAAAC,CAAA;AAaH,OAAO,IAAME,aAA2C,GAAG,SAA9CA,aAA2CA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAAAL,cAAA,GAAAM,CAAA;EAEpE,IAAMC,YAAY,IAAAP,cAAA,GAAAC,CAAA,OAAG,CAAAD,cAAA,GAAAQ,CAAA,UAAAb,cAAc,CAAC,CAAC,MAAAK,cAAA,GAAAQ,CAAA,UAAI,OAAO;EAACR,cAAA,GAAAC,CAAA;EAMjD,OACEH,IAAA,CAACC,aAAa,CAACU,QAAQ;IAACC,KAAK,EAAE;MAAEd,KAAK,EAALA,KAAK;MAAEM,WAAW,EAAEK;IAAa,CAAE;IAAAF,QAAA,EACjEA;EAAQ,CACa,CAAC;AAE7B,CAAC;AAACL,cAAA,GAAAC,CAAA;AAQF,OAAO,IAAMU,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;EAAAX,cAAA,GAAAM,CAAA;EAAAN,cAAA,GAAAC,CAAA;EAAA,OAAAP,UAAU,CAACK,aAAa,CAAC;AAAD,CAAC;AAExD,eAAeI,aAAa;AAG5B,OAAO,IAAMS,YAAY,IAAAZ,cAAA,GAAAC,CAAA,OAAGF,aAAa;AACzC,OAAO,IAAMc,QAAQ,IAAAb,cAAA,GAAAC,CAAA,OAAGU,SAAS","ignoreList":[]}