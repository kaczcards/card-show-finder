fc04a99b5939e3711e296de8cee5ee97
function cov_1khdmb7izr() {
  var path = "/Users/kevin/card-show-finder/src/components/ui/Button.tsx";
  var hash = "3d120fc5513033bb6accf8f4e5bb589587a3115f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/components/ui/Button.tsx",
    statementMap: {
      "0": {
        start: {
          line: 62,
          column: 38
        },
        end: {
          line: 125,
          column: 1
        }
      },
      "1": {
        start: {
          line: 73,
          column: 20
        },
        end: {
          line: 73,
          column: 30
        }
      },
      "2": {
        start: {
          line: 76,
          column: 21
        },
        end: {
          line: 76,
          column: 58
        }
      },
      "3": {
        start: {
          line: 79,
          column: 22
        },
        end: {
          line: 79,
          column: 55
        }
      },
      "4": {
        start: {
          line: 83,
          column: 28
        },
        end: {
          line: 85,
          column: 15
        }
      },
      "5": {
        start: {
          line: 88,
          column: 25
        },
        end: {
          line: 92,
          column: 3
        }
      },
      "6": {
        start: {
          line: 94,
          column: 21
        },
        end: {
          line: 98,
          column: 3
        }
      },
      "7": {
        start: {
          line: 100,
          column: 2
        },
        end: {
          line: 124,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 62,
            column: 38
          },
          end: {
            line: 62,
            column: 39
          }
        },
        loc: {
          start: {
            line: 71,
            column: 6
          },
          end: {
            line: 125,
            column: 1
          }
        },
        line: 71
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 63,
            column: 2
          },
          end: {
            line: 63,
            column: 21
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 63,
            column: 21
          }
        }],
        line: 63
      },
      "1": {
        loc: {
          start: {
            line: 66,
            column: 2
          },
          end: {
            line: 66,
            column: 18
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 66,
            column: 13
          },
          end: {
            line: 66,
            column: 18
          }
        }],
        line: 66
      },
      "2": {
        loc: {
          start: {
            line: 67,
            column: 2
          },
          end: {
            line: 67,
            column: 17
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 67,
            column: 17
          }
        }],
        line: 67
      },
      "3": {
        loc: {
          start: {
            line: 70,
            column: 2
          },
          end: {
            line: 70,
            column: 17
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 70,
            column: 13
          },
          end: {
            line: 70,
            column: 17
          }
        }],
        line: 70
      },
      "4": {
        loc: {
          start: {
            line: 83,
            column: 28
          },
          end: {
            line: 85,
            column: 15
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 84,
            column: 6
          },
          end: {
            line: 84,
            column: 56
          }
        }, {
          start: {
            line: 85,
            column: 6
          },
          end: {
            line: 85,
            column: 15
          }
        }],
        line: 83
      },
      "5": {
        loc: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 90,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 90,
            column: 12
          }
        }, {
          start: {
            line: 90,
            column: 16
          },
          end: {
            line: 90,
            column: 45
          }
        }],
        line: 90
      },
      "6": {
        loc: {
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 96,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 96,
            column: 12
          }
        }, {
          start: {
            line: 96,
            column: 16
          },
          end: {
            line: 96,
            column: 40
          }
        }],
        line: 96
      },
      "7": {
        loc: {
          start: {
            line: 105,
            column: 18
          },
          end: {
            line: 105,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 18
          },
          end: {
            line: 105,
            column: 26
          }
        }, {
          start: {
            line: 105,
            column: 30
          },
          end: {
            line: 105,
            column: 37
          }
        }],
        line: 105
      },
      "8": {
        loc: {
          start: {
            line: 107,
            column: 13
          },
          end: {
            line: 112,
            column: 14
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        }, {
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 112,
            column: 14
          }
        }],
        line: 107
      },
      "9": {
        loc: {
          start: {
            line: 114,
            column: 9
          },
          end: {
            line: 121,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 115,
            column: 10
          },
          end: {
            line: 118,
            column: 12
          }
        }, {
          start: {
            line: 120,
            column: 10
          },
          end: {
            line: 120,
            column: 49
          }
        }],
        line: 114
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3d120fc5513033bb6accf8f4e5bb589587a3115f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1khdmb7izr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1khdmb7izr();
import React, { useRef } from 'react';
import { TouchableOpacity, Text, Animated, ActivityIndicator } from 'react-native';
import { useTheme } from '../../contexts/ThemeContext';
import { jsx as _jsx } from "react/jsx-runtime";
cov_1khdmb7izr().s[0]++;
var Button = function Button(_ref) {
  var _ref$variant = _ref.variant,
    variant = _ref$variant === void 0 ? (cov_1khdmb7izr().b[0][0]++, 'primary') : _ref$variant,
    label = _ref.label,
    onPress = _ref.onPress,
    _ref$disabled = _ref.disabled,
    disabled = _ref$disabled === void 0 ? (cov_1khdmb7izr().b[1][0]++, false) : _ref$disabled,
    _ref$loading = _ref.loading,
    loading = _ref$loading === void 0 ? (cov_1khdmb7izr().b[2][0]++, false) : _ref$loading,
    style = _ref.style,
    textStyle = _ref.textStyle,
    _ref$animated = _ref.animated,
    animated = _ref$animated === void 0 ? (cov_1khdmb7izr().b[3][0]++, true) : _ref$animated;
  cov_1khdmb7izr().f[0]++;
  var _ref2 = (cov_1khdmb7izr().s[1]++, useTheme()),
    theme = _ref2.theme;
  var scaleValue = (cov_1khdmb7izr().s[2]++, useRef(new Animated.Value(1)).current);
  var buttonStyle = (cov_1khdmb7izr().s[3]++, theme.components.buttons[variant]);
  var animationHandlers = (cov_1khdmb7izr().s[4]++, animated ? (cov_1khdmb7izr().b[4][0]++, theme.animations.animation.buttonPress(scaleValue)) : (cov_1khdmb7izr().b[4][1]++, undefined));
  var containerStyle = (cov_1khdmb7izr().s[5]++, [buttonStyle.container, (cov_1khdmb7izr().b[5][0]++, disabled) && (cov_1khdmb7izr().b[5][1]++, buttonStyle.disabledContainer), style]);
  var labelStyle = (cov_1khdmb7izr().s[6]++, [buttonStyle.text, (cov_1khdmb7izr().b[6][0]++, disabled) && (cov_1khdmb7izr().b[6][1]++, buttonStyle.disabledText), textStyle]);
  cov_1khdmb7izr().s[7]++;
  return _jsx(Animated.View, {
    style: animationHandlers == null ? void 0 : animationHandlers.style,
    children: _jsx(TouchableOpacity, Object.assign({
      activeOpacity: 0.8,
      onPress: onPress,
      disabled: (cov_1khdmb7izr().b[7][0]++, disabled) || (cov_1khdmb7izr().b[7][1]++, loading),
      style: containerStyle
    }, animated ? (cov_1khdmb7izr().b[8][0]++, {
      onPressIn: animationHandlers == null ? void 0 : animationHandlers.onPressIn,
      onPressOut: animationHandlers == null ? void 0 : animationHandlers.onPressOut
    }) : (cov_1khdmb7izr().b[8][1]++, {}), {
      children: loading ? (cov_1khdmb7izr().b[9][0]++, _jsx(ActivityIndicator, {
        color: buttonStyle.text.color,
        size: "small"
      })) : (cov_1khdmb7izr().b[9][1]++, _jsx(Text, {
        style: labelStyle,
        children: label
      }))
    }))
  });
};
export default Button;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,