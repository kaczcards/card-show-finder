3368f78b0a8be0d446bccbb084c5a29a
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
function cov_ah47rvn7r() {
  var path = "/Users/kevin/card-show-finder/src/components/SentryErrorBoundary.tsx";
  var hash = "dd5882c520f3a677eb67d623a68e3d8b9e6f361f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/components/SentryErrorBoundary.tsx",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 22
        },
        end: {
          line: 7,
          column: 46
        }
      },
      "1": {
        start: {
          line: 19,
          column: 59
        },
        end: {
          line: 104,
          column: 1
        }
      },
      "2": {
        start: {
          line: 25,
          column: 40
        },
        end: {
          line: 25,
          column: 55
        }
      },
      "3": {
        start: {
          line: 26,
          column: 34
        },
        end: {
          line: 26,
          column: 49
        }
      },
      "4": {
        start: {
          line: 28,
          column: 23
        },
        end: {
          line: 47,
          column: 3
        }
      },
      "5": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 25
        }
      },
      "6": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "7": {
        start: {
          line: 34,
          column: 6
        },
        end: {
          line: 36,
          column: 7
        }
      },
      "8": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 38
        }
      },
      "9": {
        start: {
          line: 41,
          column: 6
        },
        end: {
          line: 41,
          column: 24
        }
      },
      "10": {
        start: {
          line: 43,
          column: 6
        },
        end: {
          line: 43,
          column: 60
        }
      },
      "11": {
        start: {
          line: 45,
          column: 6
        },
        end: {
          line: 45,
          column: 28
        }
      },
      "12": {
        start: {
          line: 49,
          column: 2
        },
        end: {
          line: 103,
          column: 4
        }
      },
      "13": {
        start: {
          line: 131,
          column: 64
        },
        end: {
          line: 162,
          column: 1
        }
      },
      "14": {
        start: {
          line: 136,
          column: 22
        },
        end: {
          line: 148,
          column: 3
        }
      },
      "15": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 142,
          column: 5
        }
      },
      "16": {
        start: {
          line: 139,
          column: 6
        },
        end: {
          line: 139,
          column: 67
        }
      },
      "17": {
        start: {
          line: 140,
          column: 6
        },
        end: {
          line: 140,
          column: 54
        }
      },
      "18": {
        start: {
          line: 141,
          column: 6
        },
        end: {
          line: 141,
          column: 47
        }
      },
      "19": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 147,
          column: 5
        }
      },
      "20": {
        start: {
          line: 146,
          column: 6
        },
        end: {
          line: 146,
          column: 46
        }
      },
      "21": {
        start: {
          line: 151,
          column: 28
        },
        end: {
          line: 151,
          column: 66
        }
      },
      "22": {
        start: {
          line: 153,
          column: 2
        },
        end: {
          line: 161,
          column: 4
        }
      },
      "23": {
        start: {
          line: 156,
          column: 32
        },
        end: {
          line: 156,
          column: 69
        }
      },
      "24": {
        start: {
          line: 164,
          column: 15
        },
        end: {
          line: 276,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 19,
            column: 59
          },
          end: {
            line: 19,
            column: 60
          }
        },
        loc: {
          start: {
            line: 24,
            column: 6
          },
          end: {
            line: 104,
            column: 1
          }
        },
        line: 24
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 28,
            column: 23
          },
          end: {
            line: 28,
            column: 24
          }
        },
        loc: {
          start: {
            line: 28,
            column: 35
          },
          end: {
            line: 47,
            column: 3
          }
        },
        line: 28
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 131,
            column: 64
          },
          end: {
            line: 131,
            column: 65
          }
        },
        loc: {
          start: {
            line: 135,
            column: 6
          },
          end: {
            line: 162,
            column: 1
          }
        },
        line: 135
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 136,
            column: 22
          },
          end: {
            line: 136,
            column: 23
          }
        },
        loc: {
          start: {
            line: 136,
            column: 81
          },
          end: {
            line: 148,
            column: 3
          }
        },
        line: 136
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 156,
            column: 16
          },
          end: {
            line: 156,
            column: 17
          }
        },
        loc: {
          start: {
            line: 156,
            column: 32
          },
          end: {
            line: 156,
            column: 69
          }
        },
        line: 156
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 34,
            column: 6
          },
          end: {
            line: 36,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 6
          },
          end: {
            line: 36,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "1": {
        loc: {
          start: {
            line: 64,
            column: 11
          },
          end: {
            line: 68,
            column: 11
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 11
          },
          end: {
            line: 64,
            column: 18
          }
        }, {
          start: {
            line: 64,
            column: 22
          },
          end: {
            line: 64,
            column: 36
          }
        }, {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 67,
            column: 25
          }
        }],
        line: 64
      },
      "2": {
        loc: {
          start: {
            line: 78,
            column: 13
          },
          end: {
            line: 92,
            column: 13
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 79,
            column: 14
          },
          end: {
            line: 87,
            column: 33
          }
        }, {
          start: {
            line: 89,
            column: 14
          },
          end: {
            line: 91,
            column: 21
          }
        }],
        line: 78
      },
      "3": {
        loc: {
          start: {
            line: 80,
            column: 63
          },
          end: {
            line: 80,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 63
          },
          end: {
            line: 80,
            column: 74
          }
        }, {
          start: {
            line: 80,
            column: 78
          },
          end: {
            line: 80,
            column: 99
          }
        }],
        line: 80
      },
      "4": {
        loc: {
          start: {
            line: 85,
            column: 19
          },
          end: {
            line: 85,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 85,
            column: 33
          },
          end: {
            line: 85,
            column: 47
          }
        }, {
          start: {
            line: 85,
            column: 50
          },
          end: {
            line: 85,
            column: 64
          }
        }],
        line: 85
      },
      "5": {
        loc: {
          start: {
            line: 95,
            column: 11
          },
          end: {
            line: 99,
            column: 11
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 11
          },
          end: {
            line: 95,
            column: 18
          }
        }, {
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 98,
            column: 19
          }
        }],
        line: 95
      },
      "6": {
        loc: {
          start: {
            line: 138,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "7": {
        loc: {
          start: {
            line: 145,
            column: 4
          },
          end: {
            line: 147,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 4
          },
          end: {
            line: 147,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "8": {
        loc: {
          start: {
            line: 151,
            column: 28
          },
          end: {
            line: 151,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 151,
            column: 28
          },
          end: {
            line: 151,
            column: 42
          }
        }, {
          start: {
            line: 151,
            column: 46
          },
          end: {
            line: 151,
            column: 66
          }
        }],
        line: 151
      },
      "9": {
        loc: {
          start: {
            line: 224,
            column: 16
          },
          end: {
            line: 224,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 224,
            column: 40
          },
          end: {
            line: 224,
            column: 47
          }
        }, {
          start: {
            line: 224,
            column: 50
          },
          end: {
            line: 224,
            column: 61
          }
        }],
        line: 224
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "dd5882c520f3a677eb67d623a68e3d8b9e6f361f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_ah47rvn7r = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ah47rvn7r();
import React, { useState } from 'react';
import { View, Text, StyleSheet, TouchableOpacity, ScrollView, SafeAreaView, Platform } from 'react-native';
import { getSentryErrorBoundary, captureException } from '../services/sentryConfig';
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
var ErrorBoundary = (cov_ah47rvn7r().s[0]++, getSentryErrorBoundary());
cov_ah47rvn7r().s[1]++;
var DefaultErrorFallback = function DefaultErrorFallback(_ref) {
  var error = _ref.error,
    resetError = _ref.resetError,
    componentStack = _ref.componentStack,
    eventId = _ref.eventId;
  cov_ah47rvn7r().f[0]++;
  var _ref2 = (cov_ah47rvn7r().s[2]++, useState(false)),
    _ref3 = _slicedToArray(_ref2, 2),
    isReporting = _ref3[0],
    setIsReporting = _ref3[1];
  var _ref4 = (cov_ah47rvn7r().s[3]++, useState(false)),
    _ref5 = _slicedToArray(_ref4, 2),
    reported = _ref5[0],
    setReported = _ref5[1];
  cov_ah47rvn7r().s[4]++;
  var handleReport = function () {
    var _ref6 = _asyncToGenerator(function* () {
      cov_ah47rvn7r().f[1]++;
      cov_ah47rvn7r().s[5]++;
      setIsReporting(true);
      cov_ah47rvn7r().s[6]++;
      try {
        cov_ah47rvn7r().s[7]++;
        if (!eventId) {
          cov_ah47rvn7r().b[0][0]++;
          cov_ah47rvn7r().s[8]++;
          yield captureException(error);
        } else {
          cov_ah47rvn7r().b[0][1]++;
        }
        cov_ah47rvn7r().s[9]++;
        setReported(true);
      } catch (reportError) {
        cov_ah47rvn7r().s[10]++;
        console.error('Failed to report error:', reportError);
      } finally {
        cov_ah47rvn7r().s[11]++;
        setIsReporting(false);
      }
    });
    return function handleReport() {
      return _ref6.apply(this, arguments);
    };
  }();
  cov_ah47rvn7r().s[12]++;
  return _jsx(SafeAreaView, {
    style: styles.container,
    children: _jsx(ScrollView, {
      contentContainerStyle: styles.scrollContainer,
      children: _jsxs(View, {
        style: styles.content,
        children: [_jsx(Text, {
          style: styles.emoji,
          children: "\uD83D\uDE15"
        }), _jsx(Text, {
          style: styles.title,
          children: "Something went wrong"
        }), _jsx(Text, {
          style: styles.message,
          children: "We're sorry, but the app encountered an unexpected error."
        }), _jsxs(View, {
          style: styles.errorDetails,
          children: [_jsx(Text, {
            style: styles.errorTitle,
            children: error.name
          }), _jsx(Text, {
            style: styles.errorMessage,
            children: error.message
          })]
        }), (cov_ah47rvn7r().b[1][0]++, __DEV__) && (cov_ah47rvn7r().b[1][1]++, componentStack) && (cov_ah47rvn7r().b[1][2]++, _jsx(ScrollView, {
          style: styles.stackTrace,
          nestedScrollEnabled: true,
          children: _jsx(Text, {
            style: styles.stackTraceText,
            children: componentStack
          })
        })), _jsxs(View, {
          style: styles.buttonContainer,
          children: [_jsx(TouchableOpacity, {
            style: [styles.button, styles.primaryButton],
            onPress: resetError,
            children: _jsx(Text, {
              style: styles.buttonText,
              children: "Try Again"
            })
          }), !reported ? (cov_ah47rvn7r().b[2][0]++, _jsx(TouchableOpacity, {
            style: [styles.button, styles.secondaryButton, (cov_ah47rvn7r().b[3][0]++, isReporting) && (cov_ah47rvn7r().b[3][1]++, styles.disabledButton)],
            onPress: handleReport,
            disabled: isReporting,
            children: _jsx(Text, {
              style: styles.secondaryButtonText,
              children: isReporting ? (cov_ah47rvn7r().b[4][0]++, 'Reporting...') : (cov_ah47rvn7r().b[4][1]++, 'Report Issue')
            })
          })) : (cov_ah47rvn7r().b[2][1]++, _jsx(View, {
            style: [styles.button, styles.reportedButton],
            children: _jsx(Text, {
              style: styles.reportedButtonText,
              children: "Issue Reported"
            })
          }))]
        }), (cov_ah47rvn7r().b[5][0]++, eventId) && (cov_ah47rvn7r().b[5][1]++, _jsxs(Text, {
          style: styles.eventId,
          children: ["Reference ID: ", eventId]
        }))]
      })
    })
  });
};
cov_ah47rvn7r().s[13]++;
var SentryErrorBoundary = function SentryErrorBoundary(_ref7) {
  var children = _ref7.children,
    CustomFallback = _ref7.fallback,
    onError = _ref7.onError;
  cov_ah47rvn7r().f[2]++;
  cov_ah47rvn7r().s[14]++;
  var handleError = function handleError(error, componentStack, eventId) {
    cov_ah47rvn7r().f[3]++;
    cov_ah47rvn7r().s[15]++;
    if (__DEV__) {
      cov_ah47rvn7r().b[6][0]++;
      cov_ah47rvn7r().s[16]++;
      console.error('Error caught by SentryErrorBoundary:', error);
      cov_ah47rvn7r().s[17]++;
      console.log('Component stack:', componentStack);
      cov_ah47rvn7r().s[18]++;
      console.log('Sentry event ID:', eventId);
    } else {
      cov_ah47rvn7r().b[6][1]++;
    }
    cov_ah47rvn7r().s[19]++;
    if (onError) {
      cov_ah47rvn7r().b[7][0]++;
      cov_ah47rvn7r().s[20]++;
      onError(error, componentStack, eventId);
    } else {
      cov_ah47rvn7r().b[7][1]++;
    }
  };
  var FallbackComponent = (cov_ah47rvn7r().s[21]++, (cov_ah47rvn7r().b[8][0]++, CustomFallback) || (cov_ah47rvn7r().b[8][1]++, DefaultErrorFallback));
  cov_ah47rvn7r().s[22]++;
  return _jsx(ErrorBoundary, {
    fallback: function fallback(errorProps) {
      cov_ah47rvn7r().f[4]++;
      cov_ah47rvn7r().s[23]++;
      return _jsx(FallbackComponent, Object.assign({}, errorProps));
    },
    onError: handleError,
    children: children
  });
};
var styles = (cov_ah47rvn7r().s[24]++, StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#f8f9fa'
  },
  scrollContainer: {
    flexGrow: 1,
    justifyContent: 'center'
  },
  content: {
    padding: 20,
    alignItems: 'center'
  },
  emoji: {
    fontSize: 48,
    marginBottom: 16
  },
  title: {
    fontSize: 22,
    fontWeight: 'bold',
    color: '#343a40',
    marginBottom: 8,
    textAlign: 'center'
  },
  message: {
    fontSize: 16,
    color: '#6c757d',
    marginBottom: 24,
    textAlign: 'center',
    lineHeight: 22
  },
  errorDetails: {
    width: '100%',
    backgroundColor: '#f1f3f5',
    borderRadius: 8,
    padding: 16,
    marginBottom: 16
  },
  errorTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#dc3545',
    marginBottom: 4
  },
  errorMessage: {
    fontSize: 14,
    color: '#495057',
    lineHeight: 20
  },
  stackTrace: {
    maxHeight: 150,
    width: '100%',
    backgroundColor: '#343a40',
    borderRadius: 8,
    padding: 12,
    marginBottom: 24
  },
  stackTraceText: {
    fontSize: 12,
    color: '#f8f9fa',
    fontFamily: Platform.OS === 'ios' ? (cov_ah47rvn7r().b[9][0]++, 'Menlo') : (cov_ah47rvn7r().b[9][1]++, 'monospace')
  },
  buttonContainer: {
    flexDirection: 'row',
    justifyContent: 'center',
    width: '100%',
    marginBottom: 16
  },
  button: {
    flex: 1,
    padding: 14,
    borderRadius: 8,
    alignItems: 'center',
    justifyContent: 'center',
    marginHorizontal: 6
  },
  primaryButton: {
    backgroundColor: '#007bff'
  },
  secondaryButton: {
    backgroundColor: 'transparent',
    borderWidth: 1,
    borderColor: '#6c757d'
  },
  disabledButton: {
    opacity: 0.6
  },
  reportedButton: {
    backgroundColor: 'transparent',
    borderWidth: 1,
    borderColor: '#28a745'
  },
  buttonText: {
    color: '#ffffff',
    fontSize: 16,
    fontWeight: '600'
  },
  secondaryButtonText: {
    color: '#6c757d',
    fontSize: 16,
    fontWeight: '600'
  },
  reportedButtonText: {
    color: '#28a745',
    fontSize: 16,
    fontWeight: '600'
  },
  eventId: {
    fontSize: 12,
    color: '#adb5bd',
    marginTop: 8
  }
}));
export default SentryErrorBoundary;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,