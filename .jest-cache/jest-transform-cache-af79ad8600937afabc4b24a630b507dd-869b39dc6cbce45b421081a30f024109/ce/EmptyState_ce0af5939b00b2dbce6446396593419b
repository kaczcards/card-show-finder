34f6090e24368625f10eb1e35acb13ec
function cov_q2x7q9jem() {
  var path = "/Users/kevin/card-show-finder/src/components/Chat/components/EmptyState.tsx";
  var hash = "f0ae54697f117fc3adcc8445b5ada32959dce464";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/components/Chat/components/EmptyState.tsx",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 46
        },
        end: {
          line: 29,
          column: 1
        }
      },
      "1": {
        start: {
          line: 20,
          column: 2
        },
        end: {
          line: 28,
          column: 4
        }
      },
      "2": {
        start: {
          line: 31,
          column: 15
        },
        end: {
          line: 50,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 46
          },
          end: {
            line: 13,
            column: 47
          }
        },
        loc: {
          start: {
            line: 19,
            column: 6
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 19
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 2
          },
          end: {
            line: 14,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 14,
            column: 10
          },
          end: {
            line: 14,
            column: 32
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 2
          },
          end: {
            line: 15,
            column: 95
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 15,
            column: 13
          },
          end: {
            line: 15,
            column: 95
          }
        }],
        line: 15
      },
      "2": {
        loc: {
          start: {
            line: 16,
            column: 2
          },
          end: {
            line: 16,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 16,
            column: 13
          },
          end: {
            line: 16,
            column: 42
          }
        }],
        line: 16
      },
      "3": {
        loc: {
          start: {
            line: 17,
            column: 2
          },
          end: {
            line: 17,
            column: 15
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 17,
            column: 13
          },
          end: {
            line: 17,
            column: 15
          }
        }],
        line: 17
      },
      "4": {
        loc: {
          start: {
            line: 18,
            column: 2
          },
          end: {
            line: 18,
            column: 23
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 18,
            column: 14
          },
          end: {
            line: 18,
            column: 23
          }
        }],
        line: 18
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f0ae54697f117fc3adcc8445b5ada32959dce464"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_q2x7q9jem = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_q2x7q9jem();
import React from 'react';
import { View, Text, StyleSheet } from 'react-native';
import { Ionicons } from '@expo/vector-icons';
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
cov_q2x7q9jem().s[0]++;
var EmptyState = function EmptyState(_ref) {
  var _ref$title = _ref.title,
    title = _ref$title === void 0 ? (cov_q2x7q9jem().b[0][0]++, 'No conversations yet') : _ref$title,
    _ref$subtitle = _ref.subtitle,
    subtitle = _ref$subtitle === void 0 ? (cov_q2x7q9jem().b[1][0]++, 'When you message a dealer or show organizer, your conversations will appear here') : _ref$subtitle,
    _ref$iconName = _ref.iconName,
    iconName = _ref$iconName === void 0 ? (cov_q2x7q9jem().b[2][0]++, 'chatbubble-ellipses-outline') : _ref$iconName,
    _ref$iconSize = _ref.iconSize,
    iconSize = _ref$iconSize === void 0 ? (cov_q2x7q9jem().b[3][0]++, 64) : _ref$iconSize,
    _ref$iconColor = _ref.iconColor,
    iconColor = _ref$iconColor === void 0 ? (cov_q2x7q9jem().b[4][0]++, '#C7C7CC') : _ref$iconColor;
  cov_q2x7q9jem().f[0]++;
  cov_q2x7q9jem().s[1]++;
  return _jsxs(View, {
    style: styles.centerContainer,
    children: [_jsx(Ionicons, {
      name: iconName,
      size: iconSize,
      color: iconColor
    }), _jsx(Text, {
      style: styles.emptyTitle,
      children: title
    }), _jsx(Text, {
      style: styles.emptySubtitle,
      children: subtitle
    })]
  });
};
var styles = (cov_q2x7q9jem().s[2]++, StyleSheet.create({
  centerContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    padding: 20
  },
  emptyTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    marginVertical: 12,
    color: '#333333'
  },
  emptySubtitle: {
    fontSize: 14,
    color: '#8E8E93',
    textAlign: 'center',
    paddingHorizontal: 20
  }
}));
export default EmptyState;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIlZpZXciLCJUZXh0IiwiU3R5bGVTaGVldCIsIklvbmljb25zIiwianN4IiwiX2pzeCIsImpzeHMiLCJfanN4cyIsImNvdl9xMng3cTlqZW0iLCJzIiwiRW1wdHlTdGF0ZSIsIl9yZWYiLCJfcmVmJHRpdGxlIiwidGl0bGUiLCJiIiwiX3JlZiRzdWJ0aXRsZSIsInN1YnRpdGxlIiwiX3JlZiRpY29uTmFtZSIsImljb25OYW1lIiwiX3JlZiRpY29uU2l6ZSIsImljb25TaXplIiwiX3JlZiRpY29uQ29sb3IiLCJpY29uQ29sb3IiLCJmIiwic3R5bGUiLCJzdHlsZXMiLCJjZW50ZXJDb250YWluZXIiLCJjaGlsZHJlbiIsIm5hbWUiLCJzaXplIiwiY29sb3IiLCJlbXB0eVRpdGxlIiwiZW1wdHlTdWJ0aXRsZSIsImNyZWF0ZSIsImZsZXgiLCJqdXN0aWZ5Q29udGVudCIsImFsaWduSXRlbXMiLCJwYWRkaW5nIiwiZm9udFNpemUiLCJmb250V2VpZ2h0IiwibWFyZ2luVmVydGljYWwiLCJ0ZXh0QWxpZ24iLCJwYWRkaW5nSG9yaXpvbnRhbCJdLCJzb3VyY2VzIjpbIkVtcHR5U3RhdGUudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBWaWV3LCBUZXh0LCBTdHlsZVNoZWV0IH0gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCB7IElvbmljb25zIH0gZnJvbSAnQGV4cG8vdmVjdG9yLWljb25zJztcblxuaW50ZXJmYWNlIEVtcHR5U3RhdGVQcm9wcyB7XG4gIHRpdGxlPzogc3RyaW5nO1xuICBzdWJ0aXRsZT86IHN0cmluZztcbiAgaWNvbk5hbWU/OiBzdHJpbmc7XG4gIGljb25TaXplPzogbnVtYmVyO1xuICBpY29uQ29sb3I/OiBzdHJpbmc7XG59XG5cbmNvbnN0IEVtcHR5U3RhdGU6IFJlYWN0LkZDPEVtcHR5U3RhdGVQcm9wcz4gPSAoe1xuICB0aXRsZSA9ICdObyBjb252ZXJzYXRpb25zIHlldCcsXG4gIHN1YnRpdGxlID0gJ1doZW4geW91IG1lc3NhZ2UgYSBkZWFsZXIgb3Igc2hvdyBvcmdhbml6ZXIsIHlvdXIgY29udmVyc2F0aW9ucyB3aWxsIGFwcGVhciBoZXJlJyxcbiAgaWNvbk5hbWUgPSAnY2hhdGJ1YmJsZS1lbGxpcHNlcy1vdXRsaW5lJyxcbiAgaWNvblNpemUgPSA2NCxcbiAgaWNvbkNvbG9yID0gJyNDN0M3Q0MnXG59KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5jZW50ZXJDb250YWluZXJ9PlxuICAgICAgPElvbmljb25zIG5hbWU9e2ljb25OYW1lfSBzaXplPXtpY29uU2l6ZX0gY29sb3I9e2ljb25Db2xvcn0gLz5cbiAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMuZW1wdHlUaXRsZX0+e3RpdGxlfTwvVGV4dD5cbiAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMuZW1wdHlTdWJ0aXRsZX0+XG4gICAgICAgIHtzdWJ0aXRsZX1cbiAgICAgIDwvVGV4dD5cbiAgICA8L1ZpZXc+XG4gICk7XG59O1xuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIGNlbnRlckNvbnRhaW5lcjoge1xuICAgIGZsZXg6IDEsXG4gICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIHBhZGRpbmc6IDIwLFxuICB9LFxuICBlbXB0eVRpdGxlOiB7XG4gICAgZm9udFNpemU6IDE4LFxuICAgIGZvbnRXZWlnaHQ6ICdib2xkJyxcbiAgICBtYXJnaW5WZXJ0aWNhbDogMTIsXG4gICAgY29sb3I6ICcjMzMzMzMzJyxcbiAgfSxcbiAgZW1wdHlTdWJ0aXRsZToge1xuICAgIGZvbnRTaXplOiAxNCxcbiAgICBjb2xvcjogJyM4RThFOTMnLFxuICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXG4gICAgcGFkZGluZ0hvcml6b250YWw6IDIwLFxuICB9LFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0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