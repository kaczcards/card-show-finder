7593c0e937298734819645be08c6211b
"use strict";

/**
 * Admin Service
 *
 * This file contains admin-specific functions for the Card Show Finder app.
 * These functions are used for the coordinate validation tool and other admin features.
 */
/* istanbul ignore next */
function cov_1fwfr31yms() {
  var path = "/Users/kevin/card-show-finder/src/services/adminService.ts";
  var hash = "fd804556f6ed273731f8de7ca47de570f184d4dd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/services/adminService.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 153
        }
      },
      "2": {
        start: {
          line: 10,
          column: 19
        },
        end: {
          line: 10,
          column: 41
        }
      },
      "3": {
        start: {
          line: 17,
          column: 27
        },
        end: {
          line: 45,
          column: 2
        }
      },
      "4": {
        start: {
          line: 17,
          column: 37
        },
        end: {
          line: 45,
          column: 1
        }
      },
      "5": {
        start: {
          line: 51,
          column: 25
        },
        end: {
          line: 82,
          column: 1
        }
      },
      "6": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 81,
          column: 5
        }
      },
      "7": {
        start: {
          line: 53,
          column: 32
        },
        end: {
          line: 53,
          column: 73
        }
      },
      "8": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "9": {
        start: {
          line: 56,
          column: 36
        },
        end: {
          line: 57,
          column: 53
        }
      },
      "10": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 72,
          column: 13
        }
      },
      "11": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 71,
          column: 17
        }
      },
      "12": {
        start: {
          line: 61,
          column: 48
        },
        end: {
          line: 61,
          column: 88
        }
      },
      "13": {
        start: {
          line: 62,
          column: 20
        },
        end: {
          line: 64,
          column: 21
        }
      },
      "14": {
        start: {
          line: 63,
          column: 24
        },
        end: {
          line: 63,
          column: 62
        }
      },
      "15": {
        start: {
          line: 66,
          column: 20
        },
        end: {
          line: 66,
          column: 59
        }
      },
      "16": {
        start: {
          line: 69,
          column: 20
        },
        end: {
          line: 69,
          column: 79
        }
      },
      "17": {
        start: {
          line: 70,
          column: 20
        },
        end: {
          line: 70,
          column: 91
        }
      },
      "18": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 65
        }
      },
      "19": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 60
        }
      },
      "20": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 48
        }
      },
      "21": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 70
        }
      },
      "22": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 88
        }
      },
      "23": {
        start: {
          line: 83,
          column: 0
        },
        end: {
          line: 83,
          column: 44
        }
      },
      "24": {
        start: {
          line: 90,
          column: 33
        },
        end: {
          line: 136,
          column: 1
        }
      },
      "25": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 135,
          column: 5
        }
      },
      "26": {
        start: {
          line: 93,
          column: 52
        },
        end: {
          line: 93,
          column: 89
        }
      },
      "27": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "28": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 57
        }
      },
      "29": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 99,
          column: 9
        }
      },
      "30": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 83
        }
      },
      "31": {
        start: {
          line: 103,
          column: 30
        },
        end: {
          line: 106,
          column: 54
        }
      },
      "32": {
        start: {
          line: 110,
          column: 28
        },
        end: {
          line: 115,
          column: 62
        }
      },
      "33": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "34": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 99
        }
      },
      "35": {
        start: {
          line: 118,
          column: 23
        },
        end: {
          line: 121,
          column: 58
        }
      },
      "36": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 27
        }
      },
      "37": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 29
        }
      },
      "38": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 128,
          column: 9
        }
      },
      "39": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 73
        }
      },
      "40": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 55
        }
      },
      "41": {
        start: {
          line: 129,
          column: 28
        },
        end: {
          line: 129,
          column: 83
        }
      },
      "42": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 51
        }
      },
      "43": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 78
        }
      },
      "44": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 83
        }
      },
      "45": {
        start: {
          line: 137,
          column: 0
        },
        end: {
          line: 137,
          column: 60
        }
      },
      "46": {
        start: {
          line: 145,
          column: 30
        },
        end: {
          line: 205,
          column: 1
        }
      },
      "47": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 204,
          column: 5
        }
      },
      "48": {
        start: {
          line: 148,
          column: 52
        },
        end: {
          line: 148,
          column: 89
        }
      },
      "49": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 151,
          column: 9
        }
      },
      "50": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 62
        }
      },
      "51": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 154,
          column: 9
        }
      },
      "52": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 88
        }
      },
      "53": {
        start: {
          line: 156,
          column: 31
        },
        end: {
          line: 156,
          column: 98
        }
      },
      "54": {
        start: {
          line: 158,
          column: 36
        },
        end: {
          line: 164,
          column: 29
        }
      },
      "55": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 168,
          column: 9
        }
      },
      "56": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 50
        }
      },
      "57": {
        start: {
          line: 179,
          column: 36
        },
        end: {
          line: 182,
          column: 9
        }
      },
      "58": {
        start: {
          line: 183,
          column: 35
        },
        end: {
          line: 189,
          column: 29
        }
      },
      "59": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 196,
          column: 9
        }
      },
      "60": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 194,
          column: 15
        }
      },
      "61": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 83
        }
      },
      "62": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 198,
          column: 104
        }
      },
      "63": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 199,
          column: 46
        }
      },
      "64": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 202,
          column: 74
        }
      },
      "65": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 203,
          column: 88
        }
      },
      "66": {
        start: {
          line: 206,
          column: 0
        },
        end: {
          line: 206,
          column: 54
        }
      },
      "67": {
        start: {
          line: 214,
          column: 24
        },
        end: {
          line: 227,
          column: 1
        }
      },
      "68": {
        start: {
          line: 215,
          column: 4
        },
        end: {
          line: 226,
          column: 5
        }
      },
      "69": {
        start: {
          line: 216,
          column: 26
        },
        end: {
          line: 216,
          column: 104
        }
      },
      "70": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 220,
          column: 9
        }
      },
      "71": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 64
        }
      },
      "72": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 60
        }
      },
      "73": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 221,
          column: 46
        }
      },
      "74": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 69
        }
      },
      "75": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 88
        }
      },
      "76": {
        start: {
          line: 228,
          column: 0
        },
        end: {
          line: 228,
          column: 42
        }
      },
      "77": {
        start: {
          line: 236,
          column: 24
        },
        end: {
          line: 249,
          column: 1
        }
      },
      "78": {
        start: {
          line: 237,
          column: 4
        },
        end: {
          line: 248,
          column: 5
        }
      },
      "79": {
        start: {
          line: 238,
          column: 26
        },
        end: {
          line: 238,
          column: 104
        }
      },
      "80": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 242,
          column: 9
        }
      },
      "81": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 240,
          column: 63
        }
      },
      "82": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 60
        }
      },
      "83": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 243,
          column: 46
        }
      },
      "84": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 246,
          column: 68
        }
      },
      "85": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 247,
          column: 88
        }
      },
      "86": {
        start: {
          line: 250,
          column: 0
        },
        end: {
          line: 250,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 27
          },
          end: {
            line: 17,
            column: 28
          }
        },
        loc: {
          start: {
            line: 17,
            column: 37
          },
          end: {
            line: 45,
            column: 1
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 51,
            column: 25
          },
          end: {
            line: 51,
            column: 26
          }
        },
        loc: {
          start: {
            line: 51,
            column: 37
          },
          end: {
            line: 82,
            column: 1
          }
        },
        line: 51
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 90,
            column: 33
          },
          end: {
            line: 90,
            column: 34
          }
        },
        loc: {
          start: {
            line: 90,
            column: 45
          },
          end: {
            line: 136,
            column: 1
          }
        },
        line: 90
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 145,
            column: 30
          },
          end: {
            line: 145,
            column: 31
          }
        },
        loc: {
          start: {
            line: 145,
            column: 61
          },
          end: {
            line: 205,
            column: 1
          }
        },
        line: 145
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 214,
            column: 24
          },
          end: {
            line: 214,
            column: 25
          }
        },
        loc: {
          start: {
            line: 214,
            column: 42
          },
          end: {
            line: 227,
            column: 1
          }
        },
        line: 214
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 236,
            column: 24
          },
          end: {
            line: 236,
            column: 25
          }
        },
        loc: {
          start: {
            line: 236,
            column: 42
          },
          end: {
            line: 249,
            column: 1
          }
        },
        line: 236
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 17
          },
          end: {
            line: 27,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 17
          },
          end: {
            line: 27,
            column: 32
          }
        }, {
          start: {
            line: 27,
            column: 36
          },
          end: {
            line: 27,
            column: 45
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 14
          },
          end: {
            line: 28,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 14
          },
          end: {
            line: 28,
            column: 27
          }
        }, {
          start: {
            line: 28,
            column: 31
          },
          end: {
            line: 28,
            column: 40
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 29,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 29,
            column: 22
          }
        }, {
          start: {
            line: 29,
            column: 26
          },
          end: {
            line: 29,
            column: 35
          }
        }],
        line: 29
      },
      "3": {
        loc: {
          start: {
            line: 30,
            column: 17
          },
          end: {
            line: 36,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        }, {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 21
          }
        }],
        line: 30
      },
      "4": {
        loc: {
          start: {
            line: 30,
            column: 17
          },
          end: {
            line: 31,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 17
          },
          end: {
            line: 30,
            column: 32
          }
        }, {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 43
          }
        }],
        line: 30
      },
      "5": {
        loc: {
          start: {
            line: 34,
            column: 22
          },
          end: {
            line: 34,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 22
          },
          end: {
            line: 34,
            column: 66
          }
        }, {
          start: {
            line: 34,
            column: 70
          },
          end: {
            line: 34,
            column: 71
          }
        }],
        line: 34
      },
      "6": {
        loc: {
          start: {
            line: 35,
            column: 23
          },
          end: {
            line: 35,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 23
          },
          end: {
            line: 35,
            column: 67
          }
        }, {
          start: {
            line: 35,
            column: 71
          },
          end: {
            line: 35,
            column: 72
          }
        }],
        line: 35
      },
      "7": {
        loc: {
          start: {
            line: 39,
            column: 14
          },
          end: {
            line: 39,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 14
          },
          end: {
            line: 39,
            column: 26
          }
        }, {
          start: {
            line: 39,
            column: 30
          },
          end: {
            line: 39,
            column: 32
          }
        }],
        line: 39
      },
      "8": {
        loc: {
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 40,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 40,
            column: 30
          }
        }, {
          start: {
            line: 40,
            column: 34
          },
          end: {
            line: 40,
            column: 36
          }
        }],
        line: 40
      },
      "9": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "10": {
        loc: {
          start: {
            line: 56,
            column: 36
          },
          end: {
            line: 57,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 36
          },
          end: {
            line: 56,
            column: 61
          }
        }, {
          start: {
            line: 57,
            column: 16
          },
          end: {
            line: 57,
            column: 53
          }
        }],
        line: 56
      },
      "11": {
        loc: {
          start: {
            line: 57,
            column: 33
          },
          end: {
            line: 57,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 33
          },
          end: {
            line: 57,
            column: 46
          }
        }, {
          start: {
            line: 57,
            column: 50
          },
          end: {
            line: 57,
            column: 52
          }
        }],
        line: 57
      },
      "12": {
        loc: {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 72,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 72,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "13": {
        loc: {
          start: {
            line: 62,
            column: 20
          },
          end: {
            line: 64,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 20
          },
          end: {
            line: 64,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "14": {
        loc: {
          start: {
            line: 70,
            column: 52
          },
          end: {
            line: 70,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 52
          },
          end: {
            line: 70,
            column: 71
          }
        }, {
          start: {
            line: 70,
            column: 75
          },
          end: {
            line: 70,
            column: 88
          }
        }],
        line: 70
      },
      "15": {
        loc: {
          start: {
            line: 80,
            column: 40
          },
          end: {
            line: 80,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 40
          },
          end: {
            line: 80,
            column: 51
          }
        }, {
          start: {
            line: 80,
            column: 55
          },
          end: {
            line: 80,
            column: 85
          }
        }],
        line: 80
      },
      "16": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "17": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "18": {
        loc: {
          start: {
            line: 110,
            column: 28
          },
          end: {
            line: 115,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 28
          },
          end: {
            line: 110,
            column: 33
          }
        }, {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 113,
            column: 37
          }
        }, {
          start: {
            line: 114,
            column: 16
          },
          end: {
            line: 114,
            column: 41
          }
        }, {
          start: {
            line: 115,
            column: 16
          },
          end: {
            line: 115,
            column: 61
          }
        }],
        line: 110
      },
      "19": {
        loc: {
          start: {
            line: 115,
            column: 41
          },
          end: {
            line: 115,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 41
          },
          end: {
            line: 115,
            column: 54
          }
        }, {
          start: {
            line: 115,
            column: 58
          },
          end: {
            line: 115,
            column: 60
          }
        }],
        line: 115
      },
      "20": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "21": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "22": {
        loc: {
          start: {
            line: 129,
            column: 28
          },
          end: {
            line: 129,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 129,
            column: 50
          },
          end: {
            line: 129,
            column: 78
          }
        }, {
          start: {
            line: 129,
            column: 81
          },
          end: {
            line: 129,
            column: 83
          }
        }],
        line: 129
      },
      "23": {
        loc: {
          start: {
            line: 134,
            column: 35
          },
          end: {
            line: 134,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 35
          },
          end: {
            line: 134,
            column: 46
          }
        }, {
          start: {
            line: 134,
            column: 50
          },
          end: {
            line: 134,
            column: 80
          }
        }],
        line: 134
      },
      "24": {
        loc: {
          start: {
            line: 149,
            column: 8
          },
          end: {
            line: 151,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 8
          },
          end: {
            line: 151,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "25": {
        loc: {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "26": {
        loc: {
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "27": {
        loc: {
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 196,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 196,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "28": {
        loc: {
          start: {
            line: 195,
            column: 44
          },
          end: {
            line: 195,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 195,
            column: 44
          },
          end: {
            line: 195,
            column: 61
          }
        }, {
          start: {
            line: 195,
            column: 65
          },
          end: {
            line: 195,
            column: 80
          }
        }],
        line: 195
      },
      "29": {
        loc: {
          start: {
            line: 203,
            column: 40
          },
          end: {
            line: 203,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 203,
            column: 40
          },
          end: {
            line: 203,
            column: 51
          }
        }, {
          start: {
            line: 203,
            column: 55
          },
          end: {
            line: 203,
            column: 85
          }
        }],
        line: 203
      },
      "30": {
        loc: {
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "31": {
        loc: {
          start: {
            line: 225,
            column: 40
          },
          end: {
            line: 225,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 225,
            column: 40
          },
          end: {
            line: 225,
            column: 51
          }
        }, {
          start: {
            line: 225,
            column: 55
          },
          end: {
            line: 225,
            column: 85
          }
        }],
        line: 225
      },
      "32": {
        loc: {
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 242,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 242,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 239
      },
      "33": {
        loc: {
          start: {
            line: 247,
            column: 40
          },
          end: {
            line: 247,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 247,
            column: 40
          },
          end: {
            line: 247,
            column: 51
          }
        }, {
          start: {
            line: 247,
            column: 55
          },
          end: {
            line: 247,
            column: 85
          }
        }],
        line: 247
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0, 0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kevin/card-show-finder/src/services/adminService.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/kevin/card-show-finder/src/services/adminService.ts"],
      sourcesContent: ["/**\n * Admin Service\n *\n * This file contains admin-specific functions for the Card Show Finder app.\n * These functions are used for the coordinate validation tool and other admin features.\n */\n\nimport { supabase } from '../supabase';\nimport { Show, Coordinates } from '../types';\n\n/**\n * Maps a database show record to the app's Show type.\n * \n * @param row The raw database record\n * @returns A Show object with properly mapped fields\n */\nconst mapDbShowToAppShow = (row: any): Show => ({\n  id: row.id,\n  title: row.title,\n  location: row.location,\n  address: row.address,\n  startDate: row.start_date,\n  endDate: row.end_date,\n  startTime: row.start_time,\n  endTime: row.end_time,\n  entryFee: row.entry_fee,\n  description: row.description ?? undefined,\n  imageUrl: row.image_url ?? undefined,\n  rating: row.rating ?? undefined,\n  coordinates: row.coordinates && \n    typeof row.coordinates === 'object' ? \n    {\n      // Extract coordinates from PostGIS geography type\n      latitude: parseFloat(row.coordinates.coordinates?.[1]) || 0,\n      longitude: parseFloat(row.coordinates.coordinates?.[0]) || 0,\n    } : undefined,\n  status: row.status,\n  organizerId: row.organizer_id,\n  features: row.features ?? {},\n  categories: row.categories ?? [],\n  createdAt: row.created_at,\n  updatedAt: row.updated_at,\n  seriesId: row.series_id,\n  websiteUrl: row.website_url,\n});\n\n/**\n * Checks if the current user has admin privileges.\n * \n * @returns An object containing isAdmin status and any error message\n */\nexport const checkAdminStatus = async (): Promise<{ isAdmin: boolean; error: string | null }> => {\n  try {\n    const { data, error } = await supabase.rpc('is_admin');\n    \n    if (error) {\n      // If the function is missing in the DB, fall back to a hard-coded check\n      const functionMissing =\n        error.code === 'PGRST202' ||                        // Supabase \u201Cfunction not found\u201D\n        /is_admin/i.test(error.message || '');              // Generic missing-function hint\n\n      if (functionMissing) {\n        try {\n          // Safe fallback: treat the configured email as an admin until the DB is fixed\n          const {\n            data: { user },\n          } = await supabase.auth.getUser();\n\n          if (user?.email?.toLowerCase() === 'kaczcards@gmail.com') {\n            return { isAdmin: true, error: null };\n          }\n\n          // Not the fallback admin \u2013 report no error (avoid blocking UI)\n          return { isAdmin: false, error: null };\n        } catch (fallbackErr: any) {\n          console.error('Fallback admin check failed:', fallbackErr);\n          return { isAdmin: false, error: fallbackErr.message || error.message };\n        }\n      }\n\n      console.error('Error checking admin status:', error);\n      return { isAdmin: false, error: error.message };\n    }\n    \n    return { isAdmin: !!data, error: null };\n  } catch (err: any) {\n    console.error('Unexpected error checking admin status:', err);\n    return { isAdmin: false, error: err.message || 'An unexpected error occurred' };\n  }\n};\n\n/**\n * Fetches all shows from the database for admin validation.\n * This function ignores any date or distance filters and returns all shows.\n * \n * @returns An object containing an array of shows and any error message\n */\nexport const getAllShowsForValidation = async (): Promise<{ shows: Show[]; error: string | null }> => {\n  try {\n    // First check if the user has admin privileges\n    const { isAdmin, error: adminCheckError } = await checkAdminStatus();\n    \n    if (adminCheckError) {\n      return { shows: [], error: adminCheckError };\n    }\n    \n    if (!isAdmin) {\n      return { shows: [], error: 'Unauthorized: Admin privileges required' };\n    }\n    \n    /* -----------------------------------------------------------\n     * 1. Primary attempt \u2013 use the dedicated admin view\n     * --------------------------------------------------------- */\n    let { data, error } = await supabase\n      .from('admin_shows_view')\n      .select('*')\n      .order('created_at', { ascending: false });\n\n    /* -----------------------------------------------------------\n     * 2. Fallback \u2013 if the view doesn't exist yet, query shows\n     * --------------------------------------------------------- */\n    const viewMissing =\n      error &&\n      (\n        // Supabase \u201Crelation/view not found\u201D codes\n        error.code === 'PGRST116' /* relation not found */ ||\n        error.code === 'PGRST201' /* view not found */ ||\n        /admin_shows_view/i.test(error.message || '')\n      );\n\n    if (viewMissing) {\n      console.warn(\n        '[adminService] admin_shows_view missing \u2013 falling back to public.shows',\n      );\n      const fb = await supabase\n        .from('shows')\n        .select('*')\n        .order('created_at', { ascending: false });\n      data = fb.data;\n      error = fb.error;\n    }\n\n    if (error) {\n      console.error('Error fetching shows for validation:', error);\n      return { shows: [], error: error.message };\n    }\n\n    const mappedShows = Array.isArray(data) ? data.map(mapDbShowToAppShow) : [];\n    return { shows: mappedShows, error: null };\n  } catch (err: any) {\n    console.error('Unexpected error fetching shows for validation:', err);\n    return { shows: [], error: err.message || 'An unexpected error occurred' };\n  }\n};\n\n/**\n * Updates the coordinates for a specific show.\n * \n * @param showId The ID of the show to update\n * @param coordinates The new coordinates for the show\n * @returns An object indicating success and any error message\n */\nexport const updateShowCoordinates = async (\n  showId: string,\n  coordinates: Coordinates\n): Promise<{ success: boolean; error: string | null }> => {\n  try {\n    // First check if the user has admin privileges\n    const { isAdmin, error: adminCheckError } = await checkAdminStatus();\n    \n    if (adminCheckError) {\n      return { success: false, error: adminCheckError };\n    }\n    \n    if (!isAdmin) {\n      return { success: false, error: 'Unauthorized: Admin privileges required' };\n    }\n    \n    // Convert coordinates to PostGIS geography point format\n    const geographyPoint = `SRID=4326;POINT(${coordinates.longitude} ${coordinates.latitude})`;\n    \n    // First attempt: PostGIS geography update\n    const { error: geoError } = await supabase\n      .from('shows')\n      .update({\n        coordinates: geographyPoint,\n        updated_at: new Date().toISOString(),\n      })\n      .eq('id', showId);\n\n    // If PostGIS update works, we're done\n    if (!geoError) {\n      return { success: true, error: null };\n    }\n\n    /* ------------------------------------------------------------------\n     * Fallback \u2013 if the geography column / extension isn't available yet\n     * ------------------------------------------------------------------\n     * We try a plain JSON representation that Supabase/Postgres will\n     * happily store in a JSONB column (or even a text column) so that\n     * coordinates are not lost.\n     *\n     * This keeps the admin UI functional even on staging DBs that haven't\n     * enabled PostGIS.\n     */\n    const fallbackCoordinates = {\n      type: 'Point',\n      coordinates: [coordinates.longitude, coordinates.latitude],\n    };\n\n    const { error: fbError } = await supabase\n      .from('shows')\n      .update({\n        coordinates: fallbackCoordinates as any,\n        updated_at: new Date().toISOString(),\n      })\n      .eq('id', showId);\n\n    if (fbError) {\n      console.error('Error updating show coordinates (both attempts failed):', {\n        primary: geoError?.message,\n        fallback: fbError.message,\n      });\n      return { success: false, error: geoError?.message || fbError.message };\n    }\n\n    // Fallback succeeded\n    console.warn(\n      '[adminService] PostGIS update failed, stored fallback JSON coordinates instead.',\n    );\n    return { success: true, error: null };\n  } catch (err: any) {\n    console.error('Unexpected error updating show coordinates:', err);\n    return { success: false, error: err.message || 'An unexpected error occurred' };\n  }\n};\n\n/**\n * Assigns admin role to a user.\n * Only existing admins can assign new admins.\n * \n * @param userId The ID of the user to make an admin\n * @returns An object indicating success and any error message\n */\nexport const assignAdminRole = async (\n  userId: string\n): Promise<{ success: boolean; error: string | null }> => {\n  try {\n    const { error } = await supabase.rpc('assign_admin_role', { target_user_id: userId });\n    \n    if (error) {\n      console.error('Error assigning admin role:', error);\n      return { success: false, error: error.message };\n    }\n    \n    return { success: true, error: null };\n  } catch (err: any) {\n    console.error('Unexpected error assigning admin role:', err);\n    return { success: false, error: err.message || 'An unexpected error occurred' };\n  }\n};\n\n/**\n * Revokes admin role from a user.\n * Only existing admins can revoke admin roles.\n * \n * @param userId The ID of the user to remove admin privileges from\n * @returns An object indicating success and any error message\n */\nexport const revokeAdminRole = async (\n  userId: string\n): Promise<{ success: boolean; error: string | null }> => {\n  try {\n    const { error } = await supabase.rpc('revoke_admin_role', { target_user_id: userId });\n    \n    if (error) {\n      console.error('Error revoking admin role:', error);\n      return { success: false, error: error.message };\n    }\n    \n    return { success: true, error: null };\n  } catch (err: any) {\n    console.error('Unexpected error revoking admin role:', err);\n    return { success: false, error: err.message || 'An unexpected error occurred' };\n  }\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fd804556f6ed273731f8de7ca47de570f184d4dd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1fwfr31yms = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1fwfr31yms();
cov_1fwfr31yms().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1fwfr31yms().s[1]++;
exports.revokeAdminRole = exports.assignAdminRole = exports.updateShowCoordinates = exports.getAllShowsForValidation = exports.checkAdminStatus = void 0;
const supabase_1 =
/* istanbul ignore next */
(cov_1fwfr31yms().s[2]++, require("../supabase"));
/**
 * Maps a database show record to the app's Show type.
 *
 * @param row The raw database record
 * @returns A Show object with properly mapped fields
 */
/* istanbul ignore next */
cov_1fwfr31yms().s[3]++;
const mapDbShowToAppShow = row => {
  /* istanbul ignore next */
  cov_1fwfr31yms().f[0]++;
  cov_1fwfr31yms().s[4]++;
  return {
    id: row.id,
    title: row.title,
    location: row.location,
    address: row.address,
    startDate: row.start_date,
    endDate: row.end_date,
    startTime: row.start_time,
    endTime: row.end_time,
    entryFee: row.entry_fee,
    description:
    /* istanbul ignore next */
    (cov_1fwfr31yms().b[0][0]++, row.description) ??
    /* istanbul ignore next */
    (cov_1fwfr31yms().b[0][1]++, undefined),
    imageUrl:
    /* istanbul ignore next */
    (cov_1fwfr31yms().b[1][0]++, row.image_url) ??
    /* istanbul ignore next */
    (cov_1fwfr31yms().b[1][1]++, undefined),
    rating:
    /* istanbul ignore next */
    (cov_1fwfr31yms().b[2][0]++, row.rating) ??
    /* istanbul ignore next */
    (cov_1fwfr31yms().b[2][1]++, undefined),
    coordinates:
    /* istanbul ignore next */
    (cov_1fwfr31yms().b[4][0]++, row.coordinates) &&
    /* istanbul ignore next */
    (cov_1fwfr31yms().b[4][1]++, typeof row.coordinates === 'object') ?
    /* istanbul ignore next */
    (cov_1fwfr31yms().b[3][0]++, {
      // Extract coordinates from PostGIS geography type
      latitude:
      /* istanbul ignore next */
      (cov_1fwfr31yms().b[5][0]++, parseFloat(row.coordinates.coordinates?.[1])) ||
      /* istanbul ignore next */
      (cov_1fwfr31yms().b[5][1]++, 0),
      longitude:
      /* istanbul ignore next */
      (cov_1fwfr31yms().b[6][0]++, parseFloat(row.coordinates.coordinates?.[0])) ||
      /* istanbul ignore next */
      (cov_1fwfr31yms().b[6][1]++, 0)
    }) :
    /* istanbul ignore next */
    (cov_1fwfr31yms().b[3][1]++, undefined),
    status: row.status,
    organizerId: row.organizer_id,
    features:
    /* istanbul ignore next */
    (cov_1fwfr31yms().b[7][0]++, row.features) ??
    /* istanbul ignore next */
    (cov_1fwfr31yms().b[7][1]++, {}),
    categories:
    /* istanbul ignore next */
    (cov_1fwfr31yms().b[8][0]++, row.categories) ??
    /* istanbul ignore next */
    (cov_1fwfr31yms().b[8][1]++, []),
    createdAt: row.created_at,
    updatedAt: row.updated_at,
    seriesId: row.series_id,
    websiteUrl: row.website_url
  };
};
/**
 * Checks if the current user has admin privileges.
 *
 * @returns An object containing isAdmin status and any error message
 */
/* istanbul ignore next */
cov_1fwfr31yms().s[5]++;
const checkAdminStatus = async () => {
  /* istanbul ignore next */
  cov_1fwfr31yms().f[1]++;
  cov_1fwfr31yms().s[6]++;
  try {
    const {
      data,
      error
    } =
    /* istanbul ignore next */
    (cov_1fwfr31yms().s[7]++, await supabase_1.supabase.rpc('is_admin'));
    /* istanbul ignore next */
    cov_1fwfr31yms().s[8]++;
    if (error) {
      /* istanbul ignore next */
      cov_1fwfr31yms().b[9][0]++;
      // If the function is missing in the DB, fall back to a hard-coded check
      const functionMissing =
      /* istanbul ignore next */
      (cov_1fwfr31yms().s[9]++,
      /* istanbul ignore next */
      (cov_1fwfr31yms().b[10][0]++, error.code === 'PGRST202') ||
      /* istanbul ignore next */
      (cov_1fwfr31yms().b[10][1]++,
      // Supabase “function not found”
      /is_admin/i.test(
      /* istanbul ignore next */
      (cov_1fwfr31yms().b[11][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_1fwfr31yms().b[11][1]++, '')))); // Generic missing-function hint
      /* istanbul ignore next */
      cov_1fwfr31yms().s[10]++;
      if (functionMissing) {
        /* istanbul ignore next */
        cov_1fwfr31yms().b[12][0]++;
        cov_1fwfr31yms().s[11]++;
        try {
          // Safe fallback: treat the configured email as an admin until the DB is fixed
          const {
            data: {
              user
            }
          } =
          /* istanbul ignore next */
          (cov_1fwfr31yms().s[12]++, await supabase_1.supabase.auth.getUser());
          /* istanbul ignore next */
          cov_1fwfr31yms().s[13]++;
          if (user?.email?.toLowerCase() === 'kaczcards@gmail.com') {
            /* istanbul ignore next */
            cov_1fwfr31yms().b[13][0]++;
            cov_1fwfr31yms().s[14]++;
            return {
              isAdmin: true,
              error: null
            };
          } else
          /* istanbul ignore next */
          {
            cov_1fwfr31yms().b[13][1]++;
          }
          // Not the fallback admin – report no error (avoid blocking UI)
          cov_1fwfr31yms().s[15]++;
          return {
            isAdmin: false,
            error: null
          };
        } catch (fallbackErr) {
          /* istanbul ignore next */
          cov_1fwfr31yms().s[16]++;
          console.error('Fallback admin check failed:', fallbackErr);
          /* istanbul ignore next */
          cov_1fwfr31yms().s[17]++;
          return {
            isAdmin: false,
            error:
            /* istanbul ignore next */
            (cov_1fwfr31yms().b[14][0]++, fallbackErr.message) ||
            /* istanbul ignore next */
            (cov_1fwfr31yms().b[14][1]++, error.message)
          };
        }
      } else
      /* istanbul ignore next */
      {
        cov_1fwfr31yms().b[12][1]++;
      }
      cov_1fwfr31yms().s[18]++;
      console.error('Error checking admin status:', error);
      /* istanbul ignore next */
      cov_1fwfr31yms().s[19]++;
      return {
        isAdmin: false,
        error: error.message
      };
    } else
    /* istanbul ignore next */
    {
      cov_1fwfr31yms().b[9][1]++;
    }
    cov_1fwfr31yms().s[20]++;
    return {
      isAdmin: !!data,
      error: null
    };
  } catch (err) {
    /* istanbul ignore next */
    cov_1fwfr31yms().s[21]++;
    console.error('Unexpected error checking admin status:', err);
    /* istanbul ignore next */
    cov_1fwfr31yms().s[22]++;
    return {
      isAdmin: false,
      error:
      /* istanbul ignore next */
      (cov_1fwfr31yms().b[15][0]++, err.message) ||
      /* istanbul ignore next */
      (cov_1fwfr31yms().b[15][1]++, 'An unexpected error occurred')
    };
  }
};
/* istanbul ignore next */
cov_1fwfr31yms().s[23]++;
exports.checkAdminStatus = checkAdminStatus;
/**
 * Fetches all shows from the database for admin validation.
 * This function ignores any date or distance filters and returns all shows.
 *
 * @returns An object containing an array of shows and any error message
 */
/* istanbul ignore next */
cov_1fwfr31yms().s[24]++;
const getAllShowsForValidation = async () => {
  /* istanbul ignore next */
  cov_1fwfr31yms().f[2]++;
  cov_1fwfr31yms().s[25]++;
  try {
    // First check if the user has admin privileges
    const {
      isAdmin,
      error: adminCheckError
    } =
    /* istanbul ignore next */
    (cov_1fwfr31yms().s[26]++, await (0, exports.checkAdminStatus)());
    /* istanbul ignore next */
    cov_1fwfr31yms().s[27]++;
    if (adminCheckError) {
      /* istanbul ignore next */
      cov_1fwfr31yms().b[16][0]++;
      cov_1fwfr31yms().s[28]++;
      return {
        shows: [],
        error: adminCheckError
      };
    } else
    /* istanbul ignore next */
    {
      cov_1fwfr31yms().b[16][1]++;
    }
    cov_1fwfr31yms().s[29]++;
    if (!isAdmin) {
      /* istanbul ignore next */
      cov_1fwfr31yms().b[17][0]++;
      cov_1fwfr31yms().s[30]++;
      return {
        shows: [],
        error: 'Unauthorized: Admin privileges required'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1fwfr31yms().b[17][1]++;
    }
    /* -----------------------------------------------------------
     * 1. Primary attempt – use the dedicated admin view
     * --------------------------------------------------------- */
    let {
      data,
      error
    } =
    /* istanbul ignore next */
    (cov_1fwfr31yms().s[31]++, await supabase_1.supabase.from('admin_shows_view').select('*').order('created_at', {
      ascending: false
    }));
    /* -----------------------------------------------------------
     * 2. Fallback – if the view doesn't exist yet, query shows
     * --------------------------------------------------------- */
    const viewMissing =
    /* istanbul ignore next */
    (cov_1fwfr31yms().s[32]++,
    /* istanbul ignore next */
    (cov_1fwfr31yms().b[18][0]++, error) && (
    // Supabase “relation/view not found” codes
    /* istanbul ignore next */
    (cov_1fwfr31yms().b[18][1]++, error.code === 'PGRST116' /* relation not found */) ||
    /* istanbul ignore next */
    (cov_1fwfr31yms().b[18][2]++, error.code === 'PGRST201') /* view not found */ ||
    /* istanbul ignore next */
    (cov_1fwfr31yms().b[18][3]++, /admin_shows_view/i.test(
    /* istanbul ignore next */
    (cov_1fwfr31yms().b[19][0]++, error.message) ||
    /* istanbul ignore next */
    (cov_1fwfr31yms().b[19][1]++, '')))));
    /* istanbul ignore next */
    cov_1fwfr31yms().s[33]++;
    if (viewMissing) {
      /* istanbul ignore next */
      cov_1fwfr31yms().b[20][0]++;
      cov_1fwfr31yms().s[34]++;
      console.warn('[adminService] admin_shows_view missing – falling back to public.shows');
      const fb =
      /* istanbul ignore next */
      (cov_1fwfr31yms().s[35]++, await supabase_1.supabase.from('shows').select('*').order('created_at', {
        ascending: false
      }));
      /* istanbul ignore next */
      cov_1fwfr31yms().s[36]++;
      data = fb.data;
      /* istanbul ignore next */
      cov_1fwfr31yms().s[37]++;
      error = fb.error;
    } else
    /* istanbul ignore next */
    {
      cov_1fwfr31yms().b[20][1]++;
    }
    cov_1fwfr31yms().s[38]++;
    if (error) {
      /* istanbul ignore next */
      cov_1fwfr31yms().b[21][0]++;
      cov_1fwfr31yms().s[39]++;
      console.error('Error fetching shows for validation:', error);
      /* istanbul ignore next */
      cov_1fwfr31yms().s[40]++;
      return {
        shows: [],
        error: error.message
      };
    } else
    /* istanbul ignore next */
    {
      cov_1fwfr31yms().b[21][1]++;
    }
    const mappedShows =
    /* istanbul ignore next */
    (cov_1fwfr31yms().s[41]++, Array.isArray(data) ?
    /* istanbul ignore next */
    (cov_1fwfr31yms().b[22][0]++, data.map(mapDbShowToAppShow)) :
    /* istanbul ignore next */
    (cov_1fwfr31yms().b[22][1]++, []));
    /* istanbul ignore next */
    cov_1fwfr31yms().s[42]++;
    return {
      shows: mappedShows,
      error: null
    };
  } catch (err) {
    /* istanbul ignore next */
    cov_1fwfr31yms().s[43]++;
    console.error('Unexpected error fetching shows for validation:', err);
    /* istanbul ignore next */
    cov_1fwfr31yms().s[44]++;
    return {
      shows: [],
      error:
      /* istanbul ignore next */
      (cov_1fwfr31yms().b[23][0]++, err.message) ||
      /* istanbul ignore next */
      (cov_1fwfr31yms().b[23][1]++, 'An unexpected error occurred')
    };
  }
};
/* istanbul ignore next */
cov_1fwfr31yms().s[45]++;
exports.getAllShowsForValidation = getAllShowsForValidation;
/**
 * Updates the coordinates for a specific show.
 *
 * @param showId The ID of the show to update
 * @param coordinates The new coordinates for the show
 * @returns An object indicating success and any error message
 */
/* istanbul ignore next */
cov_1fwfr31yms().s[46]++;
const updateShowCoordinates = async (showId, coordinates) => {
  /* istanbul ignore next */
  cov_1fwfr31yms().f[3]++;
  cov_1fwfr31yms().s[47]++;
  try {
    // First check if the user has admin privileges
    const {
      isAdmin,
      error: adminCheckError
    } =
    /* istanbul ignore next */
    (cov_1fwfr31yms().s[48]++, await (0, exports.checkAdminStatus)());
    /* istanbul ignore next */
    cov_1fwfr31yms().s[49]++;
    if (adminCheckError) {
      /* istanbul ignore next */
      cov_1fwfr31yms().b[24][0]++;
      cov_1fwfr31yms().s[50]++;
      return {
        success: false,
        error: adminCheckError
      };
    } else
    /* istanbul ignore next */
    {
      cov_1fwfr31yms().b[24][1]++;
    }
    cov_1fwfr31yms().s[51]++;
    if (!isAdmin) {
      /* istanbul ignore next */
      cov_1fwfr31yms().b[25][0]++;
      cov_1fwfr31yms().s[52]++;
      return {
        success: false,
        error: 'Unauthorized: Admin privileges required'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1fwfr31yms().b[25][1]++;
    }
    // Convert coordinates to PostGIS geography point format
    const geographyPoint =
    /* istanbul ignore next */
    (cov_1fwfr31yms().s[53]++, `SRID=4326;POINT(${coordinates.longitude} ${coordinates.latitude})`);
    // First attempt: PostGIS geography update
    const {
      error: geoError
    } =
    /* istanbul ignore next */
    (cov_1fwfr31yms().s[54]++, await supabase_1.supabase.from('shows').update({
      coordinates: geographyPoint,
      updated_at: new Date().toISOString()
    }).eq('id', showId));
    // If PostGIS update works, we're done
    /* istanbul ignore next */
    cov_1fwfr31yms().s[55]++;
    if (!geoError) {
      /* istanbul ignore next */
      cov_1fwfr31yms().b[26][0]++;
      cov_1fwfr31yms().s[56]++;
      return {
        success: true,
        error: null
      };
    } else
    /* istanbul ignore next */
    {
      cov_1fwfr31yms().b[26][1]++;
    }
    /* ------------------------------------------------------------------
     * Fallback – if the geography column / extension isn't available yet
     * ------------------------------------------------------------------
     * We try a plain JSON representation that Supabase/Postgres will
     * happily store in a JSONB column (or even a text column) so that
     * coordinates are not lost.
     *
     * This keeps the admin UI functional even on staging DBs that haven't
     * enabled PostGIS.
     */
    const fallbackCoordinates =
    /* istanbul ignore next */
    (cov_1fwfr31yms().s[57]++, {
      type: 'Point',
      coordinates: [coordinates.longitude, coordinates.latitude]
    });
    const {
      error: fbError
    } =
    /* istanbul ignore next */
    (cov_1fwfr31yms().s[58]++, await supabase_1.supabase.from('shows').update({
      coordinates: fallbackCoordinates,
      updated_at: new Date().toISOString()
    }).eq('id', showId));
    /* istanbul ignore next */
    cov_1fwfr31yms().s[59]++;
    if (fbError) {
      /* istanbul ignore next */
      cov_1fwfr31yms().b[27][0]++;
      cov_1fwfr31yms().s[60]++;
      console.error('Error updating show coordinates (both attempts failed):', {
        primary: geoError?.message,
        fallback: fbError.message
      });
      /* istanbul ignore next */
      cov_1fwfr31yms().s[61]++;
      return {
        success: false,
        error:
        /* istanbul ignore next */
        (cov_1fwfr31yms().b[28][0]++, geoError?.message) ||
        /* istanbul ignore next */
        (cov_1fwfr31yms().b[28][1]++, fbError.message)
      };
    } else
    /* istanbul ignore next */
    {
      cov_1fwfr31yms().b[27][1]++;
    }
    // Fallback succeeded
    cov_1fwfr31yms().s[62]++;
    console.warn('[adminService] PostGIS update failed, stored fallback JSON coordinates instead.');
    /* istanbul ignore next */
    cov_1fwfr31yms().s[63]++;
    return {
      success: true,
      error: null
    };
  } catch (err) {
    /* istanbul ignore next */
    cov_1fwfr31yms().s[64]++;
    console.error('Unexpected error updating show coordinates:', err);
    /* istanbul ignore next */
    cov_1fwfr31yms().s[65]++;
    return {
      success: false,
      error:
      /* istanbul ignore next */
      (cov_1fwfr31yms().b[29][0]++, err.message) ||
      /* istanbul ignore next */
      (cov_1fwfr31yms().b[29][1]++, 'An unexpected error occurred')
    };
  }
};
/* istanbul ignore next */
cov_1fwfr31yms().s[66]++;
exports.updateShowCoordinates = updateShowCoordinates;
/**
 * Assigns admin role to a user.
 * Only existing admins can assign new admins.
 *
 * @param userId The ID of the user to make an admin
 * @returns An object indicating success and any error message
 */
/* istanbul ignore next */
cov_1fwfr31yms().s[67]++;
const assignAdminRole = async userId => {
  /* istanbul ignore next */
  cov_1fwfr31yms().f[4]++;
  cov_1fwfr31yms().s[68]++;
  try {
    const {
      error
    } =
    /* istanbul ignore next */
    (cov_1fwfr31yms().s[69]++, await supabase_1.supabase.rpc('assign_admin_role', {
      target_user_id: userId
    }));
    /* istanbul ignore next */
    cov_1fwfr31yms().s[70]++;
    if (error) {
      /* istanbul ignore next */
      cov_1fwfr31yms().b[30][0]++;
      cov_1fwfr31yms().s[71]++;
      console.error('Error assigning admin role:', error);
      /* istanbul ignore next */
      cov_1fwfr31yms().s[72]++;
      return {
        success: false,
        error: error.message
      };
    } else
    /* istanbul ignore next */
    {
      cov_1fwfr31yms().b[30][1]++;
    }
    cov_1fwfr31yms().s[73]++;
    return {
      success: true,
      error: null
    };
  } catch (err) {
    /* istanbul ignore next */
    cov_1fwfr31yms().s[74]++;
    console.error('Unexpected error assigning admin role:', err);
    /* istanbul ignore next */
    cov_1fwfr31yms().s[75]++;
    return {
      success: false,
      error:
      /* istanbul ignore next */
      (cov_1fwfr31yms().b[31][0]++, err.message) ||
      /* istanbul ignore next */
      (cov_1fwfr31yms().b[31][1]++, 'An unexpected error occurred')
    };
  }
};
/* istanbul ignore next */
cov_1fwfr31yms().s[76]++;
exports.assignAdminRole = assignAdminRole;
/**
 * Revokes admin role from a user.
 * Only existing admins can revoke admin roles.
 *
 * @param userId The ID of the user to remove admin privileges from
 * @returns An object indicating success and any error message
 */
/* istanbul ignore next */
cov_1fwfr31yms().s[77]++;
const revokeAdminRole = async userId => {
  /* istanbul ignore next */
  cov_1fwfr31yms().f[5]++;
  cov_1fwfr31yms().s[78]++;
  try {
    const {
      error
    } =
    /* istanbul ignore next */
    (cov_1fwfr31yms().s[79]++, await supabase_1.supabase.rpc('revoke_admin_role', {
      target_user_id: userId
    }));
    /* istanbul ignore next */
    cov_1fwfr31yms().s[80]++;
    if (error) {
      /* istanbul ignore next */
      cov_1fwfr31yms().b[32][0]++;
      cov_1fwfr31yms().s[81]++;
      console.error('Error revoking admin role:', error);
      /* istanbul ignore next */
      cov_1fwfr31yms().s[82]++;
      return {
        success: false,
        error: error.message
      };
    } else
    /* istanbul ignore next */
    {
      cov_1fwfr31yms().b[32][1]++;
    }
    cov_1fwfr31yms().s[83]++;
    return {
      success: true,
      error: null
    };
  } catch (err) {
    /* istanbul ignore next */
    cov_1fwfr31yms().s[84]++;
    console.error('Unexpected error revoking admin role:', err);
    /* istanbul ignore next */
    cov_1fwfr31yms().s[85]++;
    return {
      success: false,
      error:
      /* istanbul ignore next */
      (cov_1fwfr31yms().b[33][0]++, err.message) ||
      /* istanbul ignore next */
      (cov_1fwfr31yms().b[33][1]++, 'An unexpected error occurred')
    };
  }
};
/* istanbul ignore next */
cov_1fwfr31yms().s[86]++;
exports.revokeAdminRole = revokeAdminRole;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,