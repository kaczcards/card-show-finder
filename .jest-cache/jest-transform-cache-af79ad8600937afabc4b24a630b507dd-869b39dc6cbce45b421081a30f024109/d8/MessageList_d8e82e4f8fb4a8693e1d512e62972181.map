{"version":3,"names":["React","View","Text","FlatList","TouchableOpacity","StyleSheet","Image","ActivityIndicator","jsx","_jsx","jsxs","_jsxs","cov_1m6b61cn9i","s","formatMessageDate","dateString","f","messageDate","Date","now","toDateString","b","toLocaleTimeString","hour","minute","getFullYear","toLocaleDateString","month","day","year","MessageList","_ref","conversations","isLoading","onSelectConversation","renderItem","_ref2","item","participant","participant_profile","displayName","full_name","username","lastMessage","last_message","messagePreview","content","timestamp","created_at","style","styles","conversationItem","onPress","children","avatarContainer","avatar_url","source","uri","avatar","avatarPlaceholder","avatarText","charAt","toUpperCase","contentContainer","headerRow","participantName","numberOfLines","messageRow","unread_count","unreadMessage","unreadBadge","unreadCount","renderEmptyComponent","emptyContainer","size","color","emptyText","emptySubtext","data","keyExtractor","id","removeClippedSubviews","ListEmptyComponent","contentContainerStyle","length","listEmptyContent","listContent","showsVerticalScrollIndicator","create","paddingVertical","flexGrow","justifyContent","alignItems","paddingHorizontal","flexDirection","padding","borderBottomWidth","borderBottomColor","backgroundColor","marginRight","width","height","borderRadius","fontSize","fontWeight","flex","marginBottom","marginLeft","minWidth","marginVertical","textAlign"],"sources":["MessageList.tsx"],"sourcesContent":["import React from 'react';\nimport { \n  View, \n  Text, \n  FlatList, \n  TouchableOpacity, \n  StyleSheet, \n  Image,\n  ActivityIndicator \n} from 'react-native';\nimport { Conversation } from '../services/messagingService';\n\n// Helper function to format date\nconst formatMessageDate = (dateString: string): string => {\n  const messageDate = new Date(dateString);\n  const now = new Date();\n  \n  // If message is from today, show time only\n  if (messageDate.toDateString() === now.toDateString()) {\n    return messageDate.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  }\n  \n  // If message is from this year, show month and day\n  if (messageDate.getFullYear() === now.getFullYear()) {\n    return messageDate.toLocaleDateString([], { month: 'short', day: 'numeric' });\n  }\n  \n  // Otherwise show full date\n  return messageDate.toLocaleDateString([], { year: 'numeric', month: 'short', day: 'numeric' });\n};\n\ninterface MessageListProps {\n  conversations: Conversation[];\n  isLoading: boolean;\n  onSelectConversation: (conversation: Conversation) => void;\n}\n\nconst MessageList: React.FC<MessageListProps> = ({ \n  conversations, \n  isLoading, \n  onSelectConversation \n}) => {\n  // Render each conversation item\n  const renderItem = ({ item }: { item: Conversation }) => {\n    const participant = item.participant_profile;\n    const displayName = participant?.full_name || participant?.username || 'Unknown User';\n    const lastMessage = item.last_message;\n    const messagePreview = lastMessage?.content || 'No messages';\n    const timestamp = lastMessage?.created_at ? formatMessageDate(lastMessage.created_at) : '';\n    \n    return (\n      <TouchableOpacity\n        style={styles.conversationItem}\n        onPress={() => onSelectConversation(item)}\n      >\n        <View style={styles.avatarContainer}>\n          {participant?.avatar_url ? (\n            <Image \n              source={{ uri: participant.avatar_url }} \n              style={styles.avatar} \n            />\n          ) : (\n            <View style={styles.avatarPlaceholder}>\n              <Text style={styles.avatarText}>\n                {displayName.charAt(0).toUpperCase()}\n              </Text>\n            </View>\n          )}\n        </View>\n        \n        <View style={styles.contentContainer}>\n          <View style={styles.headerRow}>\n            <Text style={styles.participantName} numberOfLines={1}>\n              {displayName}\n            </Text>\n            <Text style={styles.timestamp}>\n              {timestamp}\n            </Text>\n          </View>\n          \n          <View style={styles.messageRow}>\n            <Text \n              style={[\n                styles.messagePreview, \n                item.unread_count > 0 && styles.unreadMessage\n              ]} \n              numberOfLines={1}\n            >\n              {messagePreview}\n            </Text>\n            \n            {item.unread_count > 0 && (\n              <View style={styles.unreadBadge}>\n                <Text style={styles.unreadCount}>\n                  {item.unread_count > 99 ? '99+' : item.unread_count}\n                </Text>\n              </View>\n            )}\n          </View>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  // Empty state when no conversations exist\n  const renderEmptyComponent = () => {\n    if (isLoading) {\n      return (\n        <View style={styles.emptyContainer}>\n          <ActivityIndicator size=\"large\" color=\"#FF6A00\" />\n          <Text style={styles.emptyText}>Loading conversations...</Text>\n        </View>\n      );\n    }\n    \n    return (\n      <View style={styles.emptyContainer}>\n        <Text style={styles.emptyText}>No messages yet</Text>\n        <Text style={styles.emptySubtext}>\n          When you start conversations with dealers or show organizers, they'll appear here.\n        </Text>\n      </View>\n    );\n  };\n\n  return (\n    <FlatList\n      data={conversations}\n      renderItem={renderItem}\n      keyExtractor={(item) => item.id}\n      removeClippedSubviews={false}\n      ListEmptyComponent={renderEmptyComponent}\n      contentContainerStyle={conversations.length === 0 ? styles.listEmptyContent : styles.listContent}\n      showsVerticalScrollIndicator={false}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  listContent: {\n    paddingVertical: 8,\n  },\n  listEmptyContent: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 24,\n  },\n  conversationItem: {\n    flexDirection: 'row',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: '#EEEEEE',\n    backgroundColor: 'white',\n  },\n  avatarContainer: {\n    marginRight: 12,\n  },\n  avatar: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n  },\n  avatarPlaceholder: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: '#0057B8',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  avatarText: {\n    color: 'white',\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  contentContainer: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  headerRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 4,\n  },\n  participantName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    flex: 1,\n  },\n  timestamp: {\n    fontSize: 12,\n    color: '#666666',\n    marginLeft: 8,\n  },\n  messageRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  messagePreview: {\n    fontSize: 14,\n    color: '#666666',\n    flex: 1,\n  },\n  unreadMessage: {\n    fontWeight: 'bold',\n    color: '#000000',\n  },\n  unreadBadge: {\n    backgroundColor: '#FF6A00',\n    borderRadius: 12,\n    minWidth: 24,\n    height: 24,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginLeft: 8,\n    paddingHorizontal: 6,\n  },\n  unreadCount: {\n    color: 'white',\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  emptyContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  emptyText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginVertical: 8,\n    color: '#333333',\n  },\n  emptySubtext: {\n    fontSize: 14,\n    color: '#666666',\n    textAlign: 'center',\n    paddingHorizontal: 24,\n  },\n});\n\nexport default MessageList;\n"],"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","ignoreList":[]}