252f101f70688140dc7cbca87b7bcb53
import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
function cov_jmqb9atm() {
  var path = "/Users/kevin/card-show-finder/src/utils/testChatIntegration.ts";
  var hash = "68e97600c6c68353e0f24f52a55a6ba77f667f6e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/utils/testChatIntegration.ts",
    statementMap: {
      "0": {
        start: {
          line: 17,
          column: 44
        },
        end: {
          line: 115,
          column: 1
        }
      },
      "1": {
        start: {
          line: 18,
          column: 2
        },
        end: {
          line: 18,
          column: 56
        }
      },
      "2": {
        start: {
          line: 19,
          column: 2
        },
        end: {
          line: 19,
          column: 34
        }
      },
      "3": {
        start: {
          line: 21,
          column: 2
        },
        end: {
          line: 111,
          column: 3
        }
      },
      "4": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 68
        }
      },
      "5": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 39
        }
      },
      "6": {
        start: {
          line: 26,
          column: 47
        },
        end: {
          line: 29,
          column: 8
        }
      },
      "7": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 42
        }
      },
      "8": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "9": {
        start: {
          line: 34,
          column: 6
        },
        end: {
          line: 34,
          column: 54
        }
      },
      "10": {
        start: {
          line: 35,
          column: 6
        },
        end: {
          line: 35,
          column: 42
        }
      },
      "11": {
        start: {
          line: 36,
          column: 11
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "12": {
        start: {
          line: 37,
          column: 6
        },
        end: {
          line: 37,
          column: 68
        }
      },
      "13": {
        start: {
          line: 39,
          column: 6
        },
        end: {
          line: 39,
          column: 79
        }
      },
      "14": {
        start: {
          line: 40,
          column: 6
        },
        end: {
          line: 40,
          column: 82
        }
      },
      "15": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 42,
          column: 23
        }
      },
      "16": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 66
        }
      },
      "17": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 43
        }
      },
      "18": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 106,
          column: 5
        }
      },
      "19": {
        start: {
          line: 49,
          column: 26
        },
        end: {
          line: 49,
          column: 73
        }
      },
      "20": {
        start: {
          line: 50,
          column: 6
        },
        end: {
          line: 50,
          column: 48
        }
      },
      "21": {
        start: {
          line: 51,
          column: 6
        },
        end: {
          line: 51,
          column: 87
        }
      },
      "22": {
        start: {
          line: 52,
          column: 6
        },
        end: {
          line: 52,
          column: 86
        }
      },
      "23": {
        start: {
          line: 55,
          column: 6
        },
        end: {
          line: 102,
          column: 7
        }
      },
      "24": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 46
        }
      },
      "25": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 90
        }
      },
      "26": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "27": {
        start: {
          line: 61,
          column: 25
        },
        end: {
          line: 61,
          column: 56
        }
      },
      "28": {
        start: {
          line: 61,
          column: 50
        },
        end: {
          line: 61,
          column: 54
        }
      },
      "29": {
        start: {
          line: 62,
          column: 29
        },
        end: {
          line: 62,
          column: 64
        }
      },
      "30": {
        start: {
          line: 62,
          column: 58
        },
        end: {
          line: 62,
          column: 62
        }
      },
      "31": {
        start: {
          line: 64,
          column: 31
        },
        end: {
          line: 64,
          column: 76
        }
      },
      "32": {
        start: {
          line: 64,
          column: 60
        },
        end: {
          line: 64,
          column: 75
        }
      },
      "33": {
        start: {
          line: 65,
          column: 35
        },
        end: {
          line: 65,
          column: 80
        }
      },
      "34": {
        start: {
          line: 65,
          column: 60
        },
        end: {
          line: 65,
          column: 79
        }
      },
      "35": {
        start: {
          line: 67,
          column: 10
        },
        end: {
          line: 69,
          column: 11
        }
      },
      "36": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 80
        }
      },
      "37": {
        start: {
          line: 71,
          column: 10
        },
        end: {
          line: 73,
          column: 11
        }
      },
      "38": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 84
        }
      },
      "39": {
        start: {
          line: 75,
          column: 10
        },
        end: {
          line: 77,
          column: 11
        }
      },
      "40": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 67
        }
      },
      "41": {
        start: {
          line: 80,
          column: 28
        },
        end: {
          line: 80,
          column: 38
        }
      },
      "42": {
        start: {
          line: 81,
          column: 32
        },
        end: {
          line: 81,
          column: 46
        }
      },
      "43": {
        start: {
          line: 83,
          column: 10
        },
        end: {
          line: 83,
          column: 70
        }
      },
      "44": {
        start: {
          line: 84,
          column: 10
        },
        end: {
          line: 84,
          column: 78
        }
      },
      "45": {
        start: {
          line: 87,
          column: 28
        },
        end: {
          line: 87,
          column: 59
        }
      },
      "46": {
        start: {
          line: 88,
          column: 32
        },
        end: {
          line: 88,
          column: 67
        }
      },
      "47": {
        start: {
          line: 90,
          column: 37
        },
        end: {
          line: 90,
          column: 94
        }
      },
      "48": {
        start: {
          line: 90,
          column: 72
        },
        end: {
          line: 90,
          column: 93
        }
      },
      "49": {
        start: {
          line: 91,
          column: 41
        },
        end: {
          line: 91,
          column: 98
        }
      },
      "50": {
        start: {
          line: 91,
          column: 72
        },
        end: {
          line: 91,
          column: 97
        }
      },
      "51": {
        start: {
          line: 93,
          column: 10
        },
        end: {
          line: 95,
          column: 11
        }
      },
      "52": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 89
        }
      },
      "53": {
        start: {
          line: 97,
          column: 10
        },
        end: {
          line: 99,
          column: 11
        }
      },
      "54": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 93
        }
      },
      "55": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 27
        }
      },
      "56": {
        start: {
          line: 104,
          column: 6
        },
        end: {
          line: 104,
          column: 48
        }
      },
      "57": {
        start: {
          line: 105,
          column: 6
        },
        end: {
          line: 105,
          column: 54
        }
      },
      "58": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 107,
          column: 23
        }
      },
      "59": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 110,
          column: 43
        }
      },
      "60": {
        start: {
          line: 113,
          column: 2
        },
        end: {
          line: 113,
          column: 37
        }
      },
      "61": {
        start: {
          line: 114,
          column: 2
        },
        end: {
          line: 114,
          column: 21
        }
      },
      "62": {
        start: {
          line: 121,
          column: 39
        },
        end: {
          line: 212,
          column: 1
        }
      },
      "63": {
        start: {
          line: 122,
          column: 2
        },
        end: {
          line: 122,
          column: 51
        }
      },
      "64": {
        start: {
          line: 123,
          column: 2
        },
        end: {
          line: 123,
          column: 34
        }
      },
      "65": {
        start: {
          line: 125,
          column: 2
        },
        end: {
          line: 208,
          column: 3
        }
      },
      "66": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 127,
          column: 71
        }
      },
      "67": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 128,
          column: 39
        }
      },
      "68": {
        start: {
          line: 130,
          column: 47
        },
        end: {
          line: 133,
          column: 8
        }
      },
      "69": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 135,
          column: 42
        }
      },
      "70": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 154,
          column: 5
        }
      },
      "71": {
        start: {
          line: 138,
          column: 6
        },
        end: {
          line: 138,
          column: 54
        }
      },
      "72": {
        start: {
          line: 139,
          column: 6
        },
        end: {
          line: 139,
          column: 42
        }
      },
      "73": {
        start: {
          line: 140,
          column: 11
        },
        end: {
          line: 154,
          column: 5
        }
      },
      "74": {
        start: {
          line: 141,
          column: 6
        },
        end: {
          line: 141,
          column: 68
        }
      },
      "75": {
        start: {
          line: 143,
          column: 6
        },
        end: {
          line: 143,
          column: 74
        }
      },
      "76": {
        start: {
          line: 144,
          column: 6
        },
        end: {
          line: 144,
          column: 72
        }
      },
      "77": {
        start: {
          line: 147,
          column: 6
        },
        end: {
          line: 153,
          column: 7
        }
      },
      "78": {
        start: {
          line: 148,
          column: 29
        },
        end: {
          line: 148,
          column: 39
        }
      },
      "79": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 44
        }
      },
      "80": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 62
        }
      },
      "81": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 151,
          column: 72
        }
      },
      "82": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 70
        }
      },
      "83": {
        start: {
          line: 155,
          column: 4
        },
        end: {
          line: 155,
          column: 23
        }
      },
      "84": {
        start: {
          line: 158,
          column: 4
        },
        end: {
          line: 158,
          column: 61
        }
      },
      "85": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 159,
          column: 43
        }
      },
      "86": {
        start: {
          line: 161,
          column: 4
        },
        end: {
          line: 203,
          column: 5
        }
      },
      "87": {
        start: {
          line: 162,
          column: 26
        },
        end: {
          line: 162,
          column: 76
        }
      },
      "88": {
        start: {
          line: 163,
          column: 6
        },
        end: {
          line: 163,
          column: 48
        }
      },
      "89": {
        start: {
          line: 164,
          column: 6
        },
        end: {
          line: 164,
          column: 82
        }
      },
      "90": {
        start: {
          line: 165,
          column: 6
        },
        end: {
          line: 165,
          column: 76
        }
      },
      "91": {
        start: {
          line: 168,
          column: 6
        },
        end: {
          line: 199,
          column: 7
        }
      },
      "92": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 46
        }
      },
      "93": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 90
        }
      },
      "94": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 197,
          column: 9
        }
      },
      "95": {
        start: {
          line: 174,
          column: 28
        },
        end: {
          line: 174,
          column: 38
        }
      },
      "96": {
        start: {
          line: 175,
          column: 32
        },
        end: {
          line: 175,
          column: 46
        }
      },
      "97": {
        start: {
          line: 177,
          column: 10
        },
        end: {
          line: 177,
          column: 72
        }
      },
      "98": {
        start: {
          line: 178,
          column: 10
        },
        end: {
          line: 178,
          column: 80
        }
      },
      "99": {
        start: {
          line: 181,
          column: 10
        },
        end: {
          line: 181,
          column: 47
        }
      },
      "100": {
        start: {
          line: 182,
          column: 10
        },
        end: {
          line: 182,
          column: 55
        }
      },
      "101": {
        start: {
          line: 183,
          column: 10
        },
        end: {
          line: 183,
          column: 73
        }
      },
      "102": {
        start: {
          line: 186,
          column: 10
        },
        end: {
          line: 190,
          column: 11
        }
      },
      "103": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 67
        }
      },
      "104": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 189,
          column: 53
        }
      },
      "105": {
        start: {
          line: 192,
          column: 10
        },
        end: {
          line: 196,
          column: 11
        }
      },
      "106": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 72
        }
      },
      "107": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 53
        }
      },
      "108": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 198,
          column: 27
        }
      },
      "109": {
        start: {
          line: 201,
          column: 6
        },
        end: {
          line: 201,
          column: 48
        }
      },
      "110": {
        start: {
          line: 202,
          column: 6
        },
        end: {
          line: 202,
          column: 54
        }
      },
      "111": {
        start: {
          line: 204,
          column: 4
        },
        end: {
          line: 204,
          column: 23
        }
      },
      "112": {
        start: {
          line: 207,
          column: 4
        },
        end: {
          line: 207,
          column: 43
        }
      },
      "113": {
        start: {
          line: 210,
          column: 2
        },
        end: {
          line: 210,
          column: 37
        }
      },
      "114": {
        start: {
          line: 211,
          column: 2
        },
        end: {
          line: 211,
          column: 21
        }
      },
      "115": {
        start: {
          line: 219,
          column: 38
        },
        end: {
          line: 250,
          column: 1
        }
      },
      "116": {
        start: {
          line: 220,
          column: 2
        },
        end: {
          line: 220,
          column: 64
        }
      },
      "117": {
        start: {
          line: 221,
          column: 2
        },
        end: {
          line: 221,
          column: 47
        }
      },
      "118": {
        start: {
          line: 224,
          column: 2
        },
        end: {
          line: 224,
          column: 45
        }
      },
      "119": {
        start: {
          line: 227,
          column: 2
        },
        end: {
          line: 241,
          column: 3
        }
      },
      "120": {
        start: {
          line: 228,
          column: 4
        },
        end: {
          line: 240,
          column: 5
        }
      },
      "121": {
        start: {
          line: 229,
          column: 23
        },
        end: {
          line: 230,
          column: 65
        }
      },
      "122": {
        start: {
          line: 232,
          column: 6
        },
        end: {
          line: 237,
          column: 7
        }
      },
      "123": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 233,
          column: 36
        }
      },
      "124": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 234,
          column: 86
        }
      },
      "125": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 71
        }
      },
      "126": {
        start: {
          line: 239,
          column: 6
        },
        end: {
          line: 239,
          column: 61
        }
      },
      "127": {
        start: {
          line: 244,
          column: 2
        },
        end: {
          line: 246,
          column: 3
        }
      },
      "128": {
        start: {
          line: 245,
          column: 4
        },
        end: {
          line: 245,
          column: 50
        }
      },
      "129": {
        start: {
          line: 248,
          column: 2
        },
        end: {
          line: 248,
          column: 21
        }
      },
      "130": {
        start: {
          line: 249,
          column: 2
        },
        end: {
          line: 249,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 44
          },
          end: {
            line: 17,
            column: 45
          }
        },
        loc: {
          start: {
            line: 17,
            column: 70
          },
          end: {
            line: 115,
            column: 1
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 61,
            column: 45
          },
          end: {
            line: 61,
            column: 46
          }
        },
        loc: {
          start: {
            line: 61,
            column: 50
          },
          end: {
            line: 61,
            column: 54
          }
        },
        line: 61
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 62,
            column: 53
          },
          end: {
            line: 62,
            column: 54
          }
        },
        loc: {
          start: {
            line: 62,
            column: 58
          },
          end: {
            line: 62,
            column: 62
          }
        },
        line: 62
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 64,
            column: 54
          },
          end: {
            line: 64,
            column: 55
          }
        },
        loc: {
          start: {
            line: 64,
            column: 60
          },
          end: {
            line: 64,
            column: 75
          }
        },
        line: 64
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 65,
            column: 54
          },
          end: {
            line: 65,
            column: 55
          }
        },
        loc: {
          start: {
            line: 65,
            column: 60
          },
          end: {
            line: 65,
            column: 79
          }
        },
        line: 65
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 90,
            column: 63
          },
          end: {
            line: 90,
            column: 64
          }
        },
        loc: {
          start: {
            line: 90,
            column: 72
          },
          end: {
            line: 90,
            column: 93
          }
        },
        line: 90
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 91,
            column: 63
          },
          end: {
            line: 91,
            column: 64
          }
        },
        loc: {
          start: {
            line: 91,
            column: 72
          },
          end: {
            line: 91,
            column: 97
          }
        },
        line: 91
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 121,
            column: 39
          },
          end: {
            line: 121,
            column: 40
          }
        },
        loc: {
          start: {
            line: 121,
            column: 73
          },
          end: {
            line: 212,
            column: 1
          }
        },
        line: 121
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 219,
            column: 38
          },
          end: {
            line: 219,
            column: 39
          }
        },
        loc: {
          start: {
            line: 219,
            column: 89
          },
          end: {
            line: 250,
            column: 1
          }
        },
        line: 219
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: 36,
            column: 11
          },
          end: {
            line: 41,
            column: 5
          }
        }],
        line: 33
      },
      "1": {
        loc: {
          start: {
            line: 36,
            column: 11
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 11
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: 38,
            column: 11
          },
          end: {
            line: 41,
            column: 5
          }
        }],
        line: 36
      },
      "2": {
        loc: {
          start: {
            line: 36,
            column: 15
          },
          end: {
            line: 36,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 15
          },
          end: {
            line: 36,
            column: 23
          }
        }, {
          start: {
            line: 36,
            column: 27
          },
          end: {
            line: 36,
            column: 50
          }
        }],
        line: 36
      },
      "3": {
        loc: {
          start: {
            line: 40,
            column: 48
          },
          end: {
            line: 40,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 48
          },
          end: {
            line: 40,
            column: 58
          }
        }, {
          start: {
            line: 40,
            column: 62
          },
          end: {
            line: 40,
            column: 80
          }
        }],
        line: 40
      },
      "4": {
        loc: {
          start: {
            line: 52,
            column: 48
          },
          end: {
            line: 52,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 48
          },
          end: {
            line: 52,
            column: 62
          }
        }, {
          start: {
            line: 52,
            column: 66
          },
          end: {
            line: 52,
            column: 84
          }
        }],
        line: 52
      },
      "5": {
        loc: {
          start: {
            line: 55,
            column: 6
          },
          end: {
            line: 102,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 6
          },
          end: {
            line: 102,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "6": {
        loc: {
          start: {
            line: 55,
            column: 10
          },
          end: {
            line: 55,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 10
          },
          end: {
            line: 55,
            column: 17
          }
        }, {
          start: {
            line: 55,
            column: 21
          },
          end: {
            line: 55,
            column: 32
          }
        }],
        line: 55
      },
      "7": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "8": {
        loc: {
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 59,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 59,
            column: 30
          }
        }, {
          start: {
            line: 59,
            column: 34
          },
          end: {
            line: 59,
            column: 56
          }
        }],
        line: 59
      },
      "9": {
        loc: {
          start: {
            line: 67,
            column: 10
          },
          end: {
            line: 69,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 10
          },
          end: {
            line: 69,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "10": {
        loc: {
          start: {
            line: 71,
            column: 10
          },
          end: {
            line: 73,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 10
          },
          end: {
            line: 73,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "11": {
        loc: {
          start: {
            line: 75,
            column: 10
          },
          end: {
            line: 77,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 10
          },
          end: {
            line: 77,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "12": {
        loc: {
          start: {
            line: 75,
            column: 14
          },
          end: {
            line: 75,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 14
          },
          end: {
            line: 75,
            column: 39
          }
        }, {
          start: {
            line: 75,
            column: 43
          },
          end: {
            line: 75,
            column: 72
          }
        }],
        line: 75
      },
      "13": {
        loc: {
          start: {
            line: 93,
            column: 10
          },
          end: {
            line: 95,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 10
          },
          end: {
            line: 95,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "14": {
        loc: {
          start: {
            line: 97,
            column: 10
          },
          end: {
            line: 99,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 10
          },
          end: {
            line: 99,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "15": {
        loc: {
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        }, {
          start: {
            line: 140,
            column: 11
          },
          end: {
            line: 154,
            column: 5
          }
        }],
        line: 137
      },
      "16": {
        loc: {
          start: {
            line: 140,
            column: 11
          },
          end: {
            line: 154,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 11
          },
          end: {
            line: 154,
            column: 5
          }
        }, {
          start: {
            line: 142,
            column: 11
          },
          end: {
            line: 154,
            column: 5
          }
        }],
        line: 140
      },
      "17": {
        loc: {
          start: {
            line: 140,
            column: 15
          },
          end: {
            line: 140,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 15
          },
          end: {
            line: 140,
            column: 23
          }
        }, {
          start: {
            line: 140,
            column: 27
          },
          end: {
            line: 140,
            column: 50
          }
        }],
        line: 140
      },
      "18": {
        loc: {
          start: {
            line: 144,
            column: 43
          },
          end: {
            line: 144,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 144,
            column: 43
          },
          end: {
            line: 144,
            column: 53
          }
        }, {
          start: {
            line: 144,
            column: 57
          },
          end: {
            line: 144,
            column: 70
          }
        }],
        line: 144
      },
      "19": {
        loc: {
          start: {
            line: 147,
            column: 6
          },
          end: {
            line: 153,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 6
          },
          end: {
            line: 153,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "20": {
        loc: {
          start: {
            line: 165,
            column: 43
          },
          end: {
            line: 165,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 43
          },
          end: {
            line: 165,
            column: 57
          }
        }, {
          start: {
            line: 165,
            column: 61
          },
          end: {
            line: 165,
            column: 74
          }
        }],
        line: 165
      },
      "21": {
        loc: {
          start: {
            line: 168,
            column: 6
          },
          end: {
            line: 199,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 6
          },
          end: {
            line: 199,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "22": {
        loc: {
          start: {
            line: 168,
            column: 10
          },
          end: {
            line: 168,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 168,
            column: 10
          },
          end: {
            line: 168,
            column: 17
          }
        }, {
          start: {
            line: 168,
            column: 21
          },
          end: {
            line: 168,
            column: 32
          }
        }],
        line: 168
      },
      "23": {
        loc: {
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "24": {
        loc: {
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 172,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 172,
            column: 30
          }
        }, {
          start: {
            line: 172,
            column: 34
          },
          end: {
            line: 172,
            column: 56
          }
        }],
        line: 172
      },
      "25": {
        loc: {
          start: {
            line: 186,
            column: 10
          },
          end: {
            line: 190,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 10
          },
          end: {
            line: 190,
            column: 11
          }
        }, {
          start: {
            line: 188,
            column: 17
          },
          end: {
            line: 190,
            column: 11
          }
        }],
        line: 186
      },
      "26": {
        loc: {
          start: {
            line: 192,
            column: 10
          },
          end: {
            line: 196,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 10
          },
          end: {
            line: 196,
            column: 11
          }
        }, {
          start: {
            line: 194,
            column: 17
          },
          end: {
            line: 196,
            column: 11
          }
        }],
        line: 192
      },
      "27": {
        loc: {
          start: {
            line: 227,
            column: 2
          },
          end: {
            line: 241,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 2
          },
          end: {
            line: 241,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 227
      },
      "28": {
        loc: {
          start: {
            line: 232,
            column: 6
          },
          end: {
            line: 237,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 6
          },
          end: {
            line: 237,
            column: 7
          }
        }, {
          start: {
            line: 235,
            column: 13
          },
          end: {
            line: 237,
            column: 7
          }
        }],
        line: 232
      },
      "29": {
        loc: {
          start: {
            line: 232,
            column: 10
          },
          end: {
            line: 232,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 232,
            column: 10
          },
          end: {
            line: 232,
            column: 14
          }
        }, {
          start: {
            line: 232,
            column: 18
          },
          end: {
            line: 232,
            column: 37
          }
        }, {
          start: {
            line: 232,
            column: 41
          },
          end: {
            line: 232,
            column: 56
          }
        }],
        line: 232
      },
      "30": {
        loc: {
          start: {
            line: 244,
            column: 2
          },
          end: {
            line: 246,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 2
          },
          end: {
            line: 246,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0, 0],
      "30": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "68e97600c6c68353e0f24f52a55a6ba77f667f6e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_jmqb9atm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_jmqb9atm();
import { supabase } from '../supabase';
import * as messagingService from '../services/messagingService';
cov_jmqb9atm().s[0]++;
export var testConversationsIntegration = function () {
  var _ref = _asyncToGenerator(function* (userId) {
    cov_jmqb9atm().f[0]++;
    cov_jmqb9atm().s[1]++;
    console.group('🧪 TESTING CONVERSATIONS INTEGRATION');
    cov_jmqb9atm().s[2]++;
    console.time('Total test time');
    cov_jmqb9atm().s[3]++;
    try {
      cov_jmqb9atm().s[4]++;
      console.group('1. Testing get_user_conversations RPC function');
      cov_jmqb9atm().s[5]++;
      console.time('RPC execution time');
      var _ref2 = (cov_jmqb9atm().s[6]++, yield supabase.rpc('get_user_conversations', {
          input_user_id: userId
        })),
        rpcData = _ref2.data,
        rpcError = _ref2.error;
      cov_jmqb9atm().s[7]++;
      console.timeEnd('RPC execution time');
      cov_jmqb9atm().s[8]++;
      if (rpcError) {
        cov_jmqb9atm().b[0][0]++;
        cov_jmqb9atm().s[9]++;
        console.error('❌ RPC ERROR:', rpcError.message);
        cov_jmqb9atm().s[10]++;
        console.error('Details:', rpcError);
      } else {
        cov_jmqb9atm().b[0][1]++;
        cov_jmqb9atm().s[11]++;
        if ((cov_jmqb9atm().b[2][0]++, !rpcData) || (cov_jmqb9atm().b[2][1]++, !Array.isArray(rpcData))) {
          cov_jmqb9atm().b[1][0]++;
          cov_jmqb9atm().s[12]++;
          console.error('❌ RPC returned invalid data format:', rpcData);
        } else {
          cov_jmqb9atm().b[1][1]++;
          cov_jmqb9atm().s[13]++;
          console.log('✅ RPC SUCCESS - Returned', rpcData.length, 'conversations');
          cov_jmqb9atm().s[14]++;
          console.log('First conversation sample:', (cov_jmqb9atm().b[3][0]++, rpcData[0]) || (cov_jmqb9atm().b[3][1]++, 'No conversations'));
        }
      }
      cov_jmqb9atm().s[15]++;
      console.groupEnd();
      cov_jmqb9atm().s[16]++;
      console.group('2. Testing messagingService.getConversations');
      cov_jmqb9atm().s[17]++;
      console.time('Service execution time');
      cov_jmqb9atm().s[18]++;
      try {
        var serviceData = (cov_jmqb9atm().s[19]++, yield messagingService.getConversations(userId));
        cov_jmqb9atm().s[20]++;
        console.timeEnd('Service execution time');
        cov_jmqb9atm().s[21]++;
        console.log('✅ SERVICE SUCCESS - Returned', serviceData.length, 'conversations');
        cov_jmqb9atm().s[22]++;
        console.log('First conversation sample:', (cov_jmqb9atm().b[4][0]++, serviceData[0]) || (cov_jmqb9atm().b[4][1]++, 'No conversations'));
        cov_jmqb9atm().s[23]++;
        if ((cov_jmqb9atm().b[6][0]++, rpcData) && (cov_jmqb9atm().b[6][1]++, serviceData)) {
          cov_jmqb9atm().b[5][0]++;
          cov_jmqb9atm().s[24]++;
          console.group('3. Comparing results');
          cov_jmqb9atm().s[25]++;
          console.log('RPC count:', rpcData.length, '| Service count:', serviceData.length);
          cov_jmqb9atm().s[26]++;
          if ((cov_jmqb9atm().b[8][0]++, rpcData.length > 0) && (cov_jmqb9atm().b[8][1]++, serviceData.length > 0)) {
            cov_jmqb9atm().b[7][0]++;
            var rpcIds = (cov_jmqb9atm().s[27]++, new Set(rpcData.map(function (c) {
              cov_jmqb9atm().f[1]++;
              cov_jmqb9atm().s[28]++;
              return c.id;
            })));
            var serviceIds = (cov_jmqb9atm().s[29]++, new Set(serviceData.map(function (c) {
              cov_jmqb9atm().f[2]++;
              cov_jmqb9atm().s[30]++;
              return c.id;
            })));
            var missingInRpc = (cov_jmqb9atm().s[31]++, _toConsumableArray(serviceIds).filter(function (id) {
              cov_jmqb9atm().f[3]++;
              cov_jmqb9atm().s[32]++;
              return !rpcIds.has(id);
            }));
            var missingInService = (cov_jmqb9atm().s[33]++, _toConsumableArray(rpcIds).filter(function (id) {
              cov_jmqb9atm().f[4]++;
              cov_jmqb9atm().s[34]++;
              return !serviceIds.has(id);
            }));
            cov_jmqb9atm().s[35]++;
            if (missingInRpc.length > 0) {
              cov_jmqb9atm().b[9][0]++;
              cov_jmqb9atm().s[36]++;
              console.warn('⚠️ IDs in service but missing in RPC:', missingInRpc);
            } else {
              cov_jmqb9atm().b[9][1]++;
            }
            cov_jmqb9atm().s[37]++;
            if (missingInService.length > 0) {
              cov_jmqb9atm().b[10][0]++;
              cov_jmqb9atm().s[38]++;
              console.warn('⚠️ IDs in RPC but missing in service:', missingInService);
            } else {
              cov_jmqb9atm().b[10][1]++;
            }
            cov_jmqb9atm().s[39]++;
            if ((cov_jmqb9atm().b[12][0]++, missingInRpc.length === 0) && (cov_jmqb9atm().b[12][1]++, missingInService.length === 0)) {
              cov_jmqb9atm().b[11][0]++;
              cov_jmqb9atm().s[40]++;
              console.log('✅ ID sets match between RPC and service');
            } else {
              cov_jmqb9atm().b[11][1]++;
            }
            var rpcSample = (cov_jmqb9atm().s[41]++, rpcData[0]);
            var serviceSample = (cov_jmqb9atm().s[42]++, serviceData[0]);
            cov_jmqb9atm().s[43]++;
            console.log('RPC first item keys:', Object.keys(rpcSample));
            cov_jmqb9atm().s[44]++;
            console.log('Service first item keys:', Object.keys(serviceSample));
            var rpcFields = (cov_jmqb9atm().s[45]++, new Set(Object.keys(rpcSample)));
            var serviceFields = (cov_jmqb9atm().s[46]++, new Set(Object.keys(serviceSample)));
            var missingInRpcFields = (cov_jmqb9atm().s[47]++, _toConsumableArray(serviceFields).filter(function (field) {
              cov_jmqb9atm().f[5]++;
              cov_jmqb9atm().s[48]++;
              return !rpcFields.has(field);
            }));
            var missingInServiceFields = (cov_jmqb9atm().s[49]++, _toConsumableArray(rpcFields).filter(function (field) {
              cov_jmqb9atm().f[6]++;
              cov_jmqb9atm().s[50]++;
              return !serviceFields.has(field);
            }));
            cov_jmqb9atm().s[51]++;
            if (missingInRpcFields.length > 0) {
              cov_jmqb9atm().b[13][0]++;
              cov_jmqb9atm().s[52]++;
              console.warn('⚠️ Fields in service but missing in RPC:', missingInRpcFields);
            } else {
              cov_jmqb9atm().b[13][1]++;
            }
            cov_jmqb9atm().s[53]++;
            if (missingInServiceFields.length > 0) {
              cov_jmqb9atm().b[14][0]++;
              cov_jmqb9atm().s[54]++;
              console.warn('⚠️ Fields in RPC but missing in service:', missingInServiceFields);
            } else {
              cov_jmqb9atm().b[14][1]++;
            }
          } else {
            cov_jmqb9atm().b[7][1]++;
          }
          cov_jmqb9atm().s[55]++;
          console.groupEnd();
        } else {
          cov_jmqb9atm().b[5][1]++;
        }
      } catch (serviceError) {
        cov_jmqb9atm().s[56]++;
        console.timeEnd('Service execution time');
        cov_jmqb9atm().s[57]++;
        console.error('❌ SERVICE ERROR:', serviceError);
      }
      cov_jmqb9atm().s[58]++;
      console.groupEnd();
    } catch (error) {
      cov_jmqb9atm().s[59]++;
      console.error('❌ TEST FAILED:', error);
    }
    cov_jmqb9atm().s[60]++;
    console.timeEnd('Total test time');
    cov_jmqb9atm().s[61]++;
    console.groupEnd();
  });
  return function testConversationsIntegration(_x) {
    return _ref.apply(this, arguments);
  };
}();
cov_jmqb9atm().s[62]++;
export var testMessagesIntegration = function () {
  var _ref3 = _asyncToGenerator(function* (conversationId) {
    cov_jmqb9atm().f[7]++;
    cov_jmqb9atm().s[63]++;
    console.group('🧪 TESTING MESSAGES INTEGRATION');
    cov_jmqb9atm().s[64]++;
    console.time('Total test time');
    cov_jmqb9atm().s[65]++;
    try {
      cov_jmqb9atm().s[66]++;
      console.group('1. Testing get_conversation_messages RPC function');
      cov_jmqb9atm().s[67]++;
      console.time('RPC execution time');
      var _ref4 = (cov_jmqb9atm().s[68]++, yield supabase.rpc('get_conversation_messages', {
          input_convo_id: conversationId
        })),
        rpcData = _ref4.data,
        rpcError = _ref4.error;
      cov_jmqb9atm().s[69]++;
      console.timeEnd('RPC execution time');
      cov_jmqb9atm().s[70]++;
      if (rpcError) {
        cov_jmqb9atm().b[15][0]++;
        cov_jmqb9atm().s[71]++;
        console.error('❌ RPC ERROR:', rpcError.message);
        cov_jmqb9atm().s[72]++;
        console.error('Details:', rpcError);
      } else {
        cov_jmqb9atm().b[15][1]++;
        cov_jmqb9atm().s[73]++;
        if ((cov_jmqb9atm().b[17][0]++, !rpcData) || (cov_jmqb9atm().b[17][1]++, !Array.isArray(rpcData))) {
          cov_jmqb9atm().b[16][0]++;
          cov_jmqb9atm().s[74]++;
          console.error('❌ RPC returned invalid data format:', rpcData);
        } else {
          cov_jmqb9atm().b[16][1]++;
          cov_jmqb9atm().s[75]++;
          console.log('✅ RPC SUCCESS - Returned', rpcData.length, 'messages');
          cov_jmqb9atm().s[76]++;
          console.log('First message sample:', (cov_jmqb9atm().b[18][0]++, rpcData[0]) || (cov_jmqb9atm().b[18][1]++, 'No messages'));
          cov_jmqb9atm().s[77]++;
          if (rpcData.length > 0) {
            cov_jmqb9atm().b[19][0]++;
            var firstMessage = (cov_jmqb9atm().s[78]++, rpcData[0]);
            cov_jmqb9atm().s[79]++;
            console.log('Field mapping check:');
            cov_jmqb9atm().s[80]++;
            console.log('- message_id:', firstMessage.message_id);
            cov_jmqb9atm().s[81]++;
            console.log('- conversation_id:', firstMessage.conversation_id);
            cov_jmqb9atm().s[82]++;
            console.log('- sender_profile:', firstMessage.sender_profile);
          } else {
            cov_jmqb9atm().b[19][1]++;
          }
        }
      }
      cov_jmqb9atm().s[83]++;
      console.groupEnd();
      cov_jmqb9atm().s[84]++;
      console.group('2. Testing messagingService.getMessages');
      cov_jmqb9atm().s[85]++;
      console.time('Service execution time');
      cov_jmqb9atm().s[86]++;
      try {
        var serviceData = (cov_jmqb9atm().s[87]++, yield messagingService.getMessages(conversationId));
        cov_jmqb9atm().s[88]++;
        console.timeEnd('Service execution time');
        cov_jmqb9atm().s[89]++;
        console.log('✅ SERVICE SUCCESS - Returned', serviceData.length, 'messages');
        cov_jmqb9atm().s[90]++;
        console.log('First message sample:', (cov_jmqb9atm().b[20][0]++, serviceData[0]) || (cov_jmqb9atm().b[20][1]++, 'No messages'));
        cov_jmqb9atm().s[91]++;
        if ((cov_jmqb9atm().b[22][0]++, rpcData) && (cov_jmqb9atm().b[22][1]++, serviceData)) {
          cov_jmqb9atm().b[21][0]++;
          cov_jmqb9atm().s[92]++;
          console.group('3. Comparing results');
          cov_jmqb9atm().s[93]++;
          console.log('RPC count:', rpcData.length, '| Service count:', serviceData.length);
          cov_jmqb9atm().s[94]++;
          if ((cov_jmqb9atm().b[24][0]++, rpcData.length > 0) && (cov_jmqb9atm().b[24][1]++, serviceData.length > 0)) {
            cov_jmqb9atm().b[23][0]++;
            var rpcSample = (cov_jmqb9atm().s[95]++, rpcData[0]);
            var serviceSample = (cov_jmqb9atm().s[96]++, serviceData[0]);
            cov_jmqb9atm().s[97]++;
            console.log('RPC first item fields:', Object.keys(rpcSample));
            cov_jmqb9atm().s[98]++;
            console.log('Service first item fields:', Object.keys(serviceSample));
            cov_jmqb9atm().s[99]++;
            console.log('Field mapping needed:');
            cov_jmqb9atm().s[100]++;
            console.log('- RPC message_id → Service id');
            cov_jmqb9atm().s[101]++;
            console.log('- RPC conversation_id → Service conversation_id');
            cov_jmqb9atm().s[102]++;
            if (rpcSample.message_id !== serviceSample.id) {
              cov_jmqb9atm().b[25][0]++;
              cov_jmqb9atm().s[103]++;
              console.warn('⚠️ ID mismatch between RPC and service');
            } else {
              cov_jmqb9atm().b[25][1]++;
              cov_jmqb9atm().s[104]++;
              console.log('✅ IDs match after mapping');
            }
            cov_jmqb9atm().s[105]++;
            if (rpcSample.message_text !== serviceSample.message_text) {
              cov_jmqb9atm().b[26][0]++;
              cov_jmqb9atm().s[106]++;
              console.warn('⚠️ Content mismatch between RPC and service');
            } else {
              cov_jmqb9atm().b[26][1]++;
              cov_jmqb9atm().s[107]++;
              console.log('✅ Message content matches');
            }
          } else {
            cov_jmqb9atm().b[23][1]++;
          }
          cov_jmqb9atm().s[108]++;
          console.groupEnd();
        } else {
          cov_jmqb9atm().b[21][1]++;
        }
      } catch (serviceError) {
        cov_jmqb9atm().s[109]++;
        console.timeEnd('Service execution time');
        cov_jmqb9atm().s[110]++;
        console.error('❌ SERVICE ERROR:', serviceError);
      }
      cov_jmqb9atm().s[111]++;
      console.groupEnd();
    } catch (error) {
      cov_jmqb9atm().s[112]++;
      console.error('❌ TEST FAILED:', error);
    }
    cov_jmqb9atm().s[113]++;
    console.timeEnd('Total test time');
    cov_jmqb9atm().s[114]++;
    console.groupEnd();
  });
  return function testMessagesIntegration(_x2) {
    return _ref3.apply(this, arguments);
  };
}();
cov_jmqb9atm().s[115]++;
export var runAllIntegrationTests = function () {
  var _ref5 = _asyncToGenerator(function* (userId, conversationId) {
    cov_jmqb9atm().f[8]++;
    cov_jmqb9atm().s[116]++;
    console.group('🧪🧪 RUNNING ALL CHAT INTEGRATION TESTS 🧪🧪');
    cov_jmqb9atm().s[117]++;
    console.log('Testing with user ID:', userId);
    cov_jmqb9atm().s[118]++;
    yield testConversationsIntegration(userId);
    cov_jmqb9atm().s[119]++;
    if (!conversationId) {
      cov_jmqb9atm().b[27][0]++;
      cov_jmqb9atm().s[120]++;
      try {
        var _ref6 = (cov_jmqb9atm().s[121]++, yield supabase.rpc('get_user_conversations', {
            input_user_id: userId
          })),
          data = _ref6.data;
        cov_jmqb9atm().s[122]++;
        if ((cov_jmqb9atm().b[29][0]++, data) && (cov_jmqb9atm().b[29][1]++, Array.isArray(data)) && (cov_jmqb9atm().b[29][2]++, data.length > 0)) {
          cov_jmqb9atm().b[28][0]++;
          cov_jmqb9atm().s[123]++;
          conversationId = data[0].id;
          cov_jmqb9atm().s[124]++;
          console.log('Using first conversation ID for messages test:', conversationId);
        } else {
          cov_jmqb9atm().b[28][1]++;
          cov_jmqb9atm().s[125]++;
          console.warn('No conversations found, skipping messages test');
        }
      } catch (error) {
        cov_jmqb9atm().s[126]++;
        console.error('Failed to get conversation ID:', error);
      }
    } else {
      cov_jmqb9atm().b[27][1]++;
    }
    cov_jmqb9atm().s[127]++;
    if (conversationId) {
      cov_jmqb9atm().b[30][0]++;
      cov_jmqb9atm().s[128]++;
      yield testMessagesIntegration(conversationId);
    } else {
      cov_jmqb9atm().b[30][1]++;
    }
    cov_jmqb9atm().s[129]++;
    console.groupEnd();
    cov_jmqb9atm().s[130]++;
    console.log('🏁 All tests completed');
  });
  return function runAllIntegrationTests(_x3, _x4) {
    return _ref5.apply(this, arguments);
  };
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,