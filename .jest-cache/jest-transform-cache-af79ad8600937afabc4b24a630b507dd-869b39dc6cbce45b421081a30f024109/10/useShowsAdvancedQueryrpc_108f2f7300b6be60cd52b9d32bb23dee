e229cab6ea9acf706104828fce2596a8
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
function cov_2eth7i7ga4() {
  var path = "/Users/kevin/card-show-finder/src/hooks/useShowsAdvancedQuery.rpc.ts";
  var hash = "d2be8a56af2e052365803e9d5a6b1e695f78b5a9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/hooks/useShowsAdvancedQuery.rpc.ts",
    statementMap: {
      "0": {
        start: {
          line: 116,
          column: 37
        },
        end: {
          line: 219,
          column: 1
        }
      },
      "1": {
        start: {
          line: 121,
          column: 53
        },
        end: {
          line: 134,
          column: 3
        }
      },
      "2": {
        start: {
          line: 137,
          column: 19
        },
        end: {
          line: 137,
          column: 51
        }
      },
      "3": {
        start: {
          line: 139,
          column: 2
        },
        end: {
          line: 218,
          column: 5
        }
      },
      "4": {
        start: {
          line: 142,
          column: 6
        },
        end: {
          line: 209,
          column: 7
        }
      },
      "5": {
        start: {
          line: 144,
          column: 25
        },
        end: {
          line: 144,
          column: 76
        }
      },
      "6": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 156,
          column: 10
        }
      },
      "7": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 205,
          column: 9
        }
      },
      "8": {
        start: {
          line: 160,
          column: 10
        },
        end: {
          line: 160,
          column: 84
        }
      },
      "9": {
        start: {
          line: 163,
          column: 10
        },
        end: {
          line: 165,
          column: 11
        }
      },
      "10": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 87
        }
      },
      "11": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 174,
          column: 25
        }
      },
      "12": {
        start: {
          line: 172,
          column: 25
        },
        end: {
          line: 172,
          column: 56
        }
      },
      "13": {
        start: {
          line: 175,
          column: 31
        },
        end: {
          line: 188,
          column: 11
        }
      },
      "14": {
        start: {
          line: 191,
          column: 33
        },
        end: {
          line: 191,
          column: 88
        }
      },
      "15": {
        start: {
          line: 194,
          column: 10
        },
        end: {
          line: 204,
          column: 12
        }
      },
      "16": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 208,
          column: 20
        }
      },
      "17": {
        start: {
          line: 262,
          column: 37
        },
        end: {
          line: 378,
          column: 1
        }
      },
      "18": {
        start: {
          line: 267,
          column: 54
        },
        end: {
          line: 279,
          column: 3
        }
      },
      "19": {
        start: {
          line: 282,
          column: 19
        },
        end: {
          line: 282,
          column: 61
        }
      },
      "20": {
        start: {
          line: 284,
          column: 2
        },
        end: {
          line: 377,
          column: 5
        }
      },
      "21": {
        start: {
          line: 288,
          column: 6
        },
        end: {
          line: 361,
          column: 7
        }
      },
      "22": {
        start: {
          line: 290,
          column: 26
        },
        end: {
          line: 293,
          column: 9
        }
      },
      "23": {
        start: {
          line: 296,
          column: 25
        },
        end: {
          line: 296,
          column: 76
        }
      },
      "24": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 308,
          column: 10
        }
      },
      "25": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 357,
          column: 9
        }
      },
      "26": {
        start: {
          line: 312,
          column: 10
        },
        end: {
          line: 312,
          column: 93
        }
      },
      "27": {
        start: {
          line: 315,
          column: 10
        },
        end: {
          line: 317,
          column: 11
        }
      },
      "28": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 316,
          column: 87
        }
      },
      "29": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 326,
          column: 25
        }
      },
      "30": {
        start: {
          line: 324,
          column: 25
        },
        end: {
          line: 324,
          column: 56
        }
      },
      "31": {
        start: {
          line: 327,
          column: 31
        },
        end: {
          line: 340,
          column: 11
        }
      },
      "32": {
        start: {
          line: 343,
          column: 33
        },
        end: {
          line: 343,
          column: 88
        }
      },
      "33": {
        start: {
          line: 346,
          column: 10
        },
        end: {
          line: 356,
          column: 12
        }
      },
      "34": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 360,
          column: 20
        }
      },
      "35": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 368,
          column: 9
        }
      },
      "36": {
        start: {
          line: 367,
          column: 10
        },
        end: {
          line: 367,
          column: 27
        }
      },
      "37": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 369,
          column: 51
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 116,
            column: 37
          },
          end: {
            line: 116,
            column: 38
          }
        },
        loc: {
          start: {
            line: 119,
            column: 5
          },
          end: {
            line: 219,
            column: 1
          }
        },
        line: 119
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 141,
            column: 13
          },
          end: {
            line: 141,
            column: 14
          }
        },
        loc: {
          start: {
            line: 141,
            column: 25
          },
          end: {
            line: 210,
            column: 5
          }
        },
        line: 141
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 172,
            column: 18
          },
          end: {
            line: 172,
            column: 19
          }
        },
        loc: {
          start: {
            line: 172,
            column: 25
          },
          end: {
            line: 172,
            column: 56
          }
        },
        line: 172
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 262,
            column: 37
          },
          end: {
            line: 262,
            column: 38
          }
        },
        loc: {
          start: {
            line: 265,
            column: 5
          },
          end: {
            line: 378,
            column: 1
          }
        },
        line: 265
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 287,
            column: 13
          },
          end: {
            line: 287,
            column: 14
          }
        },
        loc: {
          start: {
            line: 287,
            column: 38
          },
          end: {
            line: 362,
            column: 5
          }
        },
        line: 287
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 324,
            column: 18
          },
          end: {
            line: 324,
            column: 19
          }
        },
        loc: {
          start: {
            line: 324,
            column: 25
          },
          end: {
            line: 324,
            column: 56
          }
        },
        line: 324
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 365,
            column: 24
          },
          end: {
            line: 365,
            column: 25
          }
        },
        loc: {
          start: {
            line: 365,
            column: 64
          },
          end: {
            line: 370,
            column: 7
          }
        },
        line: 365
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 124,
            column: 18
          },
          end: {
            line: 124,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 18
          },
          end: {
            line: 124,
            column: 31
          }
        }, {
          start: {
            line: 124,
            column: 35
          },
          end: {
            line: 124,
            column: 37
          }
        }],
        line: 124
      },
      "1": {
        loc: {
          start: {
            line: 131,
            column: 15
          },
          end: {
            line: 131,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 15
          },
          end: {
            line: 131,
            column: 30
          }
        }, {
          start: {
            line: 131,
            column: 34
          },
          end: {
            line: 131,
            column: 36
          }
        }],
        line: 131
      },
      "2": {
        loc: {
          start: {
            line: 132,
            column: 10
          },
          end: {
            line: 132,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 10
          },
          end: {
            line: 132,
            column: 21
          }
        }, {
          start: {
            line: 132,
            column: 25
          },
          end: {
            line: 132,
            column: 26
          }
        }],
        line: 132
      },
      "3": {
        loc: {
          start: {
            line: 159,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "4": {
        loc: {
          start: {
            line: 163,
            column: 10
          },
          end: {
            line: 165,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 10
          },
          end: {
            line: 165,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "5": {
        loc: {
          start: {
            line: 163,
            column: 14
          },
          end: {
            line: 163,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 14
          },
          end: {
            line: 163,
            column: 44
          }
        }, {
          start: {
            line: 163,
            column: 48
          },
          end: {
            line: 163,
            column: 78
          }
        }],
        line: 163
      },
      "6": {
        loc: {
          start: {
            line: 169,
            column: 12
          },
          end: {
            line: 174,
            column: 25
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 171,
            column: 16
          },
          end: {
            line: 173,
            column: 17
          }
        }, {
          start: {
            line: 174,
            column: 16
          },
          end: {
            line: 174,
            column: 25
          }
        }],
        line: 169
      },
      "7": {
        loc: {
          start: {
            line: 169,
            column: 12
          },
          end: {
            line: 170,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 169,
            column: 12
          },
          end: {
            line: 169,
            column: 27
          }
        }, {
          start: {
            line: 170,
            column: 12
          },
          end: {
            line: 170,
            column: 47
          }
        }],
        line: 169
      },
      "8": {
        loc: {
          start: {
            line: 178,
            column: 20
          },
          end: {
            line: 178,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 178,
            column: 20
          },
          end: {
            line: 178,
            column: 33
          }
        }, {
          start: {
            line: 178,
            column: 37
          },
          end: {
            line: 178,
            column: 39
          }
        }],
        line: 178
      },
      "9": {
        loc: {
          start: {
            line: 185,
            column: 18
          },
          end: {
            line: 185,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 185,
            column: 18
          },
          end: {
            line: 185,
            column: 29
          }
        }, {
          start: {
            line: 185,
            column: 33
          },
          end: {
            line: 185,
            column: 34
          }
        }],
        line: 185
      },
      "10": {
        loc: {
          start: {
            line: 186,
            column: 22
          },
          end: {
            line: 186,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 22
          },
          end: {
            line: 186,
            column: 37
          }
        }, {
          start: {
            line: 186,
            column: 41
          },
          end: {
            line: 186,
            column: 43
          }
        }],
        line: 186
      },
      "11": {
        loc: {
          start: {
            line: 270,
            column: 18
          },
          end: {
            line: 270,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 270,
            column: 18
          },
          end: {
            line: 270,
            column: 31
          }
        }, {
          start: {
            line: 270,
            column: 35
          },
          end: {
            line: 270,
            column: 37
          }
        }],
        line: 270
      },
      "12": {
        loc: {
          start: {
            line: 277,
            column: 15
          },
          end: {
            line: 277,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 277,
            column: 15
          },
          end: {
            line: 277,
            column: 30
          }
        }, {
          start: {
            line: 277,
            column: 34
          },
          end: {
            line: 277,
            column: 36
          }
        }],
        line: 277
      },
      "13": {
        loc: {
          start: {
            line: 311,
            column: 8
          },
          end: {
            line: 357,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 8
          },
          end: {
            line: 357,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 311
      },
      "14": {
        loc: {
          start: {
            line: 315,
            column: 10
          },
          end: {
            line: 317,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 315,
            column: 10
          },
          end: {
            line: 317,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 315
      },
      "15": {
        loc: {
          start: {
            line: 315,
            column: 14
          },
          end: {
            line: 315,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 315,
            column: 14
          },
          end: {
            line: 315,
            column: 44
          }
        }, {
          start: {
            line: 315,
            column: 48
          },
          end: {
            line: 315,
            column: 78
          }
        }],
        line: 315
      },
      "16": {
        loc: {
          start: {
            line: 321,
            column: 12
          },
          end: {
            line: 326,
            column: 25
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 323,
            column: 16
          },
          end: {
            line: 325,
            column: 17
          }
        }, {
          start: {
            line: 326,
            column: 16
          },
          end: {
            line: 326,
            column: 25
          }
        }],
        line: 321
      },
      "17": {
        loc: {
          start: {
            line: 321,
            column: 12
          },
          end: {
            line: 322,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 321,
            column: 12
          },
          end: {
            line: 321,
            column: 27
          }
        }, {
          start: {
            line: 322,
            column: 12
          },
          end: {
            line: 322,
            column: 47
          }
        }],
        line: 321
      },
      "18": {
        loc: {
          start: {
            line: 330,
            column: 20
          },
          end: {
            line: 330,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 330,
            column: 20
          },
          end: {
            line: 330,
            column: 33
          }
        }, {
          start: {
            line: 330,
            column: 37
          },
          end: {
            line: 330,
            column: 39
          }
        }],
        line: 330
      },
      "19": {
        loc: {
          start: {
            line: 338,
            column: 22
          },
          end: {
            line: 338,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 338,
            column: 22
          },
          end: {
            line: 338,
            column: 37
          }
        }, {
          start: {
            line: 338,
            column: 41
          },
          end: {
            line: 338,
            column: 43
          }
        }],
        line: 338
      },
      "20": {
        loc: {
          start: {
            line: 366,
            column: 8
          },
          end: {
            line: 368,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 366,
            column: 8
          },
          end: {
            line: 368,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 366
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d2be8a56af2e052365803e9d5a6b1e695f78b5a9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2eth7i7ga4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2eth7i7ga4();
import { useQuery, useInfiniteQuery } from '@tanstack/react-query';
import * as showServiceRPC from '../services/showService.rpc';
import * as showServiceLegacy from '../services/showService';
cov_2eth7i7ga4().s[0]++;
export var useShowsAdvancedQuery = function useShowsAdvancedQuery(params, options) {
  cov_2eth7i7ga4().f[0]++;
  var rpcParams = (cov_2eth7i7ga4().s[1]++, {
    lat: params.lat,
    lng: params.lng,
    radius_miles: (cov_2eth7i7ga4().b[0][0]++, params.radius) || (cov_2eth7i7ga4().b[0][1]++, 25),
    start_date: params.startDate,
    end_date: params.endDate,
    max_entry_fee: params.maxEntryFee,
    categories: params.categories,
    features: params.features,
    keyword: params.keyword,
    page_size: (cov_2eth7i7ga4().b[1][0]++, params.pageSize) || (cov_2eth7i7ga4().b[1][1]++, 20),
    page: (cov_2eth7i7ga4().b[2][0]++, params.page) || (cov_2eth7i7ga4().b[2][1]++, 1),
    status: params.status
  });
  var queryKey = (cov_2eth7i7ga4().s[2]++, ['shows', 'advanced', rpcParams]);
  cov_2eth7i7ga4().s[3]++;
  return useQuery(Object.assign({
    queryKey: queryKey,
    queryFn: function () {
      var _queryFn = _asyncToGenerator(function* () {
        cov_2eth7i7ga4().f[1]++;
        cov_2eth7i7ga4().s[4]++;
        try {
          var response = (cov_2eth7i7ga4().s[5]++, yield showServiceRPC.searchShowsAdvanced(rpcParams));
          cov_2eth7i7ga4().s[6]++;
          return {
            shows: response.data,
            pagination: {
              totalCount: response.pagination.total_count,
              pageSize: response.pagination.page_size,
              currentPage: response.pagination.current_page,
              totalPages: response.pagination.total_pages,
              hasMore: response.pagination.has_more
            }
          };
        } catch (error) {
          cov_2eth7i7ga4().s[7]++;
          if (params.useLegacyFallback !== false) {
            cov_2eth7i7ga4().b[3][0]++;
            cov_2eth7i7ga4().s[8]++;
            console.warn('RPC search failed, falling back to legacy service:', error);
            cov_2eth7i7ga4().s[9]++;
            if ((cov_2eth7i7ga4().b[5][0]++, typeof params.lat !== 'number') || (cov_2eth7i7ga4().b[5][1]++, typeof params.lng !== 'number')) {
              cov_2eth7i7ga4().b[4][0]++;
              cov_2eth7i7ga4().s[10]++;
              throw new Error('Latitude and longitude are required for legacy fallback');
            } else {
              cov_2eth7i7ga4().b[4][1]++;
            }
            var legacyFeatures = (cov_2eth7i7ga4().s[11]++, (cov_2eth7i7ga4().b[7][0]++, params.features) && (cov_2eth7i7ga4().b[7][1]++, typeof params.features === 'object') ? (cov_2eth7i7ga4().b[6][0]++, Object.keys(params.features).filter(function (key) {
              var _params$features;
              cov_2eth7i7ga4().f[2]++;
              cov_2eth7i7ga4().s[12]++;
              return ((_params$features = params.features) == null ? void 0 : _params$features[key]) === true;
            })) : (cov_2eth7i7ga4().b[6][1]++, undefined));
            var legacyParams = (cov_2eth7i7ga4().s[13]++, {
              latitude: params.lat,
              longitude: params.lng,
              radius: (cov_2eth7i7ga4().b[8][0]++, params.radius) || (cov_2eth7i7ga4().b[8][1]++, 25),
              startDate: params.startDate,
              endDate: params.endDate,
              maxEntryFee: params.maxEntryFee,
              categories: params.categories,
              features: legacyFeatures,
              keyword: params.keyword,
              page: (cov_2eth7i7ga4().b[9][0]++, params.page) || (cov_2eth7i7ga4().b[9][1]++, 1),
              pageSize: (cov_2eth7i7ga4().b[10][0]++, params.pageSize) || (cov_2eth7i7ga4().b[10][1]++, 20),
              status: params.status
            });
            var legacyResponse = (cov_2eth7i7ga4().s[14]++, yield showServiceLegacy.getPaginatedShows(legacyParams));
            cov_2eth7i7ga4().s[15]++;
            return {
              shows: legacyResponse.data,
              pagination: {
                totalCount: legacyResponse.pagination.totalCount,
                pageSize: legacyResponse.pagination.pageSize,
                currentPage: legacyResponse.pagination.currentPage,
                totalPages: legacyResponse.pagination.totalPages,
                hasMore: legacyResponse.pagination.currentPage < legacyResponse.pagination.totalPages
              },
              usedLegacyService: true
            };
          } else {
            cov_2eth7i7ga4().b[3][1]++;
          }
          cov_2eth7i7ga4().s[16]++;
          throw error;
        }
      });
      function queryFn() {
        return _queryFn.apply(this, arguments);
      }
      return queryFn;
    }(),
    staleTime: 5 * 60 * 1000,
    gcTime: 10 * 60 * 1000
  }, options));
};
cov_2eth7i7ga4().s[17]++;
export var useShowsInfiniteQuery = function useShowsInfiniteQuery(params, options) {
  cov_2eth7i7ga4().f[3]++;
  var baseParams = (cov_2eth7i7ga4().s[18]++, {
    lat: params.lat,
    lng: params.lng,
    radius_miles: (cov_2eth7i7ga4().b[11][0]++, params.radius) || (cov_2eth7i7ga4().b[11][1]++, 25),
    start_date: params.startDate,
    end_date: params.endDate,
    max_entry_fee: params.maxEntryFee,
    categories: params.categories,
    features: params.features,
    keyword: params.keyword,
    page_size: (cov_2eth7i7ga4().b[12][0]++, params.pageSize) || (cov_2eth7i7ga4().b[12][1]++, 20),
    status: params.status
  });
  var queryKey = (cov_2eth7i7ga4().s[19]++, ['shows', 'infinite', baseParams]);
  cov_2eth7i7ga4().s[20]++;
  return useInfiniteQuery(Object.assign({
    queryKey: queryKey,
    initialPageParam: 1,
    queryFn: function () {
      var _queryFn2 = _asyncToGenerator(function* (_ref) {
        var pageParam = _ref.pageParam;
        cov_2eth7i7ga4().f[4]++;
        cov_2eth7i7ga4().s[21]++;
        try {
          var rpcParams = (cov_2eth7i7ga4().s[22]++, Object.assign({}, baseParams, {
            page: pageParam
          }));
          var response = (cov_2eth7i7ga4().s[23]++, yield showServiceRPC.searchShowsAdvanced(rpcParams));
          cov_2eth7i7ga4().s[24]++;
          return {
            shows: response.data,
            pagination: {
              totalCount: response.pagination.total_count,
              pageSize: response.pagination.page_size,
              currentPage: response.pagination.current_page,
              totalPages: response.pagination.total_pages,
              hasMore: response.pagination.has_more
            }
          };
        } catch (error) {
          cov_2eth7i7ga4().s[25]++;
          if (params.useLegacyFallback !== false) {
            cov_2eth7i7ga4().b[13][0]++;
            cov_2eth7i7ga4().s[26]++;
            console.warn('RPC infinite search failed, falling back to legacy service:', error);
            cov_2eth7i7ga4().s[27]++;
            if ((cov_2eth7i7ga4().b[15][0]++, typeof params.lat !== 'number') || (cov_2eth7i7ga4().b[15][1]++, typeof params.lng !== 'number')) {
              cov_2eth7i7ga4().b[14][0]++;
              cov_2eth7i7ga4().s[28]++;
              throw new Error('Latitude and longitude are required for legacy fallback');
            } else {
              cov_2eth7i7ga4().b[14][1]++;
            }
            var legacyFeatures = (cov_2eth7i7ga4().s[29]++, (cov_2eth7i7ga4().b[17][0]++, params.features) && (cov_2eth7i7ga4().b[17][1]++, typeof params.features === 'object') ? (cov_2eth7i7ga4().b[16][0]++, Object.keys(params.features).filter(function (key) {
              var _params$features2;
              cov_2eth7i7ga4().f[5]++;
              cov_2eth7i7ga4().s[30]++;
              return ((_params$features2 = params.features) == null ? void 0 : _params$features2[key]) === true;
            })) : (cov_2eth7i7ga4().b[16][1]++, undefined));
            var legacyParams = (cov_2eth7i7ga4().s[31]++, {
              latitude: params.lat,
              longitude: params.lng,
              radius: (cov_2eth7i7ga4().b[18][0]++, params.radius) || (cov_2eth7i7ga4().b[18][1]++, 25),
              startDate: params.startDate,
              endDate: params.endDate,
              maxEntryFee: params.maxEntryFee,
              categories: params.categories,
              features: legacyFeatures,
              keyword: params.keyword,
              page: pageParam,
              pageSize: (cov_2eth7i7ga4().b[19][0]++, params.pageSize) || (cov_2eth7i7ga4().b[19][1]++, 20),
              status: params.status
            });
            var legacyResponse = (cov_2eth7i7ga4().s[32]++, yield showServiceLegacy.getPaginatedShows(legacyParams));
            cov_2eth7i7ga4().s[33]++;
            return {
              shows: legacyResponse.data,
              pagination: {
                totalCount: legacyResponse.pagination.totalCount,
                pageSize: legacyResponse.pagination.pageSize,
                currentPage: legacyResponse.pagination.currentPage,
                totalPages: legacyResponse.pagination.totalPages,
                hasMore: legacyResponse.pagination.currentPage < legacyResponse.pagination.totalPages
              },
              usedLegacyService: true
            };
          } else {
            cov_2eth7i7ga4().b[13][1]++;
          }
          cov_2eth7i7ga4().s[34]++;
          throw error;
        }
      });
      function queryFn(_x) {
        return _queryFn2.apply(this, arguments);
      }
      return queryFn;
    }(),
    getNextPageParam: function getNextPageParam(lastPage) {
      cov_2eth7i7ga4().f[6]++;
      cov_2eth7i7ga4().s[35]++;
      if (!lastPage.pagination.hasMore) {
        cov_2eth7i7ga4().b[20][0]++;
        cov_2eth7i7ga4().s[36]++;
        return undefined;
      } else {
        cov_2eth7i7ga4().b[20][1]++;
      }
      cov_2eth7i7ga4().s[37]++;
      return lastPage.pagination.currentPage + 1;
    },
    staleTime: 5 * 60 * 1000,
    gcTime: 10 * 60 * 1000
  }, options));
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,