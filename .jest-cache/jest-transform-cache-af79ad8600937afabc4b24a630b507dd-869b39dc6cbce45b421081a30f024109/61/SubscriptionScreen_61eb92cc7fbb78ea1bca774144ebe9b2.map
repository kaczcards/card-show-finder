{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","ScrollView","TouchableOpacity","ActivityIndicator","Alert","useWindowDimensions","useNavigation","useAuth","useUserSubscriptions","getSubscriptionDetails","getSubscriptionTimeRemaining","initiateSubscriptionPurchase","renewSubscription","cancelSubscription","formatExpiryDate","SUBSCRIPTION_PLANS","SubscriptionPlanType","SubscriptionDuration","jsx","_jsx","jsxs","_jsxs","cov_c16tavdwu","s","SubscriptionScreen","f","_ref","authState","refreshUserRole","_ref2","user","navigation","_ref3","_width","width","_ref4","_ref5","_slicedToArray","loading","setLoading","_ref6","_ref7","processingPayment","setProcessingPayment","_ref8","_ref9","selectedPlan","setSelectedPlan","_ref0","_ref1","subscriptionDetails","setSubscriptionDetails","_ref10","_ref11","timeRemaining","setTimeRemaining","_ref12","_ref13","billingCycle","setBillingCycle","ORANGE","_BLUE","_LIGHT_GRAY","DARK_GRAY","_ref14","subscriptions","subsLoading","isLoading","subsError","error","currentSubscription","b","length","loadSubscriptionDetails","timer","setInterval","subscriptionExpiry","clearInterval","details","accountType","planType","DEALER","ORGANIZER","duration","MONTHLY","ANNUAL","plan","find","p","type","console","alert","handlePurchase","_ref15","_asyncToGenerator","result","id","success","text","onPress","goBack","message","apply","arguments","handleRenewal","_ref16","handleCancel","_ref17","style","_onPress","toggleBillingCycle","newCycle","renderCurrentSubscription","_user$role","styles","currentSubscriptionContainer","children","sectionTitle","freeAccountText","upgradePrompt","_ref18","status","expiry","isActive","isTrialPeriod","subscriptionInfoRow","subscriptionLabel","subscriptionValue","role","toLowerCase","color","charAt","toUpperCase","slice","timeRemainingContainer","timeRemainingLabel","timeRemainingValue","days","hours","trialBadgeContainer","trialBadgeText","renderPlanSelector","dealerMonthlyPlan","dealerAnnualPlan","organizerMonthlyPlan","organizerAnnualPlan","dealerPlan","organizerPlan","planSelectorContainer","billingToggleContainer","billingToggleText","billingToggleActive","billingToggleSwitch","billingToggleSwitchRight","billingToggleKnob","billingToggleRightContainer","savingsText","plansRow","planCard","selectedPlanCard","planName","planPrice","price","planBillingCycle","trialDays","trialText","planFeatures","features","map","feature","index","featureRow","featureCheck","featureText","moreFeatures","recommendedPlan","recommendedBadge","recommendedText","renderPlanComparison","allFeatures","Set","forEach","add","comparisonContainer","horizontal","showsHorizontalScrollIndicator","comparisonTable","comparisonRow","comparisonCell","comparisonHeaderCell","comparisonHeaderText","Array","from","dealerHas","includes","organizerHas","freeHas","comparisonRowEven","checkmark","renderActionButtons","actionButtonsContainer","activeStatus","expiredStatus","isUpgrade","isDowngrade","isRenewal","hasExpired","buttonText","cancelButton","cancelButtonText","primaryButton","disabledButton","processingButton","disabled","primaryButtonText","combinedLoading","loadingContainer","size","loadingText","container","contentContainerStyle","contentContainer","screenTitle","errorBanner","errorBannerText","disclaimerContainer","disclaimerText","create","flex","backgroundColor","padding","paddingBottom","justifyContent","alignItems","marginTop","fontSize","fontWeight","marginBottom","borderRadius","borderWidth","borderColor","fontStyle","flexDirection","alignSelf","height","marginHorizontal","position","top","right","paddingHorizontal","paddingVertical","marginRight","overflow","borderRightWidth","borderBottomWidth","textAlign"],"sources":["SubscriptionScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, ScrollView, TouchableOpacity, ActivityIndicator, Alert, Image as _Image, useWindowDimensions,  } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { useAuth } from '../../contexts/AuthContext'; // Using useAuth for refreshUserRole\nimport { useUserSubscriptions } from '../../hooks/useUserSubscriptions';\n/* -------------------------------------------------------------\n * Subscription service – functions that act on the database\n * ----------------------------------------------------------- */\nimport {\n  getSubscriptionDetails,\n  getSubscriptionTimeRemaining,\n  initiateSubscriptionPurchase,\n  renewSubscription,\n  cancelSubscription,\n  formatExpiryDate,\n} from '../../services/subscriptionService';\n\n/* -------------------------------------------------------------\n * Subscription constants / enums – exported from subscriptionTypes\n * ----------------------------------------------------------- */\nimport {\n  SUBSCRIPTION_PLANS,\n  SubscriptionPlan,\n  SubscriptionPlanType,\n  SubscriptionDuration,\n} from '../../services/subscriptionTypes';\n\nconst SubscriptionScreen: React.FC = () => {\n  const { authState, refreshUserRole } = useAuth(); // Destructure refreshUserRole from useAuth\n  const { user } = authState;\n  const navigation = useNavigation();\n  const { width: _width } = useWindowDimensions();\n  \n  const [loading, setLoading] = useState(false);\n  const [processingPayment, setProcessingPayment] = useState(false);\n  const [selectedPlan, setSelectedPlan] = useState<SubscriptionPlan | null>(null);\n  const [subscriptionDetails, setSubscriptionDetails] = useState<any>(null);\n  const [timeRemaining, setTimeRemaining] = useState<{ days: number, hours: number } | null>(null);\n  const [billingCycle, setBillingCycle] = useState<'monthly' | 'annual'>('annual');\n  \n  // Colors\n  const ORANGE = '#FF6A00';\n  const _BLUE = '#0057B8';\n  const _LIGHT_GRAY = '#f0f0f0';\n  const DARK_GRAY = '#666666';\n  \n  /* ------------------------------------------------------------------\n   * Subscriptions – fetch via dedicated hook\n   * ------------------------------------------------------------------ */\n  const {\n    subscriptions,\n    isLoading: subsLoading,\n    error: subsError,\n  } = useUserSubscriptions();\n\n  // Extract the current subscription from the array (there will be only one item)\n  const currentSubscription = subscriptions && subscriptions.length > 0 ? subscriptions[0] : null;\n\n  useEffect(() => {\n    if (user) {\n      loadSubscriptionDetails();\n    }\n  }, [user]);\n  \n  // Refresh time remaining every minute\n  useEffect(() => {\n    if (!user) return;\n    \n    const timer = setInterval(() => {\n      if (user.subscriptionExpiry) {\n        setTimeRemaining(getSubscriptionTimeRemaining(user));\n      }\n    }, 60000); // Update every minute\n    \n    return () => clearInterval(timer);\n  }, [user]);\n  \n  const loadSubscriptionDetails = () => {\n    if (!user) return;\n    \n    setLoading(true);\n    try {\n      const details = getSubscriptionDetails(user);\n      setSubscriptionDetails(details);\n      setTimeRemaining(getSubscriptionTimeRemaining(user));\n      \n      // Pre-select the appropriate plan based on user's account type\n      if (details?.accountType) {\n        const planType = details.accountType === 'dealer' \n          ? SubscriptionPlanType.DEALER \n          : SubscriptionPlanType.ORGANIZER;\n          \n        const duration = billingCycle === 'monthly' \n          ? SubscriptionDuration.MONTHLY \n          : SubscriptionDuration.ANNUAL;\n          \n        const plan = SUBSCRIPTION_PLANS.find(p => \n          p.type === planType && p.duration === duration\n        );\n        \n        setSelectedPlan(plan || null);\n      }\n    } catch (error) {\n      console.error('Error loading subscription details:', error);\n      Alert.alert('Error', 'Failed to load subscription details');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const handlePurchase = async () => {\n    // Guard: subscription data must be ready\n    if (subsLoading) {\n      Alert.alert('Please wait', 'Subscription data is still loading. Try again shortly.');\n      return;\n    }\n    if (!user || !selectedPlan) return;\n    \n    setProcessingPayment(true);\n    try {\n      const result = await initiateSubscriptionPurchase(user.id, selectedPlan.id);\n      \n      if (result.success) {\n        await refreshUserRole(); // Call to refresh user's role and state after successful purchase\n        Alert.alert(\n          'Success',\n          `Your subscription has been activated! It will expire on ${formatExpiryDate(result.subscriptionExpiry as Date)}`,\n          [{ text: 'OK', onPress: () => navigation.goBack() }]\n        );\n      } else {\n        Alert.alert('Error', result.error || 'Failed to process payment');\n      }\n    } catch (error: any) {\n      console.error('Error purchasing subscription:', error);\n      Alert.alert('Error', error.message || 'Failed to process payment');\n    } finally {\n      setProcessingPayment(false);\n    }\n  };\n  \n  const handleRenewal = async () => {\n    if (subsLoading) {\n      Alert.alert('Please wait', 'Subscription data is still loading. Try again shortly.');\n      return;\n    }\n    if (!user || !selectedPlan) return;\n    \n    setProcessingPayment(true);\n    try {\n      const result = await renewSubscription(user.id, selectedPlan.id);\n      \n      if (result.success) {\n        await refreshUserRole(); // Call to refresh user's role and state after successful renewal\n        Alert.alert(\n          'Success',\n          `Your subscription has been renewed! It will now expire on ${formatExpiryDate(result.subscriptionExpiry as Date)}`,\n          [{ text: 'OK', onPress: () => navigation.goBack() }]\n        );\n      } else {\n        Alert.alert('Error', result.error || 'Failed to renew subscription');\n      }\n    } catch (error: any) {\n      console.error('Error renewing subscription:', error);\n      Alert.alert('Error', error.message || 'Failed to renew subscription');\n    } finally {\n      setProcessingPayment(false);\n    }\n  };\n  \n  const handleCancel = async () => {\n    if (subsLoading) {\n      Alert.alert('Please wait', 'Subscription data is still loading. Try again shortly.');\n      return;\n    }\n    if (!user) return;\n    \n    Alert.alert(\n      'Cancel Subscription',\n      'Are you sure you want to cancel your subscription? You will still have access until your current billing period ends.',\n      [\n        { text: 'No', style: 'cancel' },\n        {\n          text: 'Yes, Cancel',\n          style: 'destructive',\n          onPress: async () => {\n            setLoading(true);\n            try {\n              const result = await cancelSubscription(user.id);\n              \n              if (result.success) {\n                await refreshUserRole(); // Call to refresh user's role and state after successful cancellation\n                Alert.alert(\n                  'Subscription Cancelled',\n                  'Your subscription has been cancelled. You will have access until the end of your current billing period.',\n                  [{ text: 'OK', onPress: () => navigation.goBack() }]\n                );\n              } else {\n                Alert.alert('Error', result.error || 'Failed to cancel subscription');\n              }\n            } catch (error: any) {\n              console.error('Error cancelling subscription:', error);\n              Alert.alert('Error', error.message || 'Failed to cancel subscription');\n            } finally {\n              setLoading(false);\n            }\n          }\n        }\n      ]\n    );\n  };\n  \n  const toggleBillingCycle = () => {\n    const newCycle = billingCycle === 'monthly' ? 'annual' : 'monthly';\n    setBillingCycle(newCycle);\n    \n    // Update selected plan based on new billing cycle\n    if (selectedPlan) {\n      const duration = newCycle === 'monthly' \n        ? SubscriptionDuration.MONTHLY \n        : SubscriptionDuration.ANNUAL;\n        \n      const plan = SUBSCRIPTION_PLANS.find(p => \n        p.type === selectedPlan.type && p.duration === duration\n      );\n      \n      setSelectedPlan(plan || null);\n    }\n  };\n  \n  const renderCurrentSubscription = () => {\n    if (!user || user.accountType === 'collector') {\n      return (\n        <View style={styles.currentSubscriptionContainer}>\n          <Text style={styles.sectionTitle}>Current Subscription</Text>\n          <Text style={styles.freeAccountText}>\n            You are currently on a free collector account.\n          </Text>\n          <Text style={styles.upgradePrompt}>\n            Upgrade to a paid plan to access dealer and organizer features!\n          </Text>\n        </View>\n      );\n    }\n    \n    if (!subscriptionDetails) return null;\n    \n    const { status, expiry, isActive, isTrialPeriod } = subscriptionDetails;\n    \n    return (\n      <View style={styles.currentSubscriptionContainer}>\n        <Text style={styles.sectionTitle}>Current Subscription</Text>\n        \n        <View style={styles.subscriptionInfoRow}>\n          <Text style={styles.subscriptionLabel}>Account Type:</Text>\n          <Text style={styles.subscriptionValue}>\n            {user.accountType === 'dealer'\n              ? // Distinguish regular Dealers from MVP Dealers\n                (user.role?.toLowerCase?.() === 'mvp_dealer' ? 'MVP Dealer' : 'Dealer')\n              : 'Show Organizer'}\n          </Text>\n        </View>\n        \n        <View style={styles.subscriptionInfoRow}>\n          <Text style={styles.subscriptionLabel}>Status:</Text>\n          <Text style={[\n            styles.subscriptionValue,\n            { color: status === 'active' ? 'green' : status === 'expired' ? 'red' : DARK_GRAY }\n          ]}>\n            {status.charAt(0).toUpperCase() + status.slice(1)}\n          </Text>\n        </View>\n        \n        {expiry && (\n          <View style={styles.subscriptionInfoRow}>\n            <Text style={styles.subscriptionLabel}>Expires:</Text>\n            <Text style={styles.subscriptionValue}>{formatExpiryDate(expiry)}</Text>\n          </View>\n        )}\n        \n        {isActive && timeRemaining && (\n          <View style={styles.timeRemainingContainer}>\n            <Text style={styles.timeRemainingLabel}>\n              {isTrialPeriod ? 'Trial Ends In:' : 'Subscription Ends In:'}\n            </Text>\n            <Text style={styles.timeRemainingValue}>\n              {timeRemaining.days} days, {timeRemaining.hours} hours\n            </Text>\n          </View>\n        )}\n        \n        {/* Trial period countdown badge */}\n        {isActive && isTrialPeriod && timeRemaining && status === 'active' && (\n          <View style={styles.trialBadgeContainer}>\n            <Text style={styles.trialBadgeText}>\n              {timeRemaining.days === 0 \n                ? 'Trial ends today!' \n                : `${timeRemaining.days} days left in trial`}\n            </Text>\n          </View>\n        )}\n      </View>\n    );\n  };\n  \n  const renderPlanSelector = () => {\n    const dealerMonthlyPlan = SUBSCRIPTION_PLANS.find(\n      p => p.type === SubscriptionPlanType.DEALER && p.duration === SubscriptionDuration.MONTHLY\n    );\n    \n    const dealerAnnualPlan = SUBSCRIPTION_PLANS.find(\n      p => p.type === SubscriptionPlanType.DEALER && p.duration === SubscriptionDuration.ANNUAL\n    );\n    \n    const organizerMonthlyPlan = SUBSCRIPTION_PLANS.find(\n      p => p.type === SubscriptionPlanType.ORGANIZER && p.duration === SubscriptionDuration.MONTHLY\n    );\n    \n    const organizerAnnualPlan = SUBSCRIPTION_PLANS.find(\n      p => p.type === SubscriptionPlanType.ORGANIZER && p.duration === SubscriptionDuration.ANNUAL\n    );\n    \n    const dealerPlan = billingCycle === 'monthly' ? dealerMonthlyPlan : dealerAnnualPlan;\n    const organizerPlan = billingCycle === 'monthly' ? organizerMonthlyPlan : organizerAnnualPlan;\n    \n    return (\n      <View style={styles.planSelectorContainer}>\n        <Text style={styles.sectionTitle}>Choose a Plan</Text>\n        \n        <View style={styles.billingToggleContainer}>\n          <Text style={[\n            styles.billingToggleText,\n            billingCycle === 'monthly' ? styles.billingToggleActive : {}\n          ]}>\n            Monthly\n          </Text>\n          \n          <TouchableOpacity \n            style={[\n              styles.billingToggleSwitch,\n              billingCycle === 'annual' ? styles.billingToggleSwitchRight : {}\n            ]}\n            onPress={toggleBillingCycle}\n          >\n            <View style={styles.billingToggleKnob} />\n          </TouchableOpacity>\n          \n          <View style={styles.billingToggleRightContainer}>\n            <Text style={[\n              styles.billingToggleText,\n              billingCycle === 'annual' ? styles.billingToggleActive : {}\n            ]}>\n              Annual\n            </Text>\n            <Text style={styles.savingsText}>Save 25%</Text>\n          </View>\n        </View>\n        \n        <View style={styles.plansRow}>\n          {/* MVP Dealer Plan */}\n          <TouchableOpacity\n            style={[\n              styles.planCard,\n              selectedPlan?.id === dealerPlan?.id ? styles.selectedPlanCard : {}\n            ]}\n            onPress={() => setSelectedPlan(dealerPlan || null)}\n          >\n            <Text style={styles.planName}>MVP Dealer</Text>\n            <Text style={styles.planPrice}>${dealerPlan?.price}</Text>\n            <Text style={styles.planBillingCycle}>\n              {billingCycle === 'monthly' ? '/month' : '/year'}\n            </Text>\n            \n            {dealerPlan?.trialDays && (\n              <Text style={styles.trialText}>\n                {dealerPlan.trialDays}-day free trial\n              </Text>\n            )}\n            \n            <View style={styles.planFeatures}>\n              {dealerPlan?.features.slice(0, 3).map((feature, index) => (\n                <View key={index} style={styles.featureRow}>\n                  <Text style={styles.featureCheck}>✓</Text>\n                  <Text style={styles.featureText}>{feature}</Text>\n                </View>\n              ))}\n              <Text style={styles.moreFeatures}>+{(dealerPlan?.features.length || 0) - 3} more features</Text>\n            </View>\n          </TouchableOpacity>\n          \n          {/* Show Organizer Plan */}\n          <TouchableOpacity\n            style={[\n              styles.planCard,\n              selectedPlan?.id === organizerPlan?.id ? styles.selectedPlanCard : {},\n              styles.recommendedPlan\n            ]}\n            onPress={() => setSelectedPlan(organizerPlan || null)}\n          >\n            <View style={styles.recommendedBadge}>\n              <Text style={styles.recommendedText}>RECOMMENDED</Text>\n            </View>\n            \n            <Text style={styles.planName}>Show Organizer</Text>\n            <Text style={styles.planPrice}>${organizerPlan?.price}</Text>\n            <Text style={styles.planBillingCycle}>\n              {billingCycle === 'monthly' ? '/month' : '/year'}\n            </Text>\n            \n            {organizerPlan?.trialDays && (\n              <Text style={styles.trialText}>\n                {organizerPlan.trialDays}-day free trial\n              </Text>\n            )}\n            \n            <View style={styles.planFeatures}>\n              {organizerPlan?.features.slice(0, 3).map((feature, index) => (\n                <View key={index} style={styles.featureRow}>\n                  <Text style={styles.featureCheck}>✓</Text>\n                  <Text style={styles.featureText}>{feature}</Text>\n                </View>\n              ))}\n              <Text style={styles.moreFeatures}>+{(organizerPlan?.features.length || 0) - 3} more features</Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n  \n  const renderPlanComparison = () => {\n    // Get one plan of each type to compare features\n    const dealerPlan = SUBSCRIPTION_PLANS.find(p => p.type === SubscriptionPlanType.DEALER);\n    const organizerPlan = SUBSCRIPTION_PLANS.find(p => p.type === SubscriptionPlanType.ORGANIZER);\n    \n    if (!dealerPlan || !organizerPlan) return null;\n    \n    // Combine all features for comparison\n    const allFeatures = new Set<string>();\n    dealerPlan.features.forEach(feature => allFeatures.add(feature));\n    organizerPlan.features.forEach(feature => allFeatures.add(feature));\n    \n    return (\n      <View style={styles.comparisonContainer}>\n        <Text style={styles.sectionTitle}>Plan Comparison</Text>\n        \n        <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n          <View style={styles.comparisonTable}>\n            {/* Header Row */}\n            <View style={styles.comparisonRow}>\n              <View style={[styles.comparisonCell, styles.comparisonHeaderCell, { width: 180 }]}>\n                <Text style={styles.comparisonHeaderText}>Features</Text>\n              </View>\n              <View style={[styles.comparisonCell, styles.comparisonHeaderCell]}>\n                <Text style={styles.comparisonHeaderText}>Free</Text>\n              </View>\n              <View style={[styles.comparisonCell, styles.comparisonHeaderCell]}>\n                <Text style={styles.comparisonHeaderText}>MVP Dealer</Text>\n              </View>\n              <View style={[styles.comparisonCell, styles.comparisonHeaderCell]}>\n                <Text style={styles.comparisonHeaderText}>Show Organizer</Text>\n              </View>\n            </View>\n            \n            {/* Feature Rows */}\n            {Array.from(allFeatures).map((feature, index) => {\n              const dealerHas = dealerPlan.features.includes(feature);\n              const organizerHas = organizerPlan.features.includes(feature);\n              // Free account has basic features only\n              const freeHas = feature.includes('view') || feature.includes('browse');\n              \n              return (\n                <View key={index} style={[\n                  styles.comparisonRow,\n                  index % 2 === 0 ? styles.comparisonRowEven : {}\n                ]}>\n                  <View style={[styles.comparisonCell, { width: 180 }]}>\n                    <Text style={styles.featureText}>{feature}</Text>\n                  </View>\n                  <View style={styles.comparisonCell}>\n                    <Text style={styles.checkmark}>{freeHas ? '✓' : ''}</Text>\n                  </View>\n                  <View style={styles.comparisonCell}>\n                    <Text style={styles.checkmark}>{dealerHas ? '✓' : ''}</Text>\n                  </View>\n                  <View style={styles.comparisonCell}>\n                    <Text style={styles.checkmark}>{organizerHas ? '✓' : ''}</Text>\n                  </View>\n                </View>\n              );\n            })}\n          </View>\n        </ScrollView>\n      </View>\n    );\n  };\n  \n  const renderActionButtons = () => {\n    if (!user) return null;\n    if (subsLoading) {\n      return (\n        <View style={styles.actionButtonsContainer}>\n          <ActivityIndicator color={ORANGE} />\n        </View>\n      );\n    }\n    \n    // Use the currentSubscription from our mapped data if available\n    const activeStatus = currentSubscription?.status === 'active' || subscriptionDetails?.status === 'active';\n    const expiredStatus = currentSubscription?.status === 'expired' || subscriptionDetails?.status === 'expired';\n    \n    const isUpgrade = user.accountType === 'collector' || \n      (user.accountType === 'dealer' && selectedPlan?.type === SubscriptionPlanType.ORGANIZER);\n      \n    const isDowngrade = user.accountType === 'organizer' && \n      selectedPlan?.type === SubscriptionPlanType.DEALER;\n      \n    const isRenewal = user.accountType !== 'collector' && \n      ((user.accountType === 'dealer' && selectedPlan?.type === SubscriptionPlanType.DEALER) ||\n       (user.accountType === 'organizer' && selectedPlan?.type === SubscriptionPlanType.ORGANIZER));\n       \n    const hasExpired = expiredStatus;\n    \n    let buttonText = 'Select a Plan';\n    if (selectedPlan) {\n      if (isUpgrade) buttonText = 'Upgrade';\n      else if (isDowngrade) buttonText = 'Downgrade';\n      else if (isRenewal) buttonText = hasExpired ? 'Reactivate' : 'Renew';\n      else buttonText = 'Subscribe';\n    }\n    \n    return (\n      <View style={styles.actionButtonsContainer}>\n        {user.accountType !== 'collector' && activeStatus && (\n          <TouchableOpacity \n            style={styles.cancelButton}\n            onPress={handleCancel}\n          >\n            <Text style={styles.cancelButtonText}>Cancel Subscription</Text>\n          </TouchableOpacity>\n        )}\n        \n        <TouchableOpacity \n          style={[\n            styles.primaryButton,\n            !selectedPlan ? styles.disabledButton : {},\n            processingPayment ? styles.processingButton : {}\n          ]}\n          onPress={isRenewal ? handleRenewal : handlePurchase}\n          disabled={!selectedPlan || processingPayment}\n        >\n          {processingPayment ? (\n            <ActivityIndicator color=\"#fff\" />\n          ) : (\n            <Text style={styles.primaryButtonText}>{buttonText}</Text>\n          )}\n        </TouchableOpacity>\n      </View>\n    );\n  };\n  \n  const combinedLoading = loading || subsLoading;\n\n  if (combinedLoading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color={ORANGE} />\n        <Text style={styles.loadingText}>Loading subscription details...</Text>\n      </View>\n    );\n  }\n  \n  return (\n    <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n      <Text style={styles.screenTitle}>Subscription Management</Text>\n\n      {/* Error banner if subscription fetch failed */}\n      {subsError && (\n        <View style={styles.errorBanner}>\n          <Text style={styles.errorBannerText}>\n            Failed to load subscription data. Some actions may be unavailable.\n          </Text>\n        </View>\n      )}\n      \n      {renderCurrentSubscription()}\n      {renderPlanSelector()}\n      {renderPlanComparison()}\n      {renderActionButtons()}\n      \n      <View style={styles.disclaimerContainer}>\n        <Text style={styles.disclaimerText}>\n          By subscribing, you agree to our Terms of Service and Privacy Policy.\n          Subscriptions will automatically renew unless canceled at least 24 hours before the end of the current period.\n        </Text>\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  contentContainer: {\n    padding: 16,\n    paddingBottom: 40,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  loadingText: {\n    marginTop: 16,\n    fontSize: 16,\n    color: '#666',\n  },\n  screenTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    color: '#0057B8',\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 12,\n    color: '#333',\n  },\n  currentSubscriptionContainer: {\n    backgroundColor: '#f9f9f9',\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 24,\n    borderWidth: 1,\n    borderColor: '#e0e0e0',\n  },\n  freeAccountText: {\n    fontSize: 16,\n    marginBottom: 8,\n  },\n  upgradePrompt: {\n    fontSize: 14,\n    color: '#0057B8',\n    fontStyle: 'italic',\n  },\n  subscriptionInfoRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 8,\n  },\n  subscriptionLabel: {\n    fontSize: 16,\n    color: '#666',\n  },\n  subscriptionValue: {\n    fontSize: 16,\n    fontWeight: '500',\n  },\n  timeRemainingContainer: {\n    marginTop: 8,\n    padding: 8,\n    backgroundColor: '#f0f8ff',\n    borderRadius: 4,\n  },\n  timeRemainingLabel: {\n    fontSize: 14,\n    color: '#0057B8',\n    marginBottom: 4,\n  },\n  timeRemainingValue: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#0057B8',\n  },\n  trialBadgeContainer: {\n    marginTop: 12,\n    backgroundColor: '#FF6A00',\n    borderRadius: 4,\n    padding: 8,\n    alignSelf: 'flex-start',\n  },\n  trialBadgeText: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  planSelectorContainer: {\n    marginBottom: 24,\n  },\n  billingToggleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 20,\n  },\n  billingToggleText: {\n    fontSize: 16,\n    color: '#666',\n  },\n  billingToggleActive: {\n    fontWeight: 'bold',\n    color: '#0057B8',\n  },\n  billingToggleSwitch: {\n    width: 50,\n    height: 26,\n    borderRadius: 13,\n    backgroundColor: '#e0e0e0',\n    padding: 3,\n    marginHorizontal: 10,\n  },\n  billingToggleSwitchRight: {\n    backgroundColor: '#0057B8',\n  },\n  billingToggleKnob: {\n    width: 20,\n    height: 20,\n    borderRadius: 10,\n    backgroundColor: 'white',\n  },\n  billingToggleRightContainer: {\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  savingsText: {\n    fontSize: 12,\n    color: '#FF6A00',\n    fontWeight: 'bold',\n  },\n  plansRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  planCard: {\n    flex: 1,\n    backgroundColor: '#f9f9f9',\n    borderRadius: 8,\n    padding: 16,\n    marginHorizontal: 4,\n    borderWidth: 1,\n    borderColor: '#e0e0e0',\n  },\n  selectedPlanCard: {\n    borderColor: '#0057B8',\n    borderWidth: 2,\n    backgroundColor: '#f0f8ff',\n  },\n  recommendedPlan: {\n    position: 'relative',\n  },\n  recommendedBadge: {\n    position: 'absolute',\n    top: -10,\n    right: -10,\n    backgroundColor: '#FF6A00',\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 4,\n  },\n  recommendedText: {\n    color: 'white',\n    fontSize: 10,\n    fontWeight: 'bold',\n  },\n  planName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  planPrice: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#0057B8',\n  },\n  planBillingCycle: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 8,\n  },\n  trialText: {\n    fontSize: 14,\n    color: '#FF6A00',\n    fontWeight: '500',\n    marginBottom: 12,\n  },\n  planFeatures: {\n    marginTop: 8,\n  },\n  featureRow: {\n    flexDirection: 'row',\n    marginBottom: 4,\n  },\n  featureCheck: {\n    color: '#0057B8',\n    fontWeight: 'bold',\n    marginRight: 6,\n  },\n  featureText: {\n    fontSize: 14,\n    flex: 1,\n  },\n  moreFeatures: {\n    fontSize: 12,\n    color: '#666',\n    marginTop: 4,\n    fontStyle: 'italic',\n  },\n  comparisonContainer: {\n    marginBottom: 24,\n  },\n  comparisonTable: {\n    borderWidth: 1,\n    borderColor: '#e0e0e0',\n    borderRadius: 8,\n    overflow: 'hidden',\n  },\n  comparisonRow: {\n    flexDirection: 'row',\n  },\n  comparisonRowEven: {\n    backgroundColor: '#f9f9f9',\n  },\n  comparisonCell: {\n    width: 100,\n    padding: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRightWidth: 1,\n    borderBottomWidth: 1,\n    borderColor: '#e0e0e0',\n  },\n  comparisonHeaderCell: {\n    backgroundColor: '#0057B8',\n    borderColor: '#0057B8',\n  },\n  comparisonHeaderText: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  checkmark: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#0057B8',\n  },\n  actionButtonsContainer: {\n    marginBottom: 24,\n  },\n  primaryButton: {\n    backgroundColor: '#0057B8',\n    borderRadius: 8,\n    padding: 16,\n    alignItems: 'center',\n  },\n  primaryButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  disabledButton: {\n    backgroundColor: '#cccccc',\n  },\n  processingButton: {\n    backgroundColor: '#666666',\n  },\n  errorBanner: {\n    backgroundColor: '#ffe5e5',\n    padding: 10,\n    borderRadius: 6,\n    marginBottom: 12,\n  },\n  errorBannerText: {\n    color: '#cc0000',\n    textAlign: 'center',\n  },\n  cancelButton: {\n    padding: 16,\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  cancelButtonText: {\n    color: '#FF0000',\n    fontSize: 16,\n  },\n  disclaimerContainer: {\n    padding: 16,\n    backgroundColor: '#f9f9f9',\n    borderRadius: 8,\n  },\n  disclaimerText: {\n    fontSize: 12,\n    color: '#666',\n    textAlign: 'center',\n  }\n});\n\nexport default SubscriptionScreen;\n"],"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","ignoreList":[]}