{"version":3,"names":["React","createContext","useContext","useColorScheme","theme","jsx","_jsx","ThemeContext","cov_1njwizf1fz","s","colorScheme","ThemeProvider","_ref","children","f","b","Provider","value","useTheme"],"sources":["index.tsx"],"sourcesContent":["import React, { createContext, useContext, ReactNode } from 'react';\nimport { useColorScheme } from 'react-native';\nimport theme from '../../constants/theme';\n\n// Define the theme context type\ntype ThemeContextType = {\n  theme: typeof theme;\n  colorScheme: 'light' | 'dark';\n};\n\n// Create the theme context with default values\nconst ThemeContext = createContext<ThemeContextType>({\n  theme,\n  colorScheme: 'light',\n});\n\n// Props for the ThemeProvider component\ninterface ThemeProviderProps {\n  children: ReactNode;\n}\n\n/**\n * ThemeProvider - Provides theme context to the entire application\n * \n * This component wraps the application and provides access to theme settings\n * and color scheme information. It also handles dark/light mode detection.\n */\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\n  // Get device color scheme (light/dark)\n  const colorScheme = useColorScheme() || 'light';\n  \n  // We're just using the default theme for now, but this is where\n  // you would implement any theme switching logic (e.g., dark mode)\n  \n  // Provide the theme context to the component tree\n  return (\n    <ThemeContext.Provider value={{ theme, colorScheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\n/**\n * useTheme - Custom hook to access theme context\n * \n * Use this hook in components to access theme values:\n * const { theme, colorScheme } = useTheme();\n */\nexport const useTheme = () => useContext(ThemeContext);\n\nexport default ThemeProvider;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAmB,OAAO;AACnE,SAASC,cAAc,QAAQ,cAAc;AAC7C,OAAOC,KAAK,MAAM,uBAAuB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAS1C,IAAMC,YAAY,IAAAC,cAAA,GAAAC,CAAA,OAAGR,aAAa,CAAmB;EACnDG,KAAK,EAALA,KAAK;EACLM,WAAW,EAAE;AACf,CAAC,CAAC;AAACF,cAAA,GAAAC,CAAA;AAaH,OAAO,IAAME,aAA2C,GAAG,SAA9CA,aAA2CA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAAAL,cAAA,GAAAM,CAAA;EAEpE,IAAMJ,WAAW,IAAAF,cAAA,GAAAC,CAAA,OAAG,CAAAD,cAAA,GAAAO,CAAA,UAAAZ,cAAc,CAAC,CAAC,MAAAK,cAAA,GAAAO,CAAA,UAAI,OAAO;EAACP,cAAA,GAAAC,CAAA;EAMhD,OACEH,IAAA,CAACC,YAAY,CAACS,QAAQ;IAACC,KAAK,EAAE;MAAEb,KAAK,EAALA,KAAK;MAAEM,WAAW,EAAXA;IAAY,CAAE;IAAAG,QAAA,EAClDA;EAAQ,CACY,CAAC;AAE5B,CAAC;AAACL,cAAA,GAAAC,CAAA;AAQF,OAAO,IAAMS,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;EAAAV,cAAA,GAAAM,CAAA;EAAAN,cAAA,GAAAC,CAAA;EAAA,OAAAP,UAAU,CAACK,YAAY,CAAC;AAAD,CAAC;AAEtD,eAAeI,aAAa","ignoreList":[]}