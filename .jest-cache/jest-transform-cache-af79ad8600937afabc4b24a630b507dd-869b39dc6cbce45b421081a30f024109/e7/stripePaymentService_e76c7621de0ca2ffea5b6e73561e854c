1a1e5dca794fcb2197b82742bb1a9b41
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import { env as _env } from "expo/virtual/env";
function cov_2672s7zqdg() {
  var path = "/Users/kevin/card-show-finder/src/services/stripePaymentService.ts";
  var hash = "638e5c33e8a944f896951da429102b18e789af1c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/services/stripePaymentService.ts",
    statementMap: {
      "0": {
        start: {
          line: 46,
          column: 31
        },
        end: {
          line: 46,
          column: 77
        }
      },
      "1": {
        start: {
          line: 47,
          column: 35
        },
        end: {
          line: 47,
          column: 111
        }
      },
      "2": {
        start: {
          line: 56,
          column: 32
        },
        end: {
          line: 63,
          column: 1
        }
      },
      "3": {
        start: {
          line: 57,
          column: 2
        },
        end: {
          line: 60,
          column: 3
        }
      },
      "4": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 97
        }
      },
      "5": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 17
        }
      },
      "6": {
        start: {
          line: 62,
          column: 2
        },
        end: {
          line: 62,
          column: 14
        }
      },
      "7": {
        start: {
          line: 75,
          column: 49
        },
        end: {
          line: 174,
          column: 1
        }
      },
      "8": {
        start: {
          line: 81,
          column: 15
        },
        end: {
          line: 81,
          column: 60
        }
      },
      "9": {
        start: {
          line: 81,
          column: 44
        },
        end: {
          line: 81,
          column: 59
        }
      },
      "10": {
        start: {
          line: 82,
          column: 2
        },
        end: {
          line: 84,
          column: 3
        }
      },
      "11": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 83,
          column: 69
        }
      },
      "12": {
        start: {
          line: 86,
          column: 2
        },
        end: {
          line: 173,
          column: 3
        }
      },
      "13": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 40
        }
      },
      "14": {
        start: {
          line: 96,
          column: 24
        },
        end: {
          line: 96,
          column: 45
        }
      },
      "15": {
        start: {
          line: 98,
          column: 21
        },
        end: {
          line: 111,
          column: 6
        }
      },
      "16": {
        start: {
          line: 113,
          column: 4
        },
        end: {
          line: 116,
          column: 5
        }
      },
      "17": {
        start: {
          line: 114,
          column: 24
        },
        end: {
          line: 114,
          column: 45
        }
      },
      "18": {
        start: {
          line: 115,
          column: 6
        },
        end: {
          line: 115,
          column: 77
        }
      },
      "19": {
        start: {
          line: 118,
          column: 77
        },
        end: {
          line: 118,
          column: 98
        }
      },
      "20": {
        start: {
          line: 121,
          column: 33
        },
        end: {
          line: 128,
          column: 6
        }
      },
      "21": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 142,
          column: 5
        }
      },
      "22": {
        start: {
          line: 131,
          column: 6
        },
        end: {
          line: 131,
          column: 65
        }
      },
      "23": {
        start: {
          line: 132,
          column: 6
        },
        end: {
          line: 140,
          column: 9
        }
      },
      "24": {
        start: {
          line: 141,
          column: 6
        },
        end: {
          line: 141,
          column: 86
        }
      },
      "25": {
        start: {
          line: 145,
          column: 36
        },
        end: {
          line: 145,
          column: 63
        }
      },
      "26": {
        start: {
          line: 147,
          column: 4
        },
        end: {
          line: 163,
          column: 5
        }
      },
      "27": {
        start: {
          line: 149,
          column: 6
        },
        end: {
          line: 151,
          column: 7
        }
      },
      "28": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 66
        }
      },
      "29": {
        start: {
          line: 152,
          column: 6
        },
        end: {
          line: 152,
          column: 71
        }
      },
      "30": {
        start: {
          line: 153,
          column: 6
        },
        end: {
          line: 161,
          column: 9
        }
      },
      "31": {
        start: {
          line: 162,
          column: 6
        },
        end: {
          line: 162,
          column: 82
        }
      },
      "32": {
        start: {
          line: 166,
          column: 4
        },
        end: {
          line: 166,
          column: 65
        }
      },
      "33": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 168,
          column: 59
        }
      },
      "34": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 171,
          column: 73
        }
      },
      "35": {
        start: {
          line: 172,
          column: 4
        },
        end: {
          line: 172,
          column: 84
        }
      },
      "36": {
        start: {
          line: 184,
          column: 41
        },
        end: {
          line: 231,
          column: 1
        }
      },
      "37": {
        start: {
          line: 189,
          column: 2
        },
        end: {
          line: 230,
          column: 3
        }
      },
      "38": {
        start: {
          line: 198,
          column: 23
        },
        end: {
          line: 198,
          column: 48
        }
      },
      "39": {
        start: {
          line: 201,
          column: 20
        },
        end: {
          line: 201,
          column: 90
        }
      },
      "40": {
        start: {
          line: 204,
          column: 4
        },
        end: {
          line: 204,
          column: 87
        }
      },
      "41": {
        start: {
          line: 207,
          column: 4
        },
        end: {
          line: 214,
          column: 7
        }
      },
      "42": {
        start: {
          line: 217,
          column: 4
        },
        end: {
          line: 217,
          column: 81
        }
      },
      "43": {
        start: {
          line: 221,
          column: 4
        },
        end: {
          line: 229,
          column: 7
        }
      },
      "44": {
        start: {
          line: 240,
          column: 42
        },
        end: {
          line: 261,
          column: 1
        }
      },
      "45": {
        start: {
          line: 245,
          column: 20
        },
        end: {
          line: 255,
          column: 21
        }
      },
      "46": {
        start: {
          line: 257,
          column: 2
        },
        end: {
          line: 260,
          column: 3
        }
      },
      "47": {
        start: {
          line: 258,
          column: 4
        },
        end: {
          line: 258,
          column: 75
        }
      },
      "48": {
        start: {
          line: 259,
          column: 4
        },
        end: {
          line: 259,
          column: 68
        }
      },
      "49": {
        start: {
          line: 268,
          column: 19
        },
        end: {
          line: 275,
          column: 1
        }
      },
      "50": {
        start: {
          line: 269,
          column: 20
        },
        end: {
          line: 269,
          column: 71
        }
      },
      "51": {
        start: {
          line: 271,
          column: 2
        },
        end: {
          line: 274,
          column: 3
        }
      },
      "52": {
        start: {
          line: 272,
          column: 4
        },
        end: {
          line: 272,
          column: 63
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 56,
            column: 32
          },
          end: {
            line: 56,
            column: 33
          }
        },
        loc: {
          start: {
            line: 56,
            column: 47
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 56
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 75,
            column: 49
          },
          end: {
            line: 75,
            column: 50
          }
        },
        loc: {
          start: {
            line: 80,
            column: 35
          },
          end: {
            line: 174,
            column: 1
          }
        },
        line: 80
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 81,
            column: 39
          },
          end: {
            line: 81,
            column: 40
          }
        },
        loc: {
          start: {
            line: 81,
            column: 44
          },
          end: {
            line: 81,
            column: 59
          }
        },
        line: 81
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 184,
            column: 41
          },
          end: {
            line: 184,
            column: 42
          }
        },
        loc: {
          start: {
            line: 188,
            column: 20
          },
          end: {
            line: 231,
            column: 1
          }
        },
        line: 188
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 240,
            column: 42
          },
          end: {
            line: 240,
            column: 43
          }
        },
        loc: {
          start: {
            line: 244,
            column: 20
          },
          end: {
            line: 261,
            column: 1
          }
        },
        line: 244
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 268,
            column: 19
          },
          end: {
            line: 268,
            column: 20
          }
        },
        loc: {
          start: {
            line: 268,
            column: 69
          },
          end: {
            line: 275,
            column: 1
          }
        },
        line: 268
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 57,
            column: 2
          },
          end: {
            line: 60,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 2
          },
          end: {
            line: 60,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "1": {
        loc: {
          start: {
            line: 82,
            column: 2
          },
          end: {
            line: 84,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 2
          },
          end: {
            line: 84,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "2": {
        loc: {
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 103,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 103,
            column: 26
          },
          end: {
            line: 103,
            column: 68
          }
        }, {
          start: {
            line: 103,
            column: 71
          },
          end: {
            line: 103,
            column: 73
          }
        }],
        line: 103
      },
      "3": {
        loc: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "4": {
        loc: {
          start: {
            line: 115,
            column: 22
          },
          end: {
            line: 115,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 22
          },
          end: {
            line: 115,
            column: 37
          }
        }, {
          start: {
            line: 115,
            column: 41
          },
          end: {
            line: 115,
            column: 75
          }
        }],
        line: 115
      },
      "5": {
        loc: {
          start: {
            line: 130,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "6": {
        loc: {
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 163,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 163,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "7": {
        loc: {
          start: {
            line: 149,
            column: 6
          },
          end: {
            line: 151,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 6
          },
          end: {
            line: 151,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "8": {
        loc: {
          start: {
            line: 172,
            column: 36
          },
          end: {
            line: 172,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 36
          },
          end: {
            line: 172,
            column: 49
          }
        }, {
          start: {
            line: 172,
            column: 53
          },
          end: {
            line: 172,
            column: 81
          }
        }],
        line: 172
      },
      "9": {
        loc: {
          start: {
            line: 201,
            column: 20
          },
          end: {
            line: 201,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 201,
            column: 45
          },
          end: {
            line: 201,
            column: 64
          }
        }, {
          start: {
            line: 201,
            column: 67
          },
          end: {
            line: 201,
            column: 90
          }
        }],
        line: 201
      },
      "10": {
        loc: {
          start: {
            line: 257,
            column: 2
          },
          end: {
            line: 260,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 257,
            column: 2
          },
          end: {
            line: 260,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 257
      },
      "11": {
        loc: {
          start: {
            line: 271,
            column: 2
          },
          end: {
            line: 274,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 271,
            column: 2
          },
          end: {
            line: 274,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 271
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "638e5c33e8a944f896951da429102b18e789af1c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2672s7zqdg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2672s7zqdg();
import { supabase } from '../supabase';
import { SUBSCRIPTION_PLANS, calculateExpiryDate } from './subscriptionTypes';
import { UserRole } from './userRoleService';
var STRIPE_PUBLISHABLE_KEY = (cov_2672s7zqdg().s[0]++, _env.EXPO_PUBLIC_STRIPE_PUBLISHABLE_KEY);
var SUPABASE_EDGE_FUNCTION_URL = (cov_2672s7zqdg().s[1]++, `${_env.EXPO_PUBLIC_SUPABASE_URL}/functions/v1/create-payment-intent`);
cov_2672s7zqdg().s[2]++;
export var initializeStripe = function initializeStripe() {
  cov_2672s7zqdg().f[0]++;
  cov_2672s7zqdg().s[3]++;
  if (!STRIPE_PUBLISHABLE_KEY) {
    cov_2672s7zqdg().b[0][0]++;
    cov_2672s7zqdg().s[4]++;
    console.error('Stripe publishable key is not set. Please check your environment variables.');
    cov_2672s7zqdg().s[5]++;
    return false;
  } else {
    cov_2672s7zqdg().b[0][1]++;
  }
  cov_2672s7zqdg().s[6]++;
  return true;
};
cov_2672s7zqdg().s[7]++;
export var createPaymentSheetForSubscription = function () {
  var _ref = _asyncToGenerator(function* (userId, planId, initPaymentSheet, presentPaymentSheet) {
    cov_2672s7zqdg().f[1]++;
    var plan = (cov_2672s7zqdg().s[8]++, SUBSCRIPTION_PLANS.find(function (p) {
      cov_2672s7zqdg().f[2]++;
      cov_2672s7zqdg().s[9]++;
      return p.id === planId;
    }));
    cov_2672s7zqdg().s[10]++;
    if (!plan) {
      cov_2672s7zqdg().b[1][0]++;
      cov_2672s7zqdg().s[11]++;
      return {
        success: false,
        error: 'Subscription plan not found.'
      };
    } else {
      cov_2672s7zqdg().b[1][1]++;
    }
    cov_2672s7zqdg().s[12]++;
    try {
      var _ref2 = (cov_2672s7zqdg().s[13]++, yield supabase.auth.getSession()),
        session = _ref2.data.session;
      var accessToken = (cov_2672s7zqdg().s[14]++, session == null ? void 0 : session.access_token);
      var response = (cov_2672s7zqdg().s[15]++, yield fetch(SUPABASE_EDGE_FUNCTION_URL, {
        method: 'POST',
        headers: Object.assign({
          'Content-Type': 'application/json'
        }, accessToken ? (cov_2672s7zqdg().b[2][0]++, {
          Authorization: `Bearer ${accessToken}`
        }) : (cov_2672s7zqdg().b[2][1]++, {})),
        body: JSON.stringify({
          amount: plan.price * 100,
          currency: 'usd',
          userId: userId,
          planId: plan.id
        })
      }));
      cov_2672s7zqdg().s[16]++;
      if (!response.ok) {
        cov_2672s7zqdg().b[3][0]++;
        var errorBody = (cov_2672s7zqdg().s[17]++, yield response.json());
        cov_2672s7zqdg().s[18]++;
        throw new Error((cov_2672s7zqdg().b[4][0]++, errorBody.error) || (cov_2672s7zqdg().b[4][1]++, 'Failed to create payment intent.'));
      } else {
        cov_2672s7zqdg().b[3][1]++;
      }
      var _ref3 = (cov_2672s7zqdg().s[19]++, yield response.json()),
        paymentIntent = _ref3.paymentIntent,
        ephemeralKey = _ref3.ephemeralKey,
        customer = _ref3.customer;
      var _ref4 = (cov_2672s7zqdg().s[20]++, yield initPaymentSheet({
          merchantDisplayName: 'Card Show Finder, LLC.',
          customerId: customer,
          customerEphemeralKeySecret: ephemeralKey,
          paymentIntentClientSecret: paymentIntent,
          allowsDelayedPaymentMethods: true,
          returnURL: 'cardshowfinder://stripe-redirect'
        })),
        initError = _ref4.error;
      cov_2672s7zqdg().s[21]++;
      if (initError) {
        cov_2672s7zqdg().b[5][0]++;
        cov_2672s7zqdg().s[22]++;
        console.error('Stripe initPaymentSheet error:', initError);
        cov_2672s7zqdg().s[23]++;
        yield logPayment({
          user_id: userId,
          plan_id: plan.id,
          amount: plan.price,
          currency: 'usd',
          status: 'failed',
          transaction_id: paymentIntent,
          error_message: `Init Error: ${initError.message}`
        });
        cov_2672s7zqdg().s[24]++;
        return {
          success: false,
          error: `Initialization failed: ${initError.message}`
        };
      } else {
        cov_2672s7zqdg().b[5][1]++;
      }
      var _ref5 = (cov_2672s7zqdg().s[25]++, yield presentPaymentSheet()),
        presentError = _ref5.error;
      cov_2672s7zqdg().s[26]++;
      if (presentError) {
        cov_2672s7zqdg().b[6][0]++;
        cov_2672s7zqdg().s[27]++;
        if (presentError.code === 'Canceled') {
          cov_2672s7zqdg().b[7][0]++;
          cov_2672s7zqdg().s[28]++;
          return {
            success: false,
            error: 'Payment was canceled.'
          };
        } else {
          cov_2672s7zqdg().b[7][1]++;
        }
        cov_2672s7zqdg().s[29]++;
        console.error('Stripe presentPaymentSheet error:', presentError);
        cov_2672s7zqdg().s[30]++;
        yield logPayment({
          user_id: userId,
          plan_id: plan.id,
          amount: plan.price,
          currency: 'usd',
          status: 'failed',
          transaction_id: paymentIntent,
          error_message: `Present Error: ${presentError.message}`
        });
        cov_2672s7zqdg().s[31]++;
        return {
          success: false,
          error: `Payment failed: ${presentError.message}`
        };
      } else {
        cov_2672s7zqdg().b[6][1]++;
      }
      cov_2672s7zqdg().s[32]++;
      yield processSubscriptionUpdate(userId, plan, paymentIntent);
      cov_2672s7zqdg().s[33]++;
      return {
        success: true,
        transactionId: paymentIntent
      };
    } catch (error) {
      cov_2672s7zqdg().s[34]++;
      console.error('An unexpected error occurred during payment:', error);
      cov_2672s7zqdg().s[35]++;
      return {
        success: false,
        error: (cov_2672s7zqdg().b[8][0]++, error.message) || (cov_2672s7zqdg().b[8][1]++, 'An unknown error occurred.')
      };
    }
  });
  return function createPaymentSheetForSubscription(_x, _x2, _x3, _x4) {
    return _ref.apply(this, arguments);
  };
}();
cov_2672s7zqdg().s[36]++;
export var processSubscriptionUpdate = function () {
  var _ref6 = _asyncToGenerator(function* (userId, plan, transactionId) {
    cov_2672s7zqdg().f[3]++;
    cov_2672s7zqdg().s[37]++;
    try {
      var expiryDate = (cov_2672s7zqdg().s[38]++, calculateExpiryDate(plan));
      var newRole = (cov_2672s7zqdg().s[39]++, plan.type === 'dealer' ? (cov_2672s7zqdg().b[9][0]++, UserRole.MVP_DEALER) : (cov_2672s7zqdg().b[9][1]++, UserRole.SHOW_ORGANIZER));
      cov_2672s7zqdg().s[40]++;
      yield updateUserProfileWithSubscription(userId, newRole, expiryDate.toISOString());
      cov_2672s7zqdg().s[41]++;
      yield logPayment({
        user_id: userId,
        plan_id: plan.id,
        amount: plan.price,
        currency: 'usd',
        status: 'succeeded',
        transaction_id: transactionId
      });
    } catch (error) {
      cov_2672s7zqdg().s[42]++;
      console.error('Failed to process subscription update after payment:', error);
      cov_2672s7zqdg().s[43]++;
      yield logPayment({
        user_id: userId,
        plan_id: plan.id,
        amount: plan.price,
        currency: 'usd',
        status: 'failed',
        transaction_id: transactionId,
        error_message: 'Post-payment profile update failed.'
      });
    }
  });
  return function processSubscriptionUpdate(_x5, _x6, _x7) {
    return _ref6.apply(this, arguments);
  };
}();
cov_2672s7zqdg().s[44]++;
var updateUserProfileWithSubscription = function () {
  var _ref7 = _asyncToGenerator(function* (userId, newRole, expiryDateISO) {
    cov_2672s7zqdg().f[4]++;
    var _ref8 = (cov_2672s7zqdg().s[45]++, yield supabase.from('profiles').update({
        role: newRole,
        subscription_status: 'active',
        payment_status: 'paid',
        subscription_expiry: expiryDateISO,
        updated_at: new Date().toISOString()
      }).eq('id', userId)),
      error = _ref8.error;
    cov_2672s7zqdg().s[46]++;
    if (error) {
      cov_2672s7zqdg().b[10][0]++;
      cov_2672s7zqdg().s[47]++;
      console.error('Error updating user profile with subscription:', error);
      cov_2672s7zqdg().s[48]++;
      throw new Error('Failed to update user profile after payment.');
    } else {
      cov_2672s7zqdg().b[10][1]++;
    }
  });
  return function updateUserProfileWithSubscription(_x8, _x9, _x0) {
    return _ref7.apply(this, arguments);
  };
}();
cov_2672s7zqdg().s[49]++;
var logPayment = function () {
  var _ref9 = _asyncToGenerator(function* (paymentData) {
    cov_2672s7zqdg().f[5]++;
    var _ref0 = (cov_2672s7zqdg().s[50]++, yield supabase.from('payments').insert(paymentData)),
      error = _ref0.error;
    cov_2672s7zqdg().s[51]++;
    if (error) {
      cov_2672s7zqdg().b[11][0]++;
      cov_2672s7zqdg().s[52]++;
      console.error('Error logging payment transaction:', error);
    } else {
      cov_2672s7zqdg().b[11][1]++;
    }
  });
  return function logPayment(_x1) {
    return _ref9.apply(this, arguments);
  };
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,