5273e032621aad68a7ba804b75525f07
"use strict";

/**
 * formatters.ts
 * Utility functions for formatting various data types for display
 */
/* istanbul ignore next */
function cov_qbmpgoks8() {
  var path = "/Users/kevin/card-show-finder/src/utils/formatters.ts";
  var hash = "80a000557a33f3ce6485900fe7033d7ccc094258";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/utils/formatters.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "1": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 96
        }
      },
      "2": {
        start: {
          line: 13,
          column: 19
        },
        end: {
          line: 33,
          column: 1
        }
      },
      "3": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 16,
          column: 5
        }
      },
      "4": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 21
        }
      },
      "5": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "6": {
        start: {
          line: 18,
          column: 21
        },
        end: {
          line: 18,
          column: 40
        }
      },
      "7": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 22,
          column: 9
        }
      },
      "8": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 21,
          column: 34
        }
      },
      "9": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 27,
          column: 11
        }
      },
      "10": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 53
        }
      },
      "11": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 23
        }
      },
      "12": {
        start: {
          line: 34,
          column: 0
        },
        end: {
          line: 34,
          column: 32
        }
      },
      "13": {
        start: {
          line: 40,
          column: 23
        },
        end: {
          line: 56,
          column: 1
        }
      },
      "14": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "15": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 28
        }
      },
      "16": {
        start: {
          line: 49,
          column: 22
        },
        end: {
          line: 49,
          column: 69
        }
      },
      "17": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "18": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 28
        }
      },
      "19": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 79
        }
      },
      "20": {
        start: {
          line: 57,
          column: 0
        },
        end: {
          line: 57,
          column: 40
        }
      },
      "21": {
        start: {
          line: 63,
          column: 19
        },
        end: {
          line: 97,
          column: 1
        }
      },
      "22": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 66,
          column: 5
        }
      },
      "23": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 18
        }
      },
      "24": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 96,
          column: 5
        }
      },
      "25": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "26": {
        start: {
          line: 73,
          column: 37
        },
        end: {
          line: 73,
          column: 58
        }
      },
      "27": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 30
        }
      },
      "28": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 47
        }
      },
      "29": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 51
        }
      },
      "30": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 40
        }
      },
      "31": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "32": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 22
        }
      },
      "33": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 91,
          column: 11
        }
      },
      "34": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 53
        }
      },
      "35": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 18
        }
      },
      "36": {
        start: {
          line: 98,
          column: 0
        },
        end: {
          line: 98,
          column: 32
        }
      },
      "37": {
        start: {
          line: 104,
          column: 20
        },
        end: {
          line: 120,
          column: 1
        }
      },
      "38": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 111,
          column: 5
        }
      },
      "39": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 22
        }
      },
      "40": {
        start: {
          line: 113,
          column: 24
        },
        end: {
          line: 113,
          column: 77
        }
      },
      "41": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 117,
          column: 5
        }
      },
      "42": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 22
        }
      },
      "43": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 119,
          column: 78
        }
      },
      "44": {
        start: {
          line: 121,
          column: 0
        },
        end: {
          line: 121,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 13,
            column: 20
          }
        },
        loc: {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 40,
            column: 23
          },
          end: {
            line: 40,
            column: 24
          }
        },
        loc: {
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 56,
            column: 1
          }
        },
        line: 40
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 63,
            column: 19
          },
          end: {
            line: 63,
            column: 20
          }
        },
        loc: {
          start: {
            line: 63,
            column: 35
          },
          end: {
            line: 97,
            column: 1
          }
        },
        line: 63
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 104,
            column: 20
          },
          end: {
            line: 104,
            column: 21
          }
        },
        loc: {
          start: {
            line: 104,
            column: 31
          },
          end: {
            line: 120,
            column: 1
          }
        },
        line: 104
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 22,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 22,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "2": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "3": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 45,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 20
          }
        }, {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 43,
            column: 25
          }
        }, {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 18
          }
        }, {
          start: {
            line: 45,
            column: 9
          },
          end: {
            line: 45,
            column: 32
          }
        }, {
          start: {
            line: 45,
            column: 36
          },
          end: {
            line: 45,
            column: 46
          }
        }],
        line: 42
      },
      "4": {
        loc: {
          start: {
            line: 49,
            column: 22
          },
          end: {
            line: 49,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 49,
            column: 48
          },
          end: {
            line: 49,
            column: 63
          }
        }, {
          start: {
            line: 49,
            column: 66
          },
          end: {
            line: 49,
            column: 69
          }
        }],
        line: 49
      },
      "5": {
        loc: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "6": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 51,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 51,
            column: 24
          }
        }, {
          start: {
            line: 51,
            column: 28
          },
          end: {
            line: 51,
            column: 42
          }
        }],
        line: 51
      },
      "7": {
        loc: {
          start: {
            line: 55,
            column: 22
          },
          end: {
            line: 55,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 55,
            column: 44
          },
          end: {
            line: 55,
            column: 53
          }
        }, {
          start: {
            line: 55,
            column: 56
          },
          end: {
            line: 55,
            column: 76
          }
        }],
        line: 55
      },
      "8": {
        loc: {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "9": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        }, {
          start: {
            line: 78,
            column: 13
          },
          end: {
            line: 81,
            column: 9
          }
        }],
        line: 71
      },
      "10": {
        loc: {
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 71,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 71,
            column: 36
          }
        }, {
          start: {
            line: 71,
            column: 40
          },
          end: {
            line: 71,
            column: 65
          }
        }],
        line: 71
      },
      "11": {
        loc: {
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "12": {
        loc: {
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "13": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 109,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 106,
            column: 22
          }
        }, {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 107,
            column: 27
          }
        }, {
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 108,
            column: 20
          }
        }, {
          start: {
            line: 109,
            column: 9
          },
          end: {
            line: 109,
            column: 34
          }
        }, {
          start: {
            line: 109,
            column: 38
          },
          end: {
            line: 109,
            column: 50
          }
        }],
        line: 106
      },
      "14": {
        loc: {
          start: {
            line: 113,
            column: 24
          },
          end: {
            line: 113,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 113,
            column: 52
          },
          end: {
            line: 113,
            column: 69
          }
        }, {
          start: {
            line: 113,
            column: 72
          },
          end: {
            line: 113,
            column: 77
          }
        }],
        line: 113
      },
      "15": {
        loc: {
          start: {
            line: 115,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "16": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 115,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 115,
            column: 26
          }
        }, {
          start: {
            line: 115,
            column: 30
          },
          end: {
            line: 115,
            column: 46
          }
        }],
        line: 115
      },
      "17": {
        loc: {
          start: {
            line: 119,
            column: 15
          },
          end: {
            line: 119,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 119,
            column: 39
          },
          end: {
            line: 119,
            column: 50
          }
        }, {
          start: {
            line: 119,
            column: 53
          },
          end: {
            line: 119,
            column: 75
          }
        }],
        line: 119
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kevin/card-show-finder/src/utils/formatters.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/kevin/card-show-finder/src/utils/formatters.ts"],
      sourcesContent: ["/**\n * formatters.ts\n * Utility functions for formatting various data types for display\n */\n\n/**\n * Format a date for display in map callouts (short format)\n * @param dateValue Date object or ISO string\n * @returns Formatted date string (e.g., \"Jul 16\")\n */\nexport const formatDate = (dateValue: Date | string | null | undefined): string => {\n  if (!dateValue) {\n    return 'TBD';\n  }\n\n  try {\n    const date = new Date(dateValue);\n    \n    // Check if date is valid\n    if (isNaN(date.getTime())) {\n      return 'Invalid date';\n    }\n\n    // Format as short month + day (e.g., \"Jul 16\")\n    return date.toLocaleDateString('en-US', { \n      month: 'short', \n      day: 'numeric' \n    });\n  } catch (err) {\n    console.error('Error formatting date:', err);\n    return 'Error';\n  }\n};\n\n/**\n * Format entry fee with proper currency display\n * @param fee Entry fee amount (number or string)\n * @returns Formatted fee string (e.g., \"Free Entry\" or \"Entry: $5\")\n */\nexport const formatEntryFee = (fee: number | string | null | undefined): string => {\n  // Handle null, undefined, empty string, or NaN\n  if (\n    fee === null || \n    fee === undefined || \n    fee === '' || \n    (typeof fee === 'number' && isNaN(fee))\n  ) {\n    return 'Free Entry';\n  }\n\n  // Convert string to number if needed\n  const feeNumber = typeof fee === 'string' ? parseFloat(fee) : fee;\n\n  // If conversion failed or fee is zero/negative, show as free\n  if (isNaN(feeNumber) || feeNumber <= 0) {\n    return 'Free Entry';\n  }\n\n  // Format with dollar sign and no decimal places for whole numbers\n  return `Entry: $${feeNumber % 1 === 0 ? feeNumber : feeNumber.toFixed(2)}`;\n};\n\n/**\n * Format a time string for display\n * @param timeString Time string (e.g., \"14:30:00\")\n * @returns Formatted time string (e.g., \"2:30 PM\")\n */\nexport const formatTime = (timeString: string | null | undefined): string => {\n  if (!timeString) {\n    return '';\n  }\n\n  try {\n    // Handle various time formats\n    let time: Date;\n    \n    // If it's just a time string like \"14:30:00\"\n    if (timeString.includes(':') && !timeString.includes('T')) {\n      // Create a dummy date with the time\n      const [hours, minutes] = timeString.split(':');\n      time = new Date();\n      time.setHours(parseInt(hours, 10));\n      time.setMinutes(parseInt(minutes, 10));\n    } else {\n      // Full datetime string\n      time = new Date(timeString);\n    }\n\n    // Check if time is valid\n    if (isNaN(time.getTime())) {\n      return '';\n    }\n\n    // Format as hours:minutes AM/PM\n    return time.toLocaleTimeString('en-US', { \n      hour: 'numeric', \n      minute: '2-digit',\n      hour12: true \n    });\n  } catch (err) {\n    console.error('Error formatting time:', err);\n    return '';\n  }\n};\n\n/**\n * Format a price for display\n * @param price Price amount\n * @returns Formatted price string (e.g., \"$10\" or \"Free\")\n */\nexport const formatPrice = (price: number | string | null | undefined): string => {\n  // Handle null, undefined, empty string, or NaN\n  if (\n    price === null || \n    price === undefined || \n    price === '' || \n    (typeof price === 'number' && isNaN(price))\n  ) {\n    return 'Free';\n  }\n\n  // Convert string to number if needed\n  const priceNumber = typeof price === 'string' ? parseFloat(price) : price;\n\n  // If conversion failed or price is zero/negative, show as free\n  if (isNaN(priceNumber) || priceNumber <= 0) {\n    return 'Free';\n  }\n\n  // Format with dollar sign and no decimal places for whole numbers\n  return `$${priceNumber % 1 === 0 ? priceNumber : priceNumber.toFixed(2)}`;\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "80a000557a33f3ce6485900fe7033d7ccc094258"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_qbmpgoks8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_qbmpgoks8();
cov_qbmpgoks8().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_qbmpgoks8().s[1]++;
exports.formatPrice = exports.formatTime = exports.formatEntryFee = exports.formatDate = void 0;
/**
 * Format a date for display in map callouts (short format)
 * @param dateValue Date object or ISO string
 * @returns Formatted date string (e.g., "Jul 16")
 */
/* istanbul ignore next */
cov_qbmpgoks8().s[2]++;
const formatDate = dateValue => {
  /* istanbul ignore next */
  cov_qbmpgoks8().f[0]++;
  cov_qbmpgoks8().s[3]++;
  if (!dateValue) {
    /* istanbul ignore next */
    cov_qbmpgoks8().b[0][0]++;
    cov_qbmpgoks8().s[4]++;
    return 'TBD';
  } else
  /* istanbul ignore next */
  {
    cov_qbmpgoks8().b[0][1]++;
  }
  cov_qbmpgoks8().s[5]++;
  try {
    const date =
    /* istanbul ignore next */
    (cov_qbmpgoks8().s[6]++, new Date(dateValue));
    // Check if date is valid
    /* istanbul ignore next */
    cov_qbmpgoks8().s[7]++;
    if (isNaN(date.getTime())) {
      /* istanbul ignore next */
      cov_qbmpgoks8().b[1][0]++;
      cov_qbmpgoks8().s[8]++;
      return 'Invalid date';
    } else
    /* istanbul ignore next */
    {
      cov_qbmpgoks8().b[1][1]++;
    }
    // Format as short month + day (e.g., "Jul 16")
    cov_qbmpgoks8().s[9]++;
    return date.toLocaleDateString('en-US', {
      month: 'short',
      day: 'numeric'
    });
  } catch (err) {
    /* istanbul ignore next */
    cov_qbmpgoks8().s[10]++;
    console.error('Error formatting date:', err);
    /* istanbul ignore next */
    cov_qbmpgoks8().s[11]++;
    return 'Error';
  }
};
/* istanbul ignore next */
cov_qbmpgoks8().s[12]++;
exports.formatDate = formatDate;
/**
 * Format entry fee with proper currency display
 * @param fee Entry fee amount (number or string)
 * @returns Formatted fee string (e.g., "Free Entry" or "Entry: $5")
 */
/* istanbul ignore next */
cov_qbmpgoks8().s[13]++;
const formatEntryFee = fee => {
  /* istanbul ignore next */
  cov_qbmpgoks8().f[1]++;
  cov_qbmpgoks8().s[14]++;
  // Handle null, undefined, empty string, or NaN
  if (
  /* istanbul ignore next */
  (cov_qbmpgoks8().b[3][0]++, fee === null) ||
  /* istanbul ignore next */
  (cov_qbmpgoks8().b[3][1]++, fee === undefined) ||
  /* istanbul ignore next */
  (cov_qbmpgoks8().b[3][2]++, fee === '') ||
  /* istanbul ignore next */
  (cov_qbmpgoks8().b[3][3]++, typeof fee === 'number') &&
  /* istanbul ignore next */
  (cov_qbmpgoks8().b[3][4]++, isNaN(fee))) {
    /* istanbul ignore next */
    cov_qbmpgoks8().b[2][0]++;
    cov_qbmpgoks8().s[15]++;
    return 'Free Entry';
  } else
  /* istanbul ignore next */
  {
    cov_qbmpgoks8().b[2][1]++;
  }
  // Convert string to number if needed
  const feeNumber =
  /* istanbul ignore next */
  (cov_qbmpgoks8().s[16]++, typeof fee === 'string' ?
  /* istanbul ignore next */
  (cov_qbmpgoks8().b[4][0]++, parseFloat(fee)) :
  /* istanbul ignore next */
  (cov_qbmpgoks8().b[4][1]++, fee));
  // If conversion failed or fee is zero/negative, show as free
  /* istanbul ignore next */
  cov_qbmpgoks8().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_qbmpgoks8().b[6][0]++, isNaN(feeNumber)) ||
  /* istanbul ignore next */
  (cov_qbmpgoks8().b[6][1]++, feeNumber <= 0)) {
    /* istanbul ignore next */
    cov_qbmpgoks8().b[5][0]++;
    cov_qbmpgoks8().s[18]++;
    return 'Free Entry';
  } else
  /* istanbul ignore next */
  {
    cov_qbmpgoks8().b[5][1]++;
  }
  // Format with dollar sign and no decimal places for whole numbers
  cov_qbmpgoks8().s[19]++;
  return `Entry: $${feeNumber % 1 === 0 ?
  /* istanbul ignore next */
  (cov_qbmpgoks8().b[7][0]++, feeNumber) :
  /* istanbul ignore next */
  (cov_qbmpgoks8().b[7][1]++, feeNumber.toFixed(2))}`;
};
/* istanbul ignore next */
cov_qbmpgoks8().s[20]++;
exports.formatEntryFee = formatEntryFee;
/**
 * Format a time string for display
 * @param timeString Time string (e.g., "14:30:00")
 * @returns Formatted time string (e.g., "2:30 PM")
 */
/* istanbul ignore next */
cov_qbmpgoks8().s[21]++;
const formatTime = timeString => {
  /* istanbul ignore next */
  cov_qbmpgoks8().f[2]++;
  cov_qbmpgoks8().s[22]++;
  if (!timeString) {
    /* istanbul ignore next */
    cov_qbmpgoks8().b[8][0]++;
    cov_qbmpgoks8().s[23]++;
    return '';
  } else
  /* istanbul ignore next */
  {
    cov_qbmpgoks8().b[8][1]++;
  }
  cov_qbmpgoks8().s[24]++;
  try {
    // Handle various time formats
    let time;
    // If it's just a time string like "14:30:00"
    /* istanbul ignore next */
    cov_qbmpgoks8().s[25]++;
    if (
    /* istanbul ignore next */
    (cov_qbmpgoks8().b[10][0]++, timeString.includes(':')) &&
    /* istanbul ignore next */
    (cov_qbmpgoks8().b[10][1]++, !timeString.includes('T'))) {
      /* istanbul ignore next */
      cov_qbmpgoks8().b[9][0]++;
      // Create a dummy date with the time
      const [hours, minutes] =
      /* istanbul ignore next */
      (cov_qbmpgoks8().s[26]++, timeString.split(':'));
      /* istanbul ignore next */
      cov_qbmpgoks8().s[27]++;
      time = new Date();
      /* istanbul ignore next */
      cov_qbmpgoks8().s[28]++;
      time.setHours(parseInt(hours, 10));
      /* istanbul ignore next */
      cov_qbmpgoks8().s[29]++;
      time.setMinutes(parseInt(minutes, 10));
    } else {
      /* istanbul ignore next */
      cov_qbmpgoks8().b[9][1]++;
      cov_qbmpgoks8().s[30]++;
      // Full datetime string
      time = new Date(timeString);
    }
    // Check if time is valid
    /* istanbul ignore next */
    cov_qbmpgoks8().s[31]++;
    if (isNaN(time.getTime())) {
      /* istanbul ignore next */
      cov_qbmpgoks8().b[11][0]++;
      cov_qbmpgoks8().s[32]++;
      return '';
    } else
    /* istanbul ignore next */
    {
      cov_qbmpgoks8().b[11][1]++;
    }
    // Format as hours:minutes AM/PM
    cov_qbmpgoks8().s[33]++;
    return time.toLocaleTimeString('en-US', {
      hour: 'numeric',
      minute: '2-digit',
      hour12: true
    });
  } catch (err) {
    /* istanbul ignore next */
    cov_qbmpgoks8().s[34]++;
    console.error('Error formatting time:', err);
    /* istanbul ignore next */
    cov_qbmpgoks8().s[35]++;
    return '';
  }
};
/* istanbul ignore next */
cov_qbmpgoks8().s[36]++;
exports.formatTime = formatTime;
/**
 * Format a price for display
 * @param price Price amount
 * @returns Formatted price string (e.g., "$10" or "Free")
 */
/* istanbul ignore next */
cov_qbmpgoks8().s[37]++;
const formatPrice = price => {
  /* istanbul ignore next */
  cov_qbmpgoks8().f[3]++;
  cov_qbmpgoks8().s[38]++;
  // Handle null, undefined, empty string, or NaN
  if (
  /* istanbul ignore next */
  (cov_qbmpgoks8().b[13][0]++, price === null) ||
  /* istanbul ignore next */
  (cov_qbmpgoks8().b[13][1]++, price === undefined) ||
  /* istanbul ignore next */
  (cov_qbmpgoks8().b[13][2]++, price === '') ||
  /* istanbul ignore next */
  (cov_qbmpgoks8().b[13][3]++, typeof price === 'number') &&
  /* istanbul ignore next */
  (cov_qbmpgoks8().b[13][4]++, isNaN(price))) {
    /* istanbul ignore next */
    cov_qbmpgoks8().b[12][0]++;
    cov_qbmpgoks8().s[39]++;
    return 'Free';
  } else
  /* istanbul ignore next */
  {
    cov_qbmpgoks8().b[12][1]++;
  }
  // Convert string to number if needed
  const priceNumber =
  /* istanbul ignore next */
  (cov_qbmpgoks8().s[40]++, typeof price === 'string' ?
  /* istanbul ignore next */
  (cov_qbmpgoks8().b[14][0]++, parseFloat(price)) :
  /* istanbul ignore next */
  (cov_qbmpgoks8().b[14][1]++, price));
  // If conversion failed or price is zero/negative, show as free
  /* istanbul ignore next */
  cov_qbmpgoks8().s[41]++;
  if (
  /* istanbul ignore next */
  (cov_qbmpgoks8().b[16][0]++, isNaN(priceNumber)) ||
  /* istanbul ignore next */
  (cov_qbmpgoks8().b[16][1]++, priceNumber <= 0)) {
    /* istanbul ignore next */
    cov_qbmpgoks8().b[15][0]++;
    cov_qbmpgoks8().s[42]++;
    return 'Free';
  } else
  /* istanbul ignore next */
  {
    cov_qbmpgoks8().b[15][1]++;
  }
  // Format with dollar sign and no decimal places for whole numbers
  cov_qbmpgoks8().s[43]++;
  return `$${priceNumber % 1 === 0 ?
  /* istanbul ignore next */
  (cov_qbmpgoks8().b[17][0]++, priceNumber) :
  /* istanbul ignore next */
  (cov_qbmpgoks8().b[17][1]++, priceNumber.toFixed(2))}`;
};
/* istanbul ignore next */
cov_qbmpgoks8().s[44]++;
exports.formatPrice = formatPrice;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfcWJtcGdva3M4IiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJ0eXBlIiwibG9jYXRpb25zIiwidW5kZWZpbmVkIiwicyIsImYiLCJiIiwiaW5wdXRTb3VyY2VNYXAiLCJmaWxlIiwibWFwcGluZ3MiLCJuYW1lcyIsInNvdXJjZXMiLCJzb3VyY2VzQ29udGVudCIsInZlcnNpb24iLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiZm9ybWF0RGF0ZSIsImRhdGVWYWx1ZSIsImRhdGUiLCJEYXRlIiwiaXNOYU4iLCJnZXRUaW1lIiwidG9Mb2NhbGVEYXRlU3RyaW5nIiwibW9udGgiLCJkYXkiLCJlcnIiLCJjb25zb2xlIiwiZXJyb3IiLCJleHBvcnRzIiwiZm9ybWF0RW50cnlGZWUiLCJmZWUiLCJmZWVOdW1iZXIiLCJwYXJzZUZsb2F0IiwidG9GaXhlZCIsImZvcm1hdFRpbWUiLCJ0aW1lU3RyaW5nIiwidGltZSIsImluY2x1ZGVzIiwiaG91cnMiLCJtaW51dGVzIiwic3BsaXQiLCJzZXRIb3VycyIsInBhcnNlSW50Iiwic2V0TWludXRlcyIsInRvTG9jYWxlVGltZVN0cmluZyIsImhvdXIiLCJtaW51dGUiLCJob3VyMTIiLCJmb3JtYXRQcmljZSIsInByaWNlIiwicHJpY2VOdW1iZXIiXSwic291cmNlcyI6WyIvVXNlcnMva2V2aW4vY2FyZC1zaG93LWZpbmRlci9zcmMvdXRpbHMvZm9ybWF0dGVycy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIGZvcm1hdHRlcnMudHNcbiAqIFV0aWxpdHkgZnVuY3Rpb25zIGZvciBmb3JtYXR0aW5nIHZhcmlvdXMgZGF0YSB0eXBlcyBmb3IgZGlzcGxheVxuICovXG5cbi8qKlxuICogRm9ybWF0IGEgZGF0ZSBmb3IgZGlzcGxheSBpbiBtYXAgY2FsbG91dHMgKHNob3J0IGZvcm1hdClcbiAqIEBwYXJhbSBkYXRlVmFsdWUgRGF0ZSBvYmplY3Qgb3IgSVNPIHN0cmluZ1xuICogQHJldHVybnMgRm9ybWF0dGVkIGRhdGUgc3RyaW5nIChlLmcuLCBcIkp1bCAxNlwiKVxuICovXG5leHBvcnQgY29uc3QgZm9ybWF0RGF0ZSA9IChkYXRlVmFsdWU6IERhdGUgfCBzdHJpbmcgfCBudWxsIHwgdW5kZWZpbmVkKTogc3RyaW5nID0+IHtcbiAgaWYgKCFkYXRlVmFsdWUpIHtcbiAgICByZXR1cm4gJ1RCRCc7XG4gIH1cblxuICB0cnkge1xuICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZShkYXRlVmFsdWUpO1xuICAgIFxuICAgIC8vIENoZWNrIGlmIGRhdGUgaXMgdmFsaWRcbiAgICBpZiAoaXNOYU4oZGF0ZS5nZXRUaW1lKCkpKSB7XG4gICAgICByZXR1cm4gJ0ludmFsaWQgZGF0ZSc7XG4gICAgfVxuXG4gICAgLy8gRm9ybWF0IGFzIHNob3J0IG1vbnRoICsgZGF5IChlLmcuLCBcIkp1bCAxNlwiKVxuICAgIHJldHVybiBkYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygnZW4tVVMnLCB7IFxuICAgICAgbW9udGg6ICdzaG9ydCcsIFxuICAgICAgZGF5OiAnbnVtZXJpYycgXG4gICAgfSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZvcm1hdHRpbmcgZGF0ZTonLCBlcnIpO1xuICAgIHJldHVybiAnRXJyb3InO1xuICB9XG59O1xuXG4vKipcbiAqIEZvcm1hdCBlbnRyeSBmZWUgd2l0aCBwcm9wZXIgY3VycmVuY3kgZGlzcGxheVxuICogQHBhcmFtIGZlZSBFbnRyeSBmZWUgYW1vdW50IChudW1iZXIgb3Igc3RyaW5nKVxuICogQHJldHVybnMgRm9ybWF0dGVkIGZlZSBzdHJpbmcgKGUuZy4sIFwiRnJlZSBFbnRyeVwiIG9yIFwiRW50cnk6ICQ1XCIpXG4gKi9cbmV4cG9ydCBjb25zdCBmb3JtYXRFbnRyeUZlZSA9IChmZWU6IG51bWJlciB8IHN0cmluZyB8IG51bGwgfCB1bmRlZmluZWQpOiBzdHJpbmcgPT4ge1xuICAvLyBIYW5kbGUgbnVsbCwgdW5kZWZpbmVkLCBlbXB0eSBzdHJpbmcsIG9yIE5hTlxuICBpZiAoXG4gICAgZmVlID09PSBudWxsIHx8IFxuICAgIGZlZSA9PT0gdW5kZWZpbmVkIHx8IFxuICAgIGZlZSA9PT0gJycgfHwgXG4gICAgKHR5cGVvZiBmZWUgPT09ICdudW1iZXInICYmIGlzTmFOKGZlZSkpXG4gICkge1xuICAgIHJldHVybiAnRnJlZSBFbnRyeSc7XG4gIH1cblxuICAvLyBDb252ZXJ0IHN0cmluZyB0byBudW1iZXIgaWYgbmVlZGVkXG4gIGNvbnN0IGZlZU51bWJlciA9IHR5cGVvZiBmZWUgPT09ICdzdHJpbmcnID8gcGFyc2VGbG9hdChmZWUpIDogZmVlO1xuXG4gIC8vIElmIGNvbnZlcnNpb24gZmFpbGVkIG9yIGZlZSBpcyB6ZXJvL25lZ2F0aXZlLCBzaG93IGFzIGZyZWVcbiAgaWYgKGlzTmFOKGZlZU51bWJlcikgfHwgZmVlTnVtYmVyIDw9IDApIHtcbiAgICByZXR1cm4gJ0ZyZWUgRW50cnknO1xuICB9XG5cbiAgLy8gRm9ybWF0IHdpdGggZG9sbGFyIHNpZ24gYW5kIG5vIGRlY2ltYWwgcGxhY2VzIGZvciB3aG9sZSBudW1iZXJzXG4gIHJldHVybiBgRW50cnk6ICQke2ZlZU51bWJlciAlIDEgPT09IDAgPyBmZWVOdW1iZXIgOiBmZWVOdW1iZXIudG9GaXhlZCgyKX1gO1xufTtcblxuLyoqXG4gKiBGb3JtYXQgYSB0aW1lIHN0cmluZyBmb3IgZGlzcGxheVxuICogQHBhcmFtIHRpbWVTdHJpbmcgVGltZSBzdHJpbmcgKGUuZy4sIFwiMTQ6MzA6MDBcIilcbiAqIEByZXR1cm5zIEZvcm1hdHRlZCB0aW1lIHN0cmluZyAoZS5nLiwgXCIyOjMwIFBNXCIpXG4gKi9cbmV4cG9ydCBjb25zdCBmb3JtYXRUaW1lID0gKHRpbWVTdHJpbmc6IHN0cmluZyB8IG51bGwgfCB1bmRlZmluZWQpOiBzdHJpbmcgPT4ge1xuICBpZiAoIXRpbWVTdHJpbmcpIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICB0cnkge1xuICAgIC8vIEhhbmRsZSB2YXJpb3VzIHRpbWUgZm9ybWF0c1xuICAgIGxldCB0aW1lOiBEYXRlO1xuICAgIFxuICAgIC8vIElmIGl0J3MganVzdCBhIHRpbWUgc3RyaW5nIGxpa2UgXCIxNDozMDowMFwiXG4gICAgaWYgKHRpbWVTdHJpbmcuaW5jbHVkZXMoJzonKSAmJiAhdGltZVN0cmluZy5pbmNsdWRlcygnVCcpKSB7XG4gICAgICAvLyBDcmVhdGUgYSBkdW1teSBkYXRlIHdpdGggdGhlIHRpbWVcbiAgICAgIGNvbnN0IFtob3VycywgbWludXRlc10gPSB0aW1lU3RyaW5nLnNwbGl0KCc6Jyk7XG4gICAgICB0aW1lID0gbmV3IERhdGUoKTtcbiAgICAgIHRpbWUuc2V0SG91cnMocGFyc2VJbnQoaG91cnMsIDEwKSk7XG4gICAgICB0aW1lLnNldE1pbnV0ZXMocGFyc2VJbnQobWludXRlcywgMTApKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gRnVsbCBkYXRldGltZSBzdHJpbmdcbiAgICAgIHRpbWUgPSBuZXcgRGF0ZSh0aW1lU3RyaW5nKTtcbiAgICB9XG5cbiAgICAvLyBDaGVjayBpZiB0aW1lIGlzIHZhbGlkXG4gICAgaWYgKGlzTmFOKHRpbWUuZ2V0VGltZSgpKSkge1xuICAgICAgcmV0dXJuICcnO1xuICAgIH1cblxuICAgIC8vIEZvcm1hdCBhcyBob3VyczptaW51dGVzIEFNL1BNXG4gICAgcmV0dXJuIHRpbWUudG9Mb2NhbGVUaW1lU3RyaW5nKCdlbi1VUycsIHsgXG4gICAgICBob3VyOiAnbnVtZXJpYycsIFxuICAgICAgbWludXRlOiAnMi1kaWdpdCcsXG4gICAgICBob3VyMTI6IHRydWUgXG4gICAgfSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZvcm1hdHRpbmcgdGltZTonLCBlcnIpO1xuICAgIHJldHVybiAnJztcbiAgfVxufTtcblxuLyoqXG4gKiBGb3JtYXQgYSBwcmljZSBmb3IgZGlzcGxheVxuICogQHBhcmFtIHByaWNlIFByaWNlIGFtb3VudFxuICogQHJldHVybnMgRm9ybWF0dGVkIHByaWNlIHN0cmluZyAoZS5nLiwgXCIkMTBcIiBvciBcIkZyZWVcIilcbiAqL1xuZXhwb3J0IGNvbnN0IGZvcm1hdFByaWNlID0gKHByaWNlOiBudW1iZXIgfCBzdHJpbmcgfCBudWxsIHwgdW5kZWZpbmVkKTogc3RyaW5nID0+IHtcbiAgLy8gSGFuZGxlIG51bGwsIHVuZGVmaW5lZCwgZW1wdHkgc3RyaW5nLCBvciBOYU5cbiAgaWYgKFxuICAgIHByaWNlID09PSBudWxsIHx8IFxuICAgIHByaWNlID09PSB1bmRlZmluZWQgfHwgXG4gICAgcHJpY2UgPT09ICcnIHx8IFxuICAgICh0eXBlb2YgcHJpY2UgPT09ICdudW1iZXInICYmIGlzTmFOKHByaWNlKSlcbiAgKSB7XG4gICAgcmV0dXJuICdGcmVlJztcbiAgfVxuXG4gIC8vIENvbnZlcnQgc3RyaW5nIHRvIG51bWJlciBpZiBuZWVkZWRcbiAgY29uc3QgcHJpY2VOdW1iZXIgPSB0eXBlb2YgcHJpY2UgPT09ICdzdHJpbmcnID8gcGFyc2VGbG9hdChwcmljZSkgOiBwcmljZTtcblxuICAvLyBJZiBjb252ZXJzaW9uIGZhaWxlZCBvciBwcmljZSBpcyB6ZXJvL25lZ2F0aXZlLCBzaG93IGFzIGZyZWVcbiAgaWYgKGlzTmFOKHByaWNlTnVtYmVyKSB8fCBwcmljZU51bWJlciA8PSAwKSB7XG4gICAgcmV0dXJuICdGcmVlJztcbiAgfVxuXG4gIC8vIEZvcm1hdCB3aXRoIGRvbGxhciBzaWduIGFuZCBubyBkZWNpbWFsIHBsYWNlcyBmb3Igd2hvbGUgbnVtYmVyc1xuICByZXR1cm4gYCQke3ByaWNlTnVtYmVyICUgMSA9PT0gMCA/IHByaWNlTnVtYmVyIDogcHJpY2VOdW1iZXIudG9GaXhlZCgyKX1gO1xufTtcbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUFBO0FBQUEsU0FBQUEsY0FBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsTUFBQSxPQUFBQyxRQUFBO0VBQUEsSUFBQUMsR0FBQTtFQUFBLElBQUFDLFlBQUE7SUFBQUwsSUFBQTtJQUFBTSxZQUFBO01BQUE7UUFBQUMsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO0lBQUE7SUFBQUUsS0FBQTtNQUFBO1FBQUFDLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFPLFNBQUE7TUFBQTtRQUFBRCxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFXLENBQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsY0FBQTtNQUFBQyxJQUFBO01BQUFDLFFBQUE7TUFBQUMsS0FBQTtNQUFBQyxPQUFBO01BQUFDLGNBQUE7TUFBQUMsT0FBQTtJQUFBO0lBQUFDLGVBQUE7SUFBQTVCLElBQUE7RUFBQTtFQUFBLElBQUE2QixRQUFBLEdBQUE1QixNQUFBLENBQUFFLEdBQUEsTUFBQUYsTUFBQSxDQUFBRSxHQUFBO0VBQUEsS0FBQTBCLFFBQUEsQ0FBQTlCLElBQUEsS0FBQThCLFFBQUEsQ0FBQTlCLElBQUEsRUFBQUMsSUFBQSxLQUFBQSxJQUFBO0lBQUE2QixRQUFBLENBQUE5QixJQUFBLElB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