{"version":3,"names":["React","View","Text","StyleSheet","TouchableOpacity","Image","FlatList","Dimensions","Alert","Ionicons","jsx","_jsx","jsxs","_jsxs","cov_1s317z6jr6","s","CardGrid","_ref","cards","onCardPress","onCardLongPress","onAddCard","_ref$isLoading","isLoading","b","f","screenWidth","get","width","itemWidth","gridItems","_toConsumableArray","emptySlots","Math","max","length","i","push","renderItem","_ref2","item","style","styles","cardContainer","onPress","onLongPress","alert","text","activeOpacity","children","source","uri","imageUrl","cardImage","resizeMode","title","cardTitleContainer","cardTitle","numberOfLines","emptyCardContainer","addCardButton","name","size","color","addCardText","data","keyExtractor","idx","id","numColumns","columnWrapperStyle","row","contentContainerStyle","gridContainer","showsVerticalScrollIndicator","ListEmptyComponent","emptyStateContainer","emptyStateText","emptyStateTitle","emptyStateButton","emptyStateButtonText","create","padding","paddingBottom","justifyContent","marginBottom","height","borderRadius","backgroundColor","overflow","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","position","bottom","left","right","fontSize","fontWeight","borderWidth","borderColor","borderStyle","alignItems","marginTop","minHeight","textAlign","flexDirection","paddingHorizontal","paddingVertical","marginLeft"],"sources":["CardGrid.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  Image,\n  FlatList,\n  Dimensions,\n  Alert,\n} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { UserCard } from '../types';\n\ninterface CardGridProps {\n  cards: UserCard[];\n  onCardPress: (card: UserCard) => void;\n  onCardLongPress: (card: UserCard) => void;\n  onAddCard: () => void;\n  isLoading?: boolean;\n}\n\nconst CardGrid: React.FC<CardGridProps> = ({\n  cards,\n  onCardPress,\n  onCardLongPress,\n  onAddCard,\n  isLoading = false,\n}) => {\n  // Calculate item width based on screen width (2 items per row with spacing)\n  const screenWidth = Dimensions.get('window').width;\n  const itemWidth = (screenWidth - 48) / 2; // 16px padding on each side, 16px between items\n\n  // Create a full array of 10 items (filled with cards or empty slots)\n  // Explicitly allow null placeholders so TypeScript understands the mixed array\n  const gridItems: (UserCard | null)[] = [...cards];\n  const emptySlots = Math.max(0, 10 - gridItems.length);\n  \n  // Add empty slots to fill the grid up to 10 items\n  for (let i = 0; i < emptySlots; i++) {\n    gridItems.push(null);\n  }\n\n  // `index` isn't used inside the function, so omit it to avoid the\n  // eslint `@typescript-eslint/no-unused-vars` warning.\n  const renderItem = ({ item }: { item: UserCard | null }) => {\n    // If we have a card, render the card\n    if (item) {\n      return (\n        <TouchableOpacity\n          style={[styles.cardContainer, { width: itemWidth }]}\n          onPress={() => onCardPress(item)}\n          onLongPress={() => {\n            Alert.alert(\n              \"Remove Card\",\n              \"Are you sure you want to remove this card from your collection?\",\n              [\n                { text: \"Cancel\", style: \"cancel\" },\n                { text: \"Remove\", style: \"destructive\", onPress: () => onCardLongPress(item) }\n              ]\n            );\n          }}\n          activeOpacity={0.8}\n        >\n          <Image\n            source={{ uri: item.imageUrl }}\n            style={styles.cardImage}\n            resizeMode=\"cover\"\n          />\n          {item.title && (\n            <View style={styles.cardTitleContainer}>\n              <Text style={styles.cardTitle} numberOfLines={1}>\n                {item.title}\n              </Text>\n            </View>\n          )}\n        </TouchableOpacity>\n      );\n    }\n    \n    // Otherwise render an empty slot with \"Add Card\" button\n    return (\n      <TouchableOpacity\n        style={[styles.emptyCardContainer, { width: itemWidth }]}\n        onPress={onAddCard}\n        activeOpacity={0.7}\n      >\n        <View style={styles.addCardButton}>\n          <Ionicons name=\"add-circle\" size={40} color=\"#007AFF\" />\n          <Text style={styles.addCardText}>Add Card</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  return (\n    <FlatList\n      data={gridItems}\n      renderItem={renderItem}\n      keyExtractor={(item, idx) => (item ? item.id : `empty-${idx}`)}\n      numColumns={2}\n      columnWrapperStyle={styles.row}\n      contentContainerStyle={styles.gridContainer}\n      showsVerticalScrollIndicator={false}\n      ListEmptyComponent={\n        isLoading ? (\n          <View style={styles.emptyStateContainer}>\n            <Text style={styles.emptyStateText}>Loading cards...</Text>\n          </View>\n        ) : (\n          <View style={styles.emptyStateContainer}>\n            <Ionicons name=\"images-outline\" size={64} color=\"#ccc\" />\n            <Text style={styles.emptyStateTitle}>No Cards Yet</Text>\n            <Text style={styles.emptyStateText}>\n              Add your favorite cards to showcase in your collection.\n            </Text>\n            <TouchableOpacity style={styles.emptyStateButton} onPress={onAddCard}>\n              <Ionicons name=\"add-circle-outline\" size={20} color=\"white\" />\n              <Text style={styles.emptyStateButtonText}>Add Your First Card</Text>\n            </TouchableOpacity>\n          </View>\n        )\n      }\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  gridContainer: {\n    padding: 16,\n    paddingBottom: 32,\n  },\n  row: {\n    justifyContent: 'space-between',\n    marginBottom: 16,\n  },\n  cardContainer: {\n    height: 200,\n    borderRadius: 12,\n    backgroundColor: 'white',\n    overflow: 'hidden',\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n  },\n  cardImage: {\n    width: '100%',\n    height: '100%',\n  },\n  cardTitleContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: 'rgba(0,0,0,0.6)',\n    padding: 8,\n  },\n  cardTitle: {\n    color: 'white',\n    fontSize: 12,\n    fontWeight: '500',\n  },\n  emptyCardContainer: {\n    height: 200,\n    borderRadius: 12,\n    backgroundColor: '#f8f8f8',\n    borderWidth: 1,\n    borderColor: '#e0e0e0',\n    borderStyle: 'dashed',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  addCardButton: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  addCardText: {\n    marginTop: 8,\n    color: '#007AFF',\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  emptyStateContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 24,\n    minHeight: 300,\n  },\n  emptyStateTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333',\n    marginTop: 16,\n  },\n  emptyStateText: {\n    fontSize: 14,\n    color: '#666',\n    textAlign: 'center',\n    marginTop: 8,\n    marginBottom: 24,\n  },\n  emptyStateButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#007AFF',\n    paddingHorizontal: 16,\n    paddingVertical: 10,\n    borderRadius: 20,\n  },\n  emptyStateButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: '500',\n    marginLeft: 6,\n  },\n});\n\nexport default CardGrid;\n"],"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","ignoreList":[]}