4bfbf8412560fade49fc493ebf469a1d
import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
function cov_1s317z6jr6() {
  var path = "/Users/kevin/card-show-finder/src/components/CardGrid.tsx";
  var hash = "bfd3d28c15c342d14b3a5811f3c09563bf5c1c58";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/components/CardGrid.tsx",
    statementMap: {
      "0": {
        start: {
          line: 23,
          column: 42
        },
        end: {
          line: 126,
          column: 1
        }
      },
      "1": {
        start: {
          line: 31,
          column: 22
        },
        end: {
          line: 31,
          column: 52
        }
      },
      "2": {
        start: {
          line: 32,
          column: 20
        },
        end: {
          line: 32,
          column: 42
        }
      },
      "3": {
        start: {
          line: 36,
          column: 41
        },
        end: {
          line: 36,
          column: 51
        }
      },
      "4": {
        start: {
          line: 37,
          column: 21
        },
        end: {
          line: 37,
          column: 55
        }
      },
      "5": {
        start: {
          line: 40,
          column: 2
        },
        end: {
          line: 42,
          column: 3
        }
      },
      "6": {
        start: {
          line: 40,
          column: 15
        },
        end: {
          line: 40,
          column: 16
        }
      },
      "7": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 25
        }
      },
      "8": {
        start: {
          line: 46,
          column: 21
        },
        end: {
          line: 94,
          column: 3
        }
      },
      "9": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "10": {
        start: {
          line: 49,
          column: 6
        },
        end: {
          line: 78,
          column: 8
        }
      },
      "11": {
        start: {
          line: 52,
          column: 25
        },
        end: {
          line: 52,
          column: 42
        }
      },
      "12": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 61,
          column: 14
        }
      },
      "13": {
        start: {
          line: 59,
          column: 71
        },
        end: {
          line: 59,
          column: 92
        }
      },
      "14": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 93,
          column: 6
        }
      },
      "15": {
        start: {
          line: 96,
          column: 2
        },
        end: {
          line: 125,
          column: 4
        }
      },
      "16": {
        start: {
          line: 100,
          column: 36
        },
        end: {
          line: 100,
          column: 67
        }
      },
      "17": {
        start: {
          line: 128,
          column: 15
        },
        end: {
          line: 218,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 23,
            column: 42
          },
          end: {
            line: 23,
            column: 43
          }
        },
        loc: {
          start: {
            line: 29,
            column: 6
          },
          end: {
            line: 126,
            column: 1
          }
        },
        line: 29
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 46,
            column: 21
          },
          end: {
            line: 46,
            column: 22
          }
        },
        loc: {
          start: {
            line: 46,
            column: 62
          },
          end: {
            line: 94,
            column: 3
          }
        },
        line: 46
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 52,
            column: 19
          },
          end: {
            line: 52,
            column: 20
          }
        },
        loc: {
          start: {
            line: 52,
            column: 25
          },
          end: {
            line: 52,
            column: 42
          }
        },
        line: 52
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 53,
            column: 23
          },
          end: {
            line: 53,
            column: 24
          }
        },
        loc: {
          start: {
            line: 53,
            column: 29
          },
          end: {
            line: 62,
            column: 11
          }
        },
        line: 53
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 59,
            column: 65
          },
          end: {
            line: 59,
            column: 66
          }
        },
        loc: {
          start: {
            line: 59,
            column: 71
          },
          end: {
            line: 59,
            column: 92
          }
        },
        line: 59
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 100,
            column: 20
          },
          end: {
            line: 100,
            column: 21
          }
        },
        loc: {
          start: {
            line: 100,
            column: 36
          },
          end: {
            line: 100,
            column: 67
          }
        },
        line: 100
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 2
          },
          end: {
            line: 28,
            column: 19
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 28,
            column: 14
          },
          end: {
            line: 28,
            column: 19
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "2": {
        loc: {
          start: {
            line: 70,
            column: 11
          },
          end: {
            line: 76,
            column: 11
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 11
          },
          end: {
            line: 70,
            column: 21
          }
        }, {
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 75,
            column: 19
          }
        }],
        line: 70
      },
      "3": {
        loc: {
          start: {
            line: 100,
            column: 36
          },
          end: {
            line: 100,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 100,
            column: 43
          },
          end: {
            line: 100,
            column: 50
          }
        }, {
          start: {
            line: 100,
            column: 53
          },
          end: {
            line: 100,
            column: 67
          }
        }],
        line: 100
      },
      "4": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 107,
            column: 10
          },
          end: {
            line: 109,
            column: 17
          }
        }, {
          start: {
            line: 111,
            column: 10
          },
          end: {
            line: 121,
            column: 17
          }
        }],
        line: 106
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bfd3d28c15c342d14b3a5811f3c09563bf5c1c58"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1s317z6jr6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1s317z6jr6();
import React from 'react';
import { View, Text, StyleSheet, TouchableOpacity, Image, FlatList, Dimensions, Alert } from 'react-native';
import { Ionicons } from '@expo/vector-icons';
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
cov_1s317z6jr6().s[0]++;
var CardGrid = function CardGrid(_ref) {
  var cards = _ref.cards,
    onCardPress = _ref.onCardPress,
    onCardLongPress = _ref.onCardLongPress,
    onAddCard = _ref.onAddCard,
    _ref$isLoading = _ref.isLoading,
    isLoading = _ref$isLoading === void 0 ? (cov_1s317z6jr6().b[0][0]++, false) : _ref$isLoading;
  cov_1s317z6jr6().f[0]++;
  var screenWidth = (cov_1s317z6jr6().s[1]++, Dimensions.get('window').width);
  var itemWidth = (cov_1s317z6jr6().s[2]++, (screenWidth - 48) / 2);
  var gridItems = (cov_1s317z6jr6().s[3]++, _toConsumableArray(cards));
  var emptySlots = (cov_1s317z6jr6().s[4]++, Math.max(0, 10 - gridItems.length));
  cov_1s317z6jr6().s[5]++;
  for (var i = (cov_1s317z6jr6().s[6]++, 0); i < emptySlots; i++) {
    cov_1s317z6jr6().s[7]++;
    gridItems.push(null);
  }
  cov_1s317z6jr6().s[8]++;
  var renderItem = function renderItem(_ref2) {
    var item = _ref2.item;
    cov_1s317z6jr6().f[1]++;
    cov_1s317z6jr6().s[9]++;
    if (item) {
      cov_1s317z6jr6().b[1][0]++;
      cov_1s317z6jr6().s[10]++;
      return _jsxs(TouchableOpacity, {
        style: [styles.cardContainer, {
          width: itemWidth
        }],
        onPress: function onPress() {
          cov_1s317z6jr6().f[2]++;
          cov_1s317z6jr6().s[11]++;
          return onCardPress(item);
        },
        onLongPress: function onLongPress() {
          cov_1s317z6jr6().f[3]++;
          cov_1s317z6jr6().s[12]++;
          Alert.alert("Remove Card", "Are you sure you want to remove this card from your collection?", [{
            text: "Cancel",
            style: "cancel"
          }, {
            text: "Remove",
            style: "destructive",
            onPress: function onPress() {
              cov_1s317z6jr6().f[4]++;
              cov_1s317z6jr6().s[13]++;
              return onCardLongPress(item);
            }
          }]);
        },
        activeOpacity: 0.8,
        children: [_jsx(Image, {
          source: {
            uri: item.imageUrl
          },
          style: styles.cardImage,
          resizeMode: "cover"
        }), (cov_1s317z6jr6().b[2][0]++, item.title) && (cov_1s317z6jr6().b[2][1]++, _jsx(View, {
          style: styles.cardTitleContainer,
          children: _jsx(Text, {
            style: styles.cardTitle,
            numberOfLines: 1,
            children: item.title
          })
        }))]
      });
    } else {
      cov_1s317z6jr6().b[1][1]++;
    }
    cov_1s317z6jr6().s[14]++;
    return _jsx(TouchableOpacity, {
      style: [styles.emptyCardContainer, {
        width: itemWidth
      }],
      onPress: onAddCard,
      activeOpacity: 0.7,
      children: _jsxs(View, {
        style: styles.addCardButton,
        children: [_jsx(Ionicons, {
          name: "add-circle",
          size: 40,
          color: "#007AFF"
        }), _jsx(Text, {
          style: styles.addCardText,
          children: "Add Card"
        })]
      })
    });
  };
  cov_1s317z6jr6().s[15]++;
  return _jsx(FlatList, {
    data: gridItems,
    renderItem: renderItem,
    keyExtractor: function keyExtractor(item, idx) {
      cov_1s317z6jr6().f[5]++;
      cov_1s317z6jr6().s[16]++;
      return item ? (cov_1s317z6jr6().b[3][0]++, item.id) : (cov_1s317z6jr6().b[3][1]++, `empty-${idx}`);
    },
    numColumns: 2,
    columnWrapperStyle: styles.row,
    contentContainerStyle: styles.gridContainer,
    showsVerticalScrollIndicator: false,
    ListEmptyComponent: isLoading ? (cov_1s317z6jr6().b[4][0]++, _jsx(View, {
      style: styles.emptyStateContainer,
      children: _jsx(Text, {
        style: styles.emptyStateText,
        children: "Loading cards..."
      })
    })) : (cov_1s317z6jr6().b[4][1]++, _jsxs(View, {
      style: styles.emptyStateContainer,
      children: [_jsx(Ionicons, {
        name: "images-outline",
        size: 64,
        color: "#ccc"
      }), _jsx(Text, {
        style: styles.emptyStateTitle,
        children: "No Cards Yet"
      }), _jsx(Text, {
        style: styles.emptyStateText,
        children: "Add your favorite cards to showcase in your collection."
      }), _jsxs(TouchableOpacity, {
        style: styles.emptyStateButton,
        onPress: onAddCard,
        children: [_jsx(Ionicons, {
          name: "add-circle-outline",
          size: 20,
          color: "white"
        }), _jsx(Text, {
          style: styles.emptyStateButtonText,
          children: "Add Your First Card"
        })]
      })]
    }))
  });
};
var styles = (cov_1s317z6jr6().s[17]++, StyleSheet.create({
  gridContainer: {
    padding: 16,
    paddingBottom: 32
  },
  row: {
    justifyContent: 'space-between',
    marginBottom: 16
  },
  cardContainer: {
    height: 200,
    borderRadius: 12,
    backgroundColor: 'white',
    overflow: 'hidden',
    elevation: 2,
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 1
    },
    shadowOpacity: 0.1,
    shadowRadius: 2
  },
  cardImage: {
    width: '100%',
    height: '100%'
  },
  cardTitleContainer: {
    position: 'absolute',
    bottom: 0,
    left: 0,
    right: 0,
    backgroundColor: 'rgba(0,0,0,0.6)',
    padding: 8
  },
  cardTitle: {
    color: 'white',
    fontSize: 12,
    fontWeight: '500'
  },
  emptyCardContainer: {
    height: 200,
    borderRadius: 12,
    backgroundColor: '#f8f8f8',
    borderWidth: 1,
    borderColor: '#e0e0e0',
    borderStyle: 'dashed',
    justifyContent: 'center',
    alignItems: 'center'
  },
  addCardButton: {
    justifyContent: 'center',
    alignItems: 'center'
  },
  addCardText: {
    marginTop: 8,
    color: '#007AFF',
    fontSize: 14,
    fontWeight: '500'
  },
  emptyStateContainer: {
    alignItems: 'center',
    justifyContent: 'center',
    padding: 24,
    minHeight: 300
  },
  emptyStateTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#333',
    marginTop: 16
  },
  emptyStateText: {
    fontSize: 14,
    color: '#666',
    textAlign: 'center',
    marginTop: 8,
    marginBottom: 24
  },
  emptyStateButton: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: '#007AFF',
    paddingHorizontal: 16,
    paddingVertical: 10,
    borderRadius: 20
  },
  emptyStateButtonText: {
    color: 'white',
    fontSize: 16,
    fontWeight: '500',
    marginLeft: 6
  }
}));
export default CardGrid;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,