fcb632d10ae1cf656a45c047c66b3389
function cov_1khdmb7izr() {
  var path = "/Users/kevin/card-show-finder/src/components/ui/Button.tsx";
  var hash = "29a78451d19c44c13c477a0f53ea538934c275d2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/components/ui/Button.tsx",
    statementMap: {
      "0": {
        start: {
          line: 61,
          column: 38
        },
        end: {
          line: 124,
          column: 1
        }
      },
      "1": {
        start: {
          line: 72,
          column: 20
        },
        end: {
          line: 72,
          column: 30
        }
      },
      "2": {
        start: {
          line: 75,
          column: 21
        },
        end: {
          line: 75,
          column: 58
        }
      },
      "3": {
        start: {
          line: 78,
          column: 22
        },
        end: {
          line: 78,
          column: 55
        }
      },
      "4": {
        start: {
          line: 82,
          column: 28
        },
        end: {
          line: 84,
          column: 15
        }
      },
      "5": {
        start: {
          line: 87,
          column: 25
        },
        end: {
          line: 91,
          column: 3
        }
      },
      "6": {
        start: {
          line: 93,
          column: 21
        },
        end: {
          line: 97,
          column: 3
        }
      },
      "7": {
        start: {
          line: 99,
          column: 2
        },
        end: {
          line: 123,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 61,
            column: 38
          },
          end: {
            line: 61,
            column: 39
          }
        },
        loc: {
          start: {
            line: 70,
            column: 6
          },
          end: {
            line: 124,
            column: 1
          }
        },
        line: 70
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 62,
            column: 2
          },
          end: {
            line: 62,
            column: 21
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 62,
            column: 21
          }
        }],
        line: 62
      },
      "1": {
        loc: {
          start: {
            line: 65,
            column: 2
          },
          end: {
            line: 65,
            column: 18
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 65,
            column: 13
          },
          end: {
            line: 65,
            column: 18
          }
        }],
        line: 65
      },
      "2": {
        loc: {
          start: {
            line: 66,
            column: 2
          },
          end: {
            line: 66,
            column: 17
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 66,
            column: 17
          }
        }],
        line: 66
      },
      "3": {
        loc: {
          start: {
            line: 69,
            column: 2
          },
          end: {
            line: 69,
            column: 17
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 69,
            column: 13
          },
          end: {
            line: 69,
            column: 17
          }
        }],
        line: 69
      },
      "4": {
        loc: {
          start: {
            line: 82,
            column: 28
          },
          end: {
            line: 84,
            column: 15
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 83,
            column: 6
          },
          end: {
            line: 83,
            column: 56
          }
        }, {
          start: {
            line: 84,
            column: 6
          },
          end: {
            line: 84,
            column: 15
          }
        }],
        line: 82
      },
      "5": {
        loc: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 89,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 89,
            column: 12
          }
        }, {
          start: {
            line: 89,
            column: 16
          },
          end: {
            line: 89,
            column: 45
          }
        }],
        line: 89
      },
      "6": {
        loc: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 95,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 95,
            column: 12
          }
        }, {
          start: {
            line: 95,
            column: 16
          },
          end: {
            line: 95,
            column: 40
          }
        }],
        line: 95
      },
      "7": {
        loc: {
          start: {
            line: 104,
            column: 18
          },
          end: {
            line: 104,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 18
          },
          end: {
            line: 104,
            column: 26
          }
        }, {
          start: {
            line: 104,
            column: 30
          },
          end: {
            line: 104,
            column: 37
          }
        }],
        line: 104
      },
      "8": {
        loc: {
          start: {
            line: 106,
            column: 13
          },
          end: {
            line: 111,
            column: 14
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 110,
            column: 13
          }
        }, {
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 111,
            column: 14
          }
        }],
        line: 106
      },
      "9": {
        loc: {
          start: {
            line: 113,
            column: 9
          },
          end: {
            line: 120,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 114,
            column: 10
          },
          end: {
            line: 117,
            column: 12
          }
        }, {
          start: {
            line: 119,
            column: 10
          },
          end: {
            line: 119,
            column: 49
          }
        }],
        line: 113
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "29a78451d19c44c13c477a0f53ea538934c275d2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1khdmb7izr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1khdmb7izr();
import React, { useRef } from 'react';
import { TouchableOpacity, Text, Animated, ActivityIndicator } from 'react-native';
import { useTheme } from '../../contexts/ThemeContext';
import { jsx as _jsx } from "react/jsx-runtime";
cov_1khdmb7izr().s[0]++;
var Button = function Button(_ref) {
  var _ref$variant = _ref.variant,
    variant = _ref$variant === void 0 ? (cov_1khdmb7izr().b[0][0]++, 'primary') : _ref$variant,
    label = _ref.label,
    onPress = _ref.onPress,
    _ref$disabled = _ref.disabled,
    disabled = _ref$disabled === void 0 ? (cov_1khdmb7izr().b[1][0]++, false) : _ref$disabled,
    _ref$loading = _ref.loading,
    loading = _ref$loading === void 0 ? (cov_1khdmb7izr().b[2][0]++, false) : _ref$loading,
    style = _ref.style,
    textStyle = _ref.textStyle,
    _ref$animated = _ref.animated,
    animated = _ref$animated === void 0 ? (cov_1khdmb7izr().b[3][0]++, true) : _ref$animated;
  cov_1khdmb7izr().f[0]++;
  var _ref2 = (cov_1khdmb7izr().s[1]++, useTheme()),
    theme = _ref2.theme;
  var scaleValue = (cov_1khdmb7izr().s[2]++, useRef(new Animated.Value(1)).current);
  var buttonStyle = (cov_1khdmb7izr().s[3]++, theme.components.buttons[variant]);
  var animationHandlers = (cov_1khdmb7izr().s[4]++, animated ? (cov_1khdmb7izr().b[4][0]++, theme.animations.animation.buttonPress(scaleValue)) : (cov_1khdmb7izr().b[4][1]++, undefined));
  var containerStyle = (cov_1khdmb7izr().s[5]++, [buttonStyle.container, (cov_1khdmb7izr().b[5][0]++, disabled) && (cov_1khdmb7izr().b[5][1]++, buttonStyle.disabledContainer), style]);
  var labelStyle = (cov_1khdmb7izr().s[6]++, [buttonStyle.text, (cov_1khdmb7izr().b[6][0]++, disabled) && (cov_1khdmb7izr().b[6][1]++, buttonStyle.disabledText), textStyle]);
  cov_1khdmb7izr().s[7]++;
  return _jsx(Animated.View, {
    style: animationHandlers == null ? void 0 : animationHandlers.style,
    children: _jsx(TouchableOpacity, Object.assign({
      activeOpacity: 0.8,
      onPress: onPress,
      disabled: (cov_1khdmb7izr().b[7][0]++, disabled) || (cov_1khdmb7izr().b[7][1]++, loading),
      style: containerStyle
    }, animated ? (cov_1khdmb7izr().b[8][0]++, {
      onPressIn: animationHandlers == null ? void 0 : animationHandlers.onPressIn,
      onPressOut: animationHandlers == null ? void 0 : animationHandlers.onPressOut
    }) : (cov_1khdmb7izr().b[8][1]++, {}), {
      children: loading ? (cov_1khdmb7izr().b[9][0]++, _jsx(ActivityIndicator, {
        color: buttonStyle.text.color,
        size: "small"
      })) : (cov_1khdmb7izr().b[9][1]++, _jsx(Text, {
        style: labelStyle,
        children: label
      }))
    }))
  });
};
export default Button;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,