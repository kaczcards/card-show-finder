940f9e3145505aea5b2cdd021eef966c
"use strict";

/**
 * Test Utility for Chat Integration
 *
 * This file provides functions to test the integration between React Query hooks
 * and PostgreSQL RPC functions for the chat functionality.
 *
 * FOR DEVELOPMENT/TESTING ONLY - Not for production use
 */
/* istanbul ignore next */
function cov_jmqb9atm() {
  var path = "/Users/kevin/card-show-finder/src/utils/testChatIntegration.ts";
  var hash = "a78b52d1bb14e5f324eae808103b9a593accd655";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/utils/testChatIntegration.ts",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 22
        },
        end: {
          line: 20,
          column: 3
        }
      },
      "1": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 33
        }
      },
      "2": {
        start: {
          line: 11,
          column: 26
        },
        end: {
          line: 11,
          column: 33
        }
      },
      "3": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 52
        }
      },
      "4": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 15,
          column: 5
        }
      },
      "5": {
        start: {
          line: 14,
          column: 6
        },
        end: {
          line: 14,
          column: 68
        }
      },
      "6": {
        start: {
          line: 14,
          column: 51
        },
        end: {
          line: 14,
          column: 63
        }
      },
      "7": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 39
        }
      },
      "8": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 33
        }
      },
      "9": {
        start: {
          line: 18,
          column: 26
        },
        end: {
          line: 18,
          column: 33
        }
      },
      "10": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 17
        }
      },
      "11": {
        start: {
          line: 21,
          column: 25
        },
        end: {
          line: 25,
          column: 2
        }
      },
      "12": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 72
        }
      },
      "13": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 21
        }
      },
      "14": {
        start: {
          line: 26,
          column: 19
        },
        end: {
          line: 42,
          column: 4
        }
      },
      "15": {
        start: {
          line: 27,
          column: 18
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "16": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 32,
          column: 10
        }
      },
      "17": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "18": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 95
        }
      },
      "19": {
        start: {
          line: 30,
          column: 29
        },
        end: {
          line: 30,
          column: 95
        }
      },
      "20": {
        start: {
          line: 30,
          column: 77
        },
        end: {
          line: 30,
          column: 95
        }
      },
      "21": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 22
        }
      },
      "22": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 26
        }
      },
      "23": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 41,
          column: 6
        }
      },
      "24": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 46
        }
      },
      "25": {
        start: {
          line: 36,
          column: 35
        },
        end: {
          line: 36,
          column: 46
        }
      },
      "26": {
        start: {
          line: 37,
          column: 21
        },
        end: {
          line: 37,
          column: 23
        }
      },
      "27": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 137
        }
      },
      "28": {
        start: {
          line: 38,
          column: 25
        },
        end: {
          line: 38,
          column: 137
        }
      },
      "29": {
        start: {
          line: 38,
          column: 38
        },
        end: {
          line: 38,
          column: 50
        }
      },
      "30": {
        start: {
          line: 38,
          column: 56
        },
        end: {
          line: 38,
          column: 57
        }
      },
      "31": {
        start: {
          line: 38,
          column: 78
        },
        end: {
          line: 38,
          column: 137
        }
      },
      "32": {
        start: {
          line: 38,
          column: 102
        },
        end: {
          line: 38,
          column: 137
        }
      },
      "33": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 40
        }
      },
      "34": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 22
        }
      },
      "35": {
        start: {
          line: 43,
          column: 0
        },
        end: {
          line: 43,
          column: 62
        }
      },
      "36": {
        start: {
          line: 44,
          column: 0
        },
        end: {
          line: 44,
          column: 113
        }
      },
      "37": {
        start: {
          line: 45,
          column: 19
        },
        end: {
          line: 45,
          column: 41
        }
      },
      "38": {
        start: {
          line: 46,
          column: 25
        },
        end: {
          line: 46,
          column: 78
        }
      },
      "39": {
        start: {
          line: 51,
          column: 37
        },
        end: {
          line: 133,
          column: 1
        }
      },
      "40": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 58
        }
      },
      "41": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 36
        }
      },
      "42": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 130,
          column: 5
        }
      },
      "43": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 72
        }
      },
      "44": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 43
        }
      },
      "45": {
        start: {
          line: 58,
          column: 51
        },
        end: {
          line: 61,
          column: 10
        }
      },
      "46": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 46
        }
      },
      "47": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "48": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 60
        }
      },
      "49": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 48
        }
      },
      "50": {
        start: {
          line: 67,
          column: 13
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "51": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 74
        }
      },
      "52": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 85
        }
      },
      "53": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 88
        }
      },
      "54": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 27
        }
      },
      "55": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 70
        }
      },
      "56": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 47
        }
      },
      "57": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "58": {
        start: {
          line: 79,
          column: 32
        },
        end: {
          line: 79,
          column: 79
        }
      },
      "59": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 54
        }
      },
      "60": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 93
        }
      },
      "61": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 92
        }
      },
      "62": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 120,
          column: 13
        }
      },
      "63": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 85,
          column: 54
        }
      },
      "64": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 98
        }
      },
      "65": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 118,
          column: 17
        }
      },
      "66": {
        start: {
          line: 89,
          column: 35
        },
        end: {
          line: 89,
          column: 66
        }
      },
      "67": {
        start: {
          line: 89,
          column: 60
        },
        end: {
          line: 89,
          column: 64
        }
      },
      "68": {
        start: {
          line: 90,
          column: 39
        },
        end: {
          line: 90,
          column: 74
        }
      },
      "69": {
        start: {
          line: 90,
          column: 68
        },
        end: {
          line: 90,
          column: 72
        }
      },
      "70": {
        start: {
          line: 91,
          column: 41
        },
        end: {
          line: 91,
          column: 86
        }
      },
      "71": {
        start: {
          line: 91,
          column: 70
        },
        end: {
          line: 91,
          column: 85
        }
      },
      "72": {
        start: {
          line: 92,
          column: 45
        },
        end: {
          line: 92,
          column: 90
        }
      },
      "73": {
        start: {
          line: 92,
          column: 70
        },
        end: {
          line: 92,
          column: 89
        }
      },
      "74": {
        start: {
          line: 93,
          column: 20
        },
        end: {
          line: 95,
          column: 21
        }
      },
      "75": {
        start: {
          line: 94,
          column: 24
        },
        end: {
          line: 94,
          column: 92
        }
      },
      "76": {
        start: {
          line: 96,
          column: 20
        },
        end: {
          line: 98,
          column: 21
        }
      },
      "77": {
        start: {
          line: 97,
          column: 24
        },
        end: {
          line: 97,
          column: 96
        }
      },
      "78": {
        start: {
          line: 99,
          column: 20
        },
        end: {
          line: 101,
          column: 21
        }
      },
      "79": {
        start: {
          line: 100,
          column: 24
        },
        end: {
          line: 100,
          column: 79
        }
      },
      "80": {
        start: {
          line: 103,
          column: 38
        },
        end: {
          line: 103,
          column: 48
        }
      },
      "81": {
        start: {
          line: 104,
          column: 42
        },
        end: {
          line: 104,
          column: 56
        }
      },
      "82": {
        start: {
          line: 105,
          column: 20
        },
        end: {
          line: 105,
          column: 80
        }
      },
      "83": {
        start: {
          line: 106,
          column: 20
        },
        end: {
          line: 106,
          column: 88
        }
      },
      "84": {
        start: {
          line: 108,
          column: 38
        },
        end: {
          line: 108,
          column: 69
        }
      },
      "85": {
        start: {
          line: 109,
          column: 42
        },
        end: {
          line: 109,
          column: 77
        }
      },
      "86": {
        start: {
          line: 110,
          column: 47
        },
        end: {
          line: 110,
          column: 104
        }
      },
      "87": {
        start: {
          line: 110,
          column: 82
        },
        end: {
          line: 110,
          column: 103
        }
      },
      "88": {
        start: {
          line: 111,
          column: 51
        },
        end: {
          line: 111,
          column: 108
        }
      },
      "89": {
        start: {
          line: 111,
          column: 82
        },
        end: {
          line: 111,
          column: 107
        }
      },
      "90": {
        start: {
          line: 112,
          column: 20
        },
        end: {
          line: 114,
          column: 21
        }
      },
      "91": {
        start: {
          line: 113,
          column: 24
        },
        end: {
          line: 113,
          column: 101
        }
      },
      "92": {
        start: {
          line: 115,
          column: 20
        },
        end: {
          line: 117,
          column: 21
        }
      },
      "93": {
        start: {
          line: 116,
          column: 24
        },
        end: {
          line: 116,
          column: 105
        }
      },
      "94": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 119,
          column: 35
        }
      },
      "95": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 54
        }
      },
      "96": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 60
        }
      },
      "97": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 27
        }
      },
      "98": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 47
        }
      },
      "99": {
        start: {
          line: 131,
          column: 4
        },
        end: {
          line: 131,
          column: 39
        }
      },
      "100": {
        start: {
          line: 132,
          column: 4
        },
        end: {
          line: 132,
          column: 23
        }
      },
      "101": {
        start: {
          line: 134,
          column: 0
        },
        end: {
          line: 134,
          column: 68
        }
      },
      "102": {
        start: {
          line: 139,
          column: 32
        },
        end: {
          line: 221,
          column: 1
        }
      },
      "103": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 140,
          column: 53
        }
      },
      "104": {
        start: {
          line: 141,
          column: 4
        },
        end: {
          line: 141,
          column: 36
        }
      },
      "105": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 218,
          column: 5
        }
      },
      "106": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 75
        }
      },
      "107": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 43
        }
      },
      "108": {
        start: {
          line: 146,
          column: 51
        },
        end: {
          line: 149,
          column: 10
        }
      },
      "109": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 46
        }
      },
      "110": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "111": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 60
        }
      },
      "112": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 48
        }
      },
      "113": {
        start: {
          line: 155,
          column: 13
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "114": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 74
        }
      },
      "115": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 80
        }
      },
      "116": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 78
        }
      },
      "117": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 168,
          column: 13
        }
      },
      "118": {
        start: {
          line: 163,
          column: 37
        },
        end: {
          line: 163,
          column: 47
        }
      },
      "119": {
        start: {
          line: 164,
          column: 16
        },
        end: {
          line: 164,
          column: 52
        }
      },
      "120": {
        start: {
          line: 165,
          column: 16
        },
        end: {
          line: 165,
          column: 70
        }
      },
      "121": {
        start: {
          line: 166,
          column: 16
        },
        end: {
          line: 166,
          column: 80
        }
      },
      "122": {
        start: {
          line: 167,
          column: 16
        },
        end: {
          line: 167,
          column: 78
        }
      },
      "123": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 27
        }
      },
      "124": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 65
        }
      },
      "125": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 47
        }
      },
      "126": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 213,
          column: 9
        }
      },
      "127": {
        start: {
          line: 175,
          column: 32
        },
        end: {
          line: 175,
          column: 82
        }
      },
      "128": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 54
        }
      },
      "129": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 88
        }
      },
      "130": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 82
        }
      },
      "131": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 208,
          column: 13
        }
      },
      "132": {
        start: {
          line: 181,
          column: 16
        },
        end: {
          line: 181,
          column: 54
        }
      },
      "133": {
        start: {
          line: 182,
          column: 16
        },
        end: {
          line: 182,
          column: 98
        }
      },
      "134": {
        start: {
          line: 183,
          column: 16
        },
        end: {
          line: 206,
          column: 17
        }
      },
      "135": {
        start: {
          line: 185,
          column: 38
        },
        end: {
          line: 185,
          column: 48
        }
      },
      "136": {
        start: {
          line: 186,
          column: 42
        },
        end: {
          line: 186,
          column: 56
        }
      },
      "137": {
        start: {
          line: 187,
          column: 20
        },
        end: {
          line: 187,
          column: 82
        }
      },
      "138": {
        start: {
          line: 188,
          column: 20
        },
        end: {
          line: 188,
          column: 90
        }
      },
      "139": {
        start: {
          line: 190,
          column: 20
        },
        end: {
          line: 190,
          column: 57
        }
      },
      "140": {
        start: {
          line: 191,
          column: 20
        },
        end: {
          line: 191,
          column: 65
        }
      },
      "141": {
        start: {
          line: 192,
          column: 20
        },
        end: {
          line: 192,
          column: 83
        }
      },
      "142": {
        start: {
          line: 194,
          column: 20
        },
        end: {
          line: 199,
          column: 21
        }
      },
      "143": {
        start: {
          line: 195,
          column: 24
        },
        end: {
          line: 195,
          column: 79
        }
      },
      "144": {
        start: {
          line: 198,
          column: 24
        },
        end: {
          line: 198,
          column: 65
        }
      },
      "145": {
        start: {
          line: 200,
          column: 20
        },
        end: {
          line: 205,
          column: 21
        }
      },
      "146": {
        start: {
          line: 201,
          column: 24
        },
        end: {
          line: 201,
          column: 84
        }
      },
      "147": {
        start: {
          line: 204,
          column: 24
        },
        end: {
          line: 204,
          column: 65
        }
      },
      "148": {
        start: {
          line: 207,
          column: 16
        },
        end: {
          line: 207,
          column: 35
        }
      },
      "149": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 211,
          column: 54
        }
      },
      "150": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 60
        }
      },
      "151": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 27
        }
      },
      "152": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 47
        }
      },
      "153": {
        start: {
          line: 219,
          column: 4
        },
        end: {
          line: 219,
          column: 39
        }
      },
      "154": {
        start: {
          line: 220,
          column: 4
        },
        end: {
          line: 220,
          column: 23
        }
      },
      "155": {
        start: {
          line: 222,
          column: 0
        },
        end: {
          line: 222,
          column: 58
        }
      },
      "156": {
        start: {
          line: 228,
          column: 31
        },
        end: {
          line: 256,
          column: 1
        }
      },
      "157": {
        start: {
          line: 229,
          column: 4
        },
        end: {
          line: 229,
          column: 66
        }
      },
      "158": {
        start: {
          line: 230,
          column: 4
        },
        end: {
          line: 230,
          column: 49
        }
      },
      "159": {
        start: {
          line: 232,
          column: 4
        },
        end: {
          line: 232,
          column: 60
        }
      },
      "160": {
        start: {
          line: 234,
          column: 4
        },
        end: {
          line: 249,
          column: 5
        }
      },
      "161": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 248,
          column: 9
        }
      },
      "162": {
        start: {
          line: 236,
          column: 29
        },
        end: {
          line: 237,
          column: 73
        }
      },
      "163": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 244,
          column: 13
        }
      },
      "164": {
        start: {
          line: 239,
          column: 16
        },
        end: {
          line: 239,
          column: 44
        }
      },
      "165": {
        start: {
          line: 240,
          column: 16
        },
        end: {
          line: 240,
          column: 94
        }
      },
      "166": {
        start: {
          line: 243,
          column: 16
        },
        end: {
          line: 243,
          column: 79
        }
      },
      "167": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 247,
          column: 67
        }
      },
      "168": {
        start: {
          line: 251,
          column: 4
        },
        end: {
          line: 253,
          column: 5
        }
      },
      "169": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 252,
          column: 67
        }
      },
      "170": {
        start: {
          line: 254,
          column: 4
        },
        end: {
          line: 254,
          column: 23
        }
      },
      "171": {
        start: {
          line: 255,
          column: 4
        },
        end: {
          line: 255,
          column: 42
        }
      },
      "172": {
        start: {
          line: 257,
          column: 0
        },
        end: {
          line: 257,
          column: 56
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 74
          },
          end: {
            line: 10,
            column: 75
          }
        },
        loc: {
          start: {
            line: 10,
            column: 96
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 38
          },
          end: {
            line: 14,
            column: 39
          }
        },
        loc: {
          start: {
            line: 14,
            column: 49
          },
          end: {
            line: 14,
            column: 65
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 6
          },
          end: {
            line: 17,
            column: 7
          }
        },
        loc: {
          start: {
            line: 17,
            column: 28
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 80
          },
          end: {
            line: 21,
            column: 81
          }
        },
        loc: {
          start: {
            line: 21,
            column: 95
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 23,
            column: 5
          },
          end: {
            line: 23,
            column: 6
          }
        },
        loc: {
          start: {
            line: 23,
            column: 20
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 23
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 26,
            column: 51
          },
          end: {
            line: 26,
            column: 52
          }
        },
        loc: {
          start: {
            line: 26,
            column: 63
          },
          end: {
            line: 42,
            column: 1
          }
        },
        line: 26
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 19
          }
        },
        loc: {
          start: {
            line: 27,
            column: 30
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 27
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 28,
            column: 48
          },
          end: {
            line: 28,
            column: 49
          }
        },
        loc: {
          start: {
            line: 28,
            column: 61
          },
          end: {
            line: 32,
            column: 9
          }
        },
        line: 28
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 35,
            column: 11
          },
          end: {
            line: 35,
            column: 12
          }
        },
        loc: {
          start: {
            line: 35,
            column: 26
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 35
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 51,
            column: 37
          },
          end: {
            line: 51,
            column: 38
          }
        },
        loc: {
          start: {
            line: 51,
            column: 55
          },
          end: {
            line: 133,
            column: 1
          }
        },
        line: 51
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 89,
            column: 55
          },
          end: {
            line: 89,
            column: 56
          }
        },
        loc: {
          start: {
            line: 89,
            column: 60
          },
          end: {
            line: 89,
            column: 64
          }
        },
        line: 89
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 90,
            column: 63
          },
          end: {
            line: 90,
            column: 64
          }
        },
        loc: {
          start: {
            line: 90,
            column: 68
          },
          end: {
            line: 90,
            column: 72
          }
        },
        line: 90
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 91,
            column: 64
          },
          end: {
            line: 91,
            column: 65
          }
        },
        loc: {
          start: {
            line: 91,
            column: 70
          },
          end: {
            line: 91,
            column: 85
          }
        },
        line: 91
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 92,
            column: 64
          },
          end: {
            line: 92,
            column: 65
          }
        },
        loc: {
          start: {
            line: 92,
            column: 70
          },
          end: {
            line: 92,
            column: 89
          }
        },
        line: 92
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 110,
            column: 73
          },
          end: {
            line: 110,
            column: 74
          }
        },
        loc: {
          start: {
            line: 110,
            column: 82
          },
          end: {
            line: 110,
            column: 103
          }
        },
        line: 110
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 111,
            column: 73
          },
          end: {
            line: 111,
            column: 74
          }
        },
        loc: {
          start: {
            line: 111,
            column: 82
          },
          end: {
            line: 111,
            column: 107
          }
        },
        line: 111
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 139,
            column: 32
          },
          end: {
            line: 139,
            column: 33
          }
        },
        loc: {
          start: {
            line: 139,
            column: 58
          },
          end: {
            line: 221,
            column: 1
          }
        },
        line: 139
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 228,
            column: 31
          },
          end: {
            line: 228,
            column: 32
          }
        },
        loc: {
          start: {
            line: 228,
            column: 65
          },
          end: {
            line: 256,
            column: 1
          }
        },
        line: 228
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 22
          },
          end: {
            line: 20,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 10,
            column: 23
          },
          end: {
            line: 10,
            column: 27
          }
        }, {
          start: {
            line: 10,
            column: 31
          },
          end: {
            line: 10,
            column: 51
          }
        }, {
          start: {
            line: 10,
            column: 57
          },
          end: {
            line: 20,
            column: 2
          }
        }],
        line: 10
      },
      "1": {
        loc: {
          start: {
            line: 10,
            column: 57
          },
          end: {
            line: 20,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 10,
            column: 74
          },
          end: {
            line: 17,
            column: 1
          }
        }, {
          start: {
            line: 17,
            column: 6
          },
          end: {
            line: 20,
            column: 1
          }
        }],
        line: 10
      },
      "2": {
        loc: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 11
      },
      "3": {
        loc: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "4": {
        loc: {
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 13,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 13,
            column: 13
          }
        }, {
          start: {
            line: 13,
            column: 18
          },
          end: {
            line: 13,
            column: 84
          }
        }],
        line: 13
      },
      "5": {
        loc: {
          start: {
            line: 13,
            column: 18
          },
          end: {
            line: 13,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 47
          }
        }, {
          start: {
            line: 13,
            column: 50
          },
          end: {
            line: 13,
            column: 84
          }
        }],
        line: 13
      },
      "6": {
        loc: {
          start: {
            line: 13,
            column: 50
          },
          end: {
            line: 13,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 50
          },
          end: {
            line: 13,
            column: 63
          }
        }, {
          start: {
            line: 13,
            column: 67
          },
          end: {
            line: 13,
            column: 84
          }
        }],
        line: 13
      },
      "7": {
        loc: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "8": {
        loc: {
          start: {
            line: 21,
            column: 25
          },
          end: {
            line: 25,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 26
          },
          end: {
            line: 21,
            column: 30
          }
        }, {
          start: {
            line: 21,
            column: 34
          },
          end: {
            line: 21,
            column: 57
          }
        }, {
          start: {
            line: 21,
            column: 63
          },
          end: {
            line: 25,
            column: 1
          }
        }],
        line: 21
      },
      "9": {
        loc: {
          start: {
            line: 21,
            column: 63
          },
          end: {
            line: 25,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 80
          },
          end: {
            line: 23,
            column: 1
          }
        }, {
          start: {
            line: 23,
            column: 5
          },
          end: {
            line: 25,
            column: 1
          }
        }],
        line: 21
      },
      "10": {
        loc: {
          start: {
            line: 26,
            column: 19
          },
          end: {
            line: 42,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 20
          },
          end: {
            line: 26,
            column: 24
          }
        }, {
          start: {
            line: 26,
            column: 28
          },
          end: {
            line: 26,
            column: 45
          }
        }, {
          start: {
            line: 26,
            column: 50
          },
          end: {
            line: 42,
            column: 4
          }
        }],
        line: 26
      },
      "11": {
        loc: {
          start: {
            line: 28,
            column: 18
          },
          end: {
            line: 32,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 18
          },
          end: {
            line: 28,
            column: 44
          }
        }, {
          start: {
            line: 28,
            column: 48
          },
          end: {
            line: 32,
            column: 9
          }
        }],
        line: 28
      },
      "12": {
        loc: {
          start: {
            line: 30,
            column: 29
          },
          end: {
            line: 30,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 29
          },
          end: {
            line: 30,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "13": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "14": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 15
          }
        }, {
          start: {
            line: 36,
            column: 19
          },
          end: {
            line: 36,
            column: 33
          }
        }],
        line: 36
      },
      "15": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "16": {
        loc: {
          start: {
            line: 38,
            column: 78
          },
          end: {
            line: 38,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 78
          },
          end: {
            line: 38,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "17": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        }, {
          start: {
            line: 67,
            column: 13
          },
          end: {
            line: 73,
            column: 9
          }
        }],
        line: 63
      },
      "18": {
        loc: {
          start: {
            line: 67,
            column: 13
          },
          end: {
            line: 73,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 13
          },
          end: {
            line: 73,
            column: 9
          }
        }, {
          start: {
            line: 70,
            column: 13
          },
          end: {
            line: 73,
            column: 9
          }
        }],
        line: 67
      },
      "19": {
        loc: {
          start: {
            line: 67,
            column: 17
          },
          end: {
            line: 67,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 17
          },
          end: {
            line: 67,
            column: 25
          }
        }, {
          start: {
            line: 67,
            column: 29
          },
          end: {
            line: 67,
            column: 52
          }
        }],
        line: 67
      },
      "20": {
        loc: {
          start: {
            line: 72,
            column: 54
          },
          end: {
            line: 72,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 54
          },
          end: {
            line: 72,
            column: 64
          }
        }, {
          start: {
            line: 72,
            column: 68
          },
          end: {
            line: 72,
            column: 86
          }
        }],
        line: 72
      },
      "21": {
        loc: {
          start: {
            line: 82,
            column: 54
          },
          end: {
            line: 82,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 54
          },
          end: {
            line: 82,
            column: 68
          }
        }, {
          start: {
            line: 82,
            column: 72
          },
          end: {
            line: 82,
            column: 90
          }
        }],
        line: 82
      },
      "22": {
        loc: {
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 120,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 120,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "23": {
        loc: {
          start: {
            line: 84,
            column: 16
          },
          end: {
            line: 84,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 16
          },
          end: {
            line: 84,
            column: 23
          }
        }, {
          start: {
            line: 84,
            column: 27
          },
          end: {
            line: 84,
            column: 38
          }
        }],
        line: 84
      },
      "24": {
        loc: {
          start: {
            line: 87,
            column: 16
          },
          end: {
            line: 118,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 16
          },
          end: {
            line: 118,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "25": {
        loc: {
          start: {
            line: 87,
            column: 20
          },
          end: {
            line: 87,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 20
          },
          end: {
            line: 87,
            column: 38
          }
        }, {
          start: {
            line: 87,
            column: 42
          },
          end: {
            line: 87,
            column: 64
          }
        }],
        line: 87
      },
      "26": {
        loc: {
          start: {
            line: 93,
            column: 20
          },
          end: {
            line: 95,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 20
          },
          end: {
            line: 95,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "27": {
        loc: {
          start: {
            line: 96,
            column: 20
          },
          end: {
            line: 98,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 20
          },
          end: {
            line: 98,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "28": {
        loc: {
          start: {
            line: 99,
            column: 20
          },
          end: {
            line: 101,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 20
          },
          end: {
            line: 101,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "29": {
        loc: {
          start: {
            line: 99,
            column: 24
          },
          end: {
            line: 99,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 24
          },
          end: {
            line: 99,
            column: 49
          }
        }, {
          start: {
            line: 99,
            column: 53
          },
          end: {
            line: 99,
            column: 82
          }
        }],
        line: 99
      },
      "30": {
        loc: {
          start: {
            line: 112,
            column: 20
          },
          end: {
            line: 114,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 20
          },
          end: {
            line: 114,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "31": {
        loc: {
          start: {
            line: 115,
            column: 20
          },
          end: {
            line: 117,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 20
          },
          end: {
            line: 117,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "32": {
        loc: {
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        }, {
          start: {
            line: 155,
            column: 13
          },
          end: {
            line: 169,
            column: 9
          }
        }],
        line: 151
      },
      "33": {
        loc: {
          start: {
            line: 155,
            column: 13
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 13
          },
          end: {
            line: 169,
            column: 9
          }
        }, {
          start: {
            line: 158,
            column: 13
          },
          end: {
            line: 169,
            column: 9
          }
        }],
        line: 155
      },
      "34": {
        loc: {
          start: {
            line: 155,
            column: 17
          },
          end: {
            line: 155,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 155,
            column: 17
          },
          end: {
            line: 155,
            column: 25
          }
        }, {
          start: {
            line: 155,
            column: 29
          },
          end: {
            line: 155,
            column: 52
          }
        }],
        line: 155
      },
      "35": {
        loc: {
          start: {
            line: 160,
            column: 49
          },
          end: {
            line: 160,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 160,
            column: 49
          },
          end: {
            line: 160,
            column: 59
          }
        }, {
          start: {
            line: 160,
            column: 63
          },
          end: {
            line: 160,
            column: 76
          }
        }],
        line: 160
      },
      "36": {
        loc: {
          start: {
            line: 162,
            column: 12
          },
          end: {
            line: 168,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 12
          },
          end: {
            line: 168,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "37": {
        loc: {
          start: {
            line: 178,
            column: 49
          },
          end: {
            line: 178,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 178,
            column: 49
          },
          end: {
            line: 178,
            column: 63
          }
        }, {
          start: {
            line: 178,
            column: 67
          },
          end: {
            line: 178,
            column: 80
          }
        }],
        line: 178
      },
      "38": {
        loc: {
          start: {
            line: 180,
            column: 12
          },
          end: {
            line: 208,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 12
          },
          end: {
            line: 208,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      },
      "39": {
        loc: {
          start: {
            line: 180,
            column: 16
          },
          end: {
            line: 180,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 180,
            column: 16
          },
          end: {
            line: 180,
            column: 23
          }
        }, {
          start: {
            line: 180,
            column: 27
          },
          end: {
            line: 180,
            column: 38
          }
        }],
        line: 180
      },
      "40": {
        loc: {
          start: {
            line: 183,
            column: 16
          },
          end: {
            line: 206,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 16
          },
          end: {
            line: 206,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "41": {
        loc: {
          start: {
            line: 183,
            column: 20
          },
          end: {
            line: 183,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 20
          },
          end: {
            line: 183,
            column: 38
          }
        }, {
          start: {
            line: 183,
            column: 42
          },
          end: {
            line: 183,
            column: 64
          }
        }],
        line: 183
      },
      "42": {
        loc: {
          start: {
            line: 194,
            column: 20
          },
          end: {
            line: 199,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 20
          },
          end: {
            line: 199,
            column: 21
          }
        }, {
          start: {
            line: 197,
            column: 25
          },
          end: {
            line: 199,
            column: 21
          }
        }],
        line: 194
      },
      "43": {
        loc: {
          start: {
            line: 200,
            column: 20
          },
          end: {
            line: 205,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 20
          },
          end: {
            line: 205,
            column: 21
          }
        }, {
          start: {
            line: 203,
            column: 25
          },
          end: {
            line: 205,
            column: 21
          }
        }],
        line: 200
      },
      "44": {
        loc: {
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 249,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 249,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "45": {
        loc: {
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 244,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 244,
            column: 13
          }
        }, {
          start: {
            line: 242,
            column: 17
          },
          end: {
            line: 244,
            column: 13
          }
        }],
        line: 238
      },
      "46": {
        loc: {
          start: {
            line: 238,
            column: 16
          },
          end: {
            line: 238,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 238,
            column: 16
          },
          end: {
            line: 238,
            column: 20
          }
        }, {
          start: {
            line: 238,
            column: 24
          },
          end: {
            line: 238,
            column: 43
          }
        }, {
          start: {
            line: 238,
            column: 47
          },
          end: {
            line: 238,
            column: 62
          }
        }],
        line: 238
      },
      "47": {
        loc: {
          start: {
            line: 251,
            column: 4
          },
          end: {
            line: 253,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 4
          },
          end: {
            line: 253,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0, 0],
      "47": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kevin/card-show-finder/src/utils/testChatIntegration.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/kevin/card-show-finder/src/utils/testChatIntegration.ts"],
      sourcesContent: ["/**\n * Test Utility for Chat Integration\n * \n * This file provides functions to test the integration between React Query hooks\n * and PostgreSQL RPC functions for the chat functionality.\n * \n * FOR DEVELOPMENT/TESTING ONLY - Not for production use\n */\n\nimport { supabase } from '../supabase';\nimport * as messagingService from '../services/messagingService';\n\n/**\n * Test the get_user_conversations RPC function and compare with service method\n * @param userId The user ID to fetch conversations for\n */\nexport const testConversationsIntegration = async (userId: string) => {\n  console.group('\uD83E\uDDEA TESTING CONVERSATIONS INTEGRATION');\n  console.time('Total test time');\n  \n  try {\n    // Test RPC function\n    console.group('1. Testing get_user_conversations RPC function');\n    console.time('RPC execution time');\n    \n    const { data: rpcData, error: rpcError } = await supabase\n      .rpc('get_user_conversations', { \n        input_user_id: userId \n      });\n      \n    console.timeEnd('RPC execution time');\n    \n    if (rpcError) {\n      console.error('\u274C RPC ERROR:', rpcError.message);\n      console.error('Details:', rpcError);\n    } else if (!rpcData || !Array.isArray(rpcData)) {\n      console.error('\u274C RPC returned invalid data format:', rpcData);\n    } else {\n      console.log('\u2705 RPC SUCCESS - Returned', rpcData.length, 'conversations');\n      console.log('First conversation sample:', rpcData[0] || 'No conversations');\n    }\n    console.groupEnd();\n    \n    // Test service method for comparison\n    console.group('2. Testing messagingService.getConversations');\n    console.time('Service execution time');\n    \n    try {\n      const serviceData = await messagingService.getConversations(userId);\n      console.timeEnd('Service execution time');\n      console.log('\u2705 SERVICE SUCCESS - Returned', serviceData.length, 'conversations');\n      console.log('First conversation sample:', serviceData[0] || 'No conversations');\n      \n      // Compare results\n      if (rpcData && serviceData) {\n        console.group('3. Comparing results');\n        console.log('RPC count:', rpcData.length, '| Service count:', serviceData.length);\n        \n        if (rpcData.length > 0 && serviceData.length > 0) {\n          // Check if IDs match\n          const rpcIds = new Set(rpcData.map(c => c.id));\n          const serviceIds = new Set(serviceData.map(c => c.id));\n          \n          const missingInRpc = [...serviceIds].filter(id => !rpcIds.has(id));\n          const missingInService = [...rpcIds].filter(id => !serviceIds.has(id));\n          \n          if (missingInRpc.length > 0) {\n            console.warn('\u26A0\uFE0F IDs in service but missing in RPC:', missingInRpc);\n          }\n          \n          if (missingInService.length > 0) {\n            console.warn('\u26A0\uFE0F IDs in RPC but missing in service:', missingInService);\n          }\n          \n          if (missingInRpc.length === 0 && missingInService.length === 0) {\n            console.log('\u2705 ID sets match between RPC and service');\n          }\n          \n          // Compare structure of first item\n          const rpcSample = rpcData[0];\n          const serviceSample = serviceData[0];\n          \n          console.log('RPC first item keys:', Object.keys(rpcSample));\n          console.log('Service first item keys:', Object.keys(serviceSample));\n          \n          // Check for missing fields\n          const rpcFields = new Set(Object.keys(rpcSample));\n          const serviceFields = new Set(Object.keys(serviceSample));\n          \n          const missingInRpcFields = [...serviceFields].filter(field => !rpcFields.has(field));\n          const missingInServiceFields = [...rpcFields].filter(field => !serviceFields.has(field));\n          \n          if (missingInRpcFields.length > 0) {\n            console.warn('\u26A0\uFE0F Fields in service but missing in RPC:', missingInRpcFields);\n          }\n          \n          if (missingInServiceFields.length > 0) {\n            console.warn('\u26A0\uFE0F Fields in RPC but missing in service:', missingInServiceFields);\n          }\n        }\n        console.groupEnd();\n      }\n    } catch (serviceError) {\n      console.timeEnd('Service execution time');\n      console.error('\u274C SERVICE ERROR:', serviceError);\n    }\n    console.groupEnd();\n    \n  } catch (error) {\n    console.error('\u274C TEST FAILED:', error);\n  }\n  \n  console.timeEnd('Total test time');\n  console.groupEnd();\n};\n\n/**\n * Test the get_conversation_messages RPC function and compare with service method\n * @param conversationId The conversation ID to fetch messages for\n */\nexport const testMessagesIntegration = async (conversationId: string) => {\n  console.group('\uD83E\uDDEA TESTING MESSAGES INTEGRATION');\n  console.time('Total test time');\n  \n  try {\n    // Test RPC function\n    console.group('1. Testing get_conversation_messages RPC function');\n    console.time('RPC execution time');\n    \n    const { data: rpcData, error: rpcError } = await supabase\n      .rpc('get_conversation_messages', { \n        input_convo_id: conversationId \n      });\n      \n    console.timeEnd('RPC execution time');\n    \n    if (rpcError) {\n      console.error('\u274C RPC ERROR:', rpcError.message);\n      console.error('Details:', rpcError);\n    } else if (!rpcData || !Array.isArray(rpcData)) {\n      console.error('\u274C RPC returned invalid data format:', rpcData);\n    } else {\n      console.log('\u2705 RPC SUCCESS - Returned', rpcData.length, 'messages');\n      console.log('First message sample:', rpcData[0] || 'No messages');\n      \n      // Verify field mapping\n      if (rpcData.length > 0) {\n        const firstMessage = rpcData[0];\n        console.log('Field mapping check:');\n        console.log('- message_id:', firstMessage.message_id);\n        console.log('- conversation_id:', firstMessage.conversation_id);\n        console.log('- sender_profile:', firstMessage.sender_profile);\n      }\n    }\n    console.groupEnd();\n    \n    // Test service method for comparison\n    console.group('2. Testing messagingService.getMessages');\n    console.time('Service execution time');\n    \n    try {\n      const serviceData = await messagingService.getMessages(conversationId);\n      console.timeEnd('Service execution time');\n      console.log('\u2705 SERVICE SUCCESS - Returned', serviceData.length, 'messages');\n      console.log('First message sample:', serviceData[0] || 'No messages');\n      \n      // Compare results\n      if (rpcData && serviceData) {\n        console.group('3. Comparing results');\n        console.log('RPC count:', rpcData.length, '| Service count:', serviceData.length);\n        \n        if (rpcData.length > 0 && serviceData.length > 0) {\n          // Check structure differences\n          const rpcSample = rpcData[0];\n          const serviceSample = serviceData[0];\n          \n          console.log('RPC first item fields:', Object.keys(rpcSample));\n          console.log('Service first item fields:', Object.keys(serviceSample));\n          \n          // Check field mapping needed\n          console.log('Field mapping needed:');\n          console.log('- RPC message_id \u2192 Service id');\n          console.log('- RPC conversation_id \u2192 Service conversation_id');\n          \n          // Verify content matches (after mapping)\n          if (rpcSample.message_id !== serviceSample.id) {\n            console.warn('\u26A0\uFE0F ID mismatch between RPC and service');\n          } else {\n            console.log('\u2705 IDs match after mapping');\n          }\n          \n          if (rpcSample.message_text !== serviceSample.message_text) {\n            console.warn('\u26A0\uFE0F Content mismatch between RPC and service');\n          } else {\n            console.log('\u2705 Message content matches');\n          }\n        }\n        console.groupEnd();\n      }\n    } catch (serviceError) {\n      console.timeEnd('Service execution time');\n      console.error('\u274C SERVICE ERROR:', serviceError);\n    }\n    console.groupEnd();\n    \n  } catch (error) {\n    console.error('\u274C TEST FAILED:', error);\n  }\n  \n  console.timeEnd('Total test time');\n  console.groupEnd();\n};\n\n/**\n * Run all integration tests\n * @param userId The user ID to test with\n * @param conversationId Optional conversation ID to test with (if not provided, will use the first conversation found)\n */\nexport const runAllIntegrationTests = async (userId: string, conversationId?: string) => {\n  console.group('\uD83E\uDDEA\uD83E\uDDEA RUNNING ALL CHAT INTEGRATION TESTS \uD83E\uDDEA\uD83E\uDDEA');\n  console.log('Testing with user ID:', userId);\n  \n  // First test conversations\n  await testConversationsIntegration(userId);\n  \n  // If conversationId not provided, try to get one from the conversations test\n  if (!conversationId) {\n    try {\n      const { data } = await supabase\n        .rpc('get_user_conversations', { input_user_id: userId });\n      \n      if (data && Array.isArray(data) && data.length > 0) {\n        conversationId = data[0].id;\n        console.log('Using first conversation ID for messages test:', conversationId);\n      } else {\n        console.warn('No conversations found, skipping messages test');\n      }\n    } catch (error) {\n      console.error('Failed to get conversation ID:', error);\n    }\n  }\n  \n  // Then test messages if we have a conversation ID\n  if (conversationId) {\n    await testMessagesIntegration(conversationId);\n  }\n  \n  console.groupEnd();\n  console.log('\uD83C\uDFC1 All tests completed');\n};\n\n/**\n * How to use this test utility:\n * \n * 1. Import this file in a component or development screen\n * 2. Call one of the test functions with appropriate parameters\n * 3. Check the console for results\n * \n * Example:\n * ```\n * import { runAllIntegrationTests } from '../utils/testChatIntegration';\n * \n * // In a component or effect\n * runAllIntegrationTests('your-user-id-here');\n * ```\n */\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a78b52d1bb14e5f324eae808103b9a593accd655"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_jmqb9atm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_jmqb9atm();
var __createBinding =
/* istanbul ignore next */
(cov_jmqb9atm().s[0]++,
/* istanbul ignore next */
(cov_jmqb9atm().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_jmqb9atm().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_jmqb9atm().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_jmqb9atm().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_jmqb9atm().f[0]++;
  cov_jmqb9atm().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_jmqb9atm().b[2][0]++;
    cov_jmqb9atm().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_jmqb9atm().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_jmqb9atm().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_jmqb9atm().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_jmqb9atm().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_jmqb9atm().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_jmqb9atm().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_jmqb9atm().b[5][1]++,
  /* istanbul ignore next */
  (cov_jmqb9atm().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_jmqb9atm().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_jmqb9atm().b[3][0]++;
    cov_jmqb9atm().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_jmqb9atm().f[1]++;
        cov_jmqb9atm().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_jmqb9atm().b[3][1]++;
  }
  cov_jmqb9atm().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_jmqb9atm().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_jmqb9atm().f[2]++;
  cov_jmqb9atm().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_jmqb9atm().b[7][0]++;
    cov_jmqb9atm().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_jmqb9atm().b[7][1]++;
  }
  cov_jmqb9atm().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_jmqb9atm().s[11]++,
/* istanbul ignore next */
(cov_jmqb9atm().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_jmqb9atm().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_jmqb9atm().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_jmqb9atm().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_jmqb9atm().f[3]++;
  cov_jmqb9atm().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_jmqb9atm().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_jmqb9atm().f[4]++;
  cov_jmqb9atm().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_jmqb9atm().s[14]++,
/* istanbul ignore next */
(cov_jmqb9atm().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_jmqb9atm().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_jmqb9atm().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_jmqb9atm().f[5]++;
  cov_jmqb9atm().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_jmqb9atm().f[6]++;
    cov_jmqb9atm().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_jmqb9atm().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_jmqb9atm().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_jmqb9atm().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_jmqb9atm().s[17]++, []);
      /* istanbul ignore next */
      cov_jmqb9atm().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_jmqb9atm().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_jmqb9atm().b[12][0]++;
          cov_jmqb9atm().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_jmqb9atm().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_jmqb9atm().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_jmqb9atm().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_jmqb9atm().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_jmqb9atm().f[8]++;
    cov_jmqb9atm().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_jmqb9atm().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_jmqb9atm().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_jmqb9atm().b[13][0]++;
      cov_jmqb9atm().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_jmqb9atm().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_jmqb9atm().s[26]++, {});
    /* istanbul ignore next */
    cov_jmqb9atm().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_jmqb9atm().b[15][0]++;
      cov_jmqb9atm().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_jmqb9atm().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_jmqb9atm().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_jmqb9atm().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_jmqb9atm().b[16][0]++;
          cov_jmqb9atm().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_jmqb9atm().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_jmqb9atm().b[15][1]++;
    }
    cov_jmqb9atm().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_jmqb9atm().s[34]++;
    return result;
  };
}()));
/* istanbul ignore next */
cov_jmqb9atm().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_jmqb9atm().s[36]++;
exports.runAllIntegrationTests = exports.testMessagesIntegration = exports.testConversationsIntegration = void 0;
const supabase_1 =
/* istanbul ignore next */
(cov_jmqb9atm().s[37]++, require("../supabase"));
const messagingService =
/* istanbul ignore next */
(cov_jmqb9atm().s[38]++, __importStar(require("../services/messagingService")));
/**
 * Test the get_user_conversations RPC function and compare with service method
 * @param userId The user ID to fetch conversations for
 */
/* istanbul ignore next */
cov_jmqb9atm().s[39]++;
const testConversationsIntegration = async userId => {
  /* istanbul ignore next */
  cov_jmqb9atm().f[9]++;
  cov_jmqb9atm().s[40]++;
  console.group('🧪 TESTING CONVERSATIONS INTEGRATION');
  /* istanbul ignore next */
  cov_jmqb9atm().s[41]++;
  console.time('Total test time');
  /* istanbul ignore next */
  cov_jmqb9atm().s[42]++;
  try {
    /* istanbul ignore next */
    cov_jmqb9atm().s[43]++;
    // Test RPC function
    console.group('1. Testing get_user_conversations RPC function');
    /* istanbul ignore next */
    cov_jmqb9atm().s[44]++;
    console.time('RPC execution time');
    const {
      data: rpcData,
      error: rpcError
    } =
    /* istanbul ignore next */
    (cov_jmqb9atm().s[45]++, await supabase_1.supabase.rpc('get_user_conversations', {
      input_user_id: userId
    }));
    /* istanbul ignore next */
    cov_jmqb9atm().s[46]++;
    console.timeEnd('RPC execution time');
    /* istanbul ignore next */
    cov_jmqb9atm().s[47]++;
    if (rpcError) {
      /* istanbul ignore next */
      cov_jmqb9atm().b[17][0]++;
      cov_jmqb9atm().s[48]++;
      console.error('❌ RPC ERROR:', rpcError.message);
      /* istanbul ignore next */
      cov_jmqb9atm().s[49]++;
      console.error('Details:', rpcError);
    } else {
      /* istanbul ignore next */
      cov_jmqb9atm().b[17][1]++;
      cov_jmqb9atm().s[50]++;
      if (
      /* istanbul ignore next */
      (cov_jmqb9atm().b[19][0]++, !rpcData) ||
      /* istanbul ignore next */
      (cov_jmqb9atm().b[19][1]++, !Array.isArray(rpcData))) {
        /* istanbul ignore next */
        cov_jmqb9atm().b[18][0]++;
        cov_jmqb9atm().s[51]++;
        console.error('❌ RPC returned invalid data format:', rpcData);
      } else {
        /* istanbul ignore next */
        cov_jmqb9atm().b[18][1]++;
        cov_jmqb9atm().s[52]++;
        console.log('✅ RPC SUCCESS - Returned', rpcData.length, 'conversations');
        /* istanbul ignore next */
        cov_jmqb9atm().s[53]++;
        console.log('First conversation sample:',
        /* istanbul ignore next */
        (cov_jmqb9atm().b[20][0]++, rpcData[0]) ||
        /* istanbul ignore next */
        (cov_jmqb9atm().b[20][1]++, 'No conversations'));
      }
    }
    /* istanbul ignore next */
    cov_jmqb9atm().s[54]++;
    console.groupEnd();
    // Test service method for comparison
    /* istanbul ignore next */
    cov_jmqb9atm().s[55]++;
    console.group('2. Testing messagingService.getConversations');
    /* istanbul ignore next */
    cov_jmqb9atm().s[56]++;
    console.time('Service execution time');
    /* istanbul ignore next */
    cov_jmqb9atm().s[57]++;
    try {
      const serviceData =
      /* istanbul ignore next */
      (cov_jmqb9atm().s[58]++, await messagingService.getConversations(userId));
      /* istanbul ignore next */
      cov_jmqb9atm().s[59]++;
      console.timeEnd('Service execution time');
      /* istanbul ignore next */
      cov_jmqb9atm().s[60]++;
      console.log('✅ SERVICE SUCCESS - Returned', serviceData.length, 'conversations');
      /* istanbul ignore next */
      cov_jmqb9atm().s[61]++;
      console.log('First conversation sample:',
      /* istanbul ignore next */
      (cov_jmqb9atm().b[21][0]++, serviceData[0]) ||
      /* istanbul ignore next */
      (cov_jmqb9atm().b[21][1]++, 'No conversations'));
      // Compare results
      /* istanbul ignore next */
      cov_jmqb9atm().s[62]++;
      if (
      /* istanbul ignore next */
      (cov_jmqb9atm().b[23][0]++, rpcData) &&
      /* istanbul ignore next */
      (cov_jmqb9atm().b[23][1]++, serviceData)) {
        /* istanbul ignore next */
        cov_jmqb9atm().b[22][0]++;
        cov_jmqb9atm().s[63]++;
        console.group('3. Comparing results');
        /* istanbul ignore next */
        cov_jmqb9atm().s[64]++;
        console.log('RPC count:', rpcData.length, '| Service count:', serviceData.length);
        /* istanbul ignore next */
        cov_jmqb9atm().s[65]++;
        if (
        /* istanbul ignore next */
        (cov_jmqb9atm().b[25][0]++, rpcData.length > 0) &&
        /* istanbul ignore next */
        (cov_jmqb9atm().b[25][1]++, serviceData.length > 0)) {
          /* istanbul ignore next */
          cov_jmqb9atm().b[24][0]++;
          // Check if IDs match
          const rpcIds =
          /* istanbul ignore next */
          (cov_jmqb9atm().s[66]++, new Set(rpcData.map(c => {
            /* istanbul ignore next */
            cov_jmqb9atm().f[10]++;
            cov_jmqb9atm().s[67]++;
            return c.id;
          })));
          const serviceIds =
          /* istanbul ignore next */
          (cov_jmqb9atm().s[68]++, new Set(serviceData.map(c => {
            /* istanbul ignore next */
            cov_jmqb9atm().f[11]++;
            cov_jmqb9atm().s[69]++;
            return c.id;
          })));
          const missingInRpc =
          /* istanbul ignore next */
          (cov_jmqb9atm().s[70]++, [...serviceIds].filter(id => {
            /* istanbul ignore next */
            cov_jmqb9atm().f[12]++;
            cov_jmqb9atm().s[71]++;
            return !rpcIds.has(id);
          }));
          const missingInService =
          /* istanbul ignore next */
          (cov_jmqb9atm().s[72]++, [...rpcIds].filter(id => {
            /* istanbul ignore next */
            cov_jmqb9atm().f[13]++;
            cov_jmqb9atm().s[73]++;
            return !serviceIds.has(id);
          }));
          /* istanbul ignore next */
          cov_jmqb9atm().s[74]++;
          if (missingInRpc.length > 0) {
            /* istanbul ignore next */
            cov_jmqb9atm().b[26][0]++;
            cov_jmqb9atm().s[75]++;
            console.warn('⚠️ IDs in service but missing in RPC:', missingInRpc);
          } else
          /* istanbul ignore next */
          {
            cov_jmqb9atm().b[26][1]++;
          }
          cov_jmqb9atm().s[76]++;
          if (missingInService.length > 0) {
            /* istanbul ignore next */
            cov_jmqb9atm().b[27][0]++;
            cov_jmqb9atm().s[77]++;
            console.warn('⚠️ IDs in RPC but missing in service:', missingInService);
          } else
          /* istanbul ignore next */
          {
            cov_jmqb9atm().b[27][1]++;
          }
          cov_jmqb9atm().s[78]++;
          if (
          /* istanbul ignore next */
          (cov_jmqb9atm().b[29][0]++, missingInRpc.length === 0) &&
          /* istanbul ignore next */
          (cov_jmqb9atm().b[29][1]++, missingInService.length === 0)) {
            /* istanbul ignore next */
            cov_jmqb9atm().b[28][0]++;
            cov_jmqb9atm().s[79]++;
            console.log('✅ ID sets match between RPC and service');
          } else
          /* istanbul ignore next */
          {
            cov_jmqb9atm().b[28][1]++;
          }
          // Compare structure of first item
          const rpcSample =
          /* istanbul ignore next */
          (cov_jmqb9atm().s[80]++, rpcData[0]);
          const serviceSample =
          /* istanbul ignore next */
          (cov_jmqb9atm().s[81]++, serviceData[0]);
          /* istanbul ignore next */
          cov_jmqb9atm().s[82]++;
          console.log('RPC first item keys:', Object.keys(rpcSample));
          /* istanbul ignore next */
          cov_jmqb9atm().s[83]++;
          console.log('Service first item keys:', Object.keys(serviceSample));
          // Check for missing fields
          const rpcFields =
          /* istanbul ignore next */
          (cov_jmqb9atm().s[84]++, new Set(Object.keys(rpcSample)));
          const serviceFields =
          /* istanbul ignore next */
          (cov_jmqb9atm().s[85]++, new Set(Object.keys(serviceSample)));
          const missingInRpcFields =
          /* istanbul ignore next */
          (cov_jmqb9atm().s[86]++, [...serviceFields].filter(field => {
            /* istanbul ignore next */
            cov_jmqb9atm().f[14]++;
            cov_jmqb9atm().s[87]++;
            return !rpcFields.has(field);
          }));
          const missingInServiceFields =
          /* istanbul ignore next */
          (cov_jmqb9atm().s[88]++, [...rpcFields].filter(field => {
            /* istanbul ignore next */
            cov_jmqb9atm().f[15]++;
            cov_jmqb9atm().s[89]++;
            return !serviceFields.has(field);
          }));
          /* istanbul ignore next */
          cov_jmqb9atm().s[90]++;
          if (missingInRpcFields.length > 0) {
            /* istanbul ignore next */
            cov_jmqb9atm().b[30][0]++;
            cov_jmqb9atm().s[91]++;
            console.warn('⚠️ Fields in service but missing in RPC:', missingInRpcFields);
          } else
          /* istanbul ignore next */
          {
            cov_jmqb9atm().b[30][1]++;
          }
          cov_jmqb9atm().s[92]++;
          if (missingInServiceFields.length > 0) {
            /* istanbul ignore next */
            cov_jmqb9atm().b[31][0]++;
            cov_jmqb9atm().s[93]++;
            console.warn('⚠️ Fields in RPC but missing in service:', missingInServiceFields);
          } else
          /* istanbul ignore next */
          {
            cov_jmqb9atm().b[31][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_jmqb9atm().b[24][1]++;
        }
        cov_jmqb9atm().s[94]++;
        console.groupEnd();
      } else
      /* istanbul ignore next */
      {
        cov_jmqb9atm().b[22][1]++;
      }
    } catch (serviceError) {
      /* istanbul ignore next */
      cov_jmqb9atm().s[95]++;
      console.timeEnd('Service execution time');
      /* istanbul ignore next */
      cov_jmqb9atm().s[96]++;
      console.error('❌ SERVICE ERROR:', serviceError);
    }
    /* istanbul ignore next */
    cov_jmqb9atm().s[97]++;
    console.groupEnd();
  } catch (error) {
    /* istanbul ignore next */
    cov_jmqb9atm().s[98]++;
    console.error('❌ TEST FAILED:', error);
  }
  /* istanbul ignore next */
  cov_jmqb9atm().s[99]++;
  console.timeEnd('Total test time');
  /* istanbul ignore next */
  cov_jmqb9atm().s[100]++;
  console.groupEnd();
};
/* istanbul ignore next */
cov_jmqb9atm().s[101]++;
exports.testConversationsIntegration = testConversationsIntegration;
/**
 * Test the get_conversation_messages RPC function and compare with service method
 * @param conversationId The conversation ID to fetch messages for
 */
/* istanbul ignore next */
cov_jmqb9atm().s[102]++;
const testMessagesIntegration = async conversationId => {
  /* istanbul ignore next */
  cov_jmqb9atm().f[16]++;
  cov_jmqb9atm().s[103]++;
  console.group('🧪 TESTING MESSAGES INTEGRATION');
  /* istanbul ignore next */
  cov_jmqb9atm().s[104]++;
  console.time('Total test time');
  /* istanbul ignore next */
  cov_jmqb9atm().s[105]++;
  try {
    /* istanbul ignore next */
    cov_jmqb9atm().s[106]++;
    // Test RPC function
    console.group('1. Testing get_conversation_messages RPC function');
    /* istanbul ignore next */
    cov_jmqb9atm().s[107]++;
    console.time('RPC execution time');
    const {
      data: rpcData,
      error: rpcError
    } =
    /* istanbul ignore next */
    (cov_jmqb9atm().s[108]++, await supabase_1.supabase.rpc('get_conversation_messages', {
      input_convo_id: conversationId
    }));
    /* istanbul ignore next */
    cov_jmqb9atm().s[109]++;
    console.timeEnd('RPC execution time');
    /* istanbul ignore next */
    cov_jmqb9atm().s[110]++;
    if (rpcError) {
      /* istanbul ignore next */
      cov_jmqb9atm().b[32][0]++;
      cov_jmqb9atm().s[111]++;
      console.error('❌ RPC ERROR:', rpcError.message);
      /* istanbul ignore next */
      cov_jmqb9atm().s[112]++;
      console.error('Details:', rpcError);
    } else {
      /* istanbul ignore next */
      cov_jmqb9atm().b[32][1]++;
      cov_jmqb9atm().s[113]++;
      if (
      /* istanbul ignore next */
      (cov_jmqb9atm().b[34][0]++, !rpcData) ||
      /* istanbul ignore next */
      (cov_jmqb9atm().b[34][1]++, !Array.isArray(rpcData))) {
        /* istanbul ignore next */
        cov_jmqb9atm().b[33][0]++;
        cov_jmqb9atm().s[114]++;
        console.error('❌ RPC returned invalid data format:', rpcData);
      } else {
        /* istanbul ignore next */
        cov_jmqb9atm().b[33][1]++;
        cov_jmqb9atm().s[115]++;
        console.log('✅ RPC SUCCESS - Returned', rpcData.length, 'messages');
        /* istanbul ignore next */
        cov_jmqb9atm().s[116]++;
        console.log('First message sample:',
        /* istanbul ignore next */
        (cov_jmqb9atm().b[35][0]++, rpcData[0]) ||
        /* istanbul ignore next */
        (cov_jmqb9atm().b[35][1]++, 'No messages'));
        // Verify field mapping
        /* istanbul ignore next */
        cov_jmqb9atm().s[117]++;
        if (rpcData.length > 0) {
          /* istanbul ignore next */
          cov_jmqb9atm().b[36][0]++;
          const firstMessage =
          /* istanbul ignore next */
          (cov_jmqb9atm().s[118]++, rpcData[0]);
          /* istanbul ignore next */
          cov_jmqb9atm().s[119]++;
          console.log('Field mapping check:');
          /* istanbul ignore next */
          cov_jmqb9atm().s[120]++;
          console.log('- message_id:', firstMessage.message_id);
          /* istanbul ignore next */
          cov_jmqb9atm().s[121]++;
          console.log('- conversation_id:', firstMessage.conversation_id);
          /* istanbul ignore next */
          cov_jmqb9atm().s[122]++;
          console.log('- sender_profile:', firstMessage.sender_profile);
        } else
        /* istanbul ignore next */
        {
          cov_jmqb9atm().b[36][1]++;
        }
      }
    }
    /* istanbul ignore next */
    cov_jmqb9atm().s[123]++;
    console.groupEnd();
    // Test service method for comparison
    /* istanbul ignore next */
    cov_jmqb9atm().s[124]++;
    console.group('2. Testing messagingService.getMessages');
    /* istanbul ignore next */
    cov_jmqb9atm().s[125]++;
    console.time('Service execution time');
    /* istanbul ignore next */
    cov_jmqb9atm().s[126]++;
    try {
      const serviceData =
      /* istanbul ignore next */
      (cov_jmqb9atm().s[127]++, await messagingService.getMessages(conversationId));
      /* istanbul ignore next */
      cov_jmqb9atm().s[128]++;
      console.timeEnd('Service execution time');
      /* istanbul ignore next */
      cov_jmqb9atm().s[129]++;
      console.log('✅ SERVICE SUCCESS - Returned', serviceData.length, 'messages');
      /* istanbul ignore next */
      cov_jmqb9atm().s[130]++;
      console.log('First message sample:',
      /* istanbul ignore next */
      (cov_jmqb9atm().b[37][0]++, serviceData[0]) ||
      /* istanbul ignore next */
      (cov_jmqb9atm().b[37][1]++, 'No messages'));
      // Compare results
      /* istanbul ignore next */
      cov_jmqb9atm().s[131]++;
      if (
      /* istanbul ignore next */
      (cov_jmqb9atm().b[39][0]++, rpcData) &&
      /* istanbul ignore next */
      (cov_jmqb9atm().b[39][1]++, serviceData)) {
        /* istanbul ignore next */
        cov_jmqb9atm().b[38][0]++;
        cov_jmqb9atm().s[132]++;
        console.group('3. Comparing results');
        /* istanbul ignore next */
        cov_jmqb9atm().s[133]++;
        console.log('RPC count:', rpcData.length, '| Service count:', serviceData.length);
        /* istanbul ignore next */
        cov_jmqb9atm().s[134]++;
        if (
        /* istanbul ignore next */
        (cov_jmqb9atm().b[41][0]++, rpcData.length > 0) &&
        /* istanbul ignore next */
        (cov_jmqb9atm().b[41][1]++, serviceData.length > 0)) {
          /* istanbul ignore next */
          cov_jmqb9atm().b[40][0]++;
          // Check structure differences
          const rpcSample =
          /* istanbul ignore next */
          (cov_jmqb9atm().s[135]++, rpcData[0]);
          const serviceSample =
          /* istanbul ignore next */
          (cov_jmqb9atm().s[136]++, serviceData[0]);
          /* istanbul ignore next */
          cov_jmqb9atm().s[137]++;
          console.log('RPC first item fields:', Object.keys(rpcSample));
          /* istanbul ignore next */
          cov_jmqb9atm().s[138]++;
          console.log('Service first item fields:', Object.keys(serviceSample));
          // Check field mapping needed
          /* istanbul ignore next */
          cov_jmqb9atm().s[139]++;
          console.log('Field mapping needed:');
          /* istanbul ignore next */
          cov_jmqb9atm().s[140]++;
          console.log('- RPC message_id → Service id');
          /* istanbul ignore next */
          cov_jmqb9atm().s[141]++;
          console.log('- RPC conversation_id → Service conversation_id');
          // Verify content matches (after mapping)
          /* istanbul ignore next */
          cov_jmqb9atm().s[142]++;
          if (rpcSample.message_id !== serviceSample.id) {
            /* istanbul ignore next */
            cov_jmqb9atm().b[42][0]++;
            cov_jmqb9atm().s[143]++;
            console.warn('⚠️ ID mismatch between RPC and service');
          } else {
            /* istanbul ignore next */
            cov_jmqb9atm().b[42][1]++;
            cov_jmqb9atm().s[144]++;
            console.log('✅ IDs match after mapping');
          }
          /* istanbul ignore next */
          cov_jmqb9atm().s[145]++;
          if (rpcSample.message_text !== serviceSample.message_text) {
            /* istanbul ignore next */
            cov_jmqb9atm().b[43][0]++;
            cov_jmqb9atm().s[146]++;
            console.warn('⚠️ Content mismatch between RPC and service');
          } else {
            /* istanbul ignore next */
            cov_jmqb9atm().b[43][1]++;
            cov_jmqb9atm().s[147]++;
            console.log('✅ Message content matches');
          }
        } else
        /* istanbul ignore next */
        {
          cov_jmqb9atm().b[40][1]++;
        }
        cov_jmqb9atm().s[148]++;
        console.groupEnd();
      } else
      /* istanbul ignore next */
      {
        cov_jmqb9atm().b[38][1]++;
      }
    } catch (serviceError) {
      /* istanbul ignore next */
      cov_jmqb9atm().s[149]++;
      console.timeEnd('Service execution time');
      /* istanbul ignore next */
      cov_jmqb9atm().s[150]++;
      console.error('❌ SERVICE ERROR:', serviceError);
    }
    /* istanbul ignore next */
    cov_jmqb9atm().s[151]++;
    console.groupEnd();
  } catch (error) {
    /* istanbul ignore next */
    cov_jmqb9atm().s[152]++;
    console.error('❌ TEST FAILED:', error);
  }
  /* istanbul ignore next */
  cov_jmqb9atm().s[153]++;
  console.timeEnd('Total test time');
  /* istanbul ignore next */
  cov_jmqb9atm().s[154]++;
  console.groupEnd();
};
/* istanbul ignore next */
cov_jmqb9atm().s[155]++;
exports.testMessagesIntegration = testMessagesIntegration;
/**
 * Run all integration tests
 * @param userId The user ID to test with
 * @param conversationId Optional conversation ID to test with (if not provided, will use the first conversation found)
 */
/* istanbul ignore next */
cov_jmqb9atm().s[156]++;
const runAllIntegrationTests = async (userId, conversationId) => {
  /* istanbul ignore next */
  cov_jmqb9atm().f[17]++;
  cov_jmqb9atm().s[157]++;
  console.group('🧪🧪 RUNNING ALL CHAT INTEGRATION TESTS 🧪🧪');
  /* istanbul ignore next */
  cov_jmqb9atm().s[158]++;
  console.log('Testing with user ID:', userId);
  // First test conversations
  /* istanbul ignore next */
  cov_jmqb9atm().s[159]++;
  await (0, exports.testConversationsIntegration)(userId);
  // If conversationId not provided, try to get one from the conversations test
  /* istanbul ignore next */
  cov_jmqb9atm().s[160]++;
  if (!conversationId) {
    /* istanbul ignore next */
    cov_jmqb9atm().b[44][0]++;
    cov_jmqb9atm().s[161]++;
    try {
      const {
        data
      } =
      /* istanbul ignore next */
      (cov_jmqb9atm().s[162]++, await supabase_1.supabase.rpc('get_user_conversations', {
        input_user_id: userId
      }));
      /* istanbul ignore next */
      cov_jmqb9atm().s[163]++;
      if (
      /* istanbul ignore next */
      (cov_jmqb9atm().b[46][0]++, data) &&
      /* istanbul ignore next */
      (cov_jmqb9atm().b[46][1]++, Array.isArray(data)) &&
      /* istanbul ignore next */
      (cov_jmqb9atm().b[46][2]++, data.length > 0)) {
        /* istanbul ignore next */
        cov_jmqb9atm().b[45][0]++;
        cov_jmqb9atm().s[164]++;
        conversationId = data[0].id;
        /* istanbul ignore next */
        cov_jmqb9atm().s[165]++;
        console.log('Using first conversation ID for messages test:', conversationId);
      } else {
        /* istanbul ignore next */
        cov_jmqb9atm().b[45][1]++;
        cov_jmqb9atm().s[166]++;
        console.warn('No conversations found, skipping messages test');
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_jmqb9atm().s[167]++;
      console.error('Failed to get conversation ID:', error);
    }
  } else
  /* istanbul ignore next */
  {
    cov_jmqb9atm().b[44][1]++;
  }
  // Then test messages if we have a conversation ID
  cov_jmqb9atm().s[168]++;
  if (conversationId) {
    /* istanbul ignore next */
    cov_jmqb9atm().b[47][0]++;
    cov_jmqb9atm().s[169]++;
    await (0, exports.testMessagesIntegration)(conversationId);
  } else
  /* istanbul ignore next */
  {
    cov_jmqb9atm().b[47][1]++;
  }
  cov_jmqb9atm().s[170]++;
  console.groupEnd();
  /* istanbul ignore next */
  cov_jmqb9atm().s[171]++;
  console.log('🏁 All tests completed');
};
/* istanbul ignore next */
cov_jmqb9atm().s[172]++;
exports.runAllIntegrationTests = runAllIntegrationTests;
/**
 * How to use this test utility:
 *
 * 1. Import this file in a component or development screen
 * 2. Call one of the test functions with appropriate parameters
 * 3. Check the console for results
 *
 * Example:
 * ```
 * import { runAllIntegrationTests } from '../utils/testChatIntegration';
 *
 * // In a component or effect
 * runAllIntegrationTests('your-user-id-here');
 * ```
 */
//# sourceMappingURL=data:application/json;charset=utf-8;base64,