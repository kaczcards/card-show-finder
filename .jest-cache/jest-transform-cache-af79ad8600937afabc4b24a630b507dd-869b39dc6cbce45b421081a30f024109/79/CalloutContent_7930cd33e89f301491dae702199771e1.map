{"version":3,"names":["cov_njsmng584","actualCoverage","s","formatDate","dateValue","f","date","Date","isNaN","getTime","b","utcDate","getTimezoneOffset","toLocaleDateString","month","day","err"],"sources":["/Users/kevin/card-show-finder/src/components/MapShowCluster/components/CalloutContent.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  Linking,\n  Alert,\n  Platform,\n} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\n\n// Define types\ninterface OrganizerProfile {\n  id?: string;\n  firstName?: string;\n  lastName?: string;\n  facebookUrl?: string;\n  instagramUrl?: string;\n  twitterUrl?: string;\n  whatnotUrl?: string;\n  ebayStoreUrl?: string;\n}\n\ninterface CalloutContentProps {\n  showId: string;\n  title: string;\n  startDate: string | Date;\n  endDate: string | Date;\n  address: string;\n  entryFee: number | string | null;\n  organizer?: OrganizerProfile | null;\n  onPressViewDetails?: (showId: string) => void;\n}\n\n// Utility functions\nconst formatDate = (dateValue: Date | string) => {\n  try {\n    const date = new Date(dateValue);\n    if (isNaN(date.getTime())) {\n      return 'Unknown date';\n    }\n    const utcDate = new Date(date.getTime() + date.getTimezoneOffset() * 60 * 1000);\n    return utcDate.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n  } catch (err) {\n    return 'Unknown date';\n  }\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAgDE;IAAAA,aAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,aAAA;AAAAA,aAAA,GAAAE,CAAA;;;;AAZF;AAAA;AAAAF,aAAA,GAAAE,CAAA;AACA,MAAMC,UAAU,GAAIC,SAAwB,IAAI;EAAA;EAAAJ,aAAA,GAAAK,CAAA;EAAAL,aAAA,GAAAE,CAAA;EAC9C,IAAI;IACF,MAAMI,IAAI;IAAA;IAAA,CAAAN,aAAA,GAAAE,CAAA,OAAG,IAAIK,IAAI,CAACH,SAAS,CAAC;IAAC;IAAAJ,aAAA,GAAAE,CAAA;IACjC,IAAIM,KAAK,CAACF,IAAI,CAACG,OAAO,EAAE,CAAC,EAAE;MAAA;MAAAT,aAAA,GAAAU,CAAA;MAAAV,aAAA,GAAAE,CAAA;MACzB,OAAO,cAAc;IACvB,CAAC;IAAA;IAAA;MAAAF,aAAA,GAAAU,CAAA;IAAA;IACD,MAAMC,OAAO;IAAA;IAAA,CAAAX,aAAA,GAAAE,CAAA,OAAG,IAAIK,IAAI,CAACD,IAAI,CAACG,OAAO,EAAE,GAAGH,IAAI,CAACM,iBAAiB,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;IAAC;IAAAZ,aAAA,GAAAE,CAAA;IAChF,OAAOS,OAAO,CAACE,kBAAkB,CAAC,OAAO,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAS,CAAE,CAAC;EAChF,CAAC,CAAC,OAAOC,GAAG,EAAE;IAAA;IAAAhB,aAAA,GAAAE,CAAA;IACZ,OAAO,cAAc;EACvB;AACF,CAAC","ignoreList":[]}