c8be0d7bf56ffadd76d2552cb062a480
"use strict";

/* istanbul ignore next */
function cov_4ffdu3iar() {
  var path = "/Users/kevin/card-show-finder/src/services/sentryConfig.ts";
  var hash = "59daaf77b85b0b76100e3b6f89b3e6a9777f3e96";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/services/sentryConfig.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 22
        },
        end: {
          line: 37,
          column: 1
        }
      },
      "36": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 62
        }
      },
      "37": {
        start: {
          line: 38,
          column: 0
        },
        end: {
          line: 38,
          column: 62
        }
      },
      "38": {
        start: {
          line: 39,
          column: 0
        },
        end: {
          line: 39,
          column: 258
        }
      },
      "39": {
        start: {
          line: 40,
          column: 15
        },
        end: {
          line: 40,
          column: 51
        }
      },
      "40": {
        start: {
          line: 41,
          column: 25
        },
        end: {
          line: 41,
          column: 67
        }
      },
      "41": {
        start: {
          line: 42,
          column: 23
        },
        end: {
          line: 42,
          column: 46
        }
      },
      "42": {
        start: {
          line: 50,
          column: 19
        },
        end: {
          line: 50,
          column: 72
        }
      },
      "43": {
        start: {
          line: 55,
          column: 0
        },
        end: {
          line: 59,
          column: 60
        }
      },
      "44": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 47
        }
      },
      "45": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 57,
          column: 39
        }
      },
      "46": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 45
        }
      },
      "47": {
        start: {
          line: 78,
          column: 19
        },
        end: {
          line: 111,
          column: 1
        }
      },
      "48": {
        start: {
          line: 79,
          column: 151
        },
        end: {
          line: 79,
          column: 158
        }
      },
      "49": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "50": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 83,
          column: 87
        }
      },
      "51": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 15
        }
      },
      "52": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 98,
          column: 7
        }
      },
      "53": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 25
        }
      },
      "54": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 102,
          column: 5
        }
      },
      "55": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 54
        }
      },
      "56": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 109,
          column: 7
        }
      },
      "57": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 110,
          column: 68
        }
      },
      "58": {
        start: {
          line: 112,
          column: 0
        },
        end: {
          line: 112,
          column: 32
        }
      },
      "59": {
        start: {
          line: 124,
          column: 23
        },
        end: {
          line: 131,
          column: 1
        }
      },
      "60": {
        start: {
          line: 125,
          column: 4
        },
        end: {
          line: 126,
          column: 15
        }
      },
      "61": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 15
        }
      },
      "62": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 130,
          column: 7
        }
      },
      "63": {
        start: {
          line: 132,
          column: 0
        },
        end: {
          line: 132,
          column: 40
        }
      },
      "64": {
        start: {
          line: 141,
          column: 25
        },
        end: {
          line: 145,
          column: 1
        }
      },
      "65": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 143,
          column: 15
        }
      },
      "66": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 15
        }
      },
      "67": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 144,
          column: 32
        }
      },
      "68": {
        start: {
          line: 146,
          column: 0
        },
        end: {
          line: 146,
          column: 44
        }
      },
      "69": {
        start: {
          line: 161,
          column: 25
        },
        end: {
          line: 167,
          column: 1
        }
      },
      "70": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 165,
          column: 5
        }
      },
      "71": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 78
        }
      },
      "72": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 15
        }
      },
      "73": {
        start: {
          line: 166,
          column: 4
        },
        end: {
          line: 166,
          column: 51
        }
      },
      "74": {
        start: {
          line: 168,
          column: 0
        },
        end: {
          line: 168,
          column: 44
        }
      },
      "75": {
        start: {
          line: 185,
          column: 23
        },
        end: {
          line: 194,
          column: 1
        }
      },
      "76": {
        start: {
          line: 186,
          column: 4
        },
        end: {
          line: 189,
          column: 5
        }
      },
      "77": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 45
        }
      },
      "78": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 15
        }
      },
      "79": {
        start: {
          line: 190,
          column: 4
        },
        end: {
          line: 193,
          column: 7
        }
      },
      "80": {
        start: {
          line: 195,
          column: 0
        },
        end: {
          line: 195,
          column: 40
        }
      },
      "81": {
        start: {
          line: 216,
          column: 25
        },
        end: {
          line: 233,
          column: 1
        }
      },
      "82": {
        start: {
          line: 217,
          column: 4
        },
        end: {
          line: 228,
          column: 5
        }
      },
      "83": {
        start: {
          line: 219,
          column: 26
        },
        end: {
          line: 219,
          column: 36
        }
      },
      "84": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 227,
          column: 10
        }
      },
      "85": {
        start: {
          line: 222,
          column: 16
        },
        end: {
          line: 222,
          column: 108
        }
      },
      "86": {
        start: {
          line: 229,
          column: 4
        },
        end: {
          line: 232,
          column: 7
        }
      },
      "87": {
        start: {
          line: 234,
          column: 0
        },
        end: {
          line: 234,
          column: 44
        }
      },
      "88": {
        start: {
          line: 255,
          column: 31
        },
        end: {
          line: 257,
          column: 1
        }
      },
      "89": {
        start: {
          line: 256,
          column: 4
        },
        end: {
          line: 256,
          column: 39
        }
      },
      "90": {
        start: {
          line: 258,
          column: 0
        },
        end: {
          line: 258,
          column: 56
        }
      },
      "91": {
        start: {
          line: 280,
          column: 22
        },
        end: {
          line: 284,
          column: 1
        }
      },
      "92": {
        start: {
          line: 281,
          column: 4
        },
        end: {
          line: 282,
          column: 15
        }
      },
      "93": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 282,
          column: 15
        }
      },
      "94": {
        start: {
          line: 283,
          column: 4
        },
        end: {
          line: 283,
          column: 44
        }
      },
      "95": {
        start: {
          line: 285,
          column: 0
        },
        end: {
          line: 285,
          column: 38
        }
      },
      "96": {
        start: {
          line: 287,
          column: 0
        },
        end: {
          line: 287,
          column: 27
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 35,
            column: 56
          },
          end: {
            line: 35,
            column: 57
          }
        },
        loc: {
          start: {
            line: 35,
            column: 71
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 35
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 55,
            column: 1
          },
          end: {
            line: 55,
            column: 2
          }
        },
        loc: {
          start: {
            line: 55,
            column: 24
          },
          end: {
            line: 59,
            column: 1
          }
        },
        line: 55
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 78,
            column: 19
          },
          end: {
            line: 78,
            column: 20
          }
        },
        loc: {
          start: {
            line: 78,
            column: 37
          },
          end: {
            line: 111,
            column: 1
          }
        },
        line: 78
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        },
        loc: {
          start: {
            line: 93,
            column: 26
          },
          end: {
            line: 97,
            column: 9
          }
        },
        line: 93
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 124,
            column: 23
          },
          end: {
            line: 124,
            column: 24
          }
        },
        loc: {
          start: {
            line: 124,
            column: 45
          },
          end: {
            line: 131,
            column: 1
          }
        },
        line: 124
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 141,
            column: 25
          },
          end: {
            line: 141,
            column: 26
          }
        },
        loc: {
          start: {
            line: 141,
            column: 31
          },
          end: {
            line: 145,
            column: 1
          }
        },
        line: 141
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 161,
            column: 25
          },
          end: {
            line: 161,
            column: 26
          }
        },
        loc: {
          start: {
            line: 161,
            column: 45
          },
          end: {
            line: 167,
            column: 1
          }
        },
        line: 161
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 185,
            column: 23
          },
          end: {
            line: 185,
            column: 24
          }
        },
        loc: {
          start: {
            line: 185,
            column: 61
          },
          end: {
            line: 194,
            column: 1
          }
        },
        line: 185
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 216,
            column: 25
          },
          end: {
            line: 216,
            column: 26
          }
        },
        loc: {
          start: {
            line: 216,
            column: 46
          },
          end: {
            line: 233,
            column: 1
          }
        },
        line: 216
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 221,
            column: 20
          },
          end: {
            line: 221,
            column: 21
          }
        },
        loc: {
          start: {
            line: 221,
            column: 26
          },
          end: {
            line: 223,
            column: 13
          }
        },
        line: 221
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 224,
            column: 23
          },
          end: {
            line: 224,
            column: 24
          }
        },
        loc: {
          start: {
            line: 224,
            column: 29
          },
          end: {
            line: 224,
            column: 32
          }
        },
        line: 224
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 225,
            column: 20
          },
          end: {
            line: 225,
            column: 21
          }
        },
        loc: {
          start: {
            line: 225,
            column: 26
          },
          end: {
            line: 225,
            column: 29
          }
        },
        line: 225
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 226,
            column: 21
          },
          end: {
            line: 226,
            column: 22
          }
        },
        loc: {
          start: {
            line: 226,
            column: 27
          },
          end: {
            line: 226,
            column: 30
          }
        },
        line: 226
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 255,
            column: 31
          },
          end: {
            line: 255,
            column: 32
          }
        },
        loc: {
          start: {
            line: 255,
            column: 37
          },
          end: {
            line: 257,
            column: 1
          }
        },
        line: 255
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 280,
            column: 22
          },
          end: {
            line: 280,
            column: 23
          }
        },
        loc: {
          start: {
            line: 280,
            column: 38
          },
          end: {
            line: 284,
            column: 1
          }
        },
        line: 280
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 35,
            column: 22
          },
          end: {
            line: 37,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 23
          },
          end: {
            line: 35,
            column: 27
          }
        }, {
          start: {
            line: 35,
            column: 31
          },
          end: {
            line: 35,
            column: 51
          }
        }, {
          start: {
            line: 35,
            column: 56
          },
          end: {
            line: 37,
            column: 1
          }
        }],
        line: 35
      },
      "18": {
        loc: {
          start: {
            line: 36,
            column: 11
          },
          end: {
            line: 36,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 37
          },
          end: {
            line: 36,
            column: 40
          }
        }, {
          start: {
            line: 36,
            column: 43
          },
          end: {
            line: 36,
            column: 61
          }
        }],
        line: 36
      },
      "19": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 15
          }
        }, {
          start: {
            line: 36,
            column: 19
          },
          end: {
            line: 36,
            column: 33
          }
        }],
        line: 36
      },
      "20": {
        loc: {
          start: {
            line: 59,
            column: 3
          },
          end: {
            line: 59,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 3
          },
          end: {
            line: 59,
            column: 14
          }
        }, {
          start: {
            line: 59,
            column: 19
          },
          end: {
            line: 59,
            column: 57
          }
        }],
        line: 59
      },
      "21": {
        loc: {
          start: {
            line: 78,
            column: 20
          },
          end: {
            line: 78,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 78,
            column: 30
          },
          end: {
            line: 78,
            column: 32
          }
        }],
        line: 78
      },
      "22": {
        loc: {
          start: {
            line: 79,
            column: 30
          },
          end: {
            line: 79,
            column: 102
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 79,
            column: 44
          },
          end: {
            line: 79,
            column: 102
          }
        }],
        line: 79
      },
      "23": {
        loc: {
          start: {
            line: 79,
            column: 44
          },
          end: {
            line: 79,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 79,
            column: 54
          },
          end: {
            line: 79,
            column: 77
          }
        }, {
          start: {
            line: 79,
            column: 80
          },
          end: {
            line: 79,
            column: 102
          }
        }],
        line: 79
      },
      "24": {
        loc: {
          start: {
            line: 79,
            column: 104
          },
          end: {
            line: 79,
            column: 119
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 79,
            column: 112
          },
          end: {
            line: 79,
            column: 119
          }
        }],
        line: 79
      },
      "25": {
        loc: {
          start: {
            line: 79,
            column: 121
          },
          end: {
            line: 79,
            column: 145
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 79,
            column: 137
          },
          end: {
            line: 79,
            column: 145
          }
        }],
        line: 79
      },
      "26": {
        loc: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "27": {
        loc: {
          start: {
            line: 92,
            column: 26
          },
          end: {
            line: 92,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 92,
            column: 42
          },
          end: {
            line: 92,
            column: 45
          }
        }, {
          start: {
            line: 92,
            column: 48
          },
          end: {
            line: 92,
            column: 49
          }
        }],
        line: 92
      },
      "28": {
        loc: {
          start: {
            line: 100,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "29": {
        loc: {
          start: {
            line: 107,
            column: 15
          },
          end: {
            line: 107,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 107,
            column: 54
          },
          end: {
            line: 107,
            column: 66
          }
        }, {
          start: {
            line: 107,
            column: 69
          },
          end: {
            line: 107,
            column: 85
          }
        }],
        line: 107
      },
      "30": {
        loc: {
          start: {
            line: 108,
            column: 20
          },
          end: {
            line: 108,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 20
          },
          end: {
            line: 108,
            column: 64
          }
        }, {
          start: {
            line: 108,
            column: 68
          },
          end: {
            line: 108,
            column: 77
          }
        }],
        line: 108
      },
      "31": {
        loc: {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 126,
            column: 15
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 126,
            column: 15
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "32": {
        loc: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 143,
            column: 15
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 143,
            column: 15
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "33": {
        loc: {
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 165,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 165,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "34": {
        loc: {
          start: {
            line: 185,
            column: 33
          },
          end: {
            line: 185,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 185,
            column: 41
          },
          end: {
            line: 185,
            column: 47
          }
        }],
        line: 185
      },
      "35": {
        loc: {
          start: {
            line: 186,
            column: 4
          },
          end: {
            line: 189,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 4
          },
          end: {
            line: 189,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "36": {
        loc: {
          start: {
            line: 217,
            column: 4
          },
          end: {
            line: 228,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 4
          },
          end: {
            line: 228,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "37": {
        loc: {
          start: {
            line: 281,
            column: 4
          },
          end: {
            line: 282,
            column: 15
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 281,
            column: 4
          },
          end: {
            line: 282,
            column: 15
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 281
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0],
      "22": [0],
      "23": [0, 0],
      "24": [0],
      "25": [0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kevin/card-show-finder/src/services/sentryConfig.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/kevin/card-show-finder/src/services/sentryConfig.ts"],
      sourcesContent: ["import * as Sentry from 'sentry-expo';\nimport Constants from 'expo-constants';\nimport { Platform } from 'react-native';\n\n/**\n * Sentry configuration and utility functions for error tracking and monitoring.\n * \n * This module provides a centralized way to interact with Sentry throughout the application.\n * It handles initialization, error capturing, and user context management.\n */\n\n// Get the Sentry DSN from Expo constants (configured in app.config.js)\nconst SENTRY_DSN = Constants.expoConfig?.extra?.sentryDsn;\n\n/**\n * Environment names for different build types\n */\nexport enum Environment {\n  DEVELOPMENT = 'development',\n  STAGING = 'staging',\n  PRODUCTION = 'production',\n}\n\n/**\n * Configuration options for Sentry initialization\n */\ninterface SentryConfigOptions {\n  /** Optional user ID to associate with errors */\n  userId?: string;\n  /** Optional additional user data */\n  userData?: Record<string, any>;\n  /** Environment name (defaults to 'development' in dev mode) */\n  environment?: Environment;\n  /** Whether to enable debug mode for Sentry */\n  debug?: boolean;\n  /** Whether to enable performance monitoring */\n  enableTracing?: boolean;\n}\n\n/**\n * Initialize Sentry with the provided configuration.\n * This should be called as early as possible in your application.\n * \n * @example\n * // In App.tsx or similar entry point:\n * import { initSentry } from './services/sentryConfig';\n * \n * // Basic initialization\n * initSentry();\n * \n * // With user context\n * initSentry({ \n *   userId: 'user-123', \n *   userData: { email: 'user@example.com' },\n *   environment: Environment.PRODUCTION\n * });\n */\nexport const initSentry = (options: SentryConfigOptions = {}): void => {\n  const {\n    userId,\n    userData,\n    environment = __DEV__ ? Environment.DEVELOPMENT : Environment.PRODUCTION,\n    debug = __DEV__,\n    enableTracing = !__DEV__,\n  } = options;\n\n  // Only initialize if we have a DSN\n  if (!SENTRY_DSN) {\n    console.warn(\n      'Sentry initialization skipped: No DSN provided. ' +\n      'Add EXPO_PUBLIC_SENTRY_DSN to your .env file to enable error reporting.'\n    );\n    return;\n  }\n\n  // Initialize Sentry\n  Sentry.init({\n    dsn: SENTRY_DSN,\n    enableInExpoDevelopment: true,\n    debug,\n    environment,\n    tracesSampleRate: enableTracing ? 0.2 : 0, // Sample 20% of transactions in non-dev\n    beforeSend(event) {\n      // You can modify or filter events before they are sent to Sentry\n      // For example, remove sensitive data\n      return event;\n    },\n  });\n\n  // Set user context if provided\n  if (userId) {\n    setUserContext(userId, userData);\n  }\n\n  // Add device context\n  Sentry.Native.setContext('device', {\n    platform: Platform.OS,\n    version: Platform.Version,\n    model: Platform.OS === 'ios' ? 'iOS Device' : 'Android Device',\n    appVersion: Constants.expoConfig?.version || 'unknown',\n  });\n\n  console.log(`Sentry initialized in ${environment} environment`);\n};\n\n/**\n * Set user context information for better error tracking.\n * Call this when a user logs in or when user data changes.\n * \n * @param userId The unique identifier for the user\n * @param userData Optional additional user data\n * \n * @example\n * // After user login:\n * setUserContext('user-123', { email: 'user@example.com', subscription: 'premium' });\n */\nexport const setUserContext = (userId: string, userData?: Record<string, any>): void => {\n  if (!SENTRY_DSN) return;\n\n  Sentry.Native.setUser({\n    id: userId,\n    ...userData,\n  });\n};\n\n/**\n * Clear user context information.\n * Call this when a user logs out.\n * \n * @example\n * // After user logout:\n * clearUserContext();\n */\nexport const clearUserContext = (): void => {\n  if (!SENTRY_DSN) return;\n  \n  Sentry.Native.setUser(null);\n};\n\n/**\n * Capture an exception and send it to Sentry.\n * \n * @param error The error object to capture\n * @param context Optional additional context data\n * \n * @example\n * try {\n *   // Some code that might throw\n *   throw new Error('Something went wrong');\n * } catch (error) {\n *   captureException(error, { extra: { action: 'saving_data' } });\n * }\n */\nexport const captureException = (error: Error, context?: Sentry.ScopeContext): void => {\n  if (!SENTRY_DSN) {\n    console.error('Error captured but Sentry is not initialized:', error);\n    return;\n  }\n\n  Sentry.Native.captureException(error, context);\n};\n\n/**\n * Capture a custom message and send it to Sentry.\n * \n * @param message The message to capture\n * @param level The severity level of the message\n * @param context Optional additional context data\n * \n * @example\n * // Log an info message\n * captureMessage('User completed onboarding', 'info');\n * \n * // Log a warning with extra context\n * captureMessage('API rate limit approaching', 'warning', { \n *   extra: { remainingCalls: 10, resetTime: '2023-07-19T15:00:00Z' } \n * });\n */\nexport const captureMessage = (\n  message: string, \n  level: Sentry.SeverityLevel = 'info',\n  context?: Sentry.ScopeContext\n): void => {\n  if (!SENTRY_DSN) {\n    console.log(`[${level}] ${message}`);\n    return;\n  }\n\n  Sentry.Native.captureMessage(message, {\n    level,\n    ...context,\n  });\n};\n\n/**\n * Start a new transaction for performance monitoring.\n * \n * @param name The name of the transaction\n * @param operation The operation being performed\n * @returns A transaction object that should be finished when the operation completes\n * \n * @example\n * // Measure the time it takes to load data\n * const transaction = startTransaction('loadUserData', 'data-loading');\n * try {\n *   await fetchUserData();\n *   transaction.setStatus('ok');\n * } catch (error) {\n *   transaction.setStatus('error');\n *   captureException(error);\n * } finally {\n *   transaction.finish();\n * }\n */\nexport const startTransaction = (\n  name: string,\n  operation: string\n): Sentry.Transaction => {\n  if (!SENTRY_DSN) {\n    // Return a dummy transaction if Sentry is not initialized\n    const startTime = Date.now();\n    return {\n      finish: () => {\n        console.log(`Transaction \"${name}\" (${operation}) finished in ${Date.now() - startTime}ms`);\n      },\n      setStatus: () => {},\n      setTag: () => {},\n      setData: () => {},\n    } as unknown as Sentry.Transaction;\n  }\n\n  return Sentry.Native.startTransaction({\n    name,\n    op: operation,\n  });\n};\n\n/**\n * Create an error boundary component using Sentry's error boundary.\n * This is a convenience wrapper around Sentry.ErrorBoundary.\n * \n * @returns A React error boundary component\n * \n * @example\n * // In a component file:\n * import { getSentryErrorBoundary } from './services/sentryConfig';\n * \n * const ErrorBoundary = getSentryErrorBoundary();\n * \n * export default function App() {\n *   return (\n *     <ErrorBoundary fallback={<Text>Something went wrong</Text>}>\n *       <YourApp />\n *     </ErrorBoundary>\n *   );\n * }\n */\nexport const getSentryErrorBoundary = () => {\n  return Sentry.Native.ErrorBoundary;\n};\n\n/**\n * Add breadcrumb to track user actions or application events.\n * \n * @param breadcrumb The breadcrumb to add\n * \n * @example\n * // Track user navigation\n * addBreadcrumb({\n *   category: 'navigation',\n *   message: 'Navigated to Profile screen',\n *   level: 'info'\n * });\n * \n * // Track API call\n * addBreadcrumb({\n *   category: 'api',\n *   message: 'GET /api/users',\n *   data: { userId: 123 },\n *   level: 'debug'\n * });\n */\nexport const addBreadcrumb = (breadcrumb: Sentry.Breadcrumb): void => {\n  if (!SENTRY_DSN) return;\n  \n  Sentry.Native.addBreadcrumb(breadcrumb);\n};\n\n// Export the raw Sentry object for advanced use cases\nexport const SentryRaw = Sentry;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "59daaf77b85b0b76100e3b6f89b3e6a9777f3e96"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_4ffdu3iar = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_4ffdu3iar();
var __createBinding =
/* istanbul ignore next */
(cov_4ffdu3iar().s[0]++,
/* istanbul ignore next */
(cov_4ffdu3iar().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_4ffdu3iar().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_4ffdu3iar().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_4ffdu3iar().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_4ffdu3iar().f[0]++;
  cov_4ffdu3iar().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_4ffdu3iar().b[2][0]++;
    cov_4ffdu3iar().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_4ffdu3iar().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_4ffdu3iar().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_4ffdu3iar().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_4ffdu3iar().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_4ffdu3iar().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_4ffdu3iar().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_4ffdu3iar().b[5][1]++,
  /* istanbul ignore next */
  (cov_4ffdu3iar().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_4ffdu3iar().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_4ffdu3iar().b[3][0]++;
    cov_4ffdu3iar().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_4ffdu3iar().f[1]++;
        cov_4ffdu3iar().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_4ffdu3iar().b[3][1]++;
  }
  cov_4ffdu3iar().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_4ffdu3iar().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_4ffdu3iar().f[2]++;
  cov_4ffdu3iar().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_4ffdu3iar().b[7][0]++;
    cov_4ffdu3iar().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_4ffdu3iar().b[7][1]++;
  }
  cov_4ffdu3iar().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_4ffdu3iar().s[11]++,
/* istanbul ignore next */
(cov_4ffdu3iar().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_4ffdu3iar().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_4ffdu3iar().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_4ffdu3iar().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_4ffdu3iar().f[3]++;
  cov_4ffdu3iar().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_4ffdu3iar().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_4ffdu3iar().f[4]++;
  cov_4ffdu3iar().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_4ffdu3iar().s[14]++,
/* istanbul ignore next */
(cov_4ffdu3iar().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_4ffdu3iar().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_4ffdu3iar().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_4ffdu3iar().f[5]++;
  cov_4ffdu3iar().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_4ffdu3iar().f[6]++;
    cov_4ffdu3iar().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_4ffdu3iar().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_4ffdu3iar().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_4ffdu3iar().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_4ffdu3iar().s[17]++, []);
      /* istanbul ignore next */
      cov_4ffdu3iar().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_4ffdu3iar().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_4ffdu3iar().b[12][0]++;
          cov_4ffdu3iar().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_4ffdu3iar().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_4ffdu3iar().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_4ffdu3iar().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_4ffdu3iar().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_4ffdu3iar().f[8]++;
    cov_4ffdu3iar().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_4ffdu3iar().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_4ffdu3iar().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_4ffdu3iar().b[13][0]++;
      cov_4ffdu3iar().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_4ffdu3iar().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_4ffdu3iar().s[26]++, {});
    /* istanbul ignore next */
    cov_4ffdu3iar().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_4ffdu3iar().b[15][0]++;
      cov_4ffdu3iar().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_4ffdu3iar().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_4ffdu3iar().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_4ffdu3iar().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_4ffdu3iar().b[16][0]++;
          cov_4ffdu3iar().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_4ffdu3iar().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_4ffdu3iar().b[15][1]++;
    }
    cov_4ffdu3iar().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_4ffdu3iar().s[34]++;
    return result;
  };
}()));
var __importDefault =
/* istanbul ignore next */
(cov_4ffdu3iar().s[35]++,
/* istanbul ignore next */
(cov_4ffdu3iar().b[17][0]++, this) &&
/* istanbul ignore next */
(cov_4ffdu3iar().b[17][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_4ffdu3iar().b[17][2]++, function (mod) {
  /* istanbul ignore next */
  cov_4ffdu3iar().f[9]++;
  cov_4ffdu3iar().s[36]++;
  return /* istanbul ignore next */(cov_4ffdu3iar().b[19][0]++, mod) &&
  /* istanbul ignore next */
  (cov_4ffdu3iar().b[19][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_4ffdu3iar().b[18][0]++, mod) :
  /* istanbul ignore next */
  (cov_4ffdu3iar().b[18][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_4ffdu3iar().s[37]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_4ffdu3iar().s[38]++;
exports.SentryRaw = exports.addBreadcrumb = exports.getSentryErrorBoundary = exports.startTransaction = exports.captureMessage = exports.captureException = exports.clearUserContext = exports.setUserContext = exports.initSentry = exports.Environment = void 0;
const Sentry =
/* istanbul ignore next */
(cov_4ffdu3iar().s[39]++, __importStar(require("sentry-expo")));
const expo_constants_1 =
/* istanbul ignore next */
(cov_4ffdu3iar().s[40]++, __importDefault(require("expo-constants")));
const react_native_1 =
/* istanbul ignore next */
(cov_4ffdu3iar().s[41]++, require("react-native"));
/**
 * Sentry configuration and utility functions for error tracking and monitoring.
 *
 * This module provides a centralized way to interact with Sentry throughout the application.
 * It handles initialization, error capturing, and user context management.
 */
// Get the Sentry DSN from Expo constants (configured in app.config.js)
const SENTRY_DSN =
/* istanbul ignore next */
(cov_4ffdu3iar().s[42]++, expo_constants_1.default.expoConfig?.extra?.sentryDsn);
/**
 * Environment names for different build types
 */
var Environment;
/* istanbul ignore next */
cov_4ffdu3iar().s[43]++;
(function (Environment) {
  /* istanbul ignore next */
  cov_4ffdu3iar().f[10]++;
  cov_4ffdu3iar().s[44]++;
  Environment["DEVELOPMENT"] = "development";
  /* istanbul ignore next */
  cov_4ffdu3iar().s[45]++;
  Environment["STAGING"] = "staging";
  /* istanbul ignore next */
  cov_4ffdu3iar().s[46]++;
  Environment["PRODUCTION"] = "production";
})(
/* istanbul ignore next */
(cov_4ffdu3iar().b[20][0]++, Environment) ||
/* istanbul ignore next */
(cov_4ffdu3iar().b[20][1]++, exports.Environment = Environment = {}));
/**
 * Initialize Sentry with the provided configuration.
 * This should be called as early as possible in your application.
 *
 * @example
 * // In App.tsx or similar entry point:
 * import { initSentry } from './services/sentryConfig';
 *
 * // Basic initialization
 * initSentry();
 *
 * // With user context
 * initSentry({
 *   userId: 'user-123',
 *   userData: { email: 'user@example.com' },
 *   environment: Environment.PRODUCTION
 * });
 */
/* istanbul ignore next */
cov_4ffdu3iar().s[47]++;
const initSentry = (options =
/* istanbul ignore next */
(cov_4ffdu3iar().b[21][0]++, {})) => {
  /* istanbul ignore next */
  cov_4ffdu3iar().f[11]++;
  const {
    userId,
    userData,
    environment =
    /* istanbul ignore next */
    (cov_4ffdu3iar().b[22][0]++, __DEV__ ?
    /* istanbul ignore next */
    (cov_4ffdu3iar().b[23][0]++, Environment.DEVELOPMENT) :
    /* istanbul ignore next */
    (cov_4ffdu3iar().b[23][1]++, Environment.PRODUCTION)),
    debug =
    /* istanbul ignore next */
    (cov_4ffdu3iar().b[24][0]++, __DEV__),
    enableTracing =
    /* istanbul ignore next */
    (cov_4ffdu3iar().b[25][0]++, !__DEV__)
  } =
  /* istanbul ignore next */
  (cov_4ffdu3iar().s[48]++, options);
  // Only initialize if we have a DSN
  /* istanbul ignore next */
  cov_4ffdu3iar().s[49]++;
  if (!SENTRY_DSN) {
    /* istanbul ignore next */
    cov_4ffdu3iar().b[26][0]++;
    cov_4ffdu3iar().s[50]++;
    console.warn('Sentry initialization skipped: No DSN provided. ' + 'Add EXPO_PUBLIC_SENTRY_DSN to your .env file to enable error reporting.');
    /* istanbul ignore next */
    cov_4ffdu3iar().s[51]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_4ffdu3iar().b[26][1]++;
  }
  // Initialize Sentry
  cov_4ffdu3iar().s[52]++;
  Sentry.init({
    dsn: SENTRY_DSN,
    enableInExpoDevelopment: true,
    debug,
    environment,
    tracesSampleRate: enableTracing ?
    /* istanbul ignore next */
    (cov_4ffdu3iar().b[27][0]++, 0.2) :
    /* istanbul ignore next */
    (cov_4ffdu3iar().b[27][1]++, 0),
    // Sample 20% of transactions in non-dev
    beforeSend(event) {
      /* istanbul ignore next */
      cov_4ffdu3iar().f[12]++;
      cov_4ffdu3iar().s[53]++;
      // You can modify or filter events before they are sent to Sentry
      // For example, remove sensitive data
      return event;
    }
  });
  // Set user context if provided
  /* istanbul ignore next */
  cov_4ffdu3iar().s[54]++;
  if (userId) {
    /* istanbul ignore next */
    cov_4ffdu3iar().b[28][0]++;
    cov_4ffdu3iar().s[55]++;
    (0, exports.setUserContext)(userId, userData);
  } else
  /* istanbul ignore next */
  {
    cov_4ffdu3iar().b[28][1]++;
  }
  // Add device context
  cov_4ffdu3iar().s[56]++;
  Sentry.Native.setContext('device', {
    platform: react_native_1.Platform.OS,
    version: react_native_1.Platform.Version,
    model: react_native_1.Platform.OS === 'ios' ?
    /* istanbul ignore next */
    (cov_4ffdu3iar().b[29][0]++, 'iOS Device') :
    /* istanbul ignore next */
    (cov_4ffdu3iar().b[29][1]++, 'Android Device'),
    appVersion:
    /* istanbul ignore next */
    (cov_4ffdu3iar().b[30][0]++, expo_constants_1.default.expoConfig?.version) ||
    /* istanbul ignore next */
    (cov_4ffdu3iar().b[30][1]++, 'unknown')
  });
  /* istanbul ignore next */
  cov_4ffdu3iar().s[57]++;
  console.log(`Sentry initialized in ${environment} environment`);
};
/* istanbul ignore next */
cov_4ffdu3iar().s[58]++;
exports.initSentry = initSentry;
/**
 * Set user context information for better error tracking.
 * Call this when a user logs in or when user data changes.
 *
 * @param userId The unique identifier for the user
 * @param userData Optional additional user data
 *
 * @example
 * // After user login:
 * setUserContext('user-123', { email: 'user@example.com', subscription: 'premium' });
 */
/* istanbul ignore next */
cov_4ffdu3iar().s[59]++;
const setUserContext = (userId, userData) => {
  /* istanbul ignore next */
  cov_4ffdu3iar().f[13]++;
  cov_4ffdu3iar().s[60]++;
  if (!SENTRY_DSN) {
    /* istanbul ignore next */
    cov_4ffdu3iar().b[31][0]++;
    cov_4ffdu3iar().s[61]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_4ffdu3iar().b[31][1]++;
  }
  cov_4ffdu3iar().s[62]++;
  Sentry.Native.setUser({
    id: userId,
    ...userData
  });
};
/* istanbul ignore next */
cov_4ffdu3iar().s[63]++;
exports.setUserContext = setUserContext;
/**
 * Clear user context information.
 * Call this when a user logs out.
 *
 * @example
 * // After user logout:
 * clearUserContext();
 */
/* istanbul ignore next */
cov_4ffdu3iar().s[64]++;
const clearUserContext = () => {
  /* istanbul ignore next */
  cov_4ffdu3iar().f[14]++;
  cov_4ffdu3iar().s[65]++;
  if (!SENTRY_DSN) {
    /* istanbul ignore next */
    cov_4ffdu3iar().b[32][0]++;
    cov_4ffdu3iar().s[66]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_4ffdu3iar().b[32][1]++;
  }
  cov_4ffdu3iar().s[67]++;
  Sentry.Native.setUser(null);
};
/* istanbul ignore next */
cov_4ffdu3iar().s[68]++;
exports.clearUserContext = clearUserContext;
/**
 * Capture an exception and send it to Sentry.
 *
 * @param error The error object to capture
 * @param context Optional additional context data
 *
 * @example
 * try {
 *   // Some code that might throw
 *   throw new Error('Something went wrong');
 * } catch (error) {
 *   captureException(error, { extra: { action: 'saving_data' } });
 * }
 */
/* istanbul ignore next */
cov_4ffdu3iar().s[69]++;
const captureException = (error, context) => {
  /* istanbul ignore next */
  cov_4ffdu3iar().f[15]++;
  cov_4ffdu3iar().s[70]++;
  if (!SENTRY_DSN) {
    /* istanbul ignore next */
    cov_4ffdu3iar().b[33][0]++;
    cov_4ffdu3iar().s[71]++;
    console.error('Error captured but Sentry is not initialized:', error);
    /* istanbul ignore next */
    cov_4ffdu3iar().s[72]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_4ffdu3iar().b[33][1]++;
  }
  cov_4ffdu3iar().s[73]++;
  Sentry.Native.captureException(error, context);
};
/* istanbul ignore next */
cov_4ffdu3iar().s[74]++;
exports.captureException = captureException;
/**
 * Capture a custom message and send it to Sentry.
 *
 * @param message The message to capture
 * @param level The severity level of the message
 * @param context Optional additional context data
 *
 * @example
 * // Log an info message
 * captureMessage('User completed onboarding', 'info');
 *
 * // Log a warning with extra context
 * captureMessage('API rate limit approaching', 'warning', {
 *   extra: { remainingCalls: 10, resetTime: '2023-07-19T15:00:00Z' }
 * });
 */
/* istanbul ignore next */
cov_4ffdu3iar().s[75]++;
const captureMessage = (message, level =
/* istanbul ignore next */
(cov_4ffdu3iar().b[34][0]++, 'info'), context) => {
  /* istanbul ignore next */
  cov_4ffdu3iar().f[16]++;
  cov_4ffdu3iar().s[76]++;
  if (!SENTRY_DSN) {
    /* istanbul ignore next */
    cov_4ffdu3iar().b[35][0]++;
    cov_4ffdu3iar().s[77]++;
    console.log(`[${level}] ${message}`);
    /* istanbul ignore next */
    cov_4ffdu3iar().s[78]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_4ffdu3iar().b[35][1]++;
  }
  cov_4ffdu3iar().s[79]++;
  Sentry.Native.captureMessage(message, {
    level,
    ...context
  });
};
/* istanbul ignore next */
cov_4ffdu3iar().s[80]++;
exports.captureMessage = captureMessage;
/**
 * Start a new transaction for performance monitoring.
 *
 * @param name The name of the transaction
 * @param operation The operation being performed
 * @returns A transaction object that should be finished when the operation completes
 *
 * @example
 * // Measure the time it takes to load data
 * const transaction = startTransaction('loadUserData', 'data-loading');
 * try {
 *   await fetchUserData();
 *   transaction.setStatus('ok');
 * } catch (error) {
 *   transaction.setStatus('error');
 *   captureException(error);
 * } finally {
 *   transaction.finish();
 * }
 */
/* istanbul ignore next */
cov_4ffdu3iar().s[81]++;
const startTransaction = (name, operation) => {
  /* istanbul ignore next */
  cov_4ffdu3iar().f[17]++;
  cov_4ffdu3iar().s[82]++;
  if (!SENTRY_DSN) {
    /* istanbul ignore next */
    cov_4ffdu3iar().b[36][0]++;
    // Return a dummy transaction if Sentry is not initialized
    const startTime =
    /* istanbul ignore next */
    (cov_4ffdu3iar().s[83]++, Date.now());
    /* istanbul ignore next */
    cov_4ffdu3iar().s[84]++;
    return {
      finish: () => {
        /* istanbul ignore next */
        cov_4ffdu3iar().f[18]++;
        cov_4ffdu3iar().s[85]++;
        console.log(`Transaction "${name}" (${operation}) finished in ${Date.now() - startTime}ms`);
      },
      setStatus: () => {
        /* istanbul ignore next */
        cov_4ffdu3iar().f[19]++;
      },
      setTag: () => {
        /* istanbul ignore next */
        cov_4ffdu3iar().f[20]++;
      },
      setData: () => {
        /* istanbul ignore next */
        cov_4ffdu3iar().f[21]++;
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_4ffdu3iar().b[36][1]++;
  }
  cov_4ffdu3iar().s[86]++;
  return Sentry.Native.startTransaction({
    name,
    op: operation
  });
};
/* istanbul ignore next */
cov_4ffdu3iar().s[87]++;
exports.startTransaction = startTransaction;
/**
 * Create an error boundary component using Sentry's error boundary.
 * This is a convenience wrapper around Sentry.ErrorBoundary.
 *
 * @returns A React error boundary component
 *
 * @example
 * // In a component file:
 * import { getSentryErrorBoundary } from './services/sentryConfig';
 *
 * const ErrorBoundary = getSentryErrorBoundary();
 *
 * export default function App() {
 *   return (
 *     <ErrorBoundary fallback={<Text>Something went wrong</Text>}>
 *       <YourApp />
 *     </ErrorBoundary>
 *   );
 * }
 */
/* istanbul ignore next */
cov_4ffdu3iar().s[88]++;
const getSentryErrorBoundary = () => {
  /* istanbul ignore next */
  cov_4ffdu3iar().f[22]++;
  cov_4ffdu3iar().s[89]++;
  return Sentry.Native.ErrorBoundary;
};
/* istanbul ignore next */
cov_4ffdu3iar().s[90]++;
exports.getSentryErrorBoundary = getSentryErrorBoundary;
/**
 * Add breadcrumb to track user actions or application events.
 *
 * @param breadcrumb The breadcrumb to add
 *
 * @example
 * // Track user navigation
 * addBreadcrumb({
 *   category: 'navigation',
 *   message: 'Navigated to Profile screen',
 *   level: 'info'
 * });
 *
 * // Track API call
 * addBreadcrumb({
 *   category: 'api',
 *   message: 'GET /api/users',
 *   data: { userId: 123 },
 *   level: 'debug'
 * });
 */
/* istanbul ignore next */
cov_4ffdu3iar().s[91]++;
const addBreadcrumb = breadcrumb => {
  /* istanbul ignore next */
  cov_4ffdu3iar().f[23]++;
  cov_4ffdu3iar().s[92]++;
  if (!SENTRY_DSN) {
    /* istanbul ignore next */
    cov_4ffdu3iar().b[37][0]++;
    cov_4ffdu3iar().s[93]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_4ffdu3iar().b[37][1]++;
  }
  cov_4ffdu3iar().s[94]++;
  Sentry.Native.addBreadcrumb(breadcrumb);
};
/* istanbul ignore next */
cov_4ffdu3iar().s[95]++;
exports.addBreadcrumb = addBreadcrumb;
// Export the raw Sentry object for advanced use cases
/* istanbul ignore next */
cov_4ffdu3iar().s[96]++;
exports.SentryRaw = Sentry;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,