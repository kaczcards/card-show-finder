{"version":3,"names":["cov_1qpb250xb1","actualCoverage","s","SubscriptionPlanType","f","b","exports","SubscriptionDuration","SUBSCRIPTION_PLANS","id","type","DEALER","name","description","price","duration","MONTHLY","trialDays","features","ANNUAL","isPopular","ORGANIZER","calculateExpiryDate","plan","now","Date","MS_IN_DAY","daysToAdd","getTime"],"sources":["/Users/kevin/card-show-finder/src/services/subscriptionTypes.ts"],"sourcesContent":["// src/services/subscriptionTypes.ts\nimport { UserRole } from './userRoleService';\n\n/**\n * Subscription plan types available in the app\n */\nexport enum SubscriptionPlanType {\n  DEALER = 'dealer',\n  ORGANIZER = 'organizer'\n}\n\n/**\n * Subscription plan durations in months\n */\nexport enum SubscriptionDuration {\n  MONTHLY = 1,\n  ANNUAL = 12\n}\n\n/**\n * Subscription plan details\n */\nexport interface SubscriptionPlan {\n  id: string;\n  type: SubscriptionPlanType;\n  name: string;\n  description: string;\n  price: number; // Price in USD\n  duration: SubscriptionDuration; // Duration in months\n  features: string[];\n  /** Free-trial length in days (optional, e.g. 7-day trial) */\n  trialDays?: number;\n  isPopular?: boolean;\n}\n\n/**\n * Represents the outcome of a payment operation.\n */\nexport interface StripePaymentResult {\n  success: boolean;\n  error?: string;\n  transactionId?: string;\n}\n\n/**\n * Available subscription plans\n */\nexport const SUBSCRIPTION_PLANS: SubscriptionPlan[] = [\n  /* ---------- MVP DEALER ---------- */\n  {\n    id: 'mvp-dealer-monthly',\n    type: SubscriptionPlanType.DEALER,\n    name: 'MVP Dealer Monthly',\n    description: 'Preview inventory, interact with collectors & more (monthly)',\n    price: 29,\n    duration: SubscriptionDuration.MONTHLY,\n    trialDays: 7,\n    features: [\n      'Preview inventory for upcoming shows you attend',\n      'Interact with collectors planning to attend those shows',\n      'View want lists of collectors within a 25-mile radius',\n      'Share external links (website, eBay, WhatNot, etc.)',\n      'Dealer badge on profile'\n    ]\n  },\n  {\n    id: 'mvp-dealer-annual',\n    type: SubscriptionPlanType.DEALER,\n    name: 'MVP Dealer Annual',\n    description: 'Save 25% with annual billing',\n    price: 261, // $29 × 12 × 0.75\n    duration: SubscriptionDuration.ANNUAL,\n    trialDays: 7,\n    isPopular: true,\n    features: [\n      'Preview inventory for upcoming shows you attend',\n      'Interact with collectors planning to attend those shows',\n      'View want lists of collectors within a 25-mile radius',\n      'Share external links (website, eBay, WhatNot, etc.)',\n      'Dealer badge on profile',\n      'Featured dealer status'\n    ]\n  },\n\n  /* ---------- SHOW ORGANIZER ---------- */\n  {\n    id: 'show-organizer-monthly',\n    type: SubscriptionPlanType.ORGANIZER,\n    name: 'Show Organizer Monthly',\n    description: 'Organize shows & engage dealers/collectors (monthly)',\n    price: 49,\n    duration: SubscriptionDuration.MONTHLY,\n    trialDays: 7,\n    features: [\n      'All MVP Dealer features',\n      'Claim ownership of recurring shows',\n      'Message dealers & collectors before/after shows',\n      'Edit upcoming show times, dates & details',\n      'Respond to collector reviews',\n      'Promote your events',\n      'Access attendee data'\n    ]\n  },\n  {\n    id: 'show-organizer-annual',\n    type: SubscriptionPlanType.ORGANIZER,\n    name: 'Show Organizer Annual',\n    description: 'Save 25% with annual billing',\n    price: 441, // $49 × 12 × 0.75\n    duration: SubscriptionDuration.ANNUAL,\n    trialDays: 7,\n    isPopular: true,\n    features: [\n      'All MVP Dealer features',\n      'Claim ownership of recurring shows',\n      'Message dealers & collectors before/after shows',\n      'Edit upcoming show times, dates & details',\n      'Respond to collector reviews',\n      'Promote your events',\n      'Access attendee data',\n      'Featured show placement'\n    ]\n  }\n];\n\n/**\n * Helper function to calculate the expiry date based on the current date and plan duration\n * @param plan The subscription plan\n * @returns Date when the subscription will expire\n */\nexport const calculateExpiryDate = (plan: SubscriptionPlan): Date => {\n  const now = new Date();\n\n  // We purposely ignore `trialDays` here; trials are applied in higher-level\n  // payment logic.  This helper strictly converts *paid* duration → expiry.\n  const MS_IN_DAY = 24 * 60 * 60 * 1000;\n\n  let daysToAdd: number;\n  switch (plan.duration) {\n    case SubscriptionDuration.ANNUAL:\n      daysToAdd = 365;           // Fixed-length year to keep math explicit\n      break;\n    case SubscriptionDuration.MONTHLY:\n    default:\n      daysToAdd = 30;            // Fixed-length “billing month”\n      break;\n  }\n\n  return new Date(now.getTime() + daysToAdd * MS_IN_DAY);\n};\n"],"mappings":"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","ignoreList":[]}