164ad802c26e349882e1e624537d3ad9
"use strict";

/**
 * Geocode Existing Shows Script
 *
 * This script finds all shows in the database that have addresses but missing
 * or invalid coordinates (null, undefined, or near 0,0) and geocodes them.
 *
 * Usage:
 * 1. Make sure you're logged in to Supabase (this uses the existing client)
 * 2. Run with: npx ts-node src/scripts/geocodeExistingShows.ts [batchSize] [delayMs]
 *    - batchSize: Number of shows to process in each batch (default: 5)
 *    - delayMs: Delay in milliseconds between requests (default: 1000)
 */
/* istanbul ignore next */
function cov_1fk5pgtda3() {
  var path = "/Users/kevin/card-show-finder/src/scripts/geocodeExistingShows.ts";
  var hash = "dbb94f2f46ddfcb454b4389a15dd99384b508c3b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/scripts/geocodeExistingShows.ts",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 22
        },
        end: {
          line: 16,
          column: 1
        }
      },
      "1": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 62
        }
      },
      "2": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 17,
          column: 62
        }
      },
      "3": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 18,
          column: 38
        }
      },
      "4": {
        start: {
          line: 19,
          column: 19
        },
        end: {
          line: 19,
          column: 41
        }
      },
      "5": {
        start: {
          line: 20,
          column: 26
        },
        end: {
          line: 20,
          column: 64
        }
      },
      "6": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 49
        }
      },
      "7": {
        start: {
          line: 23,
          column: 20
        },
        end: {
          line: 23,
          column: 21
        }
      },
      "8": {
        start: {
          line: 27,
          column: 26
        },
        end: {
          line: 42,
          column: 1
        }
      },
      "9": {
        start: {
          line: 28,
          column: 20
        },
        end: {
          line: 28,
          column: 51
        }
      },
      "10": {
        start: {
          line: 29,
          column: 20
        },
        end: {
          line: 29,
          column: 44
        }
      },
      "11": {
        start: {
          line: 30,
          column: 18
        },
        end: {
          line: 30,
          column: 42
        }
      },
      "12": {
        start: {
          line: 31,
          column: 29
        },
        end: {
          line: 31,
          column: 41
        }
      },
      "13": {
        start: {
          line: 32,
          column: 29
        },
        end: {
          line: 32,
          column: 41
        }
      },
      "14": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "15": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 69
        }
      },
      "16": {
        start: {
          line: 36,
          column: 9
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "17": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 50
        }
      },
      "18": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 29
        }
      },
      "19": {
        start: {
          line: 46,
          column: 21
        },
        end: {
          line: 54,
          column: 1
        }
      },
      "20": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 48,
          column: 32
        }
      },
      "21": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 32
        }
      },
      "22": {
        start: {
          line: 49,
          column: 22
        },
        end: {
          line: 49,
          column: 70
        }
      },
      "23": {
        start: {
          line: 50,
          column: 22
        },
        end: {
          line: 50,
          column: 49
        }
      },
      "24": {
        start: {
          line: 51,
          column: 27
        },
        end: {
          line: 51,
          column: 56
        }
      },
      "25": {
        start: {
          line: 52,
          column: 33
        },
        end: {
          line: 52,
          column: 59
        }
      },
      "26": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 51
        }
      },
      "27": {
        start: {
          line: 58,
          column: 30
        },
        end: {
          line: 73,
          column: 1
        }
      },
      "28": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "29": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 20
        }
      },
      "30": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 71,
          column: 5
        }
      },
      "31": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 20
        }
      },
      "32": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 72,
          column: 17
        }
      },
      "33": {
        start: {
          line: 77,
          column: 22
        },
        end: {
          line: 118,
          column: 1
        }
      },
      "34": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 78,
          column: 81
        }
      },
      "35": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 117,
          column: 5
        }
      },
      "36": {
        start: {
          line: 80,
          column: 32
        },
        end: {
          line: 83,
          column: 54
        }
      },
      "37": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "38": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 70
        }
      },
      "39": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "40": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 83
        }
      },
      "41": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 22
        }
      },
      "42": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 88
        }
      },
      "43": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 20
        }
      },
      "44": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 76
        }
      },
      "45": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 81
        }
      },
      "46": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 64
        }
      },
      "47": {
        start: {
          line: 98,
          column: 37
        },
        end: {
          line: 98,
          column: 62
        }
      },
      "48": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "49": {
        start: {
          line: 100,
          column: 36
        },
        end: {
          line: 103,
          column: 58
        }
      },
      "50": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 106,
          column: 13
        }
      },
      "51": {
        start: {
          line: 105,
          column: 16
        },
        end: {
          line: 105,
          column: 83
        }
      },
      "52": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 109,
          column: 13
        }
      },
      "53": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 108,
          column: 26
        }
      },
      "54": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 101
        }
      },
      "55": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 24
        }
      },
      "56": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 94
        }
      },
      "57": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 22
        }
      },
      "58": {
        start: {
          line: 122,
          column: 30
        },
        end: {
          line: 154,
          column: 1
        }
      },
      "59": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 153,
          column: 5
        }
      },
      "60": {
        start: {
          line: 124,
          column: 26
        },
        end: {
          line: 131,
          column: 29
        }
      },
      "61": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 141,
          column: 9
        }
      },
      "62": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 98
        }
      },
      "63": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 139,
          column: 13
        }
      },
      "64": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 136,
          column: 120
        }
      },
      "65": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 137,
          column: 72
        }
      },
      "66": {
        start: {
          line: 137,
          column: 45
        },
        end: {
          line: 137,
          column: 70
        }
      },
      "67": {
        start: {
          line: 138,
          column: 16
        },
        end: {
          line: 138,
          column: 90
        }
      },
      "68": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 25
        }
      },
      "69": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 20
        }
      },
      "70": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 84
        }
      },
      "71": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 151,
          column: 9
        }
      },
      "72": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 116
        }
      },
      "73": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 68
        }
      },
      "74": {
        start: {
          line: 149,
          column: 41
        },
        end: {
          line: 149,
          column: 66
        }
      },
      "75": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 86
        }
      },
      "76": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 21
        }
      },
      "77": {
        start: {
          line: 158,
          column: 20
        },
        end: {
          line: 198,
          column: 1
        }
      },
      "78": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 162,
          column: 5
        }
      },
      "79": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 116
        }
      },
      "80": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 21
        }
      },
      "81": {
        start: {
          line: 163,
          column: 4
        },
        end: {
          line: 197,
          column: 5
        }
      },
      "82": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 117
        }
      },
      "83": {
        start: {
          line: 165,
          column: 28
        },
        end: {
          line: 165,
          column: 85
        }
      },
      "84": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 175,
          column: 9
        }
      },
      "85": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 118
        }
      },
      "86": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 173,
          column: 13
        }
      },
      "87": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 170,
          column: 123
        }
      },
      "88": {
        start: {
          line: 171,
          column: 16
        },
        end: {
          line: 171,
          column: 72
        }
      },
      "89": {
        start: {
          line: 171,
          column: 45
        },
        end: {
          line: 171,
          column: 70
        }
      },
      "90": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 172,
          column: 57
        }
      },
      "91": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 25
        }
      },
      "92": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 112
        }
      },
      "93": {
        start: {
          line: 178,
          column: 24
        },
        end: {
          line: 178,
          column: 105
        }
      },
      "94": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "95": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 180,
          column: 112
        }
      },
      "96": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 181,
          column: 24
        }
      },
      "97": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 121
        }
      },
      "98": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 25
        }
      },
      "99": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 109
        }
      },
      "100": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 195,
          column: 9
        }
      },
      "101": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 122
        }
      },
      "102": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 68
        }
      },
      "103": {
        start: {
          line: 193,
          column: 41
        },
        end: {
          line: 193,
          column: 66
        }
      },
      "104": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 53
        }
      },
      "105": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 21
        }
      },
      "106": {
        start: {
          line: 202,
          column: 30
        },
        end: {
          line: 253,
          column: 1
        }
      },
      "107": {
        start: {
          line: 203,
          column: 18
        },
        end: {
          line: 210,
          column: 5
        }
      },
      "108": {
        start: {
          line: 211,
          column: 25
        },
        end: {
          line: 211,
          column: 60
        }
      },
      "109": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 251,
          column: 5
        }
      },
      "110": {
        start: {
          line: 213,
          column: 17
        },
        end: {
          line: 213,
          column: 18
        }
      },
      "111": {
        start: {
          line: 214,
          column: 22
        },
        end: {
          line: 214,
          column: 51
        }
      },
      "112": {
        start: {
          line: 215,
          column: 29
        },
        end: {
          line: 215,
          column: 58
        }
      },
      "113": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 112
        }
      },
      "114": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 244,
          column: 9
        }
      },
      "115": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 223,
          column: 13
        }
      },
      "116": {
        start: {
          line: 220,
          column: 16
        },
        end: {
          line: 220,
          column: 107
        }
      },
      "117": {
        start: {
          line: 221,
          column: 16
        },
        end: {
          line: 221,
          column: 32
        }
      },
      "118": {
        start: {
          line: 222,
          column: 16
        },
        end: {
          line: 222,
          column: 25
        }
      },
      "119": {
        start: {
          line: 224,
          column: 28
        },
        end: {
          line: 224,
          column: 51
        }
      },
      "120": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 225,
          column: 30
        }
      },
      "121": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 231,
          column: 13
        }
      },
      "122": {
        start: {
          line: 227,
          column: 16
        },
        end: {
          line: 227,
          column: 34
        }
      },
      "123": {
        start: {
          line: 230,
          column: 16
        },
        end: {
          line: 230,
          column: 31
        }
      },
      "124": {
        start: {
          line: 233,
          column: 36
        },
        end: {
          line: 233,
          column: 85
        }
      },
      "125": {
        start: {
          line: 234,
          column: 32
        },
        end: {
          line: 234,
          column: 99
        }
      },
      "126": {
        start: {
          line: 235,
          column: 24
        },
        end: {
          line: 235,
          column: 43
        }
      },
      "127": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 236,
          column: 123
        }
      },
      "128": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 81
        }
      },
      "129": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 208
        }
      },
      "130": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 243,
          column: 13
        }
      },
      "131": {
        start: {
          line: 241,
          column: 16
        },
        end: {
          line: 241,
          column: 111
        }
      },
      "132": {
        start: {
          line: 242,
          column: 16
        },
        end: {
          line: 242,
          column: 90
        }
      },
      "133": {
        start: {
          line: 242,
          column: 45
        },
        end: {
          line: 242,
          column: 88
        }
      },
      "134": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 250,
          column: 9
        }
      },
      "135": {
        start: {
          line: 247,
          column: 33
        },
        end: {
          line: 247,
          column: 37
        }
      },
      "136": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 97
        }
      },
      "137": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 76
        }
      },
      "138": {
        start: {
          line: 249,
          column: 41
        },
        end: {
          line: 249,
          column: 74
        }
      },
      "139": {
        start: {
          line: 252,
          column: 4
        },
        end: {
          line: 252,
          column: 17
        }
      },
      "140": {
        start: {
          line: 257,
          column: 29
        },
        end: {
          line: 307,
          column: 1
        }
      },
      "141": {
        start: {
          line: 258,
          column: 4
        },
        end: {
          line: 306,
          column: 5
        }
      },
      "142": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 259,
          column: 107
        }
      },
      "143": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 260,
          column: 123
        }
      },
      "144": {
        start: {
          line: 262,
          column: 25
        },
        end: {
          line: 262,
          column: 46
        }
      },
      "145": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 273,
          column: 9
        }
      },
      "146": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 264,
          column: 83
        }
      },
      "147": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 272,
          column: 14
        }
      },
      "148": {
        start: {
          line: 275,
          column: 31
        },
        end: {
          line: 277,
          column: 40
        }
      },
      "149": {
        start: {
          line: 275,
          column: 55
        },
        end: {
          line: 277,
          column: 39
        }
      },
      "150": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 278,
          column: 167
        }
      },
      "151": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 279,
          column: 100
        }
      },
      "152": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 290,
          column: 9
        }
      },
      "153": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 281,
          column: 87
        }
      },
      "154": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 289,
          column: 14
        }
      },
      "155": {
        start: {
          line: 292,
          column: 22
        },
        end: {
          line: 292,
          column: 100
        }
      },
      "156": {
        start: {
          line: 293,
          column: 28
        },
        end: {
          line: 293,
          column: 95
        }
      },
      "157": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 294,
          column: 89
        }
      },
      "158": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 295,
          column: 72
        }
      },
      "159": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 296,
          column: 73
        }
      },
      "160": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 297,
          column: 53
        }
      },
      "161": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 298,
          column: 87
        }
      },
      "162": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 299,
          column: 79
        }
      },
      "163": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 300,
          column: 84
        }
      },
      "164": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 301,
          column: 21
        }
      },
      "165": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 304,
          column: 91
        }
      },
      "166": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 305,
          column: 20
        }
      },
      "167": {
        start: {
          line: 308,
          column: 0
        },
        end: {
          line: 308,
          column: 52
        }
      },
      "168": {
        start: {
          line: 312,
          column: 29
        },
        end: {
          line: 337,
          column: 1
        }
      },
      "169": {
        start: {
          line: 313,
          column: 17
        },
        end: {
          line: 313,
          column: 38
        }
      },
      "170": {
        start: {
          line: 314,
          column: 20
        },
        end: {
          line: 314,
          column: 21
        }
      },
      "171": {
        start: {
          line: 315,
          column: 16
        },
        end: {
          line: 315,
          column: 20
        }
      },
      "172": {
        start: {
          line: 317,
          column: 4
        },
        end: {
          line: 325,
          column: 5
        }
      },
      "173": {
        start: {
          line: 318,
          column: 32
        },
        end: {
          line: 318,
          column: 53
        }
      },
      "174": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 324,
          column: 9
        }
      },
      "175": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 320,
          column: 40
        }
      },
      "176": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 323,
          column: 99
        }
      },
      "177": {
        start: {
          line: 327,
          column: 4
        },
        end: {
          line: 335,
          column: 5
        }
      },
      "178": {
        start: {
          line: 328,
          column: 28
        },
        end: {
          line: 328,
          column: 49
        }
      },
      "179": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 334,
          column: 9
        }
      },
      "180": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 330,
          column: 32
        }
      },
      "181": {
        start: {
          line: 333,
          column: 12
        },
        end: {
          line: 333,
          column: 99
        }
      },
      "182": {
        start: {
          line: 336,
          column: 4
        },
        end: {
          line: 336,
          column: 32
        }
      },
      "183": {
        start: {
          line: 341,
          column: 0
        },
        end: {
          line: 357,
          column: 1
        }
      },
      "184": {
        start: {
          line: 342,
          column: 4
        },
        end: {
          line: 356,
          column: 9
        }
      },
      "185": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 355,
          column: 9
        }
      },
      "186": {
        start: {
          line: 344,
          column: 12
        },
        end: {
          line: 344,
          column: 92
        }
      },
      "187": {
        start: {
          line: 346,
          column: 41
        },
        end: {
          line: 346,
          column: 63
        }
      },
      "188": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 348,
          column: 57
        }
      },
      "189": {
        start: {
          line: 349,
          column: 12
        },
        end: {
          line: 349,
          column: 97
        }
      },
      "190": {
        start: {
          line: 350,
          column: 12
        },
        end: {
          line: 350,
          column: 28
        }
      },
      "191": {
        start: {
          line: 353,
          column: 12
        },
        end: {
          line: 353,
          column: 79
        }
      },
      "192": {
        start: {
          line: 354,
          column: 12
        },
        end: {
          line: 354,
          column: 28
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 56
          },
          end: {
            line: 14,
            column: 57
          }
        },
        loc: {
          start: {
            line: 14,
            column: 71
          },
          end: {
            line: 16,
            column: 1
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 27,
            column: 27
          }
        },
        loc: {
          start: {
            line: 27,
            column: 44
          },
          end: {
            line: 42,
            column: 1
          }
        },
        line: 27
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 46,
            column: 21
          },
          end: {
            line: 46,
            column: 22
          }
        },
        loc: {
          start: {
            line: 46,
            column: 32
          },
          end: {
            line: 54,
            column: 1
          }
        },
        line: 46
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 58,
            column: 30
          },
          end: {
            line: 58,
            column: 31
          }
        },
        loc: {
          start: {
            line: 58,
            column: 40
          },
          end: {
            line: 73,
            column: 1
          }
        },
        line: 58
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 77,
            column: 22
          },
          end: {
            line: 77,
            column: 23
          }
        },
        loc: {
          start: {
            line: 77,
            column: 34
          },
          end: {
            line: 118,
            column: 1
          }
        },
        line: 77
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 98,
            column: 26
          },
          end: {
            line: 98,
            column: 27
          }
        },
        loc: {
          start: {
            line: 98,
            column: 37
          },
          end: {
            line: 98,
            column: 62
          }
        },
        line: 98
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 122,
            column: 30
          },
          end: {
            line: 122,
            column: 31
          }
        },
        loc: {
          start: {
            line: 122,
            column: 85
          },
          end: {
            line: 154,
            column: 1
          }
        },
        line: 122
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 137,
            column: 34
          },
          end: {
            line: 137,
            column: 35
          }
        },
        loc: {
          start: {
            line: 137,
            column: 45
          },
          end: {
            line: 137,
            column: 70
          }
        },
        line: 137
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 149,
            column: 30
          },
          end: {
            line: 149,
            column: 31
          }
        },
        loc: {
          start: {
            line: 149,
            column: 41
          },
          end: {
            line: 149,
            column: 66
          }
        },
        line: 149
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 158,
            column: 20
          },
          end: {
            line: 158,
            column: 21
          }
        },
        loc: {
          start: {
            line: 158,
            column: 52
          },
          end: {
            line: 198,
            column: 1
          }
        },
        line: 158
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 171,
            column: 34
          },
          end: {
            line: 171,
            column: 35
          }
        },
        loc: {
          start: {
            line: 171,
            column: 45
          },
          end: {
            line: 171,
            column: 70
          }
        },
        line: 171
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 193,
            column: 30
          },
          end: {
            line: 193,
            column: 31
          }
        },
        loc: {
          start: {
            line: 193,
            column: 41
          },
          end: {
            line: 193,
            column: 66
          }
        },
        line: 193
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 202,
            column: 30
          },
          end: {
            line: 202,
            column: 31
          }
        },
        loc: {
          start: {
            line: 202,
            column: 93
          },
          end: {
            line: 253,
            column: 1
          }
        },
        line: 202
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 242,
            column: 34
          },
          end: {
            line: 242,
            column: 35
          }
        },
        loc: {
          start: {
            line: 242,
            column: 45
          },
          end: {
            line: 242,
            column: 88
          }
        },
        line: 242
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 249,
            column: 30
          },
          end: {
            line: 249,
            column: 31
          }
        },
        loc: {
          start: {
            line: 249,
            column: 41
          },
          end: {
            line: 249,
            column: 74
          }
        },
        line: 249
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 257,
            column: 29
          },
          end: {
            line: 257,
            column: 30
          }
        },
        loc: {
          start: {
            line: 257,
            column: 85
          },
          end: {
            line: 307,
            column: 1
          }
        },
        line: 257
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 275,
            column: 47
          },
          end: {
            line: 275,
            column: 48
          }
        },
        loc: {
          start: {
            line: 275,
            column: 55
          },
          end: {
            line: 277,
            column: 39
          }
        },
        line: 275
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 312,
            column: 29
          },
          end: {
            line: 312,
            column: 30
          }
        },
        loc: {
          start: {
            line: 312,
            column: 35
          },
          end: {
            line: 337,
            column: 1
          }
        },
        line: 312
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 342,
            column: 5
          },
          end: {
            line: 342,
            column: 6
          }
        },
        loc: {
          start: {
            line: 342,
            column: 17
          },
          end: {
            line: 356,
            column: 5
          }
        },
        line: 342
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 22
          },
          end: {
            line: 16,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 23
          },
          end: {
            line: 14,
            column: 27
          }
        }, {
          start: {
            line: 14,
            column: 31
          },
          end: {
            line: 14,
            column: 51
          }
        }, {
          start: {
            line: 14,
            column: 56
          },
          end: {
            line: 16,
            column: 1
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 15,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 15,
            column: 37
          },
          end: {
            line: 15,
            column: 40
          }
        }, {
          start: {
            line: 15,
            column: 43
          },
          end: {
            line: 15,
            column: 61
          }
        }],
        line: 15
      },
      "2": {
        loc: {
          start: {
            line: 15,
            column: 12
          },
          end: {
            line: 15,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 12
          },
          end: {
            line: 15,
            column: 15
          }
        }, {
          start: {
            line: 15,
            column: 19
          },
          end: {
            line: 15,
            column: 33
          }
        }],
        line: 15
      },
      "3": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: 36,
            column: 9
          },
          end: {
            line: 41,
            column: 5
          }
        }],
        line: 33
      },
      "4": {
        loc: {
          start: {
            line: 36,
            column: 9
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 9
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: 39,
            column: 9
          },
          end: {
            line: 41,
            column: 5
          }
        }],
        line: 36
      },
      "5": {
        loc: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 48,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 48,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "6": {
        loc: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "7": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 63,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 60,
            column: 30
          }
        }, {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 61,
            column: 35
          }
        }, {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 62,
            column: 31
          }
        }, {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 63,
            column: 36
          }
        }],
        line: 60
      },
      "8": {
        loc: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "9": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 69,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 68,
            column: 40
          }
        }, {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 69,
            column: 41
          }
        }],
        line: 68
      },
      "10": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "11": {
        loc: {
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "12": {
        loc: {
          start: {
            line: 87,
            column: 12
          },
          end: {
            line: 87,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 12
          },
          end: {
            line: 87,
            column: 17
          }
        }, {
          start: {
            line: 87,
            column: 21
          },
          end: {
            line: 87,
            column: 41
          }
        }],
        line: 87
      },
      "13": {
        loc: {
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 106,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 106,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "14": {
        loc: {
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "15": {
        loc: {
          start: {
            line: 107,
            column: 16
          },
          end: {
            line: 107,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 16
          },
          end: {
            line: 107,
            column: 21
          }
        }, {
          start: {
            line: 107,
            column: 25
          },
          end: {
            line: 107,
            column: 45
          }
        }],
        line: 107
      },
      "16": {
        loc: {
          start: {
            line: 122,
            column: 66
          },
          end: {
            line: 122,
            column: 80
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 122,
            column: 79
          },
          end: {
            line: 122,
            column: 80
          }
        }],
        line: 122
      },
      "17": {
        loc: {
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "18": {
        loc: {
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 139,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 139,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "19": {
        loc: {
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 151,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 151,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "20": {
        loc: {
          start: {
            line: 158,
            column: 33
          },
          end: {
            line: 158,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 158,
            column: 46
          },
          end: {
            line: 158,
            column: 47
          }
        }],
        line: 158
      },
      "21": {
        loc: {
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "22": {
        loc: {
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "23": {
        loc: {
          start: {
            line: 169,
            column: 12
          },
          end: {
            line: 173,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 12
          },
          end: {
            line: 173,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 169
      },
      "24": {
        loc: {
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        }, {
          start: {
            line: 183,
            column: 13
          },
          end: {
            line: 186,
            column: 9
          }
        }],
        line: 179
      },
      "25": {
        loc: {
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 195,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 195,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "26": {
        loc: {
          start: {
            line: 202,
            column: 44
          },
          end: {
            line: 202,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 202,
            column: 56
          },
          end: {
            line: 202,
            column: 57
          }
        }],
        line: 202
      },
      "27": {
        loc: {
          start: {
            line: 202,
            column: 59
          },
          end: {
            line: 202,
            column: 88
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 202,
            column: 84
          },
          end: {
            line: 202,
            column: 88
          }
        }],
        line: 202
      },
      "28": {
        loc: {
          start: {
            line: 219,
            column: 12
          },
          end: {
            line: 223,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 12
          },
          end: {
            line: 223,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 219
      },
      "29": {
        loc: {
          start: {
            line: 226,
            column: 12
          },
          end: {
            line: 231,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 12
          },
          end: {
            line: 231,
            column: 13
          }
        }, {
          start: {
            line: 229,
            column: 17
          },
          end: {
            line: 231,
            column: 13
          }
        }],
        line: 226
      },
      "30": {
        loc: {
          start: {
            line: 240,
            column: 12
          },
          end: {
            line: 243,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 12
          },
          end: {
            line: 243,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "31": {
        loc: {
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 250,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 250,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "32": {
        loc: {
          start: {
            line: 257,
            column: 36
          },
          end: {
            line: 257,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 257,
            column: 48
          },
          end: {
            line: 257,
            column: 49
          }
        }],
        line: 257
      },
      "33": {
        loc: {
          start: {
            line: 257,
            column: 51
          },
          end: {
            line: 257,
            column: 80
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 257,
            column: 76
          },
          end: {
            line: 257,
            column: 80
          }
        }],
        line: 257
      },
      "34": {
        loc: {
          start: {
            line: 263,
            column: 8
          },
          end: {
            line: 273,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 263,
            column: 8
          },
          end: {
            line: 273,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 263
      },
      "35": {
        loc: {
          start: {
            line: 275,
            column: 55
          },
          end: {
            line: 277,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 275,
            column: 55
          },
          end: {
            line: 275,
            column: 67
          }
        }, {
          start: {
            line: 276,
            column: 12
          },
          end: {
            line: 276,
            column: 42
          }
        }, {
          start: {
            line: 277,
            column: 12
          },
          end: {
            line: 277,
            column: 39
          }
        }],
        line: 275
      },
      "36": {
        loc: {
          start: {
            line: 280,
            column: 8
          },
          end: {
            line: 290,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 280,
            column: 8
          },
          end: {
            line: 290,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 280
      },
      "37": {
        loc: {
          start: {
            line: 317,
            column: 4
          },
          end: {
            line: 325,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 4
          },
          end: {
            line: 325,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 317
      },
      "38": {
        loc: {
          start: {
            line: 319,
            column: 8
          },
          end: {
            line: 324,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 319,
            column: 8
          },
          end: {
            line: 324,
            column: 9
          }
        }, {
          start: {
            line: 322,
            column: 13
          },
          end: {
            line: 324,
            column: 9
          }
        }],
        line: 319
      },
      "39": {
        loc: {
          start: {
            line: 319,
            column: 12
          },
          end: {
            line: 319,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 319,
            column: 12
          },
          end: {
            line: 319,
            column: 35
          }
        }, {
          start: {
            line: 319,
            column: 39
          },
          end: {
            line: 319,
            column: 58
          }
        }],
        line: 319
      },
      "40": {
        loc: {
          start: {
            line: 327,
            column: 4
          },
          end: {
            line: 335,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 327,
            column: 4
          },
          end: {
            line: 335,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 327
      },
      "41": {
        loc: {
          start: {
            line: 329,
            column: 8
          },
          end: {
            line: 334,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 329,
            column: 8
          },
          end: {
            line: 334,
            column: 9
          }
        }, {
          start: {
            line: 332,
            column: 13
          },
          end: {
            line: 334,
            column: 9
          }
        }],
        line: 329
      },
      "42": {
        loc: {
          start: {
            line: 329,
            column: 12
          },
          end: {
            line: 329,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 329,
            column: 12
          },
          end: {
            line: 329,
            column: 31
          }
        }, {
          start: {
            line: 329,
            column: 35
          },
          end: {
            line: 329,
            column: 51
          }
        }],
        line: 329
      },
      "43": {
        loc: {
          start: {
            line: 341,
            column: 0
          },
          end: {
            line: 357,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 341,
            column: 0
          },
          end: {
            line: 357,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 341
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0],
      "27": [0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0],
      "33": [0],
      "34": [0, 0],
      "35": [0, 0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kevin/card-show-finder/src/scripts/geocodeExistingShows.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/kevin/card-show-finder/src/scripts/geocodeExistingShows.ts"],
      sourcesContent: ["/**\n * Geocode Existing Shows Script\n * \n * This script finds all shows in the database that have addresses but missing\n * or invalid coordinates (null, undefined, or near 0,0) and geocodes them.\n * \n * Usage:\n * 1. Make sure you're logged in to Supabase (this uses the existing client)\n * 2. Run with: npx ts-node src/scripts/geocodeExistingShows.ts [batchSize] [delayMs]\n *    - batchSize: Number of shows to process in each batch (default: 5)\n *    - delayMs: Delay in milliseconds between requests (default: 1000)\n */\n\nimport { supabase } from '../supabase';\nimport { geocodeAddress } from '../services/locationService';\nimport chalk from 'chalk';\n\n// Type definitions\ninterface Show {\n  id: string;\n  title: string;\n  address: string;\n  latitude?: number | null;\n  longitude?: number | null;\n}\n\ninterface GeocodingStats {\n  total: number;\n  processed: number;\n  succeeded: number;\n  failed: number;\n  skipped: number;\n  startTime: Date;\n}\n\n// Maximum number of retries for geocoding requests\nconst MAX_RETRIES = 3;\n\n/**\n * Format elapsed time in a human-readable format\n */\nconst formatElapsedTime = (milliseconds: number): string => {\n  const seconds = Math.floor(milliseconds / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const hours = Math.floor(minutes / 60);\n  \n  const remainingMinutes = minutes % 60;\n  const remainingSeconds = seconds % 60;\n  \n  if (hours > 0) {\n    return `${hours}h ${remainingMinutes}m ${remainingSeconds}s`;\n  } else if (minutes > 0) {\n    return `${minutes}m ${remainingSeconds}s`;\n  } else {\n    return `${seconds}s`;\n  }\n};\n\n/**\n * Calculate and format estimated time remaining\n */\nconst calculateEta = (stats: GeocodingStats): string => {\n  if (stats.processed === 0) return 'calculating...';\n  \n  const elapsedMs = new Date().getTime() - stats.startTime.getTime();\n  const msPerItem = elapsedMs / stats.processed;\n  const remainingItems = stats.total - stats.processed;\n  const estimatedRemainingMs = msPerItem * remainingItems;\n  \n  return formatElapsedTime(estimatedRemainingMs);\n};\n\n/**\n * Check if coordinates are missing or invalid (null, undefined, or near 0,0)\n */\nconst hasInvalidCoordinates = (show: Show): boolean => {\n  // Check if coordinates are missing\n  if (\n    show.latitude === null || \n    show.latitude === undefined || \n    show.longitude === null || \n    show.longitude === undefined\n  ) {\n    return true;\n  }\n  \n  // Check if coordinates are suspiciously close to 0,0\n  // (which is in the Gulf of Guinea, unlikely for a real card show)\n  if (\n    Math.abs(show.latitude) < 0.0001 && \n    Math.abs(show.longitude) < 0.0001\n  ) {\n    return true;\n  }\n  \n  return false;\n};\n\n/**\n * Fetch all shows from the database\n */\nconst fetchAllShows = async (): Promise<Show[]> => {\n  console.log(chalk.cyan('Fetching all shows from the database...'));\n  \n  try {\n    const { data, error } = await supabase\n      .from('shows')\n      .select('id, title, address, latitude, longitude')\n      .order('created_at', { ascending: false });\n    \n    if (error) {\n      throw new Error(`Error fetching shows: ${error.message}`);\n    }\n    \n    if (!data || !Array.isArray(data)) {\n      console.log(chalk.yellow('No shows found in the database.'));\n      return [];\n    }\n    \n    console.log(chalk.green(`Successfully fetched ${data.length} shows`));\n    return data as Show[];\n  } catch (error) {\n    console.error(chalk.red('Failed to fetch shows:'), error);\n    \n    // Retry once after a short delay\n    console.log(chalk.yellow('Retrying fetch after 5 seconds...'));\n    await new Promise(resolve => setTimeout(resolve, 5000));\n    \n    try {\n      const { data, error } = await supabase\n        .from('shows')\n        .select('id, title, address, latitude, longitude')\n        .order('created_at', { ascending: false });\n      \n      if (error) {\n        throw new Error(`Error fetching shows on retry: ${error.message}`);\n      }\n      \n      if (!data || !Array.isArray(data)) {\n        return [];\n      }\n      \n      console.log(chalk.green(`Successfully fetched ${data.length} shows on retry`));\n      return data as Show[];\n    } catch (retryError) {\n      console.error(chalk.red('Failed to fetch shows on retry:'), retryError);\n      return [];\n    }\n  }\n};\n\n/**\n * Update a show with new coordinates\n */\nconst updateShowCoordinates = async (\n  showId: string, \n  latitude: number, \n  longitude: number,\n  retryCount: number = 0\n): Promise<boolean> => {\n  try {\n    const { error } = await supabase\n      .from('shows')\n      .update({\n        latitude,\n        longitude,\n        updated_at: new Date().toISOString()\n      })\n      .eq('id', showId);\n    \n    if (error) {\n      console.error(chalk.red(`Failed to update show ${showId}:`), error.message);\n      \n      // Retry logic\n      if (retryCount < MAX_RETRIES) {\n        console.log(chalk.yellow(`Retrying update (attempt ${retryCount + 1} of ${MAX_RETRIES})...`));\n        await new Promise(resolve => setTimeout(resolve, 2000));\n        return updateShowCoordinates(showId, latitude, longitude, retryCount + 1);\n      }\n      \n      return false;\n    }\n    \n    return true;\n  } catch (error) {\n    console.error(chalk.red(`Error updating show ${showId}:`), error);\n    \n    // Retry logic\n    if (retryCount < MAX_RETRIES) {\n      console.log(chalk.yellow(`Retrying update (attempt ${retryCount + 1} of ${MAX_RETRIES})...`));\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      return updateShowCoordinates(showId, latitude, longitude, retryCount + 1);\n    }\n    \n    return false;\n  }\n};\n\n/**\n * Process a single show - geocode its address and update coordinates\n */\nconst processShow = async (show: Show, retryCount: number = 0): Promise<boolean> => {\n  if (!show.address) {\n    console.log(chalk.yellow(`Skipping show \"${show.title}\" (ID: ${show.id}) - No address provided`));\n    return false;\n  }\n  \n  try {\n    console.log(chalk.cyan(`Geocoding address for \"${show.title}\" (ID: ${show.id}): ${show.address}`));\n    \n    const coordinates = await geocodeAddress(show.address);\n    \n    if (!coordinates) {\n      console.error(chalk.red(`Failed to geocode address for show \"${show.title}\" (ID: ${show.id})`));\n      \n      // Retry logic\n      if (retryCount < MAX_RETRIES) {\n        console.log(chalk.yellow(`Retrying geocoding (attempt ${retryCount + 1} of ${MAX_RETRIES})...`));\n        await new Promise(resolve => setTimeout(resolve, 2000));\n        return processShow(show, retryCount + 1);\n      }\n      \n      return false;\n    }\n    \n    console.log(chalk.green(`Successfully geocoded \"${show.title}\" - Coordinates:`), coordinates);\n    \n    // Update the show with new coordinates\n    const updated = await updateShowCoordinates(\n      show.id, \n      coordinates.latitude, \n      coordinates.longitude\n    );\n    \n    if (updated) {\n      console.log(chalk.green(`Updated coordinates for show \"${show.title}\" (ID: ${show.id})`));\n      return true;\n    } else {\n      console.error(chalk.red(`Failed to update coordinates for show \"${show.title}\" (ID: ${show.id})`));\n      return false;\n    }\n  } catch (error) {\n    console.error(chalk.red(`Error processing show \"${show.title}\" (ID: ${show.id}):`), error);\n    \n    // Retry logic\n    if (retryCount < MAX_RETRIES) {\n      console.log(chalk.yellow(`Retrying due to error (attempt ${retryCount + 1} of ${MAX_RETRIES})...`));\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      return processShow(show, retryCount + 1);\n    }\n    \n    return false;\n  }\n};\n\n/**\n * Process shows in batches with delays to avoid rate limits\n */\nconst processShowsInBatches = async (\n  shows: Show[], \n  batchSize: number = 5, \n  delayBetweenRequestsMs: number = 1000\n): Promise<GeocodingStats> => {\n  const stats: GeocodingStats = {\n    total: shows.length,\n    processed: 0,\n    succeeded: 0,\n    failed: 0,\n    skipped: 0,\n    startTime: new Date()\n  };\n  \n  const totalBatches = Math.ceil(shows.length / batchSize);\n  \n  // Process shows in batches\n  for (let i = 0; i < shows.length; i += batchSize) {\n    const batch = shows.slice(i, i + batchSize);\n    const currentBatch = Math.floor(i / batchSize) + 1;\n    \n    console.log(chalk.bold.blue(`\\n--- Processing batch ${currentBatch} of ${totalBatches} ---`));\n    \n    // Process each show in the batch\n    for (const show of batch) {\n      if (!show.address) {\n        console.log(chalk.yellow(`Skipping show \"${show.title}\" - No address provided`));\n        stats.skipped++;\n        continue;\n      }\n      \n      const success = await processShow(show);\n      stats.processed++;\n      \n      if (success) {\n        stats.succeeded++;\n      } else {\n        stats.failed++;\n      }\n      \n      // Calculate and display progress\n      const percentComplete = Math.round((stats.processed / stats.total) * 100);\n      const elapsedTime = formatElapsedTime(new Date().getTime() - stats.startTime.getTime());\n      const eta = calculateEta(stats);\n      \n      console.log(chalk.bold(`\\nProgress: ${stats.processed}/${stats.total} shows (${percentComplete}%)`));\n      console.log(`Elapsed: ${elapsedTime} | Estimated remaining: ${eta}`);\n      console.log(`Success: ${chalk.green(stats.succeeded.toString())}, Failed: ${chalk.red(stats.failed.toString())}, Skipped: ${chalk.yellow(stats.skipped.toString())}`);\n      \n      // Add delay between requests to avoid rate limits\n      if (batch.indexOf(show) < batch.length - 1) {\n        console.log(chalk.dim(`Waiting ${delayBetweenRequestsMs}ms before next request...`));\n        await new Promise(resolve => setTimeout(resolve, delayBetweenRequestsMs));\n      }\n    }\n    \n    // Add delay between batches\n    if (i + batchSize < shows.length) {\n      const batchDelayMs = 3000;\n      console.log(chalk.dim(`\\nWaiting ${batchDelayMs}ms before next batch...`));\n      await new Promise(resolve => setTimeout(resolve, batchDelayMs));\n    }\n  }\n  \n  return stats;\n};\n\n/**\n * Main function to geocode all shows with missing or invalid coordinates\n */\nconst geocodeExistingShows = async (\n  batchSize: number = 5, \n  delayBetweenRequestsMs: number = 1000\n): Promise<GeocodingStats> => {\n  try {\n    console.log(chalk.bold.green('\\n=== Starting geocoding process for existing shows ==='));\n    console.log(chalk.cyan(`Batch size: ${batchSize}, Delay between requests: ${delayBetweenRequestsMs}ms`));\n    \n    // Fetch all shows\n    const allShows = await fetchAllShows();\n    \n    if (allShows.length === 0) {\n      console.log(chalk.yellow('No shows found in the database.'));\n      return {\n        total: 0,\n        processed: 0,\n        succeeded: 0,\n        failed: 0,\n        skipped: 0,\n        startTime: new Date()\n      };\n    }\n    \n    // Filter shows with valid addresses but missing or invalid coordinates\n    const showsToProcess = allShows.filter(show => \n      show.address && \n      show.address.trim().length > 0 && \n      hasInvalidCoordinates(show)\n    );\n    \n    console.log(chalk.bold(`\\nFound ${chalk.cyan(showsToProcess.length.toString())} shows with addresses but missing or invalid coordinates`));\n    console.log(chalk.dim(`(out of ${allShows.length} total shows in the database)`));\n    \n    if (showsToProcess.length === 0) {\n      console.log(chalk.green('\\nNo shows need geocoding. All done!'));\n      return {\n        total: allShows.length,\n        processed: 0,\n        succeeded: 0,\n        failed: 0,\n        skipped: allShows.length,\n        startTime: new Date()\n      };\n    }\n    \n    // Process shows in batches\n    const stats = await processShowsInBatches(\n      showsToProcess, \n      batchSize, \n      delayBetweenRequestsMs\n    );\n    \n    const elapsedTime = formatElapsedTime(new Date().getTime() - stats.startTime.getTime());\n    \n    console.log(chalk.bold.green('\\n=== Geocoding process completed ==='));\n    console.log(chalk.bold(`Total time: ${elapsedTime}`));\n    console.log(chalk.bold(`Total shows: ${stats.total}`));\n    console.log(`Processed: ${stats.processed}`);\n    console.log(`Succeeded: ${chalk.green(stats.succeeded.toString())}`);\n    console.log(`Failed: ${chalk.red(stats.failed.toString())}`);\n    console.log(`Skipped: ${chalk.yellow(stats.skipped.toString())}`);\n    \n    return stats;\n  } catch (error) {\n    console.error(chalk.bold.red('\\nError in geocodeExistingShows:'), error);\n    throw error;\n  }\n};\n\n/**\n * Parse command line arguments\n */\nconst parseCommandLineArgs = (): { batchSize: number; delay: number } => {\n  const args = process.argv.slice(2);\n  \n  let batchSize = 5;\n  let delay = 1000;\n  \n  // Check if batch size is provided\n  if (args.length >= 1) {\n    const parsedBatchSize = parseInt(args[0], 10);\n    if (!isNaN(parsedBatchSize) && parsedBatchSize > 0) {\n      batchSize = parsedBatchSize;\n    } else {\n      console.warn(chalk.yellow('Invalid batch size provided, using default (5)'));\n    }\n  }\n  \n  // Check if delay is provided\n  if (args.length >= 2) {\n    const parsedDelay = parseInt(args[1], 10);\n    if (!isNaN(parsedDelay) && parsedDelay >= 0) {\n      delay = parsedDelay;\n    } else {\n      console.warn(chalk.yellow('Invalid delay provided, using default (1000ms)'));\n    }\n  }\n  \n  return { batchSize, delay };\n};\n\n/**\n * Run the script directly if executed with node/ts-node\n */\nif (require.main === module) {\n  (async () => {\n    try {\n      console.log(chalk.bold.magenta('\\n=== GEOCODING EXISTING SHOWS ==='));\n      \n      // Parse command line arguments\n      const { batchSize, delay } = parseCommandLineArgs();\n      \n      // Run the geocoding process\n      await geocodeExistingShows(batchSize, delay);\n      \n      console.log(chalk.bold.magenta('\\n=== SCRIPT COMPLETED SUCCESSFULLY ==='));\n      process.exit(0);\n    } catch (error) {\n      console.error(chalk.bold.red('\\nScript failed:'), error);\n      process.exit(1);\n    }\n  })();\n}\n\n// Export for use in other scripts\nexport { geocodeExistingShows };\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "dbb94f2f46ddfcb454b4389a15dd99384b508c3b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1fk5pgtda3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1fk5pgtda3();
var __importDefault =
/* istanbul ignore next */
(cov_1fk5pgtda3().s[0]++,
/* istanbul ignore next */
(cov_1fk5pgtda3().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1fk5pgtda3().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1fk5pgtda3().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1fk5pgtda3().f[0]++;
  cov_1fk5pgtda3().s[1]++;
  return /* istanbul ignore next */(cov_1fk5pgtda3().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1fk5pgtda3().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1fk5pgtda3().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1fk5pgtda3().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1fk5pgtda3().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1fk5pgtda3().s[3]++;
exports.geocodeExistingShows = void 0;
const supabase_1 =
/* istanbul ignore next */
(cov_1fk5pgtda3().s[4]++, require("../supabase"));
const locationService_1 =
/* istanbul ignore next */
(cov_1fk5pgtda3().s[5]++, require("../services/locationService"));
const chalk_1 =
/* istanbul ignore next */
(cov_1fk5pgtda3().s[6]++, __importDefault(require("chalk")));
// Maximum number of retries for geocoding requests
const MAX_RETRIES =
/* istanbul ignore next */
(cov_1fk5pgtda3().s[7]++, 3);
/**
 * Format elapsed time in a human-readable format
 */
/* istanbul ignore next */
cov_1fk5pgtda3().s[8]++;
const formatElapsedTime = milliseconds => {
  /* istanbul ignore next */
  cov_1fk5pgtda3().f[1]++;
  const seconds =
  /* istanbul ignore next */
  (cov_1fk5pgtda3().s[9]++, Math.floor(milliseconds / 1000));
  const minutes =
  /* istanbul ignore next */
  (cov_1fk5pgtda3().s[10]++, Math.floor(seconds / 60));
  const hours =
  /* istanbul ignore next */
  (cov_1fk5pgtda3().s[11]++, Math.floor(minutes / 60));
  const remainingMinutes =
  /* istanbul ignore next */
  (cov_1fk5pgtda3().s[12]++, minutes % 60);
  const remainingSeconds =
  /* istanbul ignore next */
  (cov_1fk5pgtda3().s[13]++, seconds % 60);
  /* istanbul ignore next */
  cov_1fk5pgtda3().s[14]++;
  if (hours > 0) {
    /* istanbul ignore next */
    cov_1fk5pgtda3().b[3][0]++;
    cov_1fk5pgtda3().s[15]++;
    return `${hours}h ${remainingMinutes}m ${remainingSeconds}s`;
  } else {
    /* istanbul ignore next */
    cov_1fk5pgtda3().b[3][1]++;
    cov_1fk5pgtda3().s[16]++;
    if (minutes > 0) {
      /* istanbul ignore next */
      cov_1fk5pgtda3().b[4][0]++;
      cov_1fk5pgtda3().s[17]++;
      return `${minutes}m ${remainingSeconds}s`;
    } else {
      /* istanbul ignore next */
      cov_1fk5pgtda3().b[4][1]++;
      cov_1fk5pgtda3().s[18]++;
      return `${seconds}s`;
    }
  }
};
/**
 * Calculate and format estimated time remaining
 */
/* istanbul ignore next */
cov_1fk5pgtda3().s[19]++;
const calculateEta = stats => {
  /* istanbul ignore next */
  cov_1fk5pgtda3().f[2]++;
  cov_1fk5pgtda3().s[20]++;
  if (stats.processed === 0) {
    /* istanbul ignore next */
    cov_1fk5pgtda3().b[5][0]++;
    cov_1fk5pgtda3().s[21]++;
    return 'calculating...';
  } else
  /* istanbul ignore next */
  {
    cov_1fk5pgtda3().b[5][1]++;
  }
  const elapsedMs =
  /* istanbul ignore next */
  (cov_1fk5pgtda3().s[22]++, new Date().getTime() - stats.startTime.getTime());
  const msPerItem =
  /* istanbul ignore next */
  (cov_1fk5pgtda3().s[23]++, elapsedMs / stats.processed);
  const remainingItems =
  /* istanbul ignore next */
  (cov_1fk5pgtda3().s[24]++, stats.total - stats.processed);
  const estimatedRemainingMs =
  /* istanbul ignore next */
  (cov_1fk5pgtda3().s[25]++, msPerItem * remainingItems);
  /* istanbul ignore next */
  cov_1fk5pgtda3().s[26]++;
  return formatElapsedTime(estimatedRemainingMs);
};
/**
 * Check if coordinates are missing or invalid (null, undefined, or near 0,0)
 */
/* istanbul ignore next */
cov_1fk5pgtda3().s[27]++;
const hasInvalidCoordinates = show => {
  /* istanbul ignore next */
  cov_1fk5pgtda3().f[3]++;
  cov_1fk5pgtda3().s[28]++;
  // Check if coordinates are missing
  if (
  /* istanbul ignore next */
  (cov_1fk5pgtda3().b[7][0]++, show.latitude === null) ||
  /* istanbul ignore next */
  (cov_1fk5pgtda3().b[7][1]++, show.latitude === undefined) ||
  /* istanbul ignore next */
  (cov_1fk5pgtda3().b[7][2]++, show.longitude === null) ||
  /* istanbul ignore next */
  (cov_1fk5pgtda3().b[7][3]++, show.longitude === undefined)) {
    /* istanbul ignore next */
    cov_1fk5pgtda3().b[6][0]++;
    cov_1fk5pgtda3().s[29]++;
    return true;
  } else
  /* istanbul ignore next */
  {
    cov_1fk5pgtda3().b[6][1]++;
  }
  // Check if coordinates are suspiciously close to 0,0
  // (which is in the Gulf of Guinea, unlikely for a real card show)
  cov_1fk5pgtda3().s[30]++;
  if (
  /* istanbul ignore next */
  (cov_1fk5pgtda3().b[9][0]++, Math.abs(show.latitude) < 0.0001) &&
  /* istanbul ignore next */
  (cov_1fk5pgtda3().b[9][1]++, Math.abs(show.longitude) < 0.0001)) {
    /* istanbul ignore next */
    cov_1fk5pgtda3().b[8][0]++;
    cov_1fk5pgtda3().s[31]++;
    return true;
  } else
  /* istanbul ignore next */
  {
    cov_1fk5pgtda3().b[8][1]++;
  }
  cov_1fk5pgtda3().s[32]++;
  return false;
};
/**
 * Fetch all shows from the database
 */
/* istanbul ignore next */
cov_1fk5pgtda3().s[33]++;
const fetchAllShows = async () => {
  /* istanbul ignore next */
  cov_1fk5pgtda3().f[4]++;
  cov_1fk5pgtda3().s[34]++;
  console.log(chalk_1.default.cyan('Fetching all shows from the database...'));
  /* istanbul ignore next */
  cov_1fk5pgtda3().s[35]++;
  try {
    const {
      data,
      error
    } =
    /* istanbul ignore next */
    (cov_1fk5pgtda3().s[36]++, await supabase_1.supabase.from('shows').select('id, title, address, latitude, longitude').order('created_at', {
      ascending: false
    }));
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[37]++;
    if (error) {
      /* istanbul ignore next */
      cov_1fk5pgtda3().b[10][0]++;
      cov_1fk5pgtda3().s[38]++;
      throw new Error(`Error fetching shows: ${error.message}`);
    } else
    /* istanbul ignore next */
    {
      cov_1fk5pgtda3().b[10][1]++;
    }
    cov_1fk5pgtda3().s[39]++;
    if (
    /* istanbul ignore next */
    (cov_1fk5pgtda3().b[12][0]++, !data) ||
    /* istanbul ignore next */
    (cov_1fk5pgtda3().b[12][1]++, !Array.isArray(data))) {
      /* istanbul ignore next */
      cov_1fk5pgtda3().b[11][0]++;
      cov_1fk5pgtda3().s[40]++;
      console.log(chalk_1.default.yellow('No shows found in the database.'));
      /* istanbul ignore next */
      cov_1fk5pgtda3().s[41]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_1fk5pgtda3().b[11][1]++;
    }
    cov_1fk5pgtda3().s[42]++;
    console.log(chalk_1.default.green(`Successfully fetched ${data.length} shows`));
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[43]++;
    return data;
  } catch (error) {
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[44]++;
    console.error(chalk_1.default.red('Failed to fetch shows:'), error);
    // Retry once after a short delay
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[45]++;
    console.log(chalk_1.default.yellow('Retrying fetch after 5 seconds...'));
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[46]++;
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_1fk5pgtda3().f[5]++;
      cov_1fk5pgtda3().s[47]++;
      return setTimeout(resolve, 5000);
    });
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[48]++;
    try {
      const {
        data,
        error
      } =
      /* istanbul ignore next */
      (cov_1fk5pgtda3().s[49]++, await supabase_1.supabase.from('shows').select('id, title, address, latitude, longitude').order('created_at', {
        ascending: false
      }));
      /* istanbul ignore next */
      cov_1fk5pgtda3().s[50]++;
      if (error) {
        /* istanbul ignore next */
        cov_1fk5pgtda3().b[13][0]++;
        cov_1fk5pgtda3().s[51]++;
        throw new Error(`Error fetching shows on retry: ${error.message}`);
      } else
      /* istanbul ignore next */
      {
        cov_1fk5pgtda3().b[13][1]++;
      }
      cov_1fk5pgtda3().s[52]++;
      if (
      /* istanbul ignore next */
      (cov_1fk5pgtda3().b[15][0]++, !data) ||
      /* istanbul ignore next */
      (cov_1fk5pgtda3().b[15][1]++, !Array.isArray(data))) {
        /* istanbul ignore next */
        cov_1fk5pgtda3().b[14][0]++;
        cov_1fk5pgtda3().s[53]++;
        return [];
      } else
      /* istanbul ignore next */
      {
        cov_1fk5pgtda3().b[14][1]++;
      }
      cov_1fk5pgtda3().s[54]++;
      console.log(chalk_1.default.green(`Successfully fetched ${data.length} shows on retry`));
      /* istanbul ignore next */
      cov_1fk5pgtda3().s[55]++;
      return data;
    } catch (retryError) {
      /* istanbul ignore next */
      cov_1fk5pgtda3().s[56]++;
      console.error(chalk_1.default.red('Failed to fetch shows on retry:'), retryError);
      /* istanbul ignore next */
      cov_1fk5pgtda3().s[57]++;
      return [];
    }
  }
};
/**
 * Update a show with new coordinates
 */
/* istanbul ignore next */
cov_1fk5pgtda3().s[58]++;
const updateShowCoordinates = async (showId, latitude, longitude, retryCount =
/* istanbul ignore next */
(cov_1fk5pgtda3().b[16][0]++, 0)) => {
  /* istanbul ignore next */
  cov_1fk5pgtda3().f[6]++;
  cov_1fk5pgtda3().s[59]++;
  try {
    const {
      error
    } =
    /* istanbul ignore next */
    (cov_1fk5pgtda3().s[60]++, await supabase_1.supabase.from('shows').update({
      latitude,
      longitude,
      updated_at: new Date().toISOString()
    }).eq('id', showId));
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[61]++;
    if (error) {
      /* istanbul ignore next */
      cov_1fk5pgtda3().b[17][0]++;
      cov_1fk5pgtda3().s[62]++;
      console.error(chalk_1.default.red(`Failed to update show ${showId}:`), error.message);
      // Retry logic
      /* istanbul ignore next */
      cov_1fk5pgtda3().s[63]++;
      if (retryCount < MAX_RETRIES) {
        /* istanbul ignore next */
        cov_1fk5pgtda3().b[18][0]++;
        cov_1fk5pgtda3().s[64]++;
        console.log(chalk_1.default.yellow(`Retrying update (attempt ${retryCount + 1} of ${MAX_RETRIES})...`));
        /* istanbul ignore next */
        cov_1fk5pgtda3().s[65]++;
        await new Promise(resolve => {
          /* istanbul ignore next */
          cov_1fk5pgtda3().f[7]++;
          cov_1fk5pgtda3().s[66]++;
          return setTimeout(resolve, 2000);
        });
        /* istanbul ignore next */
        cov_1fk5pgtda3().s[67]++;
        return updateShowCoordinates(showId, latitude, longitude, retryCount + 1);
      } else
      /* istanbul ignore next */
      {
        cov_1fk5pgtda3().b[18][1]++;
      }
      cov_1fk5pgtda3().s[68]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1fk5pgtda3().b[17][1]++;
    }
    cov_1fk5pgtda3().s[69]++;
    return true;
  } catch (error) {
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[70]++;
    console.error(chalk_1.default.red(`Error updating show ${showId}:`), error);
    // Retry logic
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[71]++;
    if (retryCount < MAX_RETRIES) {
      /* istanbul ignore next */
      cov_1fk5pgtda3().b[19][0]++;
      cov_1fk5pgtda3().s[72]++;
      console.log(chalk_1.default.yellow(`Retrying update (attempt ${retryCount + 1} of ${MAX_RETRIES})...`));
      /* istanbul ignore next */
      cov_1fk5pgtda3().s[73]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_1fk5pgtda3().f[8]++;
        cov_1fk5pgtda3().s[74]++;
        return setTimeout(resolve, 2000);
      });
      /* istanbul ignore next */
      cov_1fk5pgtda3().s[75]++;
      return updateShowCoordinates(showId, latitude, longitude, retryCount + 1);
    } else
    /* istanbul ignore next */
    {
      cov_1fk5pgtda3().b[19][1]++;
    }
    cov_1fk5pgtda3().s[76]++;
    return false;
  }
};
/**
 * Process a single show - geocode its address and update coordinates
 */
/* istanbul ignore next */
cov_1fk5pgtda3().s[77]++;
const processShow = async (show, retryCount =
/* istanbul ignore next */
(cov_1fk5pgtda3().b[20][0]++, 0)) => {
  /* istanbul ignore next */
  cov_1fk5pgtda3().f[9]++;
  cov_1fk5pgtda3().s[78]++;
  if (!show.address) {
    /* istanbul ignore next */
    cov_1fk5pgtda3().b[21][0]++;
    cov_1fk5pgtda3().s[79]++;
    console.log(chalk_1.default.yellow(`Skipping show "${show.title}" (ID: ${show.id}) - No address provided`));
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[80]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_1fk5pgtda3().b[21][1]++;
  }
  cov_1fk5pgtda3().s[81]++;
  try {
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[82]++;
    console.log(chalk_1.default.cyan(`Geocoding address for "${show.title}" (ID: ${show.id}): ${show.address}`));
    const coordinates =
    /* istanbul ignore next */
    (cov_1fk5pgtda3().s[83]++, await (0, locationService_1.geocodeAddress)(show.address));
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[84]++;
    if (!coordinates) {
      /* istanbul ignore next */
      cov_1fk5pgtda3().b[22][0]++;
      cov_1fk5pgtda3().s[85]++;
      console.error(chalk_1.default.red(`Failed to geocode address for show "${show.title}" (ID: ${show.id})`));
      // Retry logic
      /* istanbul ignore next */
      cov_1fk5pgtda3().s[86]++;
      if (retryCount < MAX_RETRIES) {
        /* istanbul ignore next */
        cov_1fk5pgtda3().b[23][0]++;
        cov_1fk5pgtda3().s[87]++;
        console.log(chalk_1.default.yellow(`Retrying geocoding (attempt ${retryCount + 1} of ${MAX_RETRIES})...`));
        /* istanbul ignore next */
        cov_1fk5pgtda3().s[88]++;
        await new Promise(resolve => {
          /* istanbul ignore next */
          cov_1fk5pgtda3().f[10]++;
          cov_1fk5pgtda3().s[89]++;
          return setTimeout(resolve, 2000);
        });
        /* istanbul ignore next */
        cov_1fk5pgtda3().s[90]++;
        return processShow(show, retryCount + 1);
      } else
      /* istanbul ignore next */
      {
        cov_1fk5pgtda3().b[23][1]++;
      }
      cov_1fk5pgtda3().s[91]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1fk5pgtda3().b[22][1]++;
    }
    cov_1fk5pgtda3().s[92]++;
    console.log(chalk_1.default.green(`Successfully geocoded "${show.title}" - Coordinates:`), coordinates);
    // Update the show with new coordinates
    const updated =
    /* istanbul ignore next */
    (cov_1fk5pgtda3().s[93]++, await updateShowCoordinates(show.id, coordinates.latitude, coordinates.longitude));
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[94]++;
    if (updated) {
      /* istanbul ignore next */
      cov_1fk5pgtda3().b[24][0]++;
      cov_1fk5pgtda3().s[95]++;
      console.log(chalk_1.default.green(`Updated coordinates for show "${show.title}" (ID: ${show.id})`));
      /* istanbul ignore next */
      cov_1fk5pgtda3().s[96]++;
      return true;
    } else {
      /* istanbul ignore next */
      cov_1fk5pgtda3().b[24][1]++;
      cov_1fk5pgtda3().s[97]++;
      console.error(chalk_1.default.red(`Failed to update coordinates for show "${show.title}" (ID: ${show.id})`));
      /* istanbul ignore next */
      cov_1fk5pgtda3().s[98]++;
      return false;
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[99]++;
    console.error(chalk_1.default.red(`Error processing show "${show.title}" (ID: ${show.id}):`), error);
    // Retry logic
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[100]++;
    if (retryCount < MAX_RETRIES) {
      /* istanbul ignore next */
      cov_1fk5pgtda3().b[25][0]++;
      cov_1fk5pgtda3().s[101]++;
      console.log(chalk_1.default.yellow(`Retrying due to error (attempt ${retryCount + 1} of ${MAX_RETRIES})...`));
      /* istanbul ignore next */
      cov_1fk5pgtda3().s[102]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_1fk5pgtda3().f[11]++;
        cov_1fk5pgtda3().s[103]++;
        return setTimeout(resolve, 2000);
      });
      /* istanbul ignore next */
      cov_1fk5pgtda3().s[104]++;
      return processShow(show, retryCount + 1);
    } else
    /* istanbul ignore next */
    {
      cov_1fk5pgtda3().b[25][1]++;
    }
    cov_1fk5pgtda3().s[105]++;
    return false;
  }
};
/**
 * Process shows in batches with delays to avoid rate limits
 */
/* istanbul ignore next */
cov_1fk5pgtda3().s[106]++;
const processShowsInBatches = async (shows, batchSize =
/* istanbul ignore next */
(cov_1fk5pgtda3().b[26][0]++, 5), delayBetweenRequestsMs =
/* istanbul ignore next */
(cov_1fk5pgtda3().b[27][0]++, 1000)) => {
  /* istanbul ignore next */
  cov_1fk5pgtda3().f[12]++;
  const stats =
  /* istanbul ignore next */
  (cov_1fk5pgtda3().s[107]++, {
    total: shows.length,
    processed: 0,
    succeeded: 0,
    failed: 0,
    skipped: 0,
    startTime: new Date()
  });
  const totalBatches =
  /* istanbul ignore next */
  (cov_1fk5pgtda3().s[108]++, Math.ceil(shows.length / batchSize));
  // Process shows in batches
  /* istanbul ignore next */
  cov_1fk5pgtda3().s[109]++;
  for (let i =
  /* istanbul ignore next */
  (cov_1fk5pgtda3().s[110]++, 0); i < shows.length; i += batchSize) {
    const batch =
    /* istanbul ignore next */
    (cov_1fk5pgtda3().s[111]++, shows.slice(i, i + batchSize));
    const currentBatch =
    /* istanbul ignore next */
    (cov_1fk5pgtda3().s[112]++, Math.floor(i / batchSize) + 1);
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[113]++;
    console.log(chalk_1.default.bold.blue(`\n--- Processing batch ${currentBatch} of ${totalBatches} ---`));
    // Process each show in the batch
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[114]++;
    for (const show of batch) {
      /* istanbul ignore next */
      cov_1fk5pgtda3().s[115]++;
      if (!show.address) {
        /* istanbul ignore next */
        cov_1fk5pgtda3().b[28][0]++;
        cov_1fk5pgtda3().s[116]++;
        console.log(chalk_1.default.yellow(`Skipping show "${show.title}" - No address provided`));
        /* istanbul ignore next */
        cov_1fk5pgtda3().s[117]++;
        stats.skipped++;
        /* istanbul ignore next */
        cov_1fk5pgtda3().s[118]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_1fk5pgtda3().b[28][1]++;
      }
      const success =
      /* istanbul ignore next */
      (cov_1fk5pgtda3().s[119]++, await processShow(show));
      /* istanbul ignore next */
      cov_1fk5pgtda3().s[120]++;
      stats.processed++;
      /* istanbul ignore next */
      cov_1fk5pgtda3().s[121]++;
      if (success) {
        /* istanbul ignore next */
        cov_1fk5pgtda3().b[29][0]++;
        cov_1fk5pgtda3().s[122]++;
        stats.succeeded++;
      } else {
        /* istanbul ignore next */
        cov_1fk5pgtda3().b[29][1]++;
        cov_1fk5pgtda3().s[123]++;
        stats.failed++;
      }
      // Calculate and display progress
      const percentComplete =
      /* istanbul ignore next */
      (cov_1fk5pgtda3().s[124]++, Math.round(stats.processed / stats.total * 100));
      const elapsedTime =
      /* istanbul ignore next */
      (cov_1fk5pgtda3().s[125]++, formatElapsedTime(new Date().getTime() - stats.startTime.getTime()));
      const eta =
      /* istanbul ignore next */
      (cov_1fk5pgtda3().s[126]++, calculateEta(stats));
      /* istanbul ignore next */
      cov_1fk5pgtda3().s[127]++;
      console.log(chalk_1.default.bold(`\nProgress: ${stats.processed}/${stats.total} shows (${percentComplete}%)`));
      /* istanbul ignore next */
      cov_1fk5pgtda3().s[128]++;
      console.log(`Elapsed: ${elapsedTime} | Estimated remaining: ${eta}`);
      /* istanbul ignore next */
      cov_1fk5pgtda3().s[129]++;
      console.log(`Success: ${chalk_1.default.green(stats.succeeded.toString())}, Failed: ${chalk_1.default.red(stats.failed.toString())}, Skipped: ${chalk_1.default.yellow(stats.skipped.toString())}`);
      // Add delay between requests to avoid rate limits
      /* istanbul ignore next */
      cov_1fk5pgtda3().s[130]++;
      if (batch.indexOf(show) < batch.length - 1) {
        /* istanbul ignore next */
        cov_1fk5pgtda3().b[30][0]++;
        cov_1fk5pgtda3().s[131]++;
        console.log(chalk_1.default.dim(`Waiting ${delayBetweenRequestsMs}ms before next request...`));
        /* istanbul ignore next */
        cov_1fk5pgtda3().s[132]++;
        await new Promise(resolve => {
          /* istanbul ignore next */
          cov_1fk5pgtda3().f[13]++;
          cov_1fk5pgtda3().s[133]++;
          return setTimeout(resolve, delayBetweenRequestsMs);
        });
      } else
      /* istanbul ignore next */
      {
        cov_1fk5pgtda3().b[30][1]++;
      }
    }
    // Add delay between batches
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[134]++;
    if (i + batchSize < shows.length) {
      /* istanbul ignore next */
      cov_1fk5pgtda3().b[31][0]++;
      const batchDelayMs =
      /* istanbul ignore next */
      (cov_1fk5pgtda3().s[135]++, 3000);
      /* istanbul ignore next */
      cov_1fk5pgtda3().s[136]++;
      console.log(chalk_1.default.dim(`\nWaiting ${batchDelayMs}ms before next batch...`));
      /* istanbul ignore next */
      cov_1fk5pgtda3().s[137]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_1fk5pgtda3().f[14]++;
        cov_1fk5pgtda3().s[138]++;
        return setTimeout(resolve, batchDelayMs);
      });
    } else
    /* istanbul ignore next */
    {
      cov_1fk5pgtda3().b[31][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1fk5pgtda3().s[139]++;
  return stats;
};
/**
 * Main function to geocode all shows with missing or invalid coordinates
 */
/* istanbul ignore next */
cov_1fk5pgtda3().s[140]++;
const geocodeExistingShows = async (batchSize =
/* istanbul ignore next */
(cov_1fk5pgtda3().b[32][0]++, 5), delayBetweenRequestsMs =
/* istanbul ignore next */
(cov_1fk5pgtda3().b[33][0]++, 1000)) => {
  /* istanbul ignore next */
  cov_1fk5pgtda3().f[15]++;
  cov_1fk5pgtda3().s[141]++;
  try {
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[142]++;
    console.log(chalk_1.default.bold.green('\n=== Starting geocoding process for existing shows ==='));
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[143]++;
    console.log(chalk_1.default.cyan(`Batch size: ${batchSize}, Delay between requests: ${delayBetweenRequestsMs}ms`));
    // Fetch all shows
    const allShows =
    /* istanbul ignore next */
    (cov_1fk5pgtda3().s[144]++, await fetchAllShows());
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[145]++;
    if (allShows.length === 0) {
      /* istanbul ignore next */
      cov_1fk5pgtda3().b[34][0]++;
      cov_1fk5pgtda3().s[146]++;
      console.log(chalk_1.default.yellow('No shows found in the database.'));
      /* istanbul ignore next */
      cov_1fk5pgtda3().s[147]++;
      return {
        total: 0,
        processed: 0,
        succeeded: 0,
        failed: 0,
        skipped: 0,
        startTime: new Date()
      };
    } else
    /* istanbul ignore next */
    {
      cov_1fk5pgtda3().b[34][1]++;
    }
    // Filter shows with valid addresses but missing or invalid coordinates
    const showsToProcess =
    /* istanbul ignore next */
    (cov_1fk5pgtda3().s[148]++, allShows.filter(show => {
      /* istanbul ignore next */
      cov_1fk5pgtda3().f[16]++;
      cov_1fk5pgtda3().s[149]++;
      return /* istanbul ignore next */(cov_1fk5pgtda3().b[35][0]++, show.address) &&
      /* istanbul ignore next */
      (cov_1fk5pgtda3().b[35][1]++, show.address.trim().length > 0) &&
      /* istanbul ignore next */
      (cov_1fk5pgtda3().b[35][2]++, hasInvalidCoordinates(show));
    }));
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[150]++;
    console.log(chalk_1.default.bold(`\nFound ${chalk_1.default.cyan(showsToProcess.length.toString())} shows with addresses but missing or invalid coordinates`));
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[151]++;
    console.log(chalk_1.default.dim(`(out of ${allShows.length} total shows in the database)`));
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[152]++;
    if (showsToProcess.length === 0) {
      /* istanbul ignore next */
      cov_1fk5pgtda3().b[36][0]++;
      cov_1fk5pgtda3().s[153]++;
      console.log(chalk_1.default.green('\nNo shows need geocoding. All done!'));
      /* istanbul ignore next */
      cov_1fk5pgtda3().s[154]++;
      return {
        total: allShows.length,
        processed: 0,
        succeeded: 0,
        failed: 0,
        skipped: allShows.length,
        startTime: new Date()
      };
    } else
    /* istanbul ignore next */
    {
      cov_1fk5pgtda3().b[36][1]++;
    }
    // Process shows in batches
    const stats =
    /* istanbul ignore next */
    (cov_1fk5pgtda3().s[155]++, await processShowsInBatches(showsToProcess, batchSize, delayBetweenRequestsMs));
    const elapsedTime =
    /* istanbul ignore next */
    (cov_1fk5pgtda3().s[156]++, formatElapsedTime(new Date().getTime() - stats.startTime.getTime()));
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[157]++;
    console.log(chalk_1.default.bold.green('\n=== Geocoding process completed ==='));
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[158]++;
    console.log(chalk_1.default.bold(`Total time: ${elapsedTime}`));
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[159]++;
    console.log(chalk_1.default.bold(`Total shows: ${stats.total}`));
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[160]++;
    console.log(`Processed: ${stats.processed}`);
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[161]++;
    console.log(`Succeeded: ${chalk_1.default.green(stats.succeeded.toString())}`);
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[162]++;
    console.log(`Failed: ${chalk_1.default.red(stats.failed.toString())}`);
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[163]++;
    console.log(`Skipped: ${chalk_1.default.yellow(stats.skipped.toString())}`);
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[164]++;
    return stats;
  } catch (error) {
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[165]++;
    console.error(chalk_1.default.bold.red('\nError in geocodeExistingShows:'), error);
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[166]++;
    throw error;
  }
};
/* istanbul ignore next */
cov_1fk5pgtda3().s[167]++;
exports.geocodeExistingShows = geocodeExistingShows;
/**
 * Parse command line arguments
 */
/* istanbul ignore next */
cov_1fk5pgtda3().s[168]++;
const parseCommandLineArgs = () => {
  /* istanbul ignore next */
  cov_1fk5pgtda3().f[17]++;
  const args =
  /* istanbul ignore next */
  (cov_1fk5pgtda3().s[169]++, process.argv.slice(2));
  let batchSize =
  /* istanbul ignore next */
  (cov_1fk5pgtda3().s[170]++, 5);
  let delay =
  /* istanbul ignore next */
  (cov_1fk5pgtda3().s[171]++, 1000);
  // Check if batch size is provided
  /* istanbul ignore next */
  cov_1fk5pgtda3().s[172]++;
  if (args.length >= 1) {
    /* istanbul ignore next */
    cov_1fk5pgtda3().b[37][0]++;
    const parsedBatchSize =
    /* istanbul ignore next */
    (cov_1fk5pgtda3().s[173]++, parseInt(args[0], 10));
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[174]++;
    if (
    /* istanbul ignore next */
    (cov_1fk5pgtda3().b[39][0]++, !isNaN(parsedBatchSize)) &&
    /* istanbul ignore next */
    (cov_1fk5pgtda3().b[39][1]++, parsedBatchSize > 0)) {
      /* istanbul ignore next */
      cov_1fk5pgtda3().b[38][0]++;
      cov_1fk5pgtda3().s[175]++;
      batchSize = parsedBatchSize;
    } else {
      /* istanbul ignore next */
      cov_1fk5pgtda3().b[38][1]++;
      cov_1fk5pgtda3().s[176]++;
      console.warn(chalk_1.default.yellow('Invalid batch size provided, using default (5)'));
    }
  } else
  /* istanbul ignore next */
  {
    cov_1fk5pgtda3().b[37][1]++;
  }
  // Check if delay is provided
  cov_1fk5pgtda3().s[177]++;
  if (args.length >= 2) {
    /* istanbul ignore next */
    cov_1fk5pgtda3().b[40][0]++;
    const parsedDelay =
    /* istanbul ignore next */
    (cov_1fk5pgtda3().s[178]++, parseInt(args[1], 10));
    /* istanbul ignore next */
    cov_1fk5pgtda3().s[179]++;
    if (
    /* istanbul ignore next */
    (cov_1fk5pgtda3().b[42][0]++, !isNaN(parsedDelay)) &&
    /* istanbul ignore next */
    (cov_1fk5pgtda3().b[42][1]++, parsedDelay >= 0)) {
      /* istanbul ignore next */
      cov_1fk5pgtda3().b[41][0]++;
      cov_1fk5pgtda3().s[180]++;
      delay = parsedDelay;
    } else {
      /* istanbul ignore next */
      cov_1fk5pgtda3().b[41][1]++;
      cov_1fk5pgtda3().s[181]++;
      console.warn(chalk_1.default.yellow('Invalid delay provided, using default (1000ms)'));
    }
  } else
  /* istanbul ignore next */
  {
    cov_1fk5pgtda3().b[40][1]++;
  }
  cov_1fk5pgtda3().s[182]++;
  return {
    batchSize,
    delay
  };
};
/**
 * Run the script directly if executed with node/ts-node
 */
/* istanbul ignore next */
cov_1fk5pgtda3().s[183]++;
if (require.main === module) {
  /* istanbul ignore next */
  cov_1fk5pgtda3().b[43][0]++;
  cov_1fk5pgtda3().s[184]++;
  (async () => {
    /* istanbul ignore next */
    cov_1fk5pgtda3().f[18]++;
    cov_1fk5pgtda3().s[185]++;
    try {
      /* istanbul ignore next */
      cov_1fk5pgtda3().s[186]++;
      console.log(chalk_1.default.bold.magenta('\n=== GEOCODING EXISTING SHOWS ==='));
      // Parse command line arguments
      const {
        batchSize,
        delay
      } =
      /* istanbul ignore next */
      (cov_1fk5pgtda3().s[187]++, parseCommandLineArgs());
      // Run the geocoding process
      /* istanbul ignore next */
      cov_1fk5pgtda3().s[188]++;
      await geocodeExistingShows(batchSize, delay);
      /* istanbul ignore next */
      cov_1fk5pgtda3().s[189]++;
      console.log(chalk_1.default.bold.magenta('\n=== SCRIPT COMPLETED SUCCESSFULLY ==='));
      /* istanbul ignore next */
      cov_1fk5pgtda3().s[190]++;
      process.exit(0);
    } catch (error) {
      /* istanbul ignore next */
      cov_1fk5pgtda3().s[191]++;
      console.error(chalk_1.default.bold.red('\nScript failed:'), error);
      /* istanbul ignore next */
      cov_1fk5pgtda3().s[192]++;
      process.exit(1);
    }
  })();
} else
/* istanbul ignore next */
{
  cov_1fk5pgtda3().b[43][1]++;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,