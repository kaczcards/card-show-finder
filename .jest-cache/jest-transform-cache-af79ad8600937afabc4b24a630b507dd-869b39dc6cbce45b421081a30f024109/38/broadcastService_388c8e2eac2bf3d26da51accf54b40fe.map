{"version":3,"names":["cov_23zjo7ru39","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","supabase_1","require","organizerService_1","sendBroadcastMessage","organizerId","showId","message","recipients","success","error","trim","length","data","profileData","profileError","supabase","from","select","eq","single","console","role","showData","showError","organizer_id","quotaData","quotaError","exports","getBroadcastLimitStatus","remaining","limit","broadcastMessage","content","insertError","insert","show_id","message_content","updateError","update","broadcast_message_count","used","err","getBroadcastHistory","options","count","resetBroadcastCount","getBroadcastQuota","rpc","p_organizer_id","scheduleBroadcastMessage","scheduledDate","adminSetBroadcastLimit","newLimit"],"sources":["/Users/kevin/card-show-finder/src/services/broadcastService.ts"],"sourcesContent":["/**\n * Broadcast Service\n *\n * This service handles operations related to organizer broadcast messages, including:\n * - Sending broadcast messages to attendees/dealers\n * - Getting broadcast history\n * - Managing broadcast quotas and limits\n */\n\nimport { supabase } from '../supabase';\nimport {\n  getBroadcastHistory as getOrganizerBroadcastHistory,\n  getBroadcastQuota,\n  BroadcastMessage,\n  BroadcastHistoryItem,\n  BroadcastQuota\n} from './organizerService';\n\n/**\n * Send a broadcast message to attendees/dealers of a show\n * \n * This function handles:\n * - Quota checking\n * - Message validation\n * - Logging the broadcast\n * - Incrementing the broadcast count\n */\nexport const sendBroadcastMessage = async (\n  organizerId: string,\n  showId: string | null,\n  message: string,\n  recipients: ('attendees' | 'dealers')[]\n): Promise<{ success: boolean; error: string | null }> => {\n  try {\n    // Validate inputs\n    if (!organizerId) {\n      return { success: false, error: 'Organizer ID is required' };\n    }\n\n    if (!message || message.trim().length === 0) {\n      return { success: false, error: 'Message content cannot be empty' };\n    }\n    \n    if (message.length > 1000) {\n      return { success: false, error: 'Message content cannot exceed 1000 characters' };\n    }\n\n    if (!recipients || recipients.length === 0) {\n      return { success: false, error: 'At least one recipient type must be specified' };\n    }\n\n    // Check if the organizer has the SHOW_ORGANIZER role\n    const { data: profileData, error: profileError } = await supabase\n      .from('profiles')\n      .select('role')\n      .eq('id', organizerId)\n      .single();\n\n    if (profileError) {\n      console.error('[broadcastService] Error checking organizer role:', profileError);\n      return { success: false, error: 'Failed to verify organizer permissions' };\n    }\n\n    if (profileData.role !== 'SHOW_ORGANIZER') {\n      return { success: false, error: 'Only show organizers can send broadcast messages' };\n    }\n\n    // If showId is provided, verify the organizer owns this show\n    if (showId) {\n      const { data: showData, error: showError } = await supabase\n        .from('shows')\n        .select('organizer_id')\n        .eq('id', showId)\n        .single();\n\n      if (showError) {\n        console.error('[broadcastService] Error checking show ownership:', showError);\n        return { success: false, error: 'Failed to verify show ownership' };\n      }\n\n      if (showData.organizer_id !== organizerId) {\n        return { success: false, error: 'You can only send broadcasts for shows you organize' };\n      }\n    }\n\n    // Check if the organizer has reached their monthly limit\n    const { data: quotaData, error: quotaError } = await getBroadcastLimitStatus(organizerId);\n    \n    if (quotaError) {\n      return { success: false, error: quotaError };\n    }\n    \n    if (quotaData && quotaData.remaining <= 0) {\n      return { \n        success: false, \n        error: `You have reached your monthly broadcast message limit of ${quotaData.limit} messages` \n      };\n    }\n\n    // Format the broadcast message for the organizerService\n    const broadcastMessage: BroadcastMessage = {\n      showId: showId || '',\n      content: message,\n      recipients: recipients\n    };\n\n    // Insert the broadcast log and increment the count\n    const { error: insertError } = await supabase\n      .from('broadcast_logs')\n      .insert([{\n        organizer_id: organizerId,\n        show_id: showId,\n        message_content: message,\n        recipients: recipients\n      }]);\n\n    if (insertError) {\n      console.error('[broadcastService] Error logging broadcast message:', insertError);\n      return { success: false, error: insertError.message };\n    }\n\n    // Increment the broadcast count for the organizer\n    const { error: updateError } = await supabase\n      .from('profiles')\n      .update({ \n        broadcast_message_count: quotaData!.used + 1 \n      })\n      .eq('id', organizerId);\n\n    if (updateError) {\n      console.error('[broadcastService] Error updating broadcast count:', updateError);\n      // Don't return error here, as the message was already sent\n    }\n\n    // TODO: Implement actual message delivery logic\n    // This could involve push notifications, emails, etc.\n    // For now, we just log the broadcast\n\n    return { success: true, error: null };\n  } catch (err: any) {\n    console.error('[broadcastService] Unexpected error sending broadcast message:', err);\n    return { success: false, error: err.message || 'An unexpected error occurred' };\n  }\n};\n\n/**\n * Get broadcast message history for an organizer\n * \n * @param organizerId - The ID of the organizer\n * @param options - Optional parameters for pagination and filtering\n * @returns Broadcast history items, error (if any), and total count\n */\nexport const getBroadcastHistory = async (\n  organizerId: string,\n  options: { limit?: number; offset?: number; showId?: string } = {}\n): Promise<{ data: BroadcastHistoryItem[] | null; error: string | null; count: number }> => {\n  try {\n    // Delegate to the organizerService function\n    return await getOrganizerBroadcastHistory(organizerId, options);\n  } catch (err: any) {\n    console.error('[broadcastService] Unexpected error fetching broadcast history:', err);\n    return { data: null, error: err.message || 'An unexpected error occurred', count: 0 };\n  }\n};\n\n/**\n * Get broadcast quota information for an organizer\n * \n * @param organizerId - The ID of the organizer\n * @returns Quota information including used, limit, remaining, and reset date\n */\nexport const getBroadcastLimitStatus = async (\n  organizerId: string\n): Promise<{ data: BroadcastQuota | null; error: string | null }> => {\n  try {\n    // Reset the broadcast count if we're in a new month\n    await resetBroadcastCount(organizerId);\n    \n    // Delegate to the organizerService function\n    return await getBroadcastQuota(organizerId);\n  } catch (err: any) {\n    console.error('[broadcastService] Unexpected error fetching broadcast quota:', err);\n    return { data: null, error: err.message || 'An unexpected error occurred' };\n  }\n};\n\n/**\n * Reset the broadcast count for an organizer if we're in a new month\n * \n * This function calls the reset_broadcast_count RPC in Supabase\n * \n * @param organizerId - The ID of the organizer\n * @returns Success status and error (if any)\n */\nexport const resetBroadcastCount = async (\n  organizerId: string\n): Promise<{ success: boolean; error: string | null }> => {\n  try {\n    const { error } = await supabase.rpc('reset_broadcast_count', {\n      p_organizer_id: organizerId\n    });\n\n    if (error) {\n      console.error('[broadcastService] Error resetting broadcast count:', error);\n      return { success: false, error: error.message };\n    }\n\n    return { success: true, error: null };\n  } catch (err: any) {\n    console.error('[broadcastService] Unexpected error resetting broadcast count:', err);\n    return { success: false, error: err.message || 'An unexpected error occurred' };\n  }\n};\n\n/**\n * Schedule a broadcast message to be sent at a future date\n * (This is a placeholder for future functionality)\n */\nexport const scheduleBroadcastMessage = async (\n  organizerId: string,\n  showId: string | null,\n  message: string,\n  recipients: ('attendees' | 'dealers')[],\n  scheduledDate: Date\n): Promise<{ success: boolean; error: string | null }> => {\n  // This would be implemented in a future phase\n  return { \n    success: false, \n    error: 'Scheduled broadcasts are not yet implemented' \n  };\n};\n\n/**\n * Admin function to override broadcast limits for an organizer\n * This should only be callable with admin/service_role credentials\n */\nexport const adminSetBroadcastLimit = async (\n  organizerId: string,\n  newLimit: number\n): Promise<{ success: boolean; error: string | null }> => {\n  try {\n    // This should be implemented as a Supabase Edge Function with admin privileges\n    // For now, it's a placeholder that will always fail for regular users\n    \n    // In a real implementation, this would:\n    // 1. Verify the caller has admin privileges\n    // 2. Update a special field in the profiles table for custom limits\n    // 3. Return success\n    \n    return { \n      success: false, \n      error: 'This function requires admin privileges' \n    };\n  } catch (err: any) {\n    console.error('[broadcastService] Error in adminSetBroadcastLimit:', err);\n    return { success: false, error: err.message || 'An unexpected error occurred' };\n  }\n};\n"],"mappings":";;AAAA;;;;;;;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;IAAA;IAAAE,KAAA;MAAA;QAAAC,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAO,SAAA;MAAA;QAAAD,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAW,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,cAAA;MAAAC,IAAA;MAAAC,QAAA;MAAAC,KAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,OAAA;IAAA;IAAAC,eAAA;IAAA5B,IAAA;EAAA;EAAA,IAAA6B,QAAA,GAAA5B,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAA0B,QAAA,CAAA9B,IAAA,KAAA8B,QAAA,CAAA9B,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAA6B,QAAA,CAAA9B,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAA0B,cAAA,GAAAD,QAAA,CAAA9B,IAAA;EAAA;;;;;;;;;;;;;;;;AASA,MAAAgC,UAAA;AAAA;AAAA,CAAAjC,cAAA,GAAAoB,CAAA,OAAAc,OAAA;AACA,MAAAC,kBAAA;AAAA;AAAA,CAAAnC,cAAA,GAAAoB,CAAA,OAAAc,OAAA;AAQA;;;;;;;;;AAAA;AAAAlC,cAAA,GAAAoB,CAAA;AASO,MAAMgB,oBAAoB,GAAG,MAAAA,CAClCC,WAAmB,EACnBC,MAAqB,EACrBC,OAAe,EACfC,UAAuC,KACgB;EAAA;EAAAxC,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EACvD,IAAI;IAAA;IAAApB,cAAA,GAAAoB,CAAA;IACF;IACA,IAAI,CAACiB,WAAW,EAAE;MAAA;MAAArC,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAChB,OAAO;QAAEqB,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAE;MAA0B,CAAE;IAC9D,CAAC;IAAA;IAAA;MAAA1C,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAED;IAAI;IAAA,CAAApB,cAAA,GAAAsB,CAAA,WAACiB,OAAO;IAAA;IAAA,CAAAvC,cAAA,GAAAsB,CAAA,UAAIiB,OAAO,CAACI,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,GAAE;MAAA;MAAA5C,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAC3C,OAAO;QAAEqB,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAiC,CAAE;IACrE,CAAC;IAAA;IAAA;MAAA1C,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAED,IAAImB,OAAO,CAACK,MAAM,GAAG,IAAI,EAAE;MAAA;MAAA5C,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACzB,OAAO;QAAEqB,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAE;MAA+C,CAAE;IACnF,CAAC;IAAA;IAAA;MAAA1C,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAED;IAAI;IAAA,CAAApB,cAAA,GAAAsB,CAAA,WAACkB,UAAU;IAAA;IAAA,CAAAxC,cAAA,GAAAsB,CAAA,UAAIkB,UAAU,CAACI,MAAM,KAAK,CAAC,GAAE;MAAA;MAAA5C,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAC1C,OAAO;QAAEqB,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAE;MAA+C,CAAE;IACnF,CAAC;IAAA;IAAA;MAAA1C,cAAA,GAAAsB,CAAA;IAAA;IAED;IACA,MAAM;MAAEuB,IAAI,EAAEC,WAAW;MAAEJ,KAAK,EAAEK;IAAY,CAAE;IAAA;IAAA,CAAA/C,cAAA,GAAAoB,CAAA,QAAG,MAAMa,UAAA,CAAAe,QAAQ,CAC9DC,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,MAAM,CAAC,CACdC,EAAE,CAAC,IAAI,EAAEd,WAAW,CAAC,CACrBe,MAAM,EAAE;IAAC;IAAApD,cAAA,GAAAoB,CAAA;IAEZ,IAAI2B,YAAY,EAAE;MAAA;MAAA/C,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAChBiC,OAAO,CAACX,KAAK,CAAC,mDAAmD,EAAEK,YAAY,CAAC;MAAC;MAAA/C,cAAA,GAAAoB,CAAA;MACjF,OAAO;QAAEqB,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAwC,CAAE;IAC5E,CAAC;IAAA;IAAA;MAAA1C,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAED,IAAI0B,WAAW,CAACQ,IAAI,KAAK,gBAAgB,EAAE;MAAA;MAAAtD,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACzC,OAAO;QAAEqB,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAkD,CAAE;IACtF,CAAC;IAAA;IAAA;MAAA1C,cAAA,GAAAsB,CAAA;IAAA;IAED;IAAAtB,cAAA,GAAAoB,CAAA;IACA,IAAIkB,MAAM,EAAE;MAAA;MAAAtC,cAAA,GAAAsB,CAAA;MACV,MAAM;QAAEuB,IAAI,EAAEU,QAAQ;QAAEb,KAAK,EAAEc;MAAS,CAAE;MAAA;MAAA,CAAAxD,cAAA,GAAAoB,CAAA,QAAG,MAAMa,UAAA,CAAAe,QAAQ,CACxDC,IAAI,CAAC,OAAO,CAAC,CACbC,MAAM,CAAC,cAAc,CAAC,CACtBC,EAAE,CAAC,IAAI,EAAEb,MAAM,CAAC,CAChBc,MAAM,EAAE;MAAC;MAAApD,cAAA,GAAAoB,CAAA;MAEZ,IAAIoC,SAAS,EAAE;QAAA;QAAAxD,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACbiC,OAAO,CAACX,KAAK,CAAC,mDAAmD,EAAEc,SAAS,CAAC;QAAC;QAAAxD,cAAA,GAAAoB,CAAA;QAC9E,OAAO;UAAEqB,OAAO,EAAE,KAAK;UAAEC,KAAK,EAAE;QAAiC,CAAE;MACrE,CAAC;MAAA;MAAA;QAAA1C,cAAA,GAAAsB,CAAA;MAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAED,IAAImC,QAAQ,CAACE,YAAY,KAAKpB,WAAW,EAAE;QAAA;QAAArC,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACzC,OAAO;UAAEqB,OAAO,EAAE,KAAK;UAAEC,KAAK,EAAE;QAAqD,CAAE;MACzF,CAAC;MAAA;MAAA;QAAA1C,cAAA,GAAAsB,CAAA;MAAA;IACH,CAAC;IAAA;IAAA;MAAAtB,cAAA,GAAAsB,CAAA;IAAA;IAED;IACA,MAAM;MAAEuB,IAAI,EAAEa,SAAS;MAAEhB,KAAK,EAAEiB;IAAU,CAAE;IAAA;IAAA,CAAA3D,cAAA,GAAAoB,CAAA,QAAG,MAAM,IAAAwC,OAAA,CAAAC,uBAAuB,EAACxB,WAAW,CAAC;IAAC;IAAArC,cAAA,GAAAoB,CAAA;IAE1F,IAAIuC,UAAU,EAAE;MAAA;MAAA3D,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACd,OAAO;QAAEqB,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAEiB;MAAU,CAAE;IAC9C,CAAC;IAAA;IAAA;MAAA3D,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAED;IAAI;IAAA,CAAApB,cAAA,GAAAsB,CAAA,WAAAoC,SAAS;IAAA;IAAA,CAAA1D,cAAA,GAAAsB,CAAA,WAAIoC,SAAS,CAACI,SAAS,IAAI,CAAC,GAAE;MAAA;MAAA9D,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACzC,OAAO;QACLqB,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE,4DAA4DgB,SAAS,CAACK,KAAK;OACnF;IACH,CAAC;IAAA;IAAA;MAAA/D,cAAA,GAAAsB,CAAA;IAAA;IAED;IACA,MAAM0C,gBAAgB;IAAA;IAAA,CAAAhE,cAAA,GAAAoB,CAAA,QAAqB;MACzCkB,MAAM;MAAE;MAAA,CAAAtC,cAAA,GAAAsB,CAAA,WAAAgB,MAAM;MAAA;MAAA,CAAAtC,cAAA,GAAAsB,CAAA,WAAI,EAAE;MACpB2C,OAAO,EAAE1B,OAAO;MAChBC,UAAU,EAAEA;KACb;IAED;IACA,MAAM;MAAEE,KAAK,EAAEwB;IAAW,CAAE;IAAA;IAAA,CAAAlE,cAAA,GAAAoB,CAAA,QAAG,MAAMa,UAAA,CAAAe,QAAQ,CAC1CC,IAAI,CAAC,gBAAgB,CAAC,CACtBkB,MAAM,CAAC,CAAC;MACPV,YAAY,EAAEpB,WAAW;MACzB+B,OAAO,EAAE9B,MAAM;MACf+B,eAAe,EAAE9B,OAAO;MACxBC,UAAU,EAAEA;KACb,CAAC,CAAC;IAAC;IAAAxC,cAAA,GAAAoB,CAAA;IAEN,IAAI8C,WAAW,EAAE;MAAA;MAAAlE,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACfiC,OAAO,CAACX,KAAK,CAAC,qDAAqD,EAAEwB,WAAW,CAAC;MAAC;MAAAlE,cAAA,GAAAoB,CAAA;MAClF,OAAO;QAAEqB,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAEwB,WAAW,CAAC3B;MAAO,CAAE;IACvD,CAAC;IAAA;IAAA;MAAAvC,cAAA,GAAAsB,CAAA;IAAA;IAED;IACA,MAAM;MAAEoB,KAAK,EAAE4B;IAAW,CAAE;IAAA;IAAA,CAAAtE,cAAA,GAAAoB,CAAA,QAAG,MAAMa,UAAA,CAAAe,QAAQ,CAC1CC,IAAI,CAAC,UAAU,CAAC,CAChBsB,MAAM,CAAC;MACNC,uBAAuB,EAAEd,SAAU,CAACe,IAAI,GAAG;KAC5C,CAAC,CACDtB,EAAE,CAAC,IAAI,EAAEd,WAAW,CAAC;IAAC;IAAArC,cAAA,GAAAoB,CAAA;IAEzB,IAAIkD,WAAW,EAAE;MAAA;MAAAtE,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACfiC,OAAO,CAACX,KAAK,CAAC,oDAAoD,EAAE4B,WAAW,CAAC;MAChF;IACF,CAAC;IAAA;IAAA;MAAAtE,cAAA,GAAAsB,CAAA;IAAA;IAED;IACA;IACA;IAAAtB,cAAA,GAAAoB,CAAA;IAEA,OAAO;MAAEqB,OAAO,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAI,CAAE;EACvC,CAAC,CAAC,OAAOgC,GAAQ,EAAE;IAAA;IAAA1E,cAAA,GAAAoB,CAAA;IACjBiC,OAAO,CAACX,KAAK,CAAC,gEAAgE,EAAEgC,GAAG,CAAC;IAAC;IAAA1E,cAAA,GAAAoB,CAAA;IACrF,OAAO;MAAEqB,OAAO,EAAE,KAAK;MAAEC,KAAK;MAAE;MAAA,CAAA1C,cAAA,GAAAsB,CAAA,WAAAoD,GAAG,CAACnC,OAAO;MAAA;MAAA,CAAAvC,cAAA,GAAAsB,CAAA,WAAI,8BAA8B;IAAA,CAAE;EACjF;AACF,CAAC;AAAC;AAAAtB,cAAA,GAAAoB,CAAA;AApHWwC,OAAA,CAAAxB,oBAAoB,GAAAA,oBAAA;AAsHjC;;;;;;;AAAA;AAAApC,cAAA,GAAAoB,CAAA;AAOO,MAAMuD,mBAAmB,GAAG,MAAAA,CACjCtC,WAAmB,EACnBuC,OAAA;AAAA;AAAA,CAAA5E,cAAA,GAAAsB,CAAA,WAAgE,EAAE,MACuB;EAAA;EAAAtB,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EACzF,IAAI;IAAA;IAAApB,cAAA,GAAAoB,CAAA;IACF;IACA,OAAO,MAAM,IAAAe,kBAAA,CAAAwC,mBAA4B,EAACtC,WAAW,EAAEuC,OAAO,CAAC;EACjE,CAAC,CAAC,OAAOF,GAAQ,EAAE;IAAA;IAAA1E,cAAA,GAAAoB,CAAA;IACjBiC,OAAO,CAACX,KAAK,CAAC,iEAAiE,EAAEgC,GAAG,CAAC;IAAC;IAAA1E,cAAA,GAAAoB,CAAA;IACtF,OAAO;MAAEyB,IAAI,EAAE,IAAI;MAAEH,KAAK;MAAE;MAAA,CAAA1C,cAAA,GAAAsB,CAAA,WAAAoD,GAAG,CAACnC,OAAO;MAAA;MAAA,CAAAvC,cAAA,GAAAsB,CAAA,WAAI,8BAA8B;MAAEuD,KAAK,EAAE;IAAC,CAAE;EACvF;AACF,CAAC;AAAC;AAAA7E,cAAA,GAAAoB,CAAA;AAXWwC,OAAA,CAAAe,mBAAmB,GAAAA,mBAAA;AAahC;;;;;;AAAA;AAAA3E,cAAA,GAAAoB,CAAA;AAMO,MAAMyC,uBAAuB,GAAG,MACrCxB,WAAmB,IAC+C;EAAA;EAAArC,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EAClE,IAAI;IAAA;IAAApB,cAAA,GAAAoB,CAAA;IACF;IACA,MAAM,IAAAwC,OAAA,CAAAkB,mBAAmB,EAACzC,WAAW,CAAC;IAEtC;IAAA;IAAArC,cAAA,GAAAoB,CAAA;IACA,OAAO,MAAM,IAAAe,kBAAA,CAAA4C,iBAAiB,EAAC1C,WAAW,CAAC;EAC7C,CAAC,CAAC,OAAOqC,GAAQ,EAAE;IAAA;IAAA1E,cAAA,GAAAoB,CAAA;IACjBiC,OAAO,CAACX,KAAK,CAAC,+DAA+D,EAAEgC,GAAG,CAAC;IAAC;IAAA1E,cAAA,GAAAoB,CAAA;IACpF,OAAO;MAAEyB,IAAI,EAAE,IAAI;MAAEH,KAAK;MAAE;MAAA,CAAA1C,cAAA,GAAAsB,CAAA,WAAAoD,GAAG,CAACnC,OAAO;MAAA;MAAA,CAAAvC,cAAA,GAAAsB,CAAA,WAAI,8BAA8B;IAAA,CAAE;EAC7E;AACF,CAAC;AAAC;AAAAtB,cAAA,GAAAoB,CAAA;AAbWwC,OAAA,CAAAC,uBAAuB,GAAAA,uBAAA;AAepC;;;;;;;;AAAA;AAAA7D,cAAA,GAAAoB,CAAA;AAQO,MAAM0D,mBAAmB,GAAG,MACjCzC,WAAmB,IACoC;EAAA;EAAArC,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EACvD,IAAI;IACF,MAAM;MAAEsB;IAAK,CAAE;IAAA;IAAA,CAAA1C,cAAA,GAAAoB,CAAA,QAAG,MAAMa,UAAA,CAAAe,QAAQ,CAACgC,GAAG,CAAC,uBAAuB,EAAE;MAC5DC,cAAc,EAAE5C;KACjB,CAAC;IAAC;IAAArC,cAAA,GAAAoB,CAAA;IAEH,IAAIsB,KAAK,EAAE;MAAA;MAAA1C,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACTiC,OAAO,CAACX,KAAK,CAAC,qDAAqD,EAAEA,KAAK,CAAC;MAAC;MAAA1C,cAAA,GAAAoB,CAAA;MAC5E,OAAO;QAAEqB,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAEA,KAAK,CAACH;MAAO,CAAE;IACjD,CAAC;IAAA;IAAA;MAAAvC,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAED,OAAO;MAAEqB,OAAO,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAI,CAAE;EACvC,CAAC,CAAC,OAAOgC,GAAQ,EAAE;IAAA;IAAA1E,cAAA,GAAAoB,CAAA;IACjBiC,OAAO,CAACX,KAAK,CAAC,gEAAgE,EAAEgC,GAAG,CAAC;IAAC;IAAA1E,cAAA,GAAAoB,CAAA;IACrF,OAAO;MAAEqB,OAAO,EAAE,KAAK;MAAEC,KAAK;MAAE;MAAA,CAAA1C,cAAA,GAAAsB,CAAA,WAAAoD,GAAG,CAACnC,OAAO;MAAA;MAAA,CAAAvC,cAAA,GAAAsB,CAAA,WAAI,8BAA8B;IAAA,CAAE;EACjF;AACF,CAAC;AAAC;AAAAtB,cAAA,GAAAoB,CAAA;AAlBWwC,OAAA,CAAAkB,mBAAmB,GAAAA,mBAAA;AAoBhC;;;;AAAA;AAAA9E,cAAA,GAAAoB,CAAA;AAIO,MAAM8D,wBAAwB,GAAG,MAAAA,CACtC7C,WAAmB,EACnBC,MAAqB,EACrBC,OAAe,EACfC,UAAuC,EACvC2C,aAAmB,KACoC;EAAA;EAAAnF,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EACvD;EACA,OAAO;IACLqB,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;GACR;AACH,CAAC;AAAC;AAAA1C,cAAA,GAAAoB,CAAA;AAZWwC,OAAA,CAAAsB,wBAAwB,GAAAA,wBAAA;AAcrC;;;;AAAA;AAAAlF,cAAA,GAAAoB,CAAA;AAIO,MAAMgE,sBAAsB,GAAG,MAAAA,CACpC/C,WAAmB,EACnBgD,QAAgB,KACuC;EAAA;EAAArF,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EACvD,IAAI;IAAA;IAAApB,cAAA,GAAAoB,CAAA;IACF;IACA;IAEA;IACA;IACA;IACA;IAEA,OAAO;MACLqB,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE;KACR;EACH,CAAC,CAAC,OAAOgC,GAAQ,EAAE;IAAA;IAAA1E,cAAA,GAAAoB,CAAA;IACjBiC,OAAO,CAACX,KAAK,CAAC,qDAAqD,EAAEgC,GAAG,CAAC;IAAC;IAAA1E,cAAA,GAAAoB,CAAA;IAC1E,OAAO;MAAEqB,OAAO,EAAE,KAAK;MAAEC,KAAK;MAAE;MAAA,CAAA1C,cAAA,GAAAsB,CAAA,WAAAoD,GAAG,CAACnC,OAAO;MAAA;MAAA,CAAAvC,cAAA,GAAAsB,CAAA,WAAI,8BAA8B;IAAA,CAAE;EACjF;AACF,CAAC;AAAC;AAAAtB,cAAA,GAAAoB,CAAA;AArBWwC,OAAA,CAAAwB,sBAAsB,GAAAA,sBAAA","ignoreList":[]}