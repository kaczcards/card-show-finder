{"version":3,"names":["Toast","DURATIONS","cov_ncso5k284","s","SHORT","NORMAL","LONG","showSuccessToast","message","subText","duration","arguments","length","undefined","b","f","show","type","text1","text2","visibilityTime","position","showInfoToast","showErrorToast","showWarningToast","showLocationChangedToast","zipCode","showGpsLocationToast","locationName","showLocationFailedToast","fallbackZip","hideToast","hide","durations"],"sources":["toastUtils.ts"],"sourcesContent":["/**\n * Toast Utilities\n * \n * This file contains utility functions for displaying toast notifications\n * throughout the app using react-native-toast-message.\n */\n\nimport Toast from 'react-native-toast-message';\n\n// Default durations in milliseconds\nconst DURATIONS = {\n  SHORT: 2000,\n  NORMAL: 3500,\n  LONG: 5000\n};\n\n/**\n * Show a success toast notification\n * \n * @param message Primary message text\n * @param subText Optional secondary text\n * @param duration Time in ms to show the toast\n */\nexport const showSuccessToast = (\n  message: string, \n  subText?: string, \n  duration: number = DURATIONS.NORMAL\n) => {\n  Toast.show({\n    type: 'success',\n    text1: message,\n    text2: subText,\n    visibilityTime: duration,\n    position: 'bottom',\n  });\n};\n\n/**\n * Show an info toast notification\n * \n * @param message Primary message text\n * @param subText Optional secondary text\n * @param duration Time in ms to show the toast\n */\nexport const showInfoToast = (\n  message: string, \n  subText?: string, \n  duration: number = DURATIONS.NORMAL\n) => {\n  Toast.show({\n    type: 'info',\n    text1: message,\n    text2: subText,\n    visibilityTime: duration,\n    position: 'bottom',\n  });\n};\n\n/**\n * Show an error toast notification\n * \n * @param message Primary message text\n * @param subText Optional secondary text\n * @param duration Time in ms to show the toast\n */\nexport const showErrorToast = (\n  message: string, \n  subText?: string, \n  duration: number = DURATIONS.LONG\n) => {\n  Toast.show({\n    type: 'error',\n    text1: message,\n    text2: subText,\n    visibilityTime: duration,\n    position: 'bottom',\n  });\n};\n\n/**\n * Show a warning toast notification\n * \n * @param message Primary message text\n * @param subText Optional secondary text\n * @param duration Time in ms to show the toast\n */\nexport const showWarningToast = (\n  message: string, \n  subText?: string, \n  duration: number = DURATIONS.NORMAL\n) => {\n  Toast.show({\n    type: 'warning',\n    text1: message,\n    text2: subText,\n    visibilityTime: duration,\n    position: 'bottom',\n  });\n};\n\n/**\n * Location-specific toast notifications\n */\n\n/**\n * Show a toast notification when the map location changes to a new ZIP code\n * \n * @param zipCode The ZIP code the map has centered on\n */\nexport const showLocationChangedToast = (zipCode: string) => {\n  showInfoToast(\n    `Map centered on ${zipCode}`,\n    'Your location has been updated',\n    DURATIONS.SHORT\n  );\n};\n\n/**\n * Show a toast notification when GPS location is used\n * \n * @param locationName Optional name of the location (city, neighborhood)\n */\nexport const showGpsLocationToast = (locationName?: string) => {\n  showInfoToast(\n    locationName \n      ? `Using current location: ${locationName}`\n      : 'Using your current location',\n    'Shows within your selected radius will appear',\n    DURATIONS.SHORT\n  );\n};\n\n/**\n * Show a toast notification when location services fail\n * \n * @param fallbackZip The ZIP code being used as fallback\n */\nexport const showLocationFailedToast = (fallbackZip?: string) => {\n  if (fallbackZip) {\n    showWarningToast(\n      'Location services unavailable',\n      `Using your home ZIP code (${fallbackZip}) instead`,\n      DURATIONS.NORMAL\n    );\n  } else {\n    showErrorToast(\n      'Location services unavailable',\n      'Please set your home ZIP code in your profile',\n      DURATIONS.LONG\n    );\n  }\n};\n\n/**\n * Hide any currently displayed toast\n */\nexport const hideToast = () => {\n  Toast.hide();\n};\n\n// Export all toast functions\nexport default {\n  showSuccessToast,\n  showInfoToast,\n  showErrorToast,\n  showWarningToast,\n  showLocationChangedToast,\n  showGpsLocationToast,\n  showLocationFailedToast,\n  hideToast,\n  durations: DURATIONS\n};\n"],"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","ignoreList":[]}