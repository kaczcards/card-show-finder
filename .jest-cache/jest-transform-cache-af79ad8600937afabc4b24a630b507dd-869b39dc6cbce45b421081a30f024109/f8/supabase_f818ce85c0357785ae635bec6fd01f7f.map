{"version":3,"names":["cov_1sukd5hs0x","actualCoverage","supabase_js_1","s","require","async_storage_1","__importDefault","expo_constants_1","supabaseUrl","b","process","env","EXPO_PUBLIC_SUPABASE_URL","default","expoConfig","extra","supabaseAnonKey","EXPO_PUBLIC_SUPABASE_ANON_KEY","console","log","slice","error","supabaseSingleton","createClient","auth","storage","autoRefreshToken","persistSession","detectSessionInUrl","exports","supabase","isSupabaseInitialized","f","Boolean","err","getSupabase","Error","recreateSupabaseClient"],"sources":["/Users/kevin/card-show-finder/src/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Constants from 'expo-constants';\n\n// Supabase configuration - ideally from environment variables\nconst supabaseUrl = process.env.EXPO_PUBLIC_SUPABASE_URL || Constants.expoConfig?.extra?.supabaseUrl || '';\nconst supabaseAnonKey = process.env.EXPO_PUBLIC_SUPABASE_ANON_KEY || Constants.expoConfig?.extra?.supabaseAnonKey || '';\n\n/* -------------------------------------------------------------------------- */\n/*  üîç DIAGNOSTICS ‚Äì PRINT SUPABASE CREDS IN DEV                              */\n/* -------------------------------------------------------------------------- */\n// NOTE: These values are **public** (anon key & project URL) so it's safe\n// to log them for debugging.  Remove or wrap behind an env‚Äêguard before\n// shipping production builds if desired.\nconsole.log(\n  '\\n================= [SUPABASE CONFIG] =================\\n' +\n  `‚Ä¢ SUPABASE URL : ${supabaseUrl || '<EMPTY>'}\\n` +\n  `‚Ä¢ ANON KEY     : ${supabaseAnonKey?.slice(0, 8) || '<EMPTY>'}‚Ä¶\\n` +\n  '====================================================\\n'\n);\n\n/* -------------------------------------------------------------------------- */\n/* 1. Guard-rails / configuration validation                                  */\n/* -------------------------------------------------------------------------- */\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  // Fail fast ‚Äì running with a broken client leads to subtle bugs later\n  console.error(\n    '[Supabase] Missing configuration. ' +\n      'Ensure EXPO_PUBLIC_SUPABASE_URL and EXPO_PUBLIC_SUPABASE_ANON_KEY are set.'\n  );\n}\n\n/* -------------------------------------------------------------------------- */\n/* 2. Singleton client creation                                               */\n/* -------------------------------------------------------------------------- */\n\n/**\n * Internal holder for the Supabase singleton.\n * We keep it in a `let` so tests (or a logout flow) can force-recreate it\n * via `recreateSupabaseClient()`.\n */\nlet supabaseSingleton = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    storage: AsyncStorage,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: false, // we never use browser-based auth redirects\n  },\n});\n\n/**\n * Public accessor used throughout the codebase to avoid importing\n * `createClient` elsewhere.  Always returns **the same** instance.\n */\nexport const supabase = supabaseSingleton;\n\n/* -------------------------------------------------------------------------- */\n/* 3. Helper utilities                                                        */\n/* -------------------------------------------------------------------------- */\n\n/**\n * Defensive check used by legacy code (`isSupabaseInitialized()`).\n */\nexport const isSupabaseInitialized = (): boolean => {\n  try {\n    return Boolean(supabaseSingleton && supabaseSingleton.auth);\n  } catch (err) {\n    console.error('[Supabase] initialization check failed:', err);\n    return false;\n  }\n};\n\n/**\n * Provides the singleton client or throws a descriptive error.\n * Prefer this helper in newly-written code so errors surface early.\n */\nexport const getSupabase = () => {\n  if (!isSupabaseInitialized()) {\n    throw new Error(\n      '[Supabase] Client not initialised ‚Äì check environment variables.'\n    );\n  }\n  return supabaseSingleton;\n};\n\n/**\n * Optional helper to **re**create the client (e.g. after logout to purge\n * cached auth state, or inside E2E tests).  Most apps will never need this.\n */\nexport const recreateSupabaseClient = () => {\n  supabaseSingleton = createClient(supabaseUrl, supabaseAnonKey, {\n    auth: {\n      storage: AsyncStorage,\n      autoRefreshToken: true,\n      persistSession: true,\n      detectSessionInUrl: false,\n    },\n  });\n  return supabaseSingleton;\n};\n\n// Export types from Supabase for use in other files\nexport type { User, Session } from '@supabase/supabase-js';\n"],"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","ignoreList":[]}