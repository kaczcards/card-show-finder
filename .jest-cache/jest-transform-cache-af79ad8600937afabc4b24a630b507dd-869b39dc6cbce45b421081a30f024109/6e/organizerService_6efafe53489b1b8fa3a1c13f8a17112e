5004800a9b67cc86092add0b2cbaf8cc
"use strict";

/**
 * Organizer Service
 *
 * This service handles operations related to show organizers, including:
 * - Claiming and managing shows
 * - Managing recurring show series
 * - Responding to reviews
 * - Sending broadcast messages to attendees/dealers
 */
/* istanbul ignore next */
function cov_1m74gr8z20() {
  var path = "/Users/kevin/card-show-finder/src/services/organizerService.ts";
  var hash = "a9270586bc43928dbd34f5c7cbc7fa660c8710ab";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/services/organizerService.ts",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "1": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 355
        }
      },
      "2": {
        start: {
          line: 13,
          column: 19
        },
        end: {
          line: 13,
          column: 41
        }
      },
      "3": {
        start: {
          line: 14,
          column: 24
        },
        end: {
          line: 14,
          column: 50
        }
      },
      "4": {
        start: {
          line: 15,
          column: 28
        },
        end: {
          line: 15,
          column: 58
        }
      },
      "5": {
        start: {
          line: 20,
          column: 18
        },
        end: {
          line: 56,
          column: 1
        }
      },
      "6": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "7": {
        start: {
          line: 23,
          column: 53
        },
        end: {
          line: 27,
          column: 21
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 31,
          column: 9
        }
      },
      "9": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 69
        }
      },
      "10": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 64
        }
      },
      "11": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "12": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 107
        }
      },
      "13": {
        start: {
          line: 35,
          column: 27
        },
        end: {
          line: 35,
          column: 106
        }
      },
      "14": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 39,
          column: 14
        }
      },
      "15": {
        start: {
          line: 42,
          column: 39
        },
        end: {
          line: 45,
          column: 29
        }
      },
      "16": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "17": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 74
        }
      },
      "18": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 66
        }
      },
      "19": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 46
        }
      },
      "20": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 62
        }
      },
      "21": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 88
        }
      },
      "22": {
        start: {
          line: 57,
          column: 0
        },
        end: {
          line: 57,
          column: 30
        }
      },
      "23": {
        start: {
          line: 61,
          column: 26
        },
        end: {
          line: 116,
          column: 1
        }
      },
      "24": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 115,
          column: 5
        }
      },
      "25": {
        start: {
          line: 63,
          column: 20
        },
        end: {
          line: 66,
          column: 44
        }
      },
      "26": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "27": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 53
        }
      },
      "28": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 73,
          column: 54
        }
      },
      "29": {
        start: {
          line: 74,
          column: 32
        },
        end: {
          line: 74,
          column: 43
        }
      },
      "30": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "31": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 68
        }
      },
      "32": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 56
        }
      },
      "33": {
        start: {
          line: 80,
          column: 22
        },
        end: {
          line: 109,
          column: 11
        }
      },
      "34": {
        start: {
          line: 80,
          column: 39
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "35": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 44
        }
      },
      "36": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 73
        }
      },
      "37": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 84
        }
      },
      "38": {
        start: {
          line: 117,
          column: 0
        },
        end: {
          line: 117,
          column: 46
        }
      },
      "39": {
        start: {
          line: 121,
          column: 31
        },
        end: {
          line: 137,
          column: 1
        }
      },
      "40": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 136,
          column: 5
        }
      },
      "41": {
        start: {
          line: 123,
          column: 26
        },
        end: {
          line: 126,
          column: 29
        }
      },
      "42": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "43": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 73
        }
      },
      "44": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 60
        }
      },
      "45": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 46
        }
      },
      "46": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 78
        }
      },
      "47": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 88
        }
      },
      "48": {
        start: {
          line: 138,
          column: 0
        },
        end: {
          line: 138,
          column: 56
        }
      },
      "49": {
        start: {
          line: 142,
          column: 24
        },
        end: {
          line: 180,
          column: 1
        }
      },
      "50": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 179,
          column: 5
        }
      },
      "51": {
        start: {
          line: 145,
          column: 57
        },
        end: {
          line: 149,
          column: 21
        }
      },
      "52": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 153,
          column: 9
        }
      },
      "53": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 70
        }
      },
      "54": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 66
        }
      },
      "55": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 164,
          column: 9
        }
      },
      "56": {
        start: {
          line: 156,
          column: 43
        },
        end: {
          line: 159,
          column: 39
        }
      },
      "57": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 163,
          column: 13
        }
      },
      "58": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 161,
          column: 90
        }
      },
      "59": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 70
        }
      },
      "60": {
        start: {
          line: 166,
          column: 26
        },
        end: {
          line: 169,
          column: 34
        }
      },
      "61": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 173,
          column: 9
        }
      },
      "62": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 65
        }
      },
      "63": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 60
        }
      },
      "64": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 46
        }
      },
      "65": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 70
        }
      },
      "66": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 88
        }
      },
      "67": {
        start: {
          line: 181,
          column: 0
        },
        end: {
          line: 181,
          column: 42
        }
      },
      "68": {
        start: {
          line: 185,
          column: 29
        },
        end: {
          line: 201,
          column: 1
        }
      },
      "69": {
        start: {
          line: 186,
          column: 4
        },
        end: {
          line: 200,
          column: 5
        }
      },
      "70": {
        start: {
          line: 187,
          column: 26
        },
        end: {
          line: 190,
          column: 34
        }
      },
      "71": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 194,
          column: 9
        }
      },
      "72": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 69
        }
      },
      "73": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 60
        }
      },
      "74": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 195,
          column: 46
        }
      },
      "75": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 198,
          column: 74
        }
      },
      "76": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 199,
          column: 88
        }
      },
      "77": {
        start: {
          line: 202,
          column: 0
        },
        end: {
          line: 202,
          column: 52
        }
      },
      "78": {
        start: {
          line: 206,
          column: 29
        },
        end: {
          line: 227,
          column: 1
        }
      },
      "79": {
        start: {
          line: 207,
          column: 4
        },
        end: {
          line: 226,
          column: 5
        }
      },
      "80": {
        start: {
          line: 208,
          column: 32
        },
        end: {
          line: 210,
          column: 10
        }
      },
      "81": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 214,
          column: 9
        }
      },
      "82": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 71
        }
      },
      "83": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 56
        }
      },
      "84": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 221,
          column: 10
        }
      },
      "85": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 76
        }
      },
      "86": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 84
        }
      },
      "87": {
        start: {
          line: 228,
          column: 0
        },
        end: {
          line: 228,
          column: 52
        }
      },
      "88": {
        start: {
          line: 232,
          column: 31
        },
        end: {
          line: 248,
          column: 1
        }
      },
      "89": {
        start: {
          line: 233,
          column: 4
        },
        end: {
          line: 247,
          column: 5
        }
      },
      "90": {
        start: {
          line: 234,
          column: 26
        },
        end: {
          line: 237,
          column: 29
        }
      },
      "91": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 241,
          column: 9
        }
      },
      "92": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 239,
          column: 71
        }
      },
      "93": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 240,
          column: 60
        }
      },
      "94": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 242,
          column: 46
        }
      },
      "95": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 245,
          column: 76
        }
      },
      "96": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 246,
          column: 88
        }
      },
      "97": {
        start: {
          line: 249,
          column: 0
        },
        end: {
          line: 249,
          column: 56
        }
      },
      "98": {
        start: {
          line: 254,
          column: 24
        },
        end: {
          line: 283,
          column: 1
        }
      },
      "99": {
        start: {
          line: 255,
          column: 4
        },
        end: {
          line: 282,
          column: 5
        }
      },
      "100": {
        start: {
          line: 257,
          column: 50
        },
        end: {
          line: 261,
          column: 21
        }
      },
      "101": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 265,
          column: 9
        }
      },
      "102": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 263,
          column: 62
        }
      },
      "103": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 264,
          column: 63
        }
      },
      "104": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 273,
          column: 9
        }
      },
      "105": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 269,
          column: 92
        }
      },
      "106": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 272,
          column: 112
        }
      },
      "107": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 276,
          column: 9
        }
      },
      "108": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 275,
          column: 59
        }
      },
      "109": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 277,
          column: 46
        }
      },
      "110": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 280,
          column: 69
        }
      },
      "111": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 281,
          column: 88
        }
      },
      "112": {
        start: {
          line: 284,
          column: 0
        },
        end: {
          line: 284,
          column: 42
        }
      },
      "113": {
        start: {
          line: 288,
          column: 29
        },
        end: {
          line: 297,
          column: 1
        }
      },
      "114": {
        start: {
          line: 289,
          column: 4
        },
        end: {
          line: 296,
          column: 5
        }
      },
      "115": {
        start: {
          line: 290,
          column: 23
        },
        end: {
          line: 290,
          column: 83
        }
      },
      "116": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 291,
          column: 22
        }
      },
      "117": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 294,
          column: 73
        }
      },
      "118": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 295,
          column: 88
        }
      },
      "119": {
        start: {
          line: 298,
          column: 0
        },
        end: {
          line: 298,
          column: 52
        }
      },
      "120": {
        start: {
          line: 302,
          column: 29
        },
        end: {
          line: 353,
          column: 1
        }
      },
      "121": {
        start: {
          line: 303,
          column: 4
        },
        end: {
          line: 352,
          column: 5
        }
      },
      "122": {
        start: {
          line: 305,
          column: 55
        },
        end: {
          line: 305,
          column: 104
        }
      },
      "123": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 308,
          column: 9
        }
      },
      "124": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 307,
          column: 57
        }
      },
      "125": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 311,
          column: 9
        }
      },
      "126": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 310,
          column: 102
        }
      },
      "127": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 315,
          column: 9
        }
      },
      "128": {
        start: {
          line: 314,
          column: 12
        },
        end: {
          line: 314,
          column: 80
        }
      },
      "129": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 318,
          column: 9
        }
      },
      "130": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 317,
          column: 94
        }
      },
      "131": {
        start: {
          line: 320,
          column: 32
        },
        end: {
          line: 320,
          column: 73
        }
      },
      "132": {
        start: {
          line: 320,
          column: 60
        },
        end: {
          line: 320,
          column: 72
        }
      },
      "133": {
        start: {
          line: 322,
          column: 39
        },
        end: {
          line: 329,
          column: 15
        }
      },
      "134": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 333,
          column: 9
        }
      },
      "135": {
        start: {
          line: 331,
          column: 12
        },
        end: {
          line: 331,
          column: 75
        }
      },
      "136": {
        start: {
          line: 332,
          column: 12
        },
        end: {
          line: 332,
          column: 66
        }
      },
      "137": {
        start: {
          line: 335,
          column: 39
        },
        end: {
          line: 340,
          column: 34
        }
      },
      "138": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 344,
          column: 9
        }
      },
      "139": {
        start: {
          line: 342,
          column: 12
        },
        end: {
          line: 342,
          column: 74
        }
      },
      "140": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 347,
          column: 46
        }
      },
      "141": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 350,
          column: 74
        }
      },
      "142": {
        start: {
          line: 351,
          column: 8
        },
        end: {
          line: 351,
          column: 88
        }
      },
      "143": {
        start: {
          line: 354,
          column: 0
        },
        end: {
          line: 354,
          column: 52
        }
      },
      "144": {
        start: {
          line: 358,
          column: 28
        },
        end: {
          line: 406,
          column: 1
        }
      },
      "145": {
        start: {
          line: 359,
          column: 4
        },
        end: {
          line: 405,
          column: 5
        }
      },
      "146": {
        start: {
          line: 361,
          column: 25
        },
        end: {
          line: 364,
          column: 44
        }
      },
      "147": {
        start: {
          line: 365,
          column: 8
        },
        end: {
          line: 367,
          column: 9
        }
      },
      "148": {
        start: {
          line: 366,
          column: 12
        },
        end: {
          line: 366,
          column: 66
        }
      },
      "149": {
        start: {
          line: 368,
          column: 30
        },
        end: {
          line: 368,
          column: 46
        }
      },
      "150": {
        start: {
          line: 369,
          column: 22
        },
        end: {
          line: 369,
          column: 46
        }
      },
      "151": {
        start: {
          line: 371,
          column: 20
        },
        end: {
          line: 375,
          column: 51
        }
      },
      "152": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 378,
          column: 9
        }
      },
      "153": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 377,
          column: 56
        }
      },
      "154": {
        start: {
          line: 380,
          column: 8
        },
        end: {
          line: 382,
          column: 9
        }
      },
      "155": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 381,
          column: 47
        }
      },
      "156": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 385,
          column: 9
        }
      },
      "157": {
        start: {
          line: 384,
          column: 12
        },
        end: {
          line: 384,
          column: 92
        }
      },
      "158": {
        start: {
          line: 386,
          column: 32
        },
        end: {
          line: 386,
          column: 43
        }
      },
      "159": {
        start: {
          line: 387,
          column: 8
        },
        end: {
          line: 390,
          column: 9
        }
      },
      "160": {
        start: {
          line: 388,
          column: 12
        },
        end: {
          line: 388,
          column: 70
        }
      },
      "161": {
        start: {
          line: 389,
          column: 12
        },
        end: {
          line: 389,
          column: 66
        }
      },
      "162": {
        start: {
          line: 392,
          column: 24
        },
        end: {
          line: 399,
          column: 11
        }
      },
      "163": {
        start: {
          line: 392,
          column: 42
        },
        end: {
          line: 399,
          column: 9
        }
      },
      "164": {
        start: {
          line: 400,
          column: 8
        },
        end: {
          line: 400,
          column: 53
        }
      },
      "165": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 403,
          column: 75
        }
      },
      "166": {
        start: {
          line: 404,
          column: 8
        },
        end: {
          line: 404,
          column: 94
        }
      },
      "167": {
        start: {
          line: 407,
          column: 0
        },
        end: {
          line: 407,
          column: 50
        }
      },
      "168": {
        start: {
          line: 411,
          column: 26
        },
        end: {
          line: 444,
          column: 1
        }
      },
      "169": {
        start: {
          line: 412,
          column: 4
        },
        end: {
          line: 443,
          column: 5
        }
      },
      "170": {
        start: {
          line: 414,
          column: 8
        },
        end: {
          line: 416,
          column: 11
        }
      },
      "171": {
        start: {
          line: 418,
          column: 32
        },
        end: {
          line: 422,
          column: 21
        }
      },
      "172": {
        start: {
          line: 423,
          column: 8
        },
        end: {
          line: 426,
          column: 9
        }
      },
      "173": {
        start: {
          line: 424,
          column: 12
        },
        end: {
          line: 424,
          column: 68
        }
      },
      "174": {
        start: {
          line: 425,
          column: 12
        },
        end: {
          line: 425,
          column: 56
        }
      },
      "175": {
        start: {
          line: 428,
          column: 30
        },
        end: {
          line: 428,
          column: 32
        }
      },
      "176": {
        start: {
          line: 429,
          column: 21
        },
        end: {
          line: 429,
          column: 54
        }
      },
      "177": {
        start: {
          line: 430,
          column: 8
        },
        end: {
          line: 438,
          column: 10
        }
      },
      "178": {
        start: {
          line: 441,
          column: 8
        },
        end: {
          line: 441,
          column: 73
        }
      },
      "179": {
        start: {
          line: 442,
          column: 8
        },
        end: {
          line: 442,
          column: 84
        }
      },
      "180": {
        start: {
          line: 445,
          column: 0
        },
        end: {
          line: 445,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 19
          }
        },
        loc: {
          start: {
            line: 20,
            column: 49
          },
          end: {
            line: 56,
            column: 1
          }
        },
        line: 20
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 61,
            column: 26
          },
          end: {
            line: 61,
            column: 27
          }
        },
        loc: {
          start: {
            line: 61,
            column: 63
          },
          end: {
            line: 116,
            column: 1
          }
        },
        line: 61
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 80,
            column: 31
          },
          end: {
            line: 80,
            column: 32
          }
        },
        loc: {
          start: {
            line: 80,
            column: 39
          },
          end: {
            line: 109,
            column: 9
          }
        },
        line: 80
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 121,
            column: 31
          },
          end: {
            line: 121,
            column: 32
          }
        },
        loc: {
          start: {
            line: 121,
            column: 49
          },
          end: {
            line: 137,
            column: 1
          }
        },
        line: 121
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 142,
            column: 24
          },
          end: {
            line: 142,
            column: 25
          }
        },
        loc: {
          start: {
            line: 142,
            column: 61
          },
          end: {
            line: 180,
            column: 1
          }
        },
        line: 142
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 185,
            column: 29
          },
          end: {
            line: 185,
            column: 30
          }
        },
        loc: {
          start: {
            line: 185,
            column: 52
          },
          end: {
            line: 201,
            column: 1
          }
        },
        line: 185
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 206,
            column: 29
          },
          end: {
            line: 206,
            column: 30
          }
        },
        loc: {
          start: {
            line: 206,
            column: 55
          },
          end: {
            line: 227,
            column: 1
          }
        },
        line: 206
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 232,
            column: 31
          },
          end: {
            line: 232,
            column: 32
          }
        },
        loc: {
          start: {
            line: 232,
            column: 63
          },
          end: {
            line: 248,
            column: 1
          }
        },
        line: 232
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 254,
            column: 24
          },
          end: {
            line: 254,
            column: 25
          }
        },
        loc: {
          start: {
            line: 254,
            column: 54
          },
          end: {
            line: 283,
            column: 1
          }
        },
        line: 254
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 288,
            column: 29
          },
          end: {
            line: 288,
            column: 30
          }
        },
        loc: {
          start: {
            line: 288,
            column: 49
          },
          end: {
            line: 297,
            column: 1
          }
        },
        line: 288
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 302,
            column: 29
          },
          end: {
            line: 302,
            column: 30
          }
        },
        loc: {
          start: {
            line: 302,
            column: 61
          },
          end: {
            line: 353,
            column: 1
          }
        },
        line: 302
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 320,
            column: 55
          },
          end: {
            line: 320,
            column: 56
          }
        },
        loc: {
          start: {
            line: 320,
            column: 60
          },
          end: {
            line: 320,
            column: 72
          }
        },
        line: 320
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 358,
            column: 28
          },
          end: {
            line: 358,
            column: 29
          }
        },
        loc: {
          start: {
            line: 358,
            column: 65
          },
          end: {
            line: 406,
            column: 1
          }
        },
        line: 358
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 392,
            column: 33
          },
          end: {
            line: 392,
            column: 34
          }
        },
        loc: {
          start: {
            line: 392,
            column: 42
          },
          end: {
            line: 399,
            column: 9
          }
        },
        line: 392
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 411,
            column: 26
          },
          end: {
            line: 411,
            column: 27
          }
        },
        loc: {
          start: {
            line: 411,
            column: 49
          },
          end: {
            line: 444,
            column: 1
          }
        },
        line: 411
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 38,
            column: 23
          },
          end: {
            line: 38,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 40
          },
          end: {
            line: 38,
            column: 44
          }
        }, {
          start: {
            line: 38,
            column: 48
          },
          end: {
            line: 38,
            column: 95
          }
        }],
        line: 38
      },
      "3": {
        loc: {
          start: {
            line: 38,
            column: 48
          },
          end: {
            line: 38,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 48
          },
          end: {
            line: 38,
            column: 62
          }
        }, {
          start: {
            line: 38,
            column: 66
          },
          end: {
            line: 38,
            column: 95
          }
        }],
        line: 38
      },
      "4": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "5": {
        loc: {
          start: {
            line: 54,
            column: 40
          },
          end: {
            line: 54,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 40
          },
          end: {
            line: 54,
            column: 51
          }
        }, {
          start: {
            line: 54,
            column: 55
          },
          end: {
            line: 54,
            column: 85
          }
        }],
        line: 54
      },
      "6": {
        loc: {
          start: {
            line: 61,
            column: 46
          },
          end: {
            line: 61,
            column: 58
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 61,
            column: 56
          },
          end: {
            line: 61,
            column: 58
          }
        }],
        line: 61
      },
      "7": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "8": {
        loc: {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "9": {
        loc: {
          start: {
            line: 88,
            column: 25
          },
          end: {
            line: 88,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 25
          },
          end: {
            line: 88,
            column: 40
          }
        }, {
          start: {
            line: 88,
            column: 44
          },
          end: {
            line: 88,
            column: 53
          }
        }],
        line: 88
      },
      "10": {
        loc: {
          start: {
            line: 89,
            column: 22
          },
          end: {
            line: 89,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 22
          },
          end: {
            line: 89,
            column: 35
          }
        }, {
          start: {
            line: 89,
            column: 39
          },
          end: {
            line: 89,
            column: 48
          }
        }],
        line: 89
      },
      "11": {
        loc: {
          start: {
            line: 90,
            column: 20
          },
          end: {
            line: 90,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 20
          },
          end: {
            line: 90,
            column: 30
          }
        }, {
          start: {
            line: 90,
            column: 34
          },
          end: {
            line: 90,
            column: 43
          }
        }],
        line: 90
      },
      "12": {
        loc: {
          start: {
            line: 91,
            column: 25
          },
          end: {
            line: 99,
            column: 27
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 95,
            column: 18
          },
          end: {
            line: 98,
            column: 17
          }
        }, {
          start: {
            line: 99,
            column: 18
          },
          end: {
            line: 99,
            column: 27
          }
        }],
        line: 91
      },
      "13": {
        loc: {
          start: {
            line: 91,
            column: 25
          },
          end: {
            line: 94,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 25
          },
          end: {
            line: 91,
            column: 40
          }
        }, {
          start: {
            line: 92,
            column: 16
          },
          end: {
            line: 92,
            column: 43
          }
        }, {
          start: {
            line: 93,
            column: 16
          },
          end: {
            line: 93,
            column: 58
          }
        }, {
          start: {
            line: 94,
            column: 16
          },
          end: {
            line: 94,
            column: 55
          }
        }],
        line: 91
      },
      "14": {
        loc: {
          start: {
            line: 102,
            column: 22
          },
          end: {
            line: 102,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 22
          },
          end: {
            line: 102,
            column: 34
          }
        }, {
          start: {
            line: 102,
            column: 38
          },
          end: {
            line: 102,
            column: 40
          }
        }],
        line: 102
      },
      "15": {
        loc: {
          start: {
            line: 103,
            column: 24
          },
          end: {
            line: 103,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 24
          },
          end: {
            line: 103,
            column: 38
          }
        }, {
          start: {
            line: 103,
            column: 42
          },
          end: {
            line: 103,
            column: 44
          }
        }],
        line: 103
      },
      "16": {
        loc: {
          start: {
            line: 106,
            column: 26
          },
          end: {
            line: 106,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 26
          },
          end: {
            line: 106,
            column: 43
          }
        }, {
          start: {
            line: 106,
            column: 47
          },
          end: {
            line: 106,
            column: 49
          }
        }],
        line: 106
      },
      "17": {
        loc: {
          start: {
            line: 114,
            column: 36
          },
          end: {
            line: 114,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 36
          },
          end: {
            line: 114,
            column: 47
          }
        }, {
          start: {
            line: 114,
            column: 51
          },
          end: {
            line: 114,
            column: 81
          }
        }],
        line: 114
      },
      "18": {
        loc: {
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "19": {
        loc: {
          start: {
            line: 135,
            column: 40
          },
          end: {
            line: 135,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 40
          },
          end: {
            line: 135,
            column: 51
          }
        }, {
          start: {
            line: 135,
            column: 55
          },
          end: {
            line: 135,
            column: 85
          }
        }],
        line: 135
      },
      "20": {
        loc: {
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "21": {
        loc: {
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 164,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 164,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "22": {
        loc: {
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 163,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 163,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "23": {
        loc: {
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "24": {
        loc: {
          start: {
            line: 178,
            column: 40
          },
          end: {
            line: 178,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 178,
            column: 40
          },
          end: {
            line: 178,
            column: 51
          }
        }, {
          start: {
            line: 178,
            column: 55
          },
          end: {
            line: 178,
            column: 85
          }
        }],
        line: 178
      },
      "25": {
        loc: {
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "26": {
        loc: {
          start: {
            line: 199,
            column: 40
          },
          end: {
            line: 199,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 199,
            column: 40
          },
          end: {
            line: 199,
            column: 51
          }
        }, {
          start: {
            line: 199,
            column: 55
          },
          end: {
            line: 199,
            column: 85
          }
        }],
        line: 199
      },
      "27": {
        loc: {
          start: {
            line: 211,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 211
      },
      "28": {
        loc: {
          start: {
            line: 217,
            column: 31
          },
          end: {
            line: 217,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 217,
            column: 31
          },
          end: {
            line: 217,
            column: 50
          }
        }, {
          start: {
            line: 217,
            column: 54
          },
          end: {
            line: 217,
            column: 55
          }
        }],
        line: 217
      },
      "29": {
        loc: {
          start: {
            line: 218,
            column: 30
          },
          end: {
            line: 218,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 218,
            column: 30
          },
          end: {
            line: 218,
            column: 48
          }
        }, {
          start: {
            line: 218,
            column: 52
          },
          end: {
            line: 218,
            column: 53
          }
        }],
        line: 218
      },
      "30": {
        loc: {
          start: {
            line: 225,
            column: 36
          },
          end: {
            line: 225,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 225,
            column: 36
          },
          end: {
            line: 225,
            column: 47
          }
        }, {
          start: {
            line: 225,
            column: 51
          },
          end: {
            line: 225,
            column: 81
          }
        }],
        line: 225
      },
      "31": {
        loc: {
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "32": {
        loc: {
          start: {
            line: 246,
            column: 40
          },
          end: {
            line: 246,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 246,
            column: 40
          },
          end: {
            line: 246,
            column: 51
          }
        }, {
          start: {
            line: 246,
            column: 55
          },
          end: {
            line: 246,
            column: 85
          }
        }],
        line: 246
      },
      "33": {
        loc: {
          start: {
            line: 262,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 262
      },
      "34": {
        loc: {
          start: {
            line: 268,
            column: 8
          },
          end: {
            line: 273,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 268,
            column: 8
          },
          end: {
            line: 273,
            column: 9
          }
        }, {
          start: {
            line: 271,
            column: 13
          },
          end: {
            line: 273,
            column: 9
          }
        }],
        line: 268
      },
      "35": {
        loc: {
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 276,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 276,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 274
      },
      "36": {
        loc: {
          start: {
            line: 281,
            column: 40
          },
          end: {
            line: 281,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 281,
            column: 40
          },
          end: {
            line: 281,
            column: 51
          }
        }, {
          start: {
            line: 281,
            column: 55
          },
          end: {
            line: 281,
            column: 85
          }
        }],
        line: 281
      },
      "37": {
        loc: {
          start: {
            line: 295,
            column: 40
          },
          end: {
            line: 295,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 295,
            column: 40
          },
          end: {
            line: 295,
            column: 51
          }
        }, {
          start: {
            line: 295,
            column: 55
          },
          end: {
            line: 295,
            column: 85
          }
        }],
        line: 295
      },
      "38": {
        loc: {
          start: {
            line: 306,
            column: 8
          },
          end: {
            line: 308,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 306,
            column: 8
          },
          end: {
            line: 308,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 306
      },
      "39": {
        loc: {
          start: {
            line: 309,
            column: 8
          },
          end: {
            line: 311,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 309,
            column: 8
          },
          end: {
            line: 311,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 309
      },
      "40": {
        loc: {
          start: {
            line: 309,
            column: 12
          },
          end: {
            line: 309,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 309,
            column: 12
          },
          end: {
            line: 309,
            column: 21
          }
        }, {
          start: {
            line: 309,
            column: 25
          },
          end: {
            line: 309,
            column: 49
          }
        }],
        line: 309
      },
      "41": {
        loc: {
          start: {
            line: 313,
            column: 8
          },
          end: {
            line: 315,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 313,
            column: 8
          },
          end: {
            line: 315,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 313
      },
      "42": {
        loc: {
          start: {
            line: 313,
            column: 12
          },
          end: {
            line: 313,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 313,
            column: 12
          },
          end: {
            line: 313,
            column: 28
          }
        }, {
          start: {
            line: 313,
            column: 32
          },
          end: {
            line: 313,
            column: 67
          }
        }],
        line: 313
      },
      "43": {
        loc: {
          start: {
            line: 316,
            column: 8
          },
          end: {
            line: 318,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 316,
            column: 8
          },
          end: {
            line: 318,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 316
      },
      "44": {
        loc: {
          start: {
            line: 330,
            column: 8
          },
          end: {
            line: 333,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 330,
            column: 8
          },
          end: {
            line: 333,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 330
      },
      "45": {
        loc: {
          start: {
            line: 341,
            column: 8
          },
          end: {
            line: 344,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 341,
            column: 8
          },
          end: {
            line: 344,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 341
      },
      "46": {
        loc: {
          start: {
            line: 351,
            column: 40
          },
          end: {
            line: 351,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 351,
            column: 40
          },
          end: {
            line: 351,
            column: 51
          }
        }, {
          start: {
            line: 351,
            column: 55
          },
          end: {
            line: 351,
            column: 85
          }
        }],
        line: 351
      },
      "47": {
        loc: {
          start: {
            line: 358,
            column: 48
          },
          end: {
            line: 358,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 358,
            column: 58
          },
          end: {
            line: 358,
            column: 60
          }
        }],
        line: 358
      },
      "48": {
        loc: {
          start: {
            line: 365,
            column: 8
          },
          end: {
            line: 367,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 365,
            column: 8
          },
          end: {
            line: 367,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 365
      },
      "49": {
        loc: {
          start: {
            line: 369,
            column: 22
          },
          end: {
            line: 369,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 369,
            column: 22
          },
          end: {
            line: 369,
            column: 41
          }
        }, {
          start: {
            line: 369,
            column: 45
          },
          end: {
            line: 369,
            column: 46
          }
        }],
        line: 369
      },
      "50": {
        loc: {
          start: {
            line: 376,
            column: 8
          },
          end: {
            line: 378,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 376,
            column: 8
          },
          end: {
            line: 378,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 376
      },
      "51": {
        loc: {
          start: {
            line: 380,
            column: 8
          },
          end: {
            line: 382,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 380,
            column: 8
          },
          end: {
            line: 382,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 380
      },
      "52": {
        loc: {
          start: {
            line: 383,
            column: 8
          },
          end: {
            line: 385,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 383,
            column: 8
          },
          end: {
            line: 385,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 383
      },
      "53": {
        loc: {
          start: {
            line: 384,
            column: 66
          },
          end: {
            line: 384,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 384,
            column: 66
          },
          end: {
            line: 384,
            column: 79
          }
        }, {
          start: {
            line: 384,
            column: 83
          },
          end: {
            line: 384,
            column: 85
          }
        }],
        line: 384
      },
      "54": {
        loc: {
          start: {
            line: 387,
            column: 8
          },
          end: {
            line: 390,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 387,
            column: 8
          },
          end: {
            line: 390,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 387
      },
      "55": {
        loc: {
          start: {
            line: 398,
            column: 24
          },
          end: {
            line: 398,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 398,
            column: 24
          },
          end: {
            line: 398,
            column: 39
          }
        }, {
          start: {
            line: 398,
            column: 43
          },
          end: {
            line: 398,
            column: 45
          }
        }],
        line: 398
      },
      "56": {
        loc: {
          start: {
            line: 404,
            column: 36
          },
          end: {
            line: 404,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 404,
            column: 36
          },
          end: {
            line: 404,
            column: 47
          }
        }, {
          start: {
            line: 404,
            column: 51
          },
          end: {
            line: 404,
            column: 81
          }
        }],
        line: 404
      },
      "57": {
        loc: {
          start: {
            line: 423,
            column: 8
          },
          end: {
            line: 426,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 423,
            column: 8
          },
          end: {
            line: 426,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 423
      },
      "58": {
        loc: {
          start: {
            line: 429,
            column: 21
          },
          end: {
            line: 429,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 429,
            column: 21
          },
          end: {
            line: 429,
            column: 49
          }
        }, {
          start: {
            line: 429,
            column: 53
          },
          end: {
            line: 429,
            column: 54
          }
        }],
        line: 429
      },
      "59": {
        loc: {
          start: {
            line: 442,
            column: 36
          },
          end: {
            line: 442,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 442,
            column: 36
          },
          end: {
            line: 442,
            column: 47
          }
        }, {
          start: {
            line: 442,
            column: 51
          },
          end: {
            line: 442,
            column: 81
          }
        }],
        line: 442
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kevin/card-show-finder/src/services/organizerService.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/kevin/card-show-finder/src/services/organizerService.ts"],
      sourcesContent: ["/**\n * Organizer Service\n *\n * This service handles operations related to show organizers, including:\n * - Claiming and managing shows\n * - Managing recurring show series\n * - Responding to reviews\n * - Sending broadcast messages to attendees/dealers\n */\n\nimport { supabase } from '../supabase';\nimport { Show } from '../types';\nimport { addOrganizerResponse, updateOrganizerResponse, removeOrganizerResponse } from './reviewService';\nimport { showSeriesService } from './showSeriesService';\n\n/**\n * Interface for broadcast message details\n */\nexport interface BroadcastMessage {\n  showId: string;\n  content: string;\n  recipients: ('attendees' | 'dealers' | 'all')[];\n}\n\n/**\n * Interface for broadcast message history item\n */\nexport interface BroadcastHistoryItem {\n  id: string;\n  showId: string;\n  showTitle?: string;\n  messageContent: string;\n  sentAt: Date | string;\n  recipients: string[];\n}\n\n/**\n * Interface for broadcast quota information\n */\nexport interface BroadcastQuota {\n  used: number;\n  limit: number;\n  remaining: number;\n  resetDate: Date | string | null;\n}\n\n/**\n * Interface for recurring show creation\n */\nexport interface RecurringShowDetails {\n  parentShowId: string;\n  childShows: Partial<Show>[];\n}\n\n/**\n * Claim ownership of a show\n * This function now handles both individual shows and shows that are part of a series\n */\nexport const claimShow = async (\n  showId: string,\n  organizerId: string\n): Promise<{ success: boolean; error: string | null }> => {\n  try {\n    // First, check if the show is part of a series\n    const { data: showData, error: showError } = await supabase\n      .from('shows')\n      .select('series_id')\n      .eq('id', showId)\n      .single();\n\n    if (showError) {\n      console.error('Error fetching show details:', showError);\n      return { success: false, error: showError.message };\n    }\n\n    // If the show is part of a series, claim the entire series\n    if (showData.series_id) {\n      console.log(`Show ${showId} is part of series ${showData.series_id}, claiming series instead`);\n      const result = await showSeriesService.claimShowSeries(showData.series_id);\n      \n      return { \n        success: result.success, \n        error: result.success ? null : (result.message || 'Failed to claim show series') \n      };\n    }\n\n    // If the show is not part of a series, just update its organizer_id directly\n    const { error: updateError } = await supabase\n      .from('shows')\n      .update({ organizer_id: organizerId })\n      .eq('id', showId);\n\n    if (updateError) {\n      console.error('Error claiming individual show:', updateError);\n      return { success: false, error: updateError.message };\n    }\n\n    return { success: true, error: null };\n  } catch (err: any) {\n    console.error('Unexpected error claiming show:', err);\n    return { success: false, error: err.message || 'An unexpected error occurred' };\n  }\n};\n\n/**\n * Get shows owned by an organizer\n */\nexport const getOrganizerShows = async (\n  organizerId: string,\n  options: { includeSeriesChildren?: boolean } = {}\n): Promise<{ data: Show[] | null; error: string | null }> => {\n  try {\n    let query = supabase\n      .from('shows')\n      .select('*')\n      .eq('organizer_id', organizerId);\n\n    // If we don't want to include series children, filter them out\n    if (!options.includeSeriesChildren) {\n      query = query.is('parent_show_id', null);\n    }\n\n    // Order by date, with series parents first\n    query = query.order('is_series_parent', { ascending: false })\n                .order('start_date', { ascending: true });\n\n    const { data, error } = await query;\n\n    if (error) {\n      console.error('Error fetching organizer shows:', error);\n      return { data: null, error: error.message };\n    }\n\n    // Map the database response to our Show interface\n    const shows = data.map(row => ({\n      id: row.id,\n      title: row.title,\n      location: row.location,\n      address: row.address,\n      startDate: row.start_date,\n      endDate: row.end_date,\n      entryFee: row.entry_fee,\n      description: row.description ?? undefined,\n      imageUrl: row.image_url ?? undefined,\n      rating: row.rating ?? undefined,\n      coordinates: row.coordinates && \n        row.coordinates.coordinates && \n        Array.isArray(row.coordinates.coordinates) && \n        row.coordinates.coordinates.length >= 2\n        ? {\n            latitude: row.coordinates.coordinates[1],\n            longitude: row.coordinates.coordinates[0],\n          }\n        : undefined,\n      status: row.status,\n      organizerId: row.organizer_id,\n      features: row.features ?? {},\n      categories: row.categories ?? [],\n      parentShowId: row.parent_show_id,\n      isSeriesParent: row.is_series_parent,\n      extraDetails: row.extra_details ?? {},\n      createdAt: row.created_at,\n      updatedAt: row.updated_at,\n    }));\n\n    return { data: shows, error: null };\n  } catch (err: any) {\n    console.error('Unexpected error fetching organizer shows:', err);\n    return { data: null, error: err.message || 'An unexpected error occurred' };\n  }\n};\n\n/**\n * Mark a show as a recurring series parent\n */\nexport const markShowAsSeriesParent = async (\n  showId: string\n): Promise<{ success: boolean; error: string | null }> => {\n  try {\n    const { error } = await supabase\n      .from('shows')\n      .update({ is_series_parent: true })\n      .eq('id', showId);\n\n    if (error) {\n      console.error('Error marking show as series parent:', error);\n      return { success: false, error: error.message };\n    }\n\n    return { success: true, error: null };\n  } catch (err: any) {\n    console.error('Unexpected error marking show as series parent:', err);\n    return { success: false, error: err.message || 'An unexpected error occurred' };\n  }\n};\n\n/**\n * Add a show to a recurring series\n */\nexport const addShowToSeries = async (\n  childShowId: string,\n  parentShowId: string\n): Promise<{ success: boolean; error: string | null }> => {\n  try {\n    // First check if the parent show is marked as a series parent\n    const { data: parentData, error: parentError } = await supabase\n      .from('shows')\n      .select('is_series_parent')\n      .eq('id', parentShowId)\n      .single();\n\n    if (parentError) {\n      console.error('Error checking parent show:', parentError);\n      return { success: false, error: parentError.message };\n    }\n\n    // If the parent is not marked as a series parent, mark it\n    if (!parentData.is_series_parent) {\n      const { error: updateError } = await supabase\n        .from('shows')\n        .update({ is_series_parent: true })\n        .eq('id', parentShowId);\n\n      if (updateError) {\n        console.error('Error marking parent show as series parent:', updateError);\n        return { success: false, error: updateError.message };\n      }\n    }\n\n    // Now update the child show to link to the parent\n    const { error } = await supabase\n      .from('shows')\n      .update({ parent_show_id: parentShowId })\n      .eq('id', childShowId);\n\n    if (error) {\n      console.error('Error adding show to series:', error);\n      return { success: false, error: error.message };\n    }\n\n    return { success: true, error: null };\n  } catch (err: any) {\n    console.error('Unexpected error adding show to series:', err);\n    return { success: false, error: err.message || 'An unexpected error occurred' };\n  }\n};\n\n/**\n * Remove a show from a recurring series\n */\nexport const removeShowFromSeries = async (\n  childShowId: string\n): Promise<{ success: boolean; error: string | null }> => {\n  try {\n    const { error } = await supabase\n      .from('shows')\n      .update({ parent_show_id: null })\n      .eq('id', childShowId);\n\n    if (error) {\n      console.error('Error removing show from series:', error);\n      return { success: false, error: error.message };\n    }\n\n    return { success: true, error: null };\n  } catch (err: any) {\n    console.error('Unexpected error removing show from series:', err);\n    return { success: false, error: err.message || 'An unexpected error occurred' };\n  }\n};\n\n/**\n * Get aggregate review score for a show series\n */\nexport const getSeriesReviewScore = async (\n  seriesParentId: string\n): Promise<{ data: { averageRating: number; totalReviews: number } | null; error: string | null }> => {\n  try {\n    const { data, error } = await supabase.rpc('get_aggregate_review_score', {\n      series_parent_id: seriesParentId\n    });\n\n    if (error) {\n      console.error('Error getting series review score:', error);\n      return { data: null, error: error.message };\n    }\n\n    return { \n      data: {\n        averageRating: data.average_rating || 0,\n        totalReviews: data.total_reviews || 0\n      }, \n      error: null \n    };\n  } catch (err: any) {\n    console.error('Unexpected error getting series review score:', err);\n    return { data: null, error: err.message || 'An unexpected error occurred' };\n  }\n};\n\n/**\n * Update extra details for a show\n */\nexport const updateShowExtraDetails = async (\n  showId: string,\n  extraDetails: Record<string, any>\n): Promise<{ success: boolean; error: string | null }> => {\n  try {\n    const { error } = await supabase\n      .from('shows')\n      .update({ extra_details: extraDetails })\n      .eq('id', showId);\n\n    if (error) {\n      console.error('Error updating show extra details:', error);\n      return { success: false, error: error.message };\n    }\n\n    return { success: true, error: null };\n  } catch (err: any) {\n    console.error('Unexpected error updating show extra details:', err);\n    return { success: false, error: err.message || 'An unexpected error occurred' };\n  }\n};\n\n/**\n * Respond to a review as a show organizer\n * This is a wrapper around the existing reviewService functions\n */\nexport const respondToReview = async (\n  reviewId: string,\n  response: string\n): Promise<{ success: boolean; error: string | null }> => {\n  try {\n    // Check if there's an existing response\n    const { data: review, error: getError } = await supabase\n      .from('reviews')\n      .select('organizer_response')\n      .eq('id', reviewId)\n      .single();\n\n    if (getError) {\n      console.error('Error checking review:', getError);\n      return { success: false, error: getError.message };\n    }\n\n    let result;\n    \n    // If there's an existing response, update it; otherwise, add a new one\n    if (review.organizer_response) {\n      result = await updateOrganizerResponse(reviewId, response);\n    } else {\n      result = await addOrganizerResponse(reviewId, { reviewId, comment: response });\n    }\n\n    if (result.error) {\n      return { success: false, error: result.error };\n    }\n\n    return { success: true, error: null };\n  } catch (err: any) {\n    console.error('Unexpected error responding to review:', err);\n    return { success: false, error: err.message || 'An unexpected error occurred' };\n  }\n};\n\n/**\n * Remove an organizer's response to a review\n */\nexport const deleteReviewResponse = async (\n  reviewId: string\n): Promise<{ success: boolean; error: string | null }> => {\n  try {\n    const result = await removeOrganizerResponse(reviewId);\n    return result;\n  } catch (err: any) {\n    console.error('Unexpected error deleting review response:', err);\n    return { success: false, error: err.message || 'An unexpected error occurred' };\n  }\n};\n\n/**\n * Send a broadcast message to attendees/dealers of a show\n */\nexport const sendBroadcastMessage = async (\n  organizerId: string,\n  message: BroadcastMessage\n): Promise<{ success: boolean; error: string | null }> => {\n  try {\n    // First check if the organizer has reached their monthly limit\n    const { data: quotaData, error: quotaError } = await getBroadcastQuota(organizerId);\n    \n    if (quotaError) {\n      return { success: false, error: quotaError };\n    }\n    \n    if (quotaData && quotaData.remaining <= 0) {\n      return { success: false, error: 'You have reached your monthly broadcast message limit' };\n    }\n\n    // Validate message content\n    if (!message.content || message.content.trim().length === 0) {\n      return { success: false, error: 'Message content cannot be empty' };\n    }\n    \n    if (message.content.length > 1000) {\n      return { success: false, error: 'Message content cannot exceed 1000 characters' };\n    }\n\n    // Convert recipients array to string array\n    const recipientsArray = message.recipients.map(r => r.toString());\n\n    // Insert the broadcast log\n    const { error: insertError } = await supabase\n      .from('broadcast_logs')\n      .insert([{\n        organizer_id: organizerId,\n        show_id: message.showId,\n        message_content: message.content,\n        recipients: recipientsArray\n      }]);\n\n    if (insertError) {\n      console.error('Error logging broadcast message:', insertError);\n      return { success: false, error: insertError.message };\n    }\n\n    // Increment the broadcast count for the organizer\n    const { error: updateError } = await supabase\n      .from('profiles')\n      .update({ \n        broadcast_message_count: quotaData!.used + 1 \n      })\n      .eq('id', organizerId);\n\n    if (updateError) {\n      console.error('Error updating broadcast count:', updateError);\n      // Don't return error here, as the message was already sent\n    }\n\n    // TODO: Actual message delivery logic would go here\n    // This could involve push notifications, emails, etc.\n\n    return { success: true, error: null };\n  } catch (err: any) {\n    console.error('Unexpected error sending broadcast message:', err);\n    return { success: false, error: err.message || 'An unexpected error occurred' };\n  }\n};\n\n/**\n * Get broadcast message history for an organizer\n */\nexport const getBroadcastHistory = async (\n  organizerId: string,\n  options: { limit?: number; offset?: number; showId?: string } = {}\n): Promise<{ data: BroadcastHistoryItem[] | null; error: string | null; count: number }> => {\n  try {\n    // First, get the count for pagination\n    let countQuery = supabase\n      .from('broadcast_logs')\n      .select('id', { count: 'exact', head: true })\n      .eq('organizer_id', organizerId);\n      \n    if (options.showId) {\n      countQuery = countQuery.eq('show_id', options.showId);\n    }\n    \n    const countResponse = await countQuery;\n    const count = countResponse.count || 0;\n\n    // Then fetch the broadcast logs with pagination\n    let query = supabase\n      .from('broadcast_logs')\n      .select('*, shows:show_id(title)')\n      .eq('organizer_id', organizerId)\n      .order('sent_at', { ascending: false });\n      \n    if (options.showId) {\n      query = query.eq('show_id', options.showId);\n    }\n\n    // Apply pagination if specified\n    if (options.limit) {\n      query = query.limit(options.limit);\n    }\n    if (options.offset) {\n      query = query.range(options.offset, options.offset + (options.limit || 10) - 1);\n    }\n\n    const { data, error } = await query;\n\n    if (error) {\n      console.error('Error fetching broadcast history:', error);\n      return { data: null, error: error.message, count: 0 };\n    }\n\n    // Map the database response to our BroadcastHistoryItem interface\n    const history: BroadcastHistoryItem[] = data.map(item => ({\n      id: item.id,\n      showId: item.show_id,\n      showTitle: item.shows?.title,\n      messageContent: item.message_content,\n      sentAt: item.sent_at,\n      recipients: item.recipients || []\n    }));\n\n    return { data: history, error: null, count };\n  } catch (err: any) {\n    console.error('Unexpected error fetching broadcast history:', err);\n    return { data: null, error: err.message || 'An unexpected error occurred', count: 0 };\n  }\n};\n\n/**\n * Get broadcast quota information for an organizer\n */\nexport const getBroadcastQuota = async (\n  organizerId: string\n): Promise<{ data: BroadcastQuota | null; error: string | null }> => {\n  try {\n    // Reset the broadcast count if we're in a new month\n    await supabase.rpc('reset_broadcast_count', {\n      p_organizer_id: organizerId\n    });\n    \n    // Get the current broadcast count\n    const { data, error } = await supabase\n      .from('profiles')\n      .select('broadcast_message_count, last_broadcast_reset_date')\n      .eq('id', organizerId)\n      .single();\n\n    if (error) {\n      console.error('Error fetching broadcast quota:', error);\n      return { data: null, error: error.message };\n    }\n\n    // The monthly limit is currently hardcoded, but could be based on subscription tier\n    const MONTHLY_LIMIT = 10;\n    const used = data.broadcast_message_count || 0;\n    \n    return { \n      data: {\n        used,\n        limit: MONTHLY_LIMIT,\n        remaining: Math.max(0, MONTHLY_LIMIT - used),\n        resetDate: data.last_broadcast_reset_date\n      }, \n      error: null \n    };\n  } catch (err: any) {\n    console.error('Unexpected error fetching broadcast quota:', err);\n    return { data: null, error: err.message || 'An unexpected error occurred' };\n  }\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a9270586bc43928dbd34f5c7cbc7fa660c8710ab"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1m74gr8z20 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1m74gr8z20();
cov_1m74gr8z20().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1m74gr8z20().s[1]++;
exports.getBroadcastQuota = exports.getBroadcastHistory = exports.sendBroadcastMessage = exports.deleteReviewResponse = exports.respondToReview = exports.updateShowExtraDetails = exports.getSeriesReviewScore = exports.removeShowFromSeries = exports.addShowToSeries = exports.markShowAsSeriesParent = exports.getOrganizerShows = exports.claimShow = void 0;
const supabase_1 =
/* istanbul ignore next */
(cov_1m74gr8z20().s[2]++, require("../supabase"));
const reviewService_1 =
/* istanbul ignore next */
(cov_1m74gr8z20().s[3]++, require("./reviewService"));
const showSeriesService_1 =
/* istanbul ignore next */
(cov_1m74gr8z20().s[4]++, require("./showSeriesService"));
/**
 * Claim ownership of a show
 * This function now handles both individual shows and shows that are part of a series
 */
/* istanbul ignore next */
cov_1m74gr8z20().s[5]++;
const claimShow = async (showId, organizerId) => {
  /* istanbul ignore next */
  cov_1m74gr8z20().f[0]++;
  cov_1m74gr8z20().s[6]++;
  try {
    // First, check if the show is part of a series
    const {
      data: showData,
      error: showError
    } =
    /* istanbul ignore next */
    (cov_1m74gr8z20().s[7]++, await supabase_1.supabase.from('shows').select('series_id').eq('id', showId).single());
    /* istanbul ignore next */
    cov_1m74gr8z20().s[8]++;
    if (showError) {
      /* istanbul ignore next */
      cov_1m74gr8z20().b[0][0]++;
      cov_1m74gr8z20().s[9]++;
      console.error('Error fetching show details:', showError);
      /* istanbul ignore next */
      cov_1m74gr8z20().s[10]++;
      return {
        success: false,
        error: showError.message
      };
    } else
    /* istanbul ignore next */
    {
      cov_1m74gr8z20().b[0][1]++;
    }
    // If the show is part of a series, claim the entire series
    cov_1m74gr8z20().s[11]++;
    if (showData.series_id) {
      /* istanbul ignore next */
      cov_1m74gr8z20().b[1][0]++;
      cov_1m74gr8z20().s[12]++;
      console.log(`Show ${showId} is part of series ${showData.series_id}, claiming series instead`);
      const result =
      /* istanbul ignore next */
      (cov_1m74gr8z20().s[13]++, await showSeriesService_1.showSeriesService.claimShowSeries(showData.series_id));
      /* istanbul ignore next */
      cov_1m74gr8z20().s[14]++;
      return {
        success: result.success,
        error: result.success ?
        /* istanbul ignore next */
        (cov_1m74gr8z20().b[2][0]++, null) :
        /* istanbul ignore next */
        (cov_1m74gr8z20().b[2][1]++,
        /* istanbul ignore next */
        (cov_1m74gr8z20().b[3][0]++, result.message) ||
        /* istanbul ignore next */
        (cov_1m74gr8z20().b[3][1]++, 'Failed to claim show series'))
      };
    } else
    /* istanbul ignore next */
    {
      cov_1m74gr8z20().b[1][1]++;
    }
    // If the show is not part of a series, just update its organizer_id directly
    const {
      error: updateError
    } =
    /* istanbul ignore next */
    (cov_1m74gr8z20().s[15]++, await supabase_1.supabase.from('shows').update({
      organizer_id: organizerId
    }).eq('id', showId));
    /* istanbul ignore next */
    cov_1m74gr8z20().s[16]++;
    if (updateError) {
      /* istanbul ignore next */
      cov_1m74gr8z20().b[4][0]++;
      cov_1m74gr8z20().s[17]++;
      console.error('Error claiming individual show:', updateError);
      /* istanbul ignore next */
      cov_1m74gr8z20().s[18]++;
      return {
        success: false,
        error: updateError.message
      };
    } else
    /* istanbul ignore next */
    {
      cov_1m74gr8z20().b[4][1]++;
    }
    cov_1m74gr8z20().s[19]++;
    return {
      success: true,
      error: null
    };
  } catch (err) {
    /* istanbul ignore next */
    cov_1m74gr8z20().s[20]++;
    console.error('Unexpected error claiming show:', err);
    /* istanbul ignore next */
    cov_1m74gr8z20().s[21]++;
    return {
      success: false,
      error:
      /* istanbul ignore next */
      (cov_1m74gr8z20().b[5][0]++, err.message) ||
      /* istanbul ignore next */
      (cov_1m74gr8z20().b[5][1]++, 'An unexpected error occurred')
    };
  }
};
/* istanbul ignore next */
cov_1m74gr8z20().s[22]++;
exports.claimShow = claimShow;
/**
 * Get shows owned by an organizer
 */
/* istanbul ignore next */
cov_1m74gr8z20().s[23]++;
const getOrganizerShows = async (organizerId, options =
/* istanbul ignore next */
(cov_1m74gr8z20().b[6][0]++, {})) => {
  /* istanbul ignore next */
  cov_1m74gr8z20().f[1]++;
  cov_1m74gr8z20().s[24]++;
  try {
    let query =
    /* istanbul ignore next */
    (cov_1m74gr8z20().s[25]++, supabase_1.supabase.from('shows').select('*').eq('organizer_id', organizerId));
    // If we don't want to include series children, filter them out
    /* istanbul ignore next */
    cov_1m74gr8z20().s[26]++;
    if (!options.includeSeriesChildren) {
      /* istanbul ignore next */
      cov_1m74gr8z20().b[7][0]++;
      cov_1m74gr8z20().s[27]++;
      query = query.is('parent_show_id', null);
    } else
    /* istanbul ignore next */
    {
      cov_1m74gr8z20().b[7][1]++;
    }
    // Order by date, with series parents first
    cov_1m74gr8z20().s[28]++;
    query = query.order('is_series_parent', {
      ascending: false
    }).order('start_date', {
      ascending: true
    });
    const {
      data,
      error
    } =
    /* istanbul ignore next */
    (cov_1m74gr8z20().s[29]++, await query);
    /* istanbul ignore next */
    cov_1m74gr8z20().s[30]++;
    if (error) {
      /* istanbul ignore next */
      cov_1m74gr8z20().b[8][0]++;
      cov_1m74gr8z20().s[31]++;
      console.error('Error fetching organizer shows:', error);
      /* istanbul ignore next */
      cov_1m74gr8z20().s[32]++;
      return {
        data: null,
        error: error.message
      };
    } else
    /* istanbul ignore next */
    {
      cov_1m74gr8z20().b[8][1]++;
    }
    // Map the database response to our Show interface
    const shows =
    /* istanbul ignore next */
    (cov_1m74gr8z20().s[33]++, data.map(row => {
      /* istanbul ignore next */
      cov_1m74gr8z20().f[2]++;
      cov_1m74gr8z20().s[34]++;
      return {
        id: row.id,
        title: row.title,
        location: row.location,
        address: row.address,
        startDate: row.start_date,
        endDate: row.end_date,
        entryFee: row.entry_fee,
        description:
        /* istanbul ignore next */
        (cov_1m74gr8z20().b[9][0]++, row.description) ??
        /* istanbul ignore next */
        (cov_1m74gr8z20().b[9][1]++, undefined),
        imageUrl:
        /* istanbul ignore next */
        (cov_1m74gr8z20().b[10][0]++, row.image_url) ??
        /* istanbul ignore next */
        (cov_1m74gr8z20().b[10][1]++, undefined),
        rating:
        /* istanbul ignore next */
        (cov_1m74gr8z20().b[11][0]++, row.rating) ??
        /* istanbul ignore next */
        (cov_1m74gr8z20().b[11][1]++, undefined),
        coordinates:
        /* istanbul ignore next */
        (cov_1m74gr8z20().b[13][0]++, row.coordinates) &&
        /* istanbul ignore next */
        (cov_1m74gr8z20().b[13][1]++, row.coordinates.coordinates) &&
        /* istanbul ignore next */
        (cov_1m74gr8z20().b[13][2]++, Array.isArray(row.coordinates.coordinates)) &&
        /* istanbul ignore next */
        (cov_1m74gr8z20().b[13][3]++, row.coordinates.coordinates.length >= 2) ?
        /* istanbul ignore next */
        (cov_1m74gr8z20().b[12][0]++, {
          latitude: row.coordinates.coordinates[1],
          longitude: row.coordinates.coordinates[0]
        }) :
        /* istanbul ignore next */
        (cov_1m74gr8z20().b[12][1]++, undefined),
        status: row.status,
        organizerId: row.organizer_id,
        features:
        /* istanbul ignore next */
        (cov_1m74gr8z20().b[14][0]++, row.features) ??
        /* istanbul ignore next */
        (cov_1m74gr8z20().b[14][1]++, {}),
        categories:
        /* istanbul ignore next */
        (cov_1m74gr8z20().b[15][0]++, row.categories) ??
        /* istanbul ignore next */
        (cov_1m74gr8z20().b[15][1]++, []),
        parentShowId: row.parent_show_id,
        isSeriesParent: row.is_series_parent,
        extraDetails:
        /* istanbul ignore next */
        (cov_1m74gr8z20().b[16][0]++, row.extra_details) ??
        /* istanbul ignore next */
        (cov_1m74gr8z20().b[16][1]++, {}),
        createdAt: row.created_at,
        updatedAt: row.updated_at
      };
    }));
    /* istanbul ignore next */
    cov_1m74gr8z20().s[35]++;
    return {
      data: shows,
      error: null
    };
  } catch (err) {
    /* istanbul ignore next */
    cov_1m74gr8z20().s[36]++;
    console.error('Unexpected error fetching organizer shows:', err);
    /* istanbul ignore next */
    cov_1m74gr8z20().s[37]++;
    return {
      data: null,
      error:
      /* istanbul ignore next */
      (cov_1m74gr8z20().b[17][0]++, err.message) ||
      /* istanbul ignore next */
      (cov_1m74gr8z20().b[17][1]++, 'An unexpected error occurred')
    };
  }
};
/* istanbul ignore next */
cov_1m74gr8z20().s[38]++;
exports.getOrganizerShows = getOrganizerShows;
/**
 * Mark a show as a recurring series parent
 */
/* istanbul ignore next */
cov_1m74gr8z20().s[39]++;
const markShowAsSeriesParent = async showId => {
  /* istanbul ignore next */
  cov_1m74gr8z20().f[3]++;
  cov_1m74gr8z20().s[40]++;
  try {
    const {
      error
    } =
    /* istanbul ignore next */
    (cov_1m74gr8z20().s[41]++, await supabase_1.supabase.from('shows').update({
      is_series_parent: true
    }).eq('id', showId));
    /* istanbul ignore next */
    cov_1m74gr8z20().s[42]++;
    if (error) {
      /* istanbul ignore next */
      cov_1m74gr8z20().b[18][0]++;
      cov_1m74gr8z20().s[43]++;
      console.error('Error marking show as series parent:', error);
      /* istanbul ignore next */
      cov_1m74gr8z20().s[44]++;
      return {
        success: false,
        error: error.message
      };
    } else
    /* istanbul ignore next */
    {
      cov_1m74gr8z20().b[18][1]++;
    }
    cov_1m74gr8z20().s[45]++;
    return {
      success: true,
      error: null
    };
  } catch (err) {
    /* istanbul ignore next */
    cov_1m74gr8z20().s[46]++;
    console.error('Unexpected error marking show as series parent:', err);
    /* istanbul ignore next */
    cov_1m74gr8z20().s[47]++;
    return {
      success: false,
      error:
      /* istanbul ignore next */
      (cov_1m74gr8z20().b[19][0]++, err.message) ||
      /* istanbul ignore next */
      (cov_1m74gr8z20().b[19][1]++, 'An unexpected error occurred')
    };
  }
};
/* istanbul ignore next */
cov_1m74gr8z20().s[48]++;
exports.markShowAsSeriesParent = markShowAsSeriesParent;
/**
 * Add a show to a recurring series
 */
/* istanbul ignore next */
cov_1m74gr8z20().s[49]++;
const addShowToSeries = async (childShowId, parentShowId) => {
  /* istanbul ignore next */
  cov_1m74gr8z20().f[4]++;
  cov_1m74gr8z20().s[50]++;
  try {
    // First check if the parent show is marked as a series parent
    const {
      data: parentData,
      error: parentError
    } =
    /* istanbul ignore next */
    (cov_1m74gr8z20().s[51]++, await supabase_1.supabase.from('shows').select('is_series_parent').eq('id', parentShowId).single());
    /* istanbul ignore next */
    cov_1m74gr8z20().s[52]++;
    if (parentError) {
      /* istanbul ignore next */
      cov_1m74gr8z20().b[20][0]++;
      cov_1m74gr8z20().s[53]++;
      console.error('Error checking parent show:', parentError);
      /* istanbul ignore next */
      cov_1m74gr8z20().s[54]++;
      return {
        success: false,
        error: parentError.message
      };
    } else
    /* istanbul ignore next */
    {
      cov_1m74gr8z20().b[20][1]++;
    }
    // If the parent is not marked as a series parent, mark it
    cov_1m74gr8z20().s[55]++;
    if (!parentData.is_series_parent) {
      /* istanbul ignore next */
      cov_1m74gr8z20().b[21][0]++;
      const {
        error: updateError
      } =
      /* istanbul ignore next */
      (cov_1m74gr8z20().s[56]++, await supabase_1.supabase.from('shows').update({
        is_series_parent: true
      }).eq('id', parentShowId));
      /* istanbul ignore next */
      cov_1m74gr8z20().s[57]++;
      if (updateError) {
        /* istanbul ignore next */
        cov_1m74gr8z20().b[22][0]++;
        cov_1m74gr8z20().s[58]++;
        console.error('Error marking parent show as series parent:', updateError);
        /* istanbul ignore next */
        cov_1m74gr8z20().s[59]++;
        return {
          success: false,
          error: updateError.message
        };
      } else
      /* istanbul ignore next */
      {
        cov_1m74gr8z20().b[22][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1m74gr8z20().b[21][1]++;
    }
    // Now update the child show to link to the parent
    const {
      error
    } =
    /* istanbul ignore next */
    (cov_1m74gr8z20().s[60]++, await supabase_1.supabase.from('shows').update({
      parent_show_id: parentShowId
    }).eq('id', childShowId));
    /* istanbul ignore next */
    cov_1m74gr8z20().s[61]++;
    if (error) {
      /* istanbul ignore next */
      cov_1m74gr8z20().b[23][0]++;
      cov_1m74gr8z20().s[62]++;
      console.error('Error adding show to series:', error);
      /* istanbul ignore next */
      cov_1m74gr8z20().s[63]++;
      return {
        success: false,
        error: error.message
      };
    } else
    /* istanbul ignore next */
    {
      cov_1m74gr8z20().b[23][1]++;
    }
    cov_1m74gr8z20().s[64]++;
    return {
      success: true,
      error: null
    };
  } catch (err) {
    /* istanbul ignore next */
    cov_1m74gr8z20().s[65]++;
    console.error('Unexpected error adding show to series:', err);
    /* istanbul ignore next */
    cov_1m74gr8z20().s[66]++;
    return {
      success: false,
      error:
      /* istanbul ignore next */
      (cov_1m74gr8z20().b[24][0]++, err.message) ||
      /* istanbul ignore next */
      (cov_1m74gr8z20().b[24][1]++, 'An unexpected error occurred')
    };
  }
};
/* istanbul ignore next */
cov_1m74gr8z20().s[67]++;
exports.addShowToSeries = addShowToSeries;
/**
 * Remove a show from a recurring series
 */
/* istanbul ignore next */
cov_1m74gr8z20().s[68]++;
const removeShowFromSeries = async childShowId => {
  /* istanbul ignore next */
  cov_1m74gr8z20().f[5]++;
  cov_1m74gr8z20().s[69]++;
  try {
    const {
      error
    } =
    /* istanbul ignore next */
    (cov_1m74gr8z20().s[70]++, await supabase_1.supabase.from('shows').update({
      parent_show_id: null
    }).eq('id', childShowId));
    /* istanbul ignore next */
    cov_1m74gr8z20().s[71]++;
    if (error) {
      /* istanbul ignore next */
      cov_1m74gr8z20().b[25][0]++;
      cov_1m74gr8z20().s[72]++;
      console.error('Error removing show from series:', error);
      /* istanbul ignore next */
      cov_1m74gr8z20().s[73]++;
      return {
        success: false,
        error: error.message
      };
    } else
    /* istanbul ignore next */
    {
      cov_1m74gr8z20().b[25][1]++;
    }
    cov_1m74gr8z20().s[74]++;
    return {
      success: true,
      error: null
    };
  } catch (err) {
    /* istanbul ignore next */
    cov_1m74gr8z20().s[75]++;
    console.error('Unexpected error removing show from series:', err);
    /* istanbul ignore next */
    cov_1m74gr8z20().s[76]++;
    return {
      success: false,
      error:
      /* istanbul ignore next */
      (cov_1m74gr8z20().b[26][0]++, err.message) ||
      /* istanbul ignore next */
      (cov_1m74gr8z20().b[26][1]++, 'An unexpected error occurred')
    };
  }
};
/* istanbul ignore next */
cov_1m74gr8z20().s[77]++;
exports.removeShowFromSeries = removeShowFromSeries;
/**
 * Get aggregate review score for a show series
 */
/* istanbul ignore next */
cov_1m74gr8z20().s[78]++;
const getSeriesReviewScore = async seriesParentId => {
  /* istanbul ignore next */
  cov_1m74gr8z20().f[6]++;
  cov_1m74gr8z20().s[79]++;
  try {
    const {
      data,
      error
    } =
    /* istanbul ignore next */
    (cov_1m74gr8z20().s[80]++, await supabase_1.supabase.rpc('get_aggregate_review_score', {
      series_parent_id: seriesParentId
    }));
    /* istanbul ignore next */
    cov_1m74gr8z20().s[81]++;
    if (error) {
      /* istanbul ignore next */
      cov_1m74gr8z20().b[27][0]++;
      cov_1m74gr8z20().s[82]++;
      console.error('Error getting series review score:', error);
      /* istanbul ignore next */
      cov_1m74gr8z20().s[83]++;
      return {
        data: null,
        error: error.message
      };
    } else
    /* istanbul ignore next */
    {
      cov_1m74gr8z20().b[27][1]++;
    }
    cov_1m74gr8z20().s[84]++;
    return {
      data: {
        averageRating:
        /* istanbul ignore next */
        (cov_1m74gr8z20().b[28][0]++, data.average_rating) ||
        /* istanbul ignore next */
        (cov_1m74gr8z20().b[28][1]++, 0),
        totalReviews:
        /* istanbul ignore next */
        (cov_1m74gr8z20().b[29][0]++, data.total_reviews) ||
        /* istanbul ignore next */
        (cov_1m74gr8z20().b[29][1]++, 0)
      },
      error: null
    };
  } catch (err) {
    /* istanbul ignore next */
    cov_1m74gr8z20().s[85]++;
    console.error('Unexpected error getting series review score:', err);
    /* istanbul ignore next */
    cov_1m74gr8z20().s[86]++;
    return {
      data: null,
      error:
      /* istanbul ignore next */
      (cov_1m74gr8z20().b[30][0]++, err.message) ||
      /* istanbul ignore next */
      (cov_1m74gr8z20().b[30][1]++, 'An unexpected error occurred')
    };
  }
};
/* istanbul ignore next */
cov_1m74gr8z20().s[87]++;
exports.getSeriesReviewScore = getSeriesReviewScore;
/**
 * Update extra details for a show
 */
/* istanbul ignore next */
cov_1m74gr8z20().s[88]++;
const updateShowExtraDetails = async (showId, extraDetails) => {
  /* istanbul ignore next */
  cov_1m74gr8z20().f[7]++;
  cov_1m74gr8z20().s[89]++;
  try {
    const {
      error
    } =
    /* istanbul ignore next */
    (cov_1m74gr8z20().s[90]++, await supabase_1.supabase.from('shows').update({
      extra_details: extraDetails
    }).eq('id', showId));
    /* istanbul ignore next */
    cov_1m74gr8z20().s[91]++;
    if (error) {
      /* istanbul ignore next */
      cov_1m74gr8z20().b[31][0]++;
      cov_1m74gr8z20().s[92]++;
      console.error('Error updating show extra details:', error);
      /* istanbul ignore next */
      cov_1m74gr8z20().s[93]++;
      return {
        success: false,
        error: error.message
      };
    } else
    /* istanbul ignore next */
    {
      cov_1m74gr8z20().b[31][1]++;
    }
    cov_1m74gr8z20().s[94]++;
    return {
      success: true,
      error: null
    };
  } catch (err) {
    /* istanbul ignore next */
    cov_1m74gr8z20().s[95]++;
    console.error('Unexpected error updating show extra details:', err);
    /* istanbul ignore next */
    cov_1m74gr8z20().s[96]++;
    return {
      success: false,
      error:
      /* istanbul ignore next */
      (cov_1m74gr8z20().b[32][0]++, err.message) ||
      /* istanbul ignore next */
      (cov_1m74gr8z20().b[32][1]++, 'An unexpected error occurred')
    };
  }
};
/* istanbul ignore next */
cov_1m74gr8z20().s[97]++;
exports.updateShowExtraDetails = updateShowExtraDetails;
/**
 * Respond to a review as a show organizer
 * This is a wrapper around the existing reviewService functions
 */
/* istanbul ignore next */
cov_1m74gr8z20().s[98]++;
const respondToReview = async (reviewId, response) => {
  /* istanbul ignore next */
  cov_1m74gr8z20().f[8]++;
  cov_1m74gr8z20().s[99]++;
  try {
    // Check if there's an existing response
    const {
      data: review,
      error: getError
    } =
    /* istanbul ignore next */
    (cov_1m74gr8z20().s[100]++, await supabase_1.supabase.from('reviews').select('organizer_response').eq('id', reviewId).single());
    /* istanbul ignore next */
    cov_1m74gr8z20().s[101]++;
    if (getError) {
      /* istanbul ignore next */
      cov_1m74gr8z20().b[33][0]++;
      cov_1m74gr8z20().s[102]++;
      console.error('Error checking review:', getError);
      /* istanbul ignore next */
      cov_1m74gr8z20().s[103]++;
      return {
        success: false,
        error: getError.message
      };
    } else
    /* istanbul ignore next */
    {
      cov_1m74gr8z20().b[33][1]++;
    }
    let result;
    // If there's an existing response, update it; otherwise, add a new one
    /* istanbul ignore next */
    cov_1m74gr8z20().s[104]++;
    if (review.organizer_response) {
      /* istanbul ignore next */
      cov_1m74gr8z20().b[34][0]++;
      cov_1m74gr8z20().s[105]++;
      result = await (0, reviewService_1.updateOrganizerResponse)(reviewId, response);
    } else {
      /* istanbul ignore next */
      cov_1m74gr8z20().b[34][1]++;
      cov_1m74gr8z20().s[106]++;
      result = await (0, reviewService_1.addOrganizerResponse)(reviewId, {
        reviewId,
        comment: response
      });
    }
    /* istanbul ignore next */
    cov_1m74gr8z20().s[107]++;
    if (result.error) {
      /* istanbul ignore next */
      cov_1m74gr8z20().b[35][0]++;
      cov_1m74gr8z20().s[108]++;
      return {
        success: false,
        error: result.error
      };
    } else
    /* istanbul ignore next */
    {
      cov_1m74gr8z20().b[35][1]++;
    }
    cov_1m74gr8z20().s[109]++;
    return {
      success: true,
      error: null
    };
  } catch (err) {
    /* istanbul ignore next */
    cov_1m74gr8z20().s[110]++;
    console.error('Unexpected error responding to review:', err);
    /* istanbul ignore next */
    cov_1m74gr8z20().s[111]++;
    return {
      success: false,
      error:
      /* istanbul ignore next */
      (cov_1m74gr8z20().b[36][0]++, err.message) ||
      /* istanbul ignore next */
      (cov_1m74gr8z20().b[36][1]++, 'An unexpected error occurred')
    };
  }
};
/* istanbul ignore next */
cov_1m74gr8z20().s[112]++;
exports.respondToReview = respondToReview;
/**
 * Remove an organizer's response to a review
 */
/* istanbul ignore next */
cov_1m74gr8z20().s[113]++;
const deleteReviewResponse = async reviewId => {
  /* istanbul ignore next */
  cov_1m74gr8z20().f[9]++;
  cov_1m74gr8z20().s[114]++;
  try {
    const result =
    /* istanbul ignore next */
    (cov_1m74gr8z20().s[115]++, await (0, reviewService_1.removeOrganizerResponse)(reviewId));
    /* istanbul ignore next */
    cov_1m74gr8z20().s[116]++;
    return result;
  } catch (err) {
    /* istanbul ignore next */
    cov_1m74gr8z20().s[117]++;
    console.error('Unexpected error deleting review response:', err);
    /* istanbul ignore next */
    cov_1m74gr8z20().s[118]++;
    return {
      success: false,
      error:
      /* istanbul ignore next */
      (cov_1m74gr8z20().b[37][0]++, err.message) ||
      /* istanbul ignore next */
      (cov_1m74gr8z20().b[37][1]++, 'An unexpected error occurred')
    };
  }
};
/* istanbul ignore next */
cov_1m74gr8z20().s[119]++;
exports.deleteReviewResponse = deleteReviewResponse;
/**
 * Send a broadcast message to attendees/dealers of a show
 */
/* istanbul ignore next */
cov_1m74gr8z20().s[120]++;
const sendBroadcastMessage = async (organizerId, message) => {
  /* istanbul ignore next */
  cov_1m74gr8z20().f[10]++;
  cov_1m74gr8z20().s[121]++;
  try {
    // First check if the organizer has reached their monthly limit
    const {
      data: quotaData,
      error: quotaError
    } =
    /* istanbul ignore next */
    (cov_1m74gr8z20().s[122]++, await (0, exports.getBroadcastQuota)(organizerId));
    /* istanbul ignore next */
    cov_1m74gr8z20().s[123]++;
    if (quotaError) {
      /* istanbul ignore next */
      cov_1m74gr8z20().b[38][0]++;
      cov_1m74gr8z20().s[124]++;
      return {
        success: false,
        error: quotaError
      };
    } else
    /* istanbul ignore next */
    {
      cov_1m74gr8z20().b[38][1]++;
    }
    cov_1m74gr8z20().s[125]++;
    if (
    /* istanbul ignore next */
    (cov_1m74gr8z20().b[40][0]++, quotaData) &&
    /* istanbul ignore next */
    (cov_1m74gr8z20().b[40][1]++, quotaData.remaining <= 0)) {
      /* istanbul ignore next */
      cov_1m74gr8z20().b[39][0]++;
      cov_1m74gr8z20().s[126]++;
      return {
        success: false,
        error: 'You have reached your monthly broadcast message limit'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1m74gr8z20().b[39][1]++;
    }
    // Validate message content
    cov_1m74gr8z20().s[127]++;
    if (
    /* istanbul ignore next */
    (cov_1m74gr8z20().b[42][0]++, !message.content) ||
    /* istanbul ignore next */
    (cov_1m74gr8z20().b[42][1]++, message.content.trim().length === 0)) {
      /* istanbul ignore next */
      cov_1m74gr8z20().b[41][0]++;
      cov_1m74gr8z20().s[128]++;
      return {
        success: false,
        error: 'Message content cannot be empty'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1m74gr8z20().b[41][1]++;
    }
    cov_1m74gr8z20().s[129]++;
    if (message.content.length > 1000) {
      /* istanbul ignore next */
      cov_1m74gr8z20().b[43][0]++;
      cov_1m74gr8z20().s[130]++;
      return {
        success: false,
        error: 'Message content cannot exceed 1000 characters'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1m74gr8z20().b[43][1]++;
    }
    // Convert recipients array to string array
    const recipientsArray =
    /* istanbul ignore next */
    (cov_1m74gr8z20().s[131]++, message.recipients.map(r => {
      /* istanbul ignore next */
      cov_1m74gr8z20().f[11]++;
      cov_1m74gr8z20().s[132]++;
      return r.toString();
    }));
    // Insert the broadcast log
    const {
      error: insertError
    } =
    /* istanbul ignore next */
    (cov_1m74gr8z20().s[133]++, await supabase_1.supabase.from('broadcast_logs').insert([{
      organizer_id: organizerId,
      show_id: message.showId,
      message_content: message.content,
      recipients: recipientsArray
    }]));
    /* istanbul ignore next */
    cov_1m74gr8z20().s[134]++;
    if (insertError) {
      /* istanbul ignore next */
      cov_1m74gr8z20().b[44][0]++;
      cov_1m74gr8z20().s[135]++;
      console.error('Error logging broadcast message:', insertError);
      /* istanbul ignore next */
      cov_1m74gr8z20().s[136]++;
      return {
        success: false,
        error: insertError.message
      };
    } else
    /* istanbul ignore next */
    {
      cov_1m74gr8z20().b[44][1]++;
    }
    // Increment the broadcast count for the organizer
    const {
      error: updateError
    } =
    /* istanbul ignore next */
    (cov_1m74gr8z20().s[137]++, await supabase_1.supabase.from('profiles').update({
      broadcast_message_count: quotaData.used + 1
    }).eq('id', organizerId));
    /* istanbul ignore next */
    cov_1m74gr8z20().s[138]++;
    if (updateError) {
      /* istanbul ignore next */
      cov_1m74gr8z20().b[45][0]++;
      cov_1m74gr8z20().s[139]++;
      console.error('Error updating broadcast count:', updateError);
      // Don't return error here, as the message was already sent
    } else
    /* istanbul ignore next */
    {
      cov_1m74gr8z20().b[45][1]++;
    }
    // TODO: Actual message delivery logic would go here
    // This could involve push notifications, emails, etc.
    cov_1m74gr8z20().s[140]++;
    return {
      success: true,
      error: null
    };
  } catch (err) {
    /* istanbul ignore next */
    cov_1m74gr8z20().s[141]++;
    console.error('Unexpected error sending broadcast message:', err);
    /* istanbul ignore next */
    cov_1m74gr8z20().s[142]++;
    return {
      success: false,
      error:
      /* istanbul ignore next */
      (cov_1m74gr8z20().b[46][0]++, err.message) ||
      /* istanbul ignore next */
      (cov_1m74gr8z20().b[46][1]++, 'An unexpected error occurred')
    };
  }
};
/* istanbul ignore next */
cov_1m74gr8z20().s[143]++;
exports.sendBroadcastMessage = sendBroadcastMessage;
/**
 * Get broadcast message history for an organizer
 */
/* istanbul ignore next */
cov_1m74gr8z20().s[144]++;
const getBroadcastHistory = async (organizerId, options =
/* istanbul ignore next */
(cov_1m74gr8z20().b[47][0]++, {})) => {
  /* istanbul ignore next */
  cov_1m74gr8z20().f[12]++;
  cov_1m74gr8z20().s[145]++;
  try {
    // First, get the count for pagination
    let countQuery =
    /* istanbul ignore next */
    (cov_1m74gr8z20().s[146]++, supabase_1.supabase.from('broadcast_logs').select('id', {
      count: 'exact',
      head: true
    }).eq('organizer_id', organizerId));
    /* istanbul ignore next */
    cov_1m74gr8z20().s[147]++;
    if (options.showId) {
      /* istanbul ignore next */
      cov_1m74gr8z20().b[48][0]++;
      cov_1m74gr8z20().s[148]++;
      countQuery = countQuery.eq('show_id', options.showId);
    } else
    /* istanbul ignore next */
    {
      cov_1m74gr8z20().b[48][1]++;
    }
    const countResponse =
    /* istanbul ignore next */
    (cov_1m74gr8z20().s[149]++, await countQuery);
    const count =
    /* istanbul ignore next */
    (cov_1m74gr8z20().s[150]++,
    /* istanbul ignore next */
    (cov_1m74gr8z20().b[49][0]++, countResponse.count) ||
    /* istanbul ignore next */
    (cov_1m74gr8z20().b[49][1]++, 0));
    // Then fetch the broadcast logs with pagination
    let query =
    /* istanbul ignore next */
    (cov_1m74gr8z20().s[151]++, supabase_1.supabase.from('broadcast_logs').select('*, shows:show_id(title)').eq('organizer_id', organizerId).order('sent_at', {
      ascending: false
    }));
    /* istanbul ignore next */
    cov_1m74gr8z20().s[152]++;
    if (options.showId) {
      /* istanbul ignore next */
      cov_1m74gr8z20().b[50][0]++;
      cov_1m74gr8z20().s[153]++;
      query = query.eq('show_id', options.showId);
    } else
    /* istanbul ignore next */
    {
      cov_1m74gr8z20().b[50][1]++;
    }
    // Apply pagination if specified
    cov_1m74gr8z20().s[154]++;
    if (options.limit) {
      /* istanbul ignore next */
      cov_1m74gr8z20().b[51][0]++;
      cov_1m74gr8z20().s[155]++;
      query = query.limit(options.limit);
    } else
    /* istanbul ignore next */
    {
      cov_1m74gr8z20().b[51][1]++;
    }
    cov_1m74gr8z20().s[156]++;
    if (options.offset) {
      /* istanbul ignore next */
      cov_1m74gr8z20().b[52][0]++;
      cov_1m74gr8z20().s[157]++;
      query = query.range(options.offset, options.offset + (
      /* istanbul ignore next */
      (cov_1m74gr8z20().b[53][0]++, options.limit) ||
      /* istanbul ignore next */
      (cov_1m74gr8z20().b[53][1]++, 10)) - 1);
    } else
    /* istanbul ignore next */
    {
      cov_1m74gr8z20().b[52][1]++;
    }
    const {
      data,
      error
    } =
    /* istanbul ignore next */
    (cov_1m74gr8z20().s[158]++, await query);
    /* istanbul ignore next */
    cov_1m74gr8z20().s[159]++;
    if (error) {
      /* istanbul ignore next */
      cov_1m74gr8z20().b[54][0]++;
      cov_1m74gr8z20().s[160]++;
      console.error('Error fetching broadcast history:', error);
      /* istanbul ignore next */
      cov_1m74gr8z20().s[161]++;
      return {
        data: null,
        error: error.message,
        count: 0
      };
    } else
    /* istanbul ignore next */
    {
      cov_1m74gr8z20().b[54][1]++;
    }
    // Map the database response to our BroadcastHistoryItem interface
    const history =
    /* istanbul ignore next */
    (cov_1m74gr8z20().s[162]++, data.map(item => {
      /* istanbul ignore next */
      cov_1m74gr8z20().f[13]++;
      cov_1m74gr8z20().s[163]++;
      return {
        id: item.id,
        showId: item.show_id,
        showTitle: item.shows?.title,
        messageContent: item.message_content,
        sentAt: item.sent_at,
        recipients:
        /* istanbul ignore next */
        (cov_1m74gr8z20().b[55][0]++, item.recipients) ||
        /* istanbul ignore next */
        (cov_1m74gr8z20().b[55][1]++, [])
      };
    }));
    /* istanbul ignore next */
    cov_1m74gr8z20().s[164]++;
    return {
      data: history,
      error: null,
      count
    };
  } catch (err) {
    /* istanbul ignore next */
    cov_1m74gr8z20().s[165]++;
    console.error('Unexpected error fetching broadcast history:', err);
    /* istanbul ignore next */
    cov_1m74gr8z20().s[166]++;
    return {
      data: null,
      error:
      /* istanbul ignore next */
      (cov_1m74gr8z20().b[56][0]++, err.message) ||
      /* istanbul ignore next */
      (cov_1m74gr8z20().b[56][1]++, 'An unexpected error occurred'),
      count: 0
    };
  }
};
/* istanbul ignore next */
cov_1m74gr8z20().s[167]++;
exports.getBroadcastHistory = getBroadcastHistory;
/**
 * Get broadcast quota information for an organizer
 */
/* istanbul ignore next */
cov_1m74gr8z20().s[168]++;
const getBroadcastQuota = async organizerId => {
  /* istanbul ignore next */
  cov_1m74gr8z20().f[14]++;
  cov_1m74gr8z20().s[169]++;
  try {
    /* istanbul ignore next */
    cov_1m74gr8z20().s[170]++;
    // Reset the broadcast count if we're in a new month
    await supabase_1.supabase.rpc('reset_broadcast_count', {
      p_organizer_id: organizerId
    });
    // Get the current broadcast count
    const {
      data,
      error
    } =
    /* istanbul ignore next */
    (cov_1m74gr8z20().s[171]++, await supabase_1.supabase.from('profiles').select('broadcast_message_count, last_broadcast_reset_date').eq('id', organizerId).single());
    /* istanbul ignore next */
    cov_1m74gr8z20().s[172]++;
    if (error) {
      /* istanbul ignore next */
      cov_1m74gr8z20().b[57][0]++;
      cov_1m74gr8z20().s[173]++;
      console.error('Error fetching broadcast quota:', error);
      /* istanbul ignore next */
      cov_1m74gr8z20().s[174]++;
      return {
        data: null,
        error: error.message
      };
    } else
    /* istanbul ignore next */
    {
      cov_1m74gr8z20().b[57][1]++;
    }
    // The monthly limit is currently hardcoded, but could be based on subscription tier
    const MONTHLY_LIMIT =
    /* istanbul ignore next */
    (cov_1m74gr8z20().s[175]++, 10);
    const used =
    /* istanbul ignore next */
    (cov_1m74gr8z20().s[176]++,
    /* istanbul ignore next */
    (cov_1m74gr8z20().b[58][0]++, data.broadcast_message_count) ||
    /* istanbul ignore next */
    (cov_1m74gr8z20().b[58][1]++, 0));
    /* istanbul ignore next */
    cov_1m74gr8z20().s[177]++;
    return {
      data: {
        used,
        limit: MONTHLY_LIMIT,
        remaining: Math.max(0, MONTHLY_LIMIT - used),
        resetDate: data.last_broadcast_reset_date
      },
      error: null
    };
  } catch (err) {
    /* istanbul ignore next */
    cov_1m74gr8z20().s[178]++;
    console.error('Unexpected error fetching broadcast quota:', err);
    /* istanbul ignore next */
    cov_1m74gr8z20().s[179]++;
    return {
      data: null,
      error:
      /* istanbul ignore next */
      (cov_1m74gr8z20().b[59][0]++, err.message) ||
      /* istanbul ignore next */
      (cov_1m74gr8z20().b[59][1]++, 'An unexpected error occurred')
    };
  }
};
/* istanbul ignore next */
cov_1m74gr8z20().s[180]++;
exports.getBroadcastQuota = getBroadcastQuota;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,