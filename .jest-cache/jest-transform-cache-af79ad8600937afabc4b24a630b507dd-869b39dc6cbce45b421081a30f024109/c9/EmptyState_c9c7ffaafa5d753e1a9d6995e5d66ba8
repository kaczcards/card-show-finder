211735b728a481ddb27e0732a8bbd29b
function cov_q2x7q9jem() {
  var path = "/Users/kevin/card-show-finder/src/components/Chat/components/EmptyState.tsx";
  var hash = "b03c94f8d525d2fdc5707a575a927836cd119ea8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/components/Chat/components/EmptyState.tsx",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 46
        },
        end: {
          line: 31,
          column: 1
        }
      },
      "1": {
        start: {
          line: 21,
          column: 2
        },
        end: {
          line: 30,
          column: 4
        }
      },
      "2": {
        start: {
          line: 33,
          column: 15
        },
        end: {
          line: 52,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 46
          },
          end: {
            line: 14,
            column: 47
          }
        },
        loc: {
          start: {
            line: 20,
            column: 6
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 20
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 2
          },
          end: {
            line: 15,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 15,
            column: 10
          },
          end: {
            line: 15,
            column: 32
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 2
          },
          end: {
            line: 16,
            column: 95
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 16,
            column: 13
          },
          end: {
            line: 16,
            column: 95
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 17,
            column: 2
          },
          end: {
            line: 17,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 17,
            column: 13
          },
          end: {
            line: 17,
            column: 42
          }
        }],
        line: 17
      },
      "3": {
        loc: {
          start: {
            line: 18,
            column: 2
          },
          end: {
            line: 18,
            column: 15
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 18,
            column: 13
          },
          end: {
            line: 18,
            column: 15
          }
        }],
        line: 18
      },
      "4": {
        loc: {
          start: {
            line: 19,
            column: 2
          },
          end: {
            line: 19,
            column: 23
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 19,
            column: 14
          },
          end: {
            line: 19,
            column: 23
          }
        }],
        line: 19
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b03c94f8d525d2fdc5707a575a927836cd119ea8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_q2x7q9jem = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_q2x7q9jem();
import React from 'react';
import { View, Text, StyleSheet } from 'react-native';
import { Ionicons } from '@expo/vector-icons';
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
cov_q2x7q9jem().s[0]++;
var EmptyState = function EmptyState(_ref) {
  var _ref$title = _ref.title,
    title = _ref$title === void 0 ? (cov_q2x7q9jem().b[0][0]++, 'No conversations yet') : _ref$title,
    _ref$subtitle = _ref.subtitle,
    subtitle = _ref$subtitle === void 0 ? (cov_q2x7q9jem().b[1][0]++, 'When you message a dealer or show organizer, your conversations will appear here') : _ref$subtitle,
    _ref$iconName = _ref.iconName,
    iconName = _ref$iconName === void 0 ? (cov_q2x7q9jem().b[2][0]++, 'chatbubble-ellipses-outline') : _ref$iconName,
    _ref$iconSize = _ref.iconSize,
    iconSize = _ref$iconSize === void 0 ? (cov_q2x7q9jem().b[3][0]++, 64) : _ref$iconSize,
    _ref$iconColor = _ref.iconColor,
    iconColor = _ref$iconColor === void 0 ? (cov_q2x7q9jem().b[4][0]++, '#C7C7CC') : _ref$iconColor;
  cov_q2x7q9jem().f[0]++;
  cov_q2x7q9jem().s[1]++;
  return _jsxs(View, {
    style: styles.centerContainer,
    children: [_jsx(Ionicons, {
      name: iconName,
      size: iconSize,
      color: iconColor
    }), _jsx(Text, {
      style: styles.emptyTitle,
      children: title
    }), _jsx(Text, {
      style: styles.emptySubtitle,
      children: subtitle
    })]
  });
};
var styles = (cov_q2x7q9jem().s[2]++, StyleSheet.create({
  centerContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    padding: 20
  },
  emptyTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    marginVertical: 12,
    color: '#333333'
  },
  emptySubtitle: {
    fontSize: 14,
    color: '#8E8E93',
    textAlign: 'center',
    paddingHorizontal: 20
  }
}));
export default EmptyState;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIlZpZXciLCJUZXh0IiwiU3R5bGVTaGVldCIsIklvbmljb25zIiwianN4IiwiX2pzeCIsImpzeHMiLCJfanN4cyIsImNvdl9xMng3cTlqZW0iLCJzIiwiRW1wdHlTdGF0ZSIsIl9yZWYiLCJfcmVmJHRpdGxlIiwidGl0bGUiLCJiIiwiX3JlZiRzdWJ0aXRsZSIsInN1YnRpdGxlIiwiX3JlZiRpY29uTmFtZSIsImljb25OYW1lIiwiX3JlZiRpY29uU2l6ZSIsImljb25TaXplIiwiX3JlZiRpY29uQ29sb3IiLCJpY29uQ29sb3IiLCJmIiwic3R5bGUiLCJzdHlsZXMiLCJjZW50ZXJDb250YWluZXIiLCJjaGlsZHJlbiIsIm5hbWUiLCJzaXplIiwiY29sb3IiLCJlbXB0eVRpdGxlIiwiZW1wdHlTdWJ0aXRsZSIsImNyZWF0ZSIsImZsZXgiLCJqdXN0aWZ5Q29udGVudCIsImFsaWduSXRlbXMiLCJwYWRkaW5nIiwiZm9udFNpemUiLCJmb250V2VpZ2h0IiwibWFyZ2luVmVydGljYWwiLCJ0ZXh0QWxpZ24iLCJwYWRkaW5nSG9yaXpvbnRhbCJdLCJzb3VyY2VzIjpbIkVtcHR5U3RhdGUudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBWaWV3LCBUZXh0LCBTdHlsZVNoZWV0IH0gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCB7IElvbmljb25zIH0gZnJvbSAnQGV4cG8vdmVjdG9yLWljb25zJztcblxuaW50ZXJmYWNlIEVtcHR5U3RhdGVQcm9wcyB7XG4gIHRpdGxlPzogc3RyaW5nO1xuICBzdWJ0aXRsZT86IHN0cmluZztcbiAgLy8gQWNjZXB0IGFueSB2YWxpZCBJb25pY29ucyBnbHlwaCBhcyB3ZWxsIGFzIGFyYml0cmFyeSBzdHJpbmdzIGZvciBmbGV4aWJpbGl0eVxuICBpY29uTmFtZT86IGtleW9mIHR5cGVvZiBJb25pY29ucy5nbHlwaE1hcCB8IHN0cmluZztcbiAgaWNvblNpemU/OiBudW1iZXI7XG4gIGljb25Db2xvcj86IHN0cmluZztcbn1cblxuY29uc3QgRW1wdHlTdGF0ZTogUmVhY3QuRkM8RW1wdHlTdGF0ZVByb3BzPiA9ICh7XG4gIHRpdGxlID0gJ05vIGNvbnZlcnNhdGlvbnMgeWV0JyxcbiAgc3VidGl0bGUgPSAnV2hlbiB5b3UgbWVzc2FnZSBhIGRlYWxlciBvciBzaG93IG9yZ2FuaXplciwgeW91ciBjb252ZXJzYXRpb25zIHdpbGwgYXBwZWFyIGhlcmUnLFxuICBpY29uTmFtZSA9ICdjaGF0YnViYmxlLWVsbGlwc2VzLW91dGxpbmUnLFxuICBpY29uU2l6ZSA9IDY0LFxuICBpY29uQ29sb3IgPSAnI0M3QzdDQydcbn0pID0+IHtcbiAgcmV0dXJuIChcbiAgICA8VmlldyBzdHlsZT17c3R5bGVzLmNlbnRlckNvbnRhaW5lcn0+XG4gICAgICB7LyogVHlwZSBhc3NlcnRpb24ga2VlcHMgVFMgaGFwcHkgd2hpbGUgc3RpbGwgYWxsb3dpbmcgZHluYW1pYyBzdHJpbmdzICovfVxuICAgICAgPElvbmljb25zIG5hbWU9e2ljb25OYW1lIGFzIGFueX0gc2l6ZT17aWNvblNpemV9IGNvbG9yPXtpY29uQ29sb3J9IC8+XG4gICAgICA8VGV4dCBzdHlsZT17c3R5bGVzLmVtcHR5VGl0bGV9Pnt0aXRsZX08L1RleHQ+XG4gICAgICA8VGV4dCBzdHlsZT17c3R5bGVzLmVtcHR5U3VidGl0bGV9PlxuICAgICAgICB7c3VidGl0bGV9XG4gICAgICA8L1RleHQ+XG4gICAgPC9WaWV3PlxuICApO1xufTtcblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICBjZW50ZXJDb250YWluZXI6IHtcbiAgICBmbGV4OiAxLFxuICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICBwYWRkaW5nOiAyMCxcbiAgfSxcbiAgZW1wdHlUaXRsZToge1xuICAgIGZvbnRTaXplOiAxOCxcbiAgICBmb250V2VpZ2h0OiAnYm9sZCcsXG4gICAgbWFyZ2luVmVydGljYWw6IDEyLFxuICAgIGNvbG9yOiAnIzMzMzMzMycsXG4gIH0sXG4gIGVtcHR5U3VidGl0bGU6IHtcbiAgICBmb250U2l6ZTogMTQsXG4gICAgY29sb3I6ICcjOEU4RTkzJyxcbiAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxuICAgIHBhZGRpbmdIb3Jpem9udGFsOiAyMCxcbiAgfSxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBFbXB0eVN0YXRlO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLE9BQU9BLEtBQUssTUFBTSxPQUFPO0FBQ3pCLFNBQVNDLElBQUksRUFBRUMsSUFBSSxFQUFFQyxVQUFVLFFBQVEsY0FBYztBQUNyRCxTQUFTQyxRQUFRLFFBQVEsb0JBQW9CO0FBQUMsU0FBQUMsR0FBQSxJQUFBQyxJQUFBLEVBQUFDLElBQUEsSUFBQUMsS0FBQTtBQUFBQyxhQUFBLEdBQUFDLENBQUE7QUFXOUMsSUFBTUMsVUFBcUMsR0FBRyxTQUF4Q0EsVUFBcUNBLENBQUFDLElBQUEsRUFNckM7RUFBQSxJQUFBQyxVQUFBLEdBQUFELElBQUEsQ0FMSkUsS0FBSztJQUFMQSxLQUFLLEdBQUFELFVBQUEsZUFBQUosYUFBQSxHQUFBTSxDQUFBLFVBQUcsc0JBQXNCLElBQUFGLFVBQUE7SUFBQUcsYUFBQSxHQUFBSixJQUFBLENBQzlCSyxRQUFRO0lBQVJBLFFBQVEsR0FBQUQsYUFBQSxlQUFBUCxhQUFBLEdBQUFNLENBQUEsVUFBRyxrRkFBa0YsSUFBQUMsYUFBQTtJQUFBRSxhQUFBLEdBQUFOLElBQUEsQ0FDN0ZPLFFBQVE7SUFBUkEsUUFBUSxHQUFBRCxhQUFBLGVBQUFULGFBQUEsR0FBQU0sQ0FBQSxVQUFHLDZCQUE2QixJQUFBRyxhQUFBO0lBQUFFLGFBQUEsR0FBQVIsSUFBQSxDQUN4Q1MsUUFBUTtJQUFSQSxRQUFRLEdBQUFELGFBQUEsZUFBQVgsYUFBQSxHQUFBTSxDQUFBLFVBQUcsRUFBRSxJQUFBSyxhQUFBO0lBQUFFLGNBQUEsR0FBQVYsSUFBQSxDQUNiVyxTQUFTO0lBQVRBLFNBQVMsR0FBQUQsY0FBQSxlQUFBYixhQUFBLEdBQUFNLENBQUEsVUFBRyxTQUFTLElBQUFPLGNBQUE7RUFBQWIsYUFBQSxHQUFBZSxDQUFBO0VBQUFmLGFBQUEsR0FBQUMsQ0FBQTtFQUVyQixPQUNFRixLQUFBLENBQUNQLElBQUk7SUFBQ3dCLEtBQUssRUFBRUMsTUFBTSxDQUFDQyxlQUFnQjtJQUFBQyxRQUFBLEdBRWxDdEIsSUFBQSxDQUFDRixRQUFRO01BQUN5QixJQUFJLEVBQUVWLFFBQWdCO01BQUNXLElBQUksRUFBRVQsUUFBUztNQUFDVSxLQUFLLEVBQUVSO0lBQVUsQ0FBRSxDQUFDLEVBQ3JFakIsSUFBQSxDQUFDSixJQUFJO01BQUN1QixLQUFLLEVBQUVDLE1BQU0sQ0FBQ00sVUFBVztNQUFBSixRQUFBLEVBQUVkO0lBQUssQ0FBTyxDQUFDLEVBQzlDUixJQUFBLENBQUNKLElBQUk7TUFBQ3VCLEtBQUssRUFBRUMsTUFBTSxDQUFDTyxhQUFjO01BQUFMLFFBQUEsRUFDL0JYO0lBQVEsQ0FDTCxDQUFDO0VBQUEsQ0FDSCxDQUFDO0FBRVgsQ0FBQztBQUVELElBQU1TLE1BQU0sSUFBQWpCLGFBQUEsR0FBQUMsQ0FBQSxPQUFHUCxVQUFVLENBQUMrQixNQUFNLENBQUM7RUFDL0JQLGVBQWUsRUFBRTtJQUNmUSxJQUFJLEVBQUUsQ0FBQztJQUNQQyxjQUFjLEVBQUUsUUFBUTtJQUN4QkMsVUFBVSxFQUFFLFFBQVE7SUFDcEJDLE9BQU8sRUFBRTtFQUNYLENBQUM7RUFDRE4sVUFBVSxFQUFFO0lBQ1ZPLFFBQVEsRUFBRSxFQUFFO0lBQ1pDLFVBQVUsRUFBRSxNQUFNO0lBQ2xCQyxjQUFjLEVBQUUsRUFBRTtJQUNsQlYsS0FBSyxFQUFFO0VBQ1QsQ0FBQztFQUNERSxhQUFhLEVBQUU7SUFDYk0sUUFBUSxFQUFFLEVBQUU7SUFDWlIsS0FBSyxFQUFFLFNBQVM7SUFDaEJXLFNBQVMsRUFBRSxRQUFRO0lBQ25CQyxpQkFBaUIsRUFBRTtFQUNyQjtBQUNGLENBQUMsQ0FBQztBQUVGLGVBQWVoQyxVQUFVIiwiaWdub3JlTGlzdCI6W119