{"version":3,"names":["React","View","Text","StyleSheet","Ionicons","jsx","_jsx","jsxs","_jsxs","cov_q2x7q9jem","s","EmptyState","_ref","_ref$title","title","b","_ref$subtitle","subtitle","_ref$iconName","iconName","_ref$iconSize","iconSize","_ref$iconColor","iconColor","f","style","styles","centerContainer","children","name","size","color","emptyTitle","emptySubtitle","create","flex","justifyContent","alignItems","padding","fontSize","fontWeight","marginVertical","textAlign","paddingHorizontal"],"sources":["EmptyState.tsx"],"sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\n\ninterface EmptyStateProps {\n  title?: string;\n  subtitle?: string;\n  // Accept any valid Ionicons glyph as well as arbitrary strings for flexibility\n  iconName?: keyof typeof Ionicons.glyphMap | string;\n  iconSize?: number;\n  iconColor?: string;\n}\n\nconst EmptyState: React.FC<EmptyStateProps> = ({\n  title = 'No conversations yet',\n  subtitle = 'When you message a dealer or show organizer, your conversations will appear here',\n  iconName = 'chatbubble-ellipses-outline',\n  iconSize = 64,\n  iconColor = '#C7C7CC'\n}) => {\n  return (\n    <View style={styles.centerContainer}>\n      {/* Type assertion keeps TS happy while still allowing dynamic strings */}\n      <Ionicons name={iconName as any} size={iconSize} color={iconColor} />\n      <Text style={styles.emptyTitle}>{title}</Text>\n      <Text style={styles.emptySubtitle}>\n        {subtitle}\n      </Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  centerContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  emptyTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginVertical: 12,\n    color: '#333333',\n  },\n  emptySubtitle: {\n    fontSize: 14,\n    color: '#8E8E93',\n    textAlign: 'center',\n    paddingHorizontal: 20,\n  },\n});\n\nexport default EmptyState;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,IAAI,EAAEC,UAAU,QAAQ,cAAc;AACrD,SAASC,QAAQ,QAAQ,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAAAC,aAAA,GAAAC,CAAA;AAW9C,IAAMC,UAAqC,GAAG,SAAxCA,UAAqCA,CAAAC,IAAA,EAMrC;EAAA,IAAAC,UAAA,GAAAD,IAAA,CALJE,KAAK;IAALA,KAAK,GAAAD,UAAA,eAAAJ,aAAA,GAAAM,CAAA,UAAG,sBAAsB,IAAAF,UAAA;IAAAG,aAAA,GAAAJ,IAAA,CAC9BK,QAAQ;IAARA,QAAQ,GAAAD,aAAA,eAAAP,aAAA,GAAAM,CAAA,UAAG,kFAAkF,IAAAC,aAAA;IAAAE,aAAA,GAAAN,IAAA,CAC7FO,QAAQ;IAARA,QAAQ,GAAAD,aAAA,eAAAT,aAAA,GAAAM,CAAA,UAAG,6BAA6B,IAAAG,aAAA;IAAAE,aAAA,GAAAR,IAAA,CACxCS,QAAQ;IAARA,QAAQ,GAAAD,aAAA,eAAAX,aAAA,GAAAM,CAAA,UAAG,EAAE,IAAAK,aAAA;IAAAE,cAAA,GAAAV,IAAA,CACbW,SAAS;IAATA,SAAS,GAAAD,cAAA,eAAAb,aAAA,GAAAM,CAAA,UAAG,SAAS,IAAAO,cAAA;EAAAb,aAAA,GAAAe,CAAA;EAAAf,aAAA,GAAAC,CAAA;EAErB,OACEF,KAAA,CAACP,IAAI;IAACwB,KAAK,EAAEC,MAAM,CAACC,eAAgB;IAAAC,QAAA,GAElCtB,IAAA,CAACF,QAAQ;MAACyB,IAAI,EAAEV,QAAgB;MAACW,IAAI,EAAET,QAAS;MAACU,KAAK,EAAER;IAAU,CAAE,CAAC,EACrEjB,IAAA,CAACJ,IAAI;MAACuB,KAAK,EAAEC,MAAM,CAACM,UAAW;MAAAJ,QAAA,EAAEd;IAAK,CAAO,CAAC,EAC9CR,IAAA,CAACJ,IAAI;MAACuB,KAAK,EAAEC,MAAM,CAACO,aAAc;MAAAL,QAAA,EAC/BX;IAAQ,CACL,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AAED,IAAMS,MAAM,IAAAjB,aAAA,GAAAC,CAAA,OAAGP,UAAU,CAAC+B,MAAM,CAAC;EAC/BP,eAAe,EAAE;IACfQ,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE;EACX,CAAC;EACDN,UAAU,EAAE;IACVO,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,cAAc,EAAE,EAAE;IAClBV,KAAK,EAAE;EACT,CAAC;EACDE,aAAa,EAAE;IACbM,QAAQ,EAAE,EAAE;IACZR,KAAK,EAAE,SAAS;IAChBW,SAAS,EAAE,QAAQ;IACnBC,iBAAiB,EAAE;EACrB;AACF,CAAC,CAAC;AAEF,eAAehC,UAAU","ignoreList":[]}