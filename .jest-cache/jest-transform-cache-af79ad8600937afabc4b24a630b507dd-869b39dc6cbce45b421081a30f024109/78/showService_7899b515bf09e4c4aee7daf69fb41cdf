bc178179a510b0b32fc491797700afaf
"use strict";

/**
 * Show Service
 *
 * This file contains helpers for fetching shows from Supabase.
 */
/* istanbul ignore next */
function cov_2e6bcnjtba() {
  var path = "/Users/kevin/card-show-finder/src/services/showService.ts";
  var hash = "66db1496471be5ead0b9c8dbce855ec0f6ce9a6d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/services/showService.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 62
        }
      },
      "1": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 186
        }
      },
      "2": {
        start: {
          line: 9,
          column: 19
        },
        end: {
          line: 9,
          column: 41
        }
      },
      "3": {
        start: {
          line: 16,
          column: 22
        },
        end: {
          line: 16,
          column: 60
        }
      },
      "4": {
        start: {
          line: 17,
          column: 27
        },
        end: {
          line: 54,
          column: 2
        }
      },
      "5": {
        start: {
          line: 17,
          column: 37
        },
        end: {
          line: 54,
          column: 1
        }
      },
      "6": {
        start: {
          line: 55,
          column: 17
        },
        end: {
          line: 345,
          column: 1
        }
      },
      "7": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 342,
          column: 5
        }
      },
      "8": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 32
        }
      },
      "9": {
        start: {
          line: 63,
          column: 22
        },
        end: {
          line: 63,
          column: 68
        }
      },
      "10": {
        start: {
          line: 63,
          column: 29
        },
        end: {
          line: 63,
          column: 68
        }
      },
      "11": {
        start: {
          line: 65,
          column: 26
        },
        end: {
          line: 65,
          column: 64
        }
      },
      "12": {
        start: {
          line: 66,
          column: 24
        },
        end: {
          line: 66,
          column: 97
        }
      },
      "13": {
        start: {
          line: 68,
          column: 23
        },
        end: {
          line: 70,
          column: 16
        }
      },
      "14": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 280,
          column: 9
        }
      },
      "15": {
        start: {
          line: 78,
          column: 27
        },
        end: {
          line: 78,
          column: 83
        }
      },
      "16": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 82,
          column: 13
        }
      },
      "17": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 81,
          column: 181
        }
      },
      "18": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 90,
          column: 15
        }
      },
      "19": {
        start: {
          line: 92,
          column: 61
        },
        end: {
          line: 98,
          column: 14
        }
      },
      "20": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 167,
          column: 13
        }
      },
      "21": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 100,
          column: 113
        }
      },
      "22": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 103,
          column: 147
        }
      },
      "23": {
        start: {
          line: 105,
          column: 16
        },
        end: {
          line: 119,
          column: 17
        }
      },
      "24": {
        start: {
          line: 106,
          column: 34
        },
        end: {
          line: 106,
          column: 80
        }
      },
      "25": {
        start: {
          line: 106,
          column: 57
        },
        end: {
          line: 106,
          column: 79
        }
      },
      "26": {
        start: {
          line: 107,
          column: 20
        },
        end: {
          line: 107,
          column: 136
        }
      },
      "27": {
        start: {
          line: 109,
          column: 20
        },
        end: {
          line: 118,
          column: 21
        }
      },
      "28": {
        start: {
          line: 110,
          column: 43
        },
        end: {
          line: 110,
          column: 89
        }
      },
      "29": {
        start: {
          line: 110,
          column: 66
        },
        end: {
          line: 110,
          column: 88
        }
      },
      "30": {
        start: {
          line: 111,
          column: 24
        },
        end: {
          line: 117,
          column: 27
        }
      },
      "31": {
        start: {
          line: 121,
          column: 35
        },
        end: {
          line: 121,
          column: 45
        }
      },
      "32": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 144,
          column: 17
        }
      },
      "33": {
        start: {
          line: 124,
          column: 34
        },
        end: {
          line: 124,
          column: 44
        }
      },
      "34": {
        start: {
          line: 125,
          column: 20
        },
        end: {
          line: 125,
          column: 114
        }
      },
      "35": {
        start: {
          line: 127,
          column: 51
        },
        end: {
          line: 127,
          column: 99
        }
      },
      "36": {
        start: {
          line: 127,
          column: 76
        },
        end: {
          line: 127,
          column: 98
        }
      },
      "37": {
        start: {
          line: 128,
          column: 20
        },
        end: {
          line: 132,
          column: 21
        }
      },
      "38": {
        start: {
          line: 129,
          column: 46
        },
        end: {
          line: 129,
          column: 87
        }
      },
      "39": {
        start: {
          line: 130,
          column: 43
        },
        end: {
          line: 130,
          column: 64
        }
      },
      "40": {
        start: {
          line: 131,
          column: 24
        },
        end: {
          line: 131,
          column: 197
        }
      },
      "41": {
        start: {
          line: 133,
          column: 20
        },
        end: {
          line: 142,
          column: 23
        }
      },
      "42": {
        start: {
          line: 135,
          column: 44
        },
        end: {
          line: 135,
          column: 67
        }
      },
      "43": {
        start: {
          line: 136,
          column: 40
        },
        end: {
          line: 136,
          column: 60
        }
      },
      "44": {
        start: {
          line: 138,
          column: 24
        },
        end: {
          line: 140,
          column: 25
        }
      },
      "45": {
        start: {
          line: 139,
          column: 28
        },
        end: {
          line: 139,
          column: 229
        }
      },
      "46": {
        start: {
          line: 141,
          column: 24
        },
        end: {
          line: 141,
          column: 39
        }
      },
      "47": {
        start: {
          line: 143,
          column: 20
        },
        end: {
          line: 143,
          column: 116
        }
      },
      "48": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 148,
          column: 17
        }
      },
      "49": {
        start: {
          line: 147,
          column: 20
        },
        end: {
          line: 147,
          column: 102
        }
      },
      "50": {
        start: {
          line: 147,
          column: 63
        },
        end: {
          line: 147,
          column: 100
        }
      },
      "51": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 154,
          column: 17
        }
      },
      "52": {
        start: {
          line: 152,
          column: 20
        },
        end: {
          line: 153,
          column: 87
        }
      },
      "53": {
        start: {
          line: 152,
          column: 63
        },
        end: {
          line: 153,
          column: 85
        }
      },
      "54": {
        start: {
          line: 153,
          column: 55
        },
        end: {
          line: 153,
          column: 84
        }
      },
      "55": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 160,
          column: 17
        }
      },
      "56": {
        start: {
          line: 158,
          column: 20
        },
        end: {
          line: 159,
          column: 92
        }
      },
      "57": {
        start: {
          line: 158,
          column: 63
        },
        end: {
          line: 159,
          column: 90
        }
      },
      "58": {
        start: {
          line: 159,
          column: 58
        },
        end: {
          line: 159,
          column: 89
        }
      },
      "59": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 165,
          column: 17
        }
      },
      "60": {
        start: {
          line: 163,
          column: 39
        },
        end: {
          line: 163,
          column: 87
        }
      },
      "61": {
        start: {
          line: 163,
          column: 64
        },
        end: {
          line: 163,
          column: 86
        }
      },
      "62": {
        start: {
          line: 164,
          column: 20
        },
        end: {
          line: 164,
          column: 161
        }
      },
      "63": {
        start: {
          line: 166,
          column: 16
        },
        end: {
          line: 166,
          column: 95
        }
      },
      "64": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 180,
          column: 15
        }
      },
      "65": {
        start: {
          line: 181,
          column: 55
        },
        end: {
          line: 191,
          column: 14
        }
      },
      "66": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 243,
          column: 13
        }
      },
      "67": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 193,
          column: 124
        }
      },
      "68": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 196,
          column: 145
        }
      },
      "69": {
        start: {
          line: 198,
          column: 16
        },
        end: {
          line: 212,
          column: 17
        }
      },
      "70": {
        start: {
          line: 199,
          column: 37
        },
        end: {
          line: 199,
          column: 80
        }
      },
      "71": {
        start: {
          line: 199,
          column: 57
        },
        end: {
          line: 199,
          column: 79
        }
      },
      "72": {
        start: {
          line: 200,
          column: 20
        },
        end: {
          line: 200,
          column: 146
        }
      },
      "73": {
        start: {
          line: 202,
          column: 20
        },
        end: {
          line: 211,
          column: 21
        }
      },
      "74": {
        start: {
          line: 203,
          column: 43
        },
        end: {
          line: 203,
          column: 86
        }
      },
      "75": {
        start: {
          line: 203,
          column: 63
        },
        end: {
          line: 203,
          column: 85
        }
      },
      "76": {
        start: {
          line: 204,
          column: 24
        },
        end: {
          line: 210,
          column: 27
        }
      },
      "77": {
        start: {
          line: 214,
          column: 35
        },
        end: {
          line: 214,
          column: 42
        }
      },
      "78": {
        start: {
          line: 215,
          column: 16
        },
        end: {
          line: 236,
          column: 17
        }
      },
      "79": {
        start: {
          line: 216,
          column: 34
        },
        end: {
          line: 216,
          column: 44
        }
      },
      "80": {
        start: {
          line: 217,
          column: 20
        },
        end: {
          line: 217,
          column: 130
        }
      },
      "81": {
        start: {
          line: 219,
          column: 51
        },
        end: {
          line: 219,
          column: 99
        }
      },
      "82": {
        start: {
          line: 219,
          column: 76
        },
        end: {
          line: 219,
          column: 98
        }
      },
      "83": {
        start: {
          line: 220,
          column: 20
        },
        end: {
          line: 224,
          column: 21
        }
      },
      "84": {
        start: {
          line: 221,
          column: 46
        },
        end: {
          line: 221,
          column: 87
        }
      },
      "85": {
        start: {
          line: 222,
          column: 43
        },
        end: {
          line: 222,
          column: 64
        }
      },
      "86": {
        start: {
          line: 223,
          column: 24
        },
        end: {
          line: 223,
          column: 213
        }
      },
      "87": {
        start: {
          line: 225,
          column: 20
        },
        end: {
          line: 234,
          column: 23
        }
      },
      "88": {
        start: {
          line: 227,
          column: 44
        },
        end: {
          line: 227,
          column: 67
        }
      },
      "89": {
        start: {
          line: 228,
          column: 40
        },
        end: {
          line: 228,
          column: 60
        }
      },
      "90": {
        start: {
          line: 230,
          column: 24
        },
        end: {
          line: 232,
          column: 25
        }
      },
      "91": {
        start: {
          line: 231,
          column: 28
        },
        end: {
          line: 231,
          column: 245
        }
      },
      "92": {
        start: {
          line: 233,
          column: 24
        },
        end: {
          line: 233,
          column: 39
        }
      },
      "93": {
        start: {
          line: 235,
          column: 20
        },
        end: {
          line: 235,
          column: 116
        }
      },
      "94": {
        start: {
          line: 238,
          column: 16
        },
        end: {
          line: 241,
          column: 17
        }
      },
      "95": {
        start: {
          line: 239,
          column: 42
        },
        end: {
          line: 239,
          column: 90
        }
      },
      "96": {
        start: {
          line: 239,
          column: 67
        },
        end: {
          line: 239,
          column: 89
        }
      },
      "97": {
        start: {
          line: 240,
          column: 20
        },
        end: {
          line: 240,
          column: 171
        }
      },
      "98": {
        start: {
          line: 242,
          column: 16
        },
        end: {
          line: 242,
          column: 95
        }
      },
      "99": {
        start: {
          line: 247,
          column: 53
        },
        end: {
          line: 251,
          column: 14
        }
      },
      "100": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 279,
          column: 13
        }
      },
      "101": {
        start: {
          line: 253,
          column: 16
        },
        end: {
          line: 253,
          column: 127
        }
      },
      "102": {
        start: {
          line: 257,
          column: 16
        },
        end: {
          line: 257,
          column: 167
        }
      },
      "103": {
        start: {
          line: 258,
          column: 16
        },
        end: {
          line: 258,
          column: 147
        }
      },
      "104": {
        start: {
          line: 260,
          column: 35
        },
        end: {
          line: 260,
          column: 70
        }
      },
      "105": {
        start: {
          line: 262,
          column: 16
        },
        end: {
          line: 270,
          column: 17
        }
      },
      "106": {
        start: {
          line: 263,
          column: 34
        },
        end: {
          line: 263,
          column: 44
        }
      },
      "107": {
        start: {
          line: 264,
          column: 20
        },
        end: {
          line: 268,
          column: 23
        }
      },
      "108": {
        start: {
          line: 266,
          column: 44
        },
        end: {
          line: 266,
          column: 67
        }
      },
      "109": {
        start: {
          line: 267,
          column: 24
        },
        end: {
          line: 267,
          column: 52
        }
      },
      "110": {
        start: {
          line: 269,
          column: 20
        },
        end: {
          line: 269,
          column: 116
        }
      },
      "111": {
        start: {
          line: 272,
          column: 16
        },
        end: {
          line: 277,
          column: 19
        }
      },
      "112": {
        start: {
          line: 273,
          column: 42
        },
        end: {
          line: 273,
          column: 67
        }
      },
      "113": {
        start: {
          line: 274,
          column: 44
        },
        end: {
          line: 274,
          column: 63
        }
      },
      "114": {
        start: {
          line: 275,
          column: 42
        },
        end: {
          line: 275,
          column: 59
        }
      },
      "115": {
        start: {
          line: 276,
          column: 20
        },
        end: {
          line: 276,
          column: 94
        }
      },
      "116": {
        start: {
          line: 278,
          column: 16
        },
        end: {
          line: 278,
          column: 60
        }
      },
      "117": {
        start: {
          line: 284,
          column: 20
        },
        end: {
          line: 288,
          column: 53
        }
      },
      "118": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 290,
          column: 51
        }
      },
      "119": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 291,
          column: 49
        }
      },
      "120": {
        start: {
          line: 293,
          column: 22
        },
        end: {
          line: 293,
          column: 32
        }
      },
      "121": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 294,
          column: 59
        }
      },
      "122": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 297,
          column: 9
        }
      },
      "123": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 296,
          column: 64
        }
      },
      "124": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 300,
          column: 9
        }
      },
      "125": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 299,
          column: 69
        }
      },
      "126": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 309,
          column: 11
        }
      },
      "127": {
        start: {
          line: 310,
          column: 32
        },
        end: {
          line: 310,
          column: 43
        }
      },
      "128": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 312,
          column: 24
        }
      },
      "129": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 312,
          column: 24
        }
      },
      "130": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 313,
          column: 120
        }
      },
      "131": {
        start: {
          line: 315,
          column: 27
        },
        end: {
          line: 315,
          column: 31
        }
      },
      "132": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 336,
          column: 9
        }
      },
      "133": {
        start: {
          line: 317,
          column: 26
        },
        end: {
          line: 317,
          column: 36
        }
      },
      "134": {
        start: {
          line: 319,
          column: 43
        },
        end: {
          line: 319,
          column: 91
        }
      },
      "135": {
        start: {
          line: 319,
          column: 68
        },
        end: {
          line: 319,
          column: 90
        }
      },
      "136": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 324,
          column: 13
        }
      },
      "137": {
        start: {
          line: 321,
          column: 38
        },
        end: {
          line: 321,
          column: 79
        }
      },
      "138": {
        start: {
          line: 322,
          column: 35
        },
        end: {
          line: 322,
          column: 56
        }
      },
      "139": {
        start: {
          line: 323,
          column: 16
        },
        end: {
          line: 323,
          column: 203
        }
      },
      "140": {
        start: {
          line: 325,
          column: 12
        },
        end: {
          line: 334,
          column: 15
        }
      },
      "141": {
        start: {
          line: 327,
          column: 36
        },
        end: {
          line: 327,
          column: 59
        }
      },
      "142": {
        start: {
          line: 328,
          column: 32
        },
        end: {
          line: 328,
          column: 52
        }
      },
      "143": {
        start: {
          line: 330,
          column: 16
        },
        end: {
          line: 332,
          column: 17
        }
      },
      "144": {
        start: {
          line: 331,
          column: 20
        },
        end: {
          line: 331,
          column: 235
        }
      },
      "145": {
        start: {
          line: 333,
          column: 16
        },
        end: {
          line: 333,
          column: 31
        }
      },
      "146": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 335,
          column: 108
        }
      },
      "147": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 337,
          column: 87
        }
      },
      "148": {
        start: {
          line: 340,
          column: 8
        },
        end: {
          line: 340,
          column: 52
        }
      },
      "149": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 341,
          column: 64
        }
      },
      "150": {
        start: {
          line: 344,
          column: 4
        },
        end: {
          line: 344,
          column: 14
        }
      },
      "151": {
        start: {
          line: 346,
          column: 0
        },
        end: {
          line: 346,
          column: 28
        }
      },
      "152": {
        start: {
          line: 354,
          column: 26
        },
        end: {
          line: 457,
          column: 1
        }
      },
      "153": {
        start: {
          line: 355,
          column: 4
        },
        end: {
          line: 456,
          column: 5
        }
      },
      "154": {
        start: {
          line: 357,
          column: 218
        },
        end: {
          line: 357,
          column: 224
        }
      },
      "155": {
        start: {
          line: 358,
          column: 22
        },
        end: {
          line: 358,
          column: 68
        }
      },
      "156": {
        start: {
          line: 358,
          column: 29
        },
        end: {
          line: 358,
          column: 68
        }
      },
      "157": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 362,
          column: 11
        }
      },
      "158": {
        start: {
          line: 364,
          column: 32
        },
        end: {
          line: 376,
          column: 10
        }
      },
      "159": {
        start: {
          line: 380,
          column: 8
        },
        end: {
          line: 385,
          column: 9
        }
      },
      "160": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 381,
          column: 89
        }
      },
      "161": {
        start: {
          line: 382,
          column: 12
        },
        end: {
          line: 382,
          column: 74
        }
      },
      "162": {
        start: {
          line: 384,
          column: 12
        },
        end: {
          line: 384,
          column: 59
        }
      },
      "163": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 406,
          column: 9
        }
      },
      "164": {
        start: {
          line: 392,
          column: 24
        },
        end: {
          line: 394,
          column: 40
        }
      },
      "165": {
        start: {
          line: 395,
          column: 12
        },
        end: {
          line: 395,
          column: 91
        }
      },
      "166": {
        start: {
          line: 396,
          column: 12
        },
        end: {
          line: 405,
          column: 14
        }
      },
      "167": {
        start: {
          line: 413,
          column: 28
        },
        end: {
          line: 413,
          column: 81
        }
      },
      "168": {
        start: {
          line: 414,
          column: 21
        },
        end: {
          line: 414,
          column: 76
        }
      },
      "169": {
        start: {
          line: 415,
          column: 30
        },
        end: {
          line: 417,
          column: 16
        }
      },
      "170": {
        start: {
          line: 418,
          column: 28
        },
        end: {
          line: 420,
          column: 16
        }
      },
      "171": {
        start: {
          line: 421,
          column: 8
        },
        end: {
          line: 421,
          column: 95
        }
      },
      "172": {
        start: {
          line: 422,
          column: 27
        },
        end: {
          line: 427,
          column: 9
        }
      },
      "173": {
        start: {
          line: 428,
          column: 8
        },
        end: {
          line: 428,
          column: 62
        }
      },
      "174": {
        start: {
          line: 431,
          column: 8
        },
        end: {
          line: 431,
          column: 72
        }
      },
      "175": {
        start: {
          line: 433,
          column: 8
        },
        end: {
          line: 455,
          column: 9
        }
      },
      "176": {
        start: {
          line: 434,
          column: 12
        },
        end: {
          line: 434,
          column: 77
        }
      },
      "177": {
        start: {
          line: 435,
          column: 35
        },
        end: {
          line: 435,
          column: 74
        }
      },
      "178": {
        start: {
          line: 437,
          column: 12
        },
        end: {
          line: 440,
          column: 13
        }
      },
      "179": {
        start: {
          line: 438,
          column: 16
        },
        end: {
          line: 438,
          column: 115
        }
      },
      "180": {
        start: {
          line: 439,
          column: 16
        },
        end: {
          line: 439,
          column: 63
        }
      },
      "181": {
        start: {
          line: 441,
          column: 12
        },
        end: {
          line: 441,
          column: 34
        }
      },
      "182": {
        start: {
          line: 444,
          column: 12
        },
        end: {
          line: 444,
          column: 78
        }
      },
      "183": {
        start: {
          line: 445,
          column: 12
        },
        end: {
          line: 454,
          column: 14
        }
      },
      "184": {
        start: {
          line: 458,
          column: 0
        },
        end: {
          line: 458,
          column: 46
        }
      },
      "185": {
        start: {
          line: 463,
          column: 34
        },
        end: {
          line: 575,
          column: 1
        }
      },
      "186": {
        start: {
          line: 464,
          column: 4
        },
        end: {
          line: 574,
          column: 5
        }
      },
      "187": {
        start: {
          line: 465,
          column: 218
        },
        end: {
          line: 465,
          column: 224
        }
      },
      "188": {
        start: {
          line: 466,
          column: 22
        },
        end: {
          line: 466,
          column: 68
        }
      },
      "189": {
        start: {
          line: 466,
          column: 29
        },
        end: {
          line: 466,
          column: 68
        }
      },
      "190": {
        start: {
          line: 467,
          column: 8
        },
        end: {
          line: 471,
          column: 11
        }
      },
      "191": {
        start: {
          line: 473,
          column: 25
        },
        end: {
          line: 476,
          column: 35
        }
      },
      "192": {
        start: {
          line: 478,
          column: 8
        },
        end: {
          line: 478,
          column: 68
        }
      },
      "193": {
        start: {
          line: 479,
          column: 8
        },
        end: {
          line: 479,
          column: 66
        }
      },
      "194": {
        start: {
          line: 481,
          column: 22
        },
        end: {
          line: 481,
          column: 32
        }
      },
      "195": {
        start: {
          line: 482,
          column: 8
        },
        end: {
          line: 482,
          column: 69
        }
      },
      "196": {
        start: {
          line: 484,
          column: 8
        },
        end: {
          line: 486,
          column: 9
        }
      },
      "197": {
        start: {
          line: 485,
          column: 12
        },
        end: {
          line: 485,
          column: 66
        }
      },
      "198": {
        start: {
          line: 487,
          column: 8
        },
        end: {
          line: 489,
          column: 9
        }
      },
      "199": {
        start: {
          line: 488,
          column: 12
        },
        end: {
          line: 488,
          column: 71
        }
      },
      "200": {
        start: {
          line: 491,
          column: 45
        },
        end: {
          line: 491,
          column: 61
        }
      },
      "201": {
        start: {
          line: 492,
          column: 8
        },
        end: {
          line: 495,
          column: 9
        }
      },
      "202": {
        start: {
          line: 493,
          column: 12
        },
        end: {
          line: 493,
          column: 76
        }
      },
      "203": {
        start: {
          line: 494,
          column: 12
        },
        end: {
          line: 494,
          column: 29
        }
      },
      "204": {
        start: {
          line: 497,
          column: 24
        },
        end: {
          line: 500,
          column: 35
        }
      },
      "205": {
        start: {
          line: 502,
          column: 8
        },
        end: {
          line: 502,
          column: 66
        }
      },
      "206": {
        start: {
          line: 503,
          column: 8
        },
        end: {
          line: 503,
          column: 64
        }
      },
      "207": {
        start: {
          line: 504,
          column: 8
        },
        end: {
          line: 504,
          column: 67
        }
      },
      "208": {
        start: {
          line: 505,
          column: 8
        },
        end: {
          line: 507,
          column: 9
        }
      },
      "209": {
        start: {
          line: 506,
          column: 12
        },
        end: {
          line: 506,
          column: 64
        }
      },
      "210": {
        start: {
          line: 508,
          column: 8
        },
        end: {
          line: 510,
          column: 9
        }
      },
      "211": {
        start: {
          line: 509,
          column: 12
        },
        end: {
          line: 509,
          column: 69
        }
      },
      "212": {
        start: {
          line: 512,
          column: 8
        },
        end: {
          line: 514,
          column: 63
        }
      },
      "213": {
        start: {
          line: 516,
          column: 43
        },
        end: {
          line: 516,
          column: 58
        }
      },
      "214": {
        start: {
          line: 517,
          column: 8
        },
        end: {
          line: 520,
          column: 9
        }
      },
      "215": {
        start: {
          line: 518,
          column: 12
        },
        end: {
          line: 518,
          column: 74
        }
      },
      "216": {
        start: {
          line: 519,
          column: 12
        },
        end: {
          line: 519,
          column: 28
        }
      },
      "217": {
        start: {
          line: 523,
          column: 27
        },
        end: {
          line: 523,
          column: 37
        }
      },
      "218": {
        start: {
          line: 529,
          column: 37
        },
        end: {
          line: 529,
          column: 90
        }
      },
      "219": {
        start: {
          line: 530,
          column: 8
        },
        end: {
          line: 544,
          column: 9
        }
      },
      "220": {
        start: {
          line: 531,
          column: 12
        },
        end: {
          line: 531,
          column: 116
        }
      },
      "221": {
        start: {
          line: 532,
          column: 12
        },
        end: {
          line: 540,
          column: 15
        }
      },
      "222": {
        start: {
          line: 534,
          column: 16
        },
        end: {
          line: 535,
          column: 33
        }
      },
      "223": {
        start: {
          line: 535,
          column: 20
        },
        end: {
          line: 535,
          column: 33
        }
      },
      "224": {
        start: {
          line: 536,
          column: 32
        },
        end: {
          line: 536,
          column: 63
        }
      },
      "225": {
        start: {
          line: 537,
          column: 32
        },
        end: {
          line: 537,
          column: 63
        }
      },
      "226": {
        start: {
          line: 538,
          column: 33
        },
        end: {
          line: 538,
          column: 89
        }
      },
      "227": {
        start: {
          line: 539,
          column: 16
        },
        end: {
          line: 539,
          column: 42
        }
      },
      "228": {
        start: {
          line: 542,
          column: 13
        },
        end: {
          line: 544,
          column: 9
        }
      },
      "229": {
        start: {
          line: 543,
          column: 12
        },
        end: {
          line: 543,
          column: 130
        }
      },
      "230": {
        start: {
          line: 545,
          column: 8
        },
        end: {
          line: 545,
          column: 121
        }
      },
      "231": {
        start: {
          line: 547,
          column: 28
        },
        end: {
          line: 547,
          column: 64
        }
      },
      "232": {
        start: {
          line: 549,
          column: 27
        },
        end: {
          line: 549,
          column: 37
        }
      },
      "233": {
        start: {
          line: 550,
          column: 27
        },
        end: {
          line: 550,
          column: 59
        }
      },
      "234": {
        start: {
          line: 551,
          column: 8
        },
        end: {
          line: 560,
          column: 10
        }
      },
      "235": {
        start: {
          line: 563,
          column: 8
        },
        end: {
          line: 563,
          column: 80
        }
      },
      "236": {
        start: {
          line: 564,
          column: 8
        },
        end: {
          line: 573,
          column: 10
        }
      },
      "237": {
        start: {
          line: 580,
          column: 34
        },
        end: {
          line: 641,
          column: 1
        }
      },
      "238": {
        start: {
          line: 581,
          column: 4
        },
        end: {
          line: 640,
          column: 5
        }
      },
      "239": {
        start: {
          line: 582,
          column: 128
        },
        end: {
          line: 582,
          column: 134
        }
      },
      "240": {
        start: {
          line: 583,
          column: 8
        },
        end: {
          line: 583,
          column: 109
        }
      },
      "241": {
        start: {
          line: 584,
          column: 22
        },
        end: {
          line: 584,
          column: 68
        }
      },
      "242": {
        start: {
          line: 584,
          column: 29
        },
        end: {
          line: 584,
          column: 68
        }
      },
      "243": {
        start: {
          line: 586,
          column: 24
        },
        end: {
          line: 589,
          column: 35
        }
      },
      "244": {
        start: {
          line: 591,
          column: 22
        },
        end: {
          line: 591,
          column: 32
        }
      },
      "245": {
        start: {
          line: 592,
          column: 8
        },
        end: {
          line: 592,
          column: 67
        }
      },
      "246": {
        start: {
          line: 594,
          column: 8
        },
        end: {
          line: 594,
          column: 66
        }
      },
      "247": {
        start: {
          line: 595,
          column: 8
        },
        end: {
          line: 595,
          column: 64
        }
      },
      "248": {
        start: {
          line: 597,
          column: 45
        },
        end: {
          line: 597,
          column: 68
        }
      },
      "249": {
        start: {
          line: 598,
          column: 8
        },
        end: {
          line: 601,
          column: 9
        }
      },
      "250": {
        start: {
          line: 599,
          column: 12
        },
        end: {
          line: 599,
          column: 98
        }
      },
      "251": {
        start: {
          line: 600,
          column: 12
        },
        end: {
          line: 600,
          column: 29
        }
      },
      "252": {
        start: {
          line: 603,
          column: 8
        },
        end: {
          line: 605,
          column: 63
        }
      },
      "253": {
        start: {
          line: 606,
          column: 43
        },
        end: {
          line: 606,
          column: 58
        }
      },
      "254": {
        start: {
          line: 607,
          column: 8
        },
        end: {
          line: 610,
          column: 9
        }
      },
      "255": {
        start: {
          line: 608,
          column: 12
        },
        end: {
          line: 608,
          column: 96
        }
      },
      "256": {
        start: {
          line: 609,
          column: 12
        },
        end: {
          line: 609,
          column: 28
        }
      },
      "257": {
        start: {
          line: 611,
          column: 8
        },
        end: {
          line: 611,
          column: 123
        }
      },
      "258": {
        start: {
          line: 613,
          column: 28
        },
        end: {
          line: 613,
          column: 56
        }
      },
      "259": {
        start: {
          line: 615,
          column: 27
        },
        end: {
          line: 615,
          column: 37
        }
      },
      "260": {
        start: {
          line: 616,
          column: 27
        },
        end: {
          line: 616,
          column: 59
        }
      },
      "261": {
        start: {
          line: 617,
          column: 8
        },
        end: {
          line: 626,
          column: 10
        }
      },
      "262": {
        start: {
          line: 629,
          column: 8
        },
        end: {
          line: 629,
          column: 73
        }
      },
      "263": {
        start: {
          line: 630,
          column: 8
        },
        end: {
          line: 639,
          column: 10
        }
      },
      "264": {
        start: {
          line: 646,
          column: 26
        },
        end: {
          line: 655,
          column: 1
        }
      },
      "265": {
        start: {
          line: 647,
          column: 14
        },
        end: {
          line: 647,
          column: 20
        }
      },
      "266": {
        start: {
          line: 648,
          column: 17
        },
        end: {
          line: 648,
          column: 46
        }
      },
      "267": {
        start: {
          line: 649,
          column: 17
        },
        end: {
          line: 649,
          column: 46
        }
      },
      "268": {
        start: {
          line: 650,
          column: 14
        },
        end: {
          line: 652,
          column: 51
        }
      },
      "269": {
        start: {
          line: 653,
          column: 14
        },
        end: {
          line: 653,
          column: 60
        }
      },
      "270": {
        start: {
          line: 654,
          column: 4
        },
        end: {
          line: 654,
          column: 17
        }
      },
      "271": {
        start: {
          line: 659,
          column: 20
        },
        end: {
          line: 678,
          column: 1
        }
      },
      "272": {
        start: {
          line: 660,
          column: 4
        },
        end: {
          line: 677,
          column: 5
        }
      },
      "273": {
        start: {
          line: 661,
          column: 32
        },
        end: {
          line: 665,
          column: 21
        }
      },
      "274": {
        start: {
          line: 666,
          column: 8
        },
        end: {
          line: 668,
          column: 9
        }
      },
      "275": {
        start: {
          line: 667,
          column: 12
        },
        end: {
          line: 667,
          column: 24
        }
      },
      "276": {
        start: {
          line: 669,
          column: 8
        },
        end: {
          line: 671,
          column: 9
        }
      },
      "277": {
        start: {
          line: 670,
          column: 12
        },
        end: {
          line: 670,
          column: 59
        }
      },
      "278": {
        start: {
          line: 672,
          column: 8
        },
        end: {
          line: 672,
          column: 63
        }
      },
      "279": {
        start: {
          line: 675,
          column: 8
        },
        end: {
          line: 675,
          column: 57
        }
      },
      "280": {
        start: {
          line: 676,
          column: 8
        },
        end: {
          line: 676,
          column: 69
        }
      },
      "281": {
        start: {
          line: 679,
          column: 0
        },
        end: {
          line: 679,
          column: 34
        }
      },
      "282": {
        start: {
          line: 683,
          column: 19
        },
        end: {
          line: 685,
          column: 1
        }
      },
      "283": {
        start: {
          line: 684,
          column: 4
        },
        end: {
          line: 684,
          column: 50
        }
      },
      "284": {
        start: {
          line: 686,
          column: 0
        },
        end: {
          line: 686,
          column: 32
        }
      },
      "285": {
        start: {
          line: 696,
          column: 25
        },
        end: {
          line: 761,
          column: 1
        }
      },
      "286": {
        start: {
          line: 697,
          column: 4
        },
        end: {
          line: 760,
          column: 5
        }
      },
      "287": {
        start: {
          line: 698,
          column: 47
        },
        end: {
          line: 698,
          column: 53
        }
      },
      "288": {
        start: {
          line: 699,
          column: 8
        },
        end: {
          line: 701,
          column: 9
        }
      },
      "289": {
        start: {
          line: 700,
          column: 12
        },
        end: {
          line: 700,
          column: 59
        }
      },
      "290": {
        start: {
          line: 705,
          column: 67
        },
        end: {
          line: 709,
          column: 33
        }
      },
      "291": {
        start: {
          line: 710,
          column: 8
        },
        end: {
          line: 712,
          column: 9
        }
      },
      "292": {
        start: {
          line: 711,
          column: 12
        },
        end: {
          line: 711,
          column: 35
        }
      },
      "293": {
        start: {
          line: 713,
          column: 8
        },
        end: {
          line: 716,
          column: 9
        }
      },
      "294": {
        start: {
          line: 715,
          column: 12
        },
        end: {
          line: 715,
          column: 45
        }
      },
      "295": {
        start: {
          line: 717,
          column: 24
        },
        end: {
          line: 719,
          column: 28
        }
      },
      "296": {
        start: {
          line: 718,
          column: 26
        },
        end: {
          line: 718,
          column: 36
        }
      },
      "297": {
        start: {
          line: 723,
          column: 24
        },
        end: {
          line: 727,
          column: 53
        }
      },
      "298": {
        start: {
          line: 728,
          column: 8
        },
        end: {
          line: 730,
          column: 9
        }
      },
      "299": {
        start: {
          line: 729,
          column: 12
        },
        end: {
          line: 729,
          column: 63
        }
      },
      "300": {
        start: {
          line: 731,
          column: 8
        },
        end: {
          line: 733,
          column: 9
        }
      },
      "301": {
        start: {
          line: 732,
          column: 12
        },
        end: {
          line: 732,
          column: 59
        }
      },
      "302": {
        start: {
          line: 735,
          column: 22
        },
        end: {
          line: 735,
          column: 32
        }
      },
      "303": {
        start: {
          line: 736,
          column: 8
        },
        end: {
          line: 736,
          column: 67
        }
      },
      "304": {
        start: {
          line: 737,
          column: 53
        },
        end: {
          line: 737,
          column: 68
        }
      },
      "305": {
        start: {
          line: 738,
          column: 8
        },
        end: {
          line: 740,
          column: 9
        }
      },
      "306": {
        start: {
          line: 739,
          column: 12
        },
        end: {
          line: 739,
          column: 28
        }
      },
      "307": {
        start: {
          line: 742,
          column: 27
        },
        end: {
          line: 742,
          column: 35
        }
      },
      "308": {
        start: {
          line: 743,
          column: 8
        },
        end: {
          line: 751,
          column: 9
        }
      },
      "309": {
        start: {
          line: 744,
          column: 26
        },
        end: {
          line: 744,
          column: 36
        }
      },
      "310": {
        start: {
          line: 745,
          column: 12
        },
        end: {
          line: 749,
          column: 15
        }
      },
      "311": {
        start: {
          line: 747,
          column: 36
        },
        end: {
          line: 747,
          column: 59
        }
      },
      "312": {
        start: {
          line: 748,
          column: 16
        },
        end: {
          line: 748,
          column: 44
        }
      },
      "313": {
        start: {
          line: 750,
          column: 12
        },
        end: {
          line: 750,
          column: 108
        }
      },
      "314": {
        start: {
          line: 752,
          column: 23
        },
        end: {
          line: 754,
          column: 16
        }
      },
      "315": {
        start: {
          line: 755,
          column: 8
        },
        end: {
          line: 755,
          column: 45
        }
      },
      "316": {
        start: {
          line: 758,
          column: 8
        },
        end: {
          line: 758,
          column: 70
        }
      },
      "317": {
        start: {
          line: 759,
          column: 8
        },
        end: {
          line: 759,
          column: 69
        }
      },
      "318": {
        start: {
          line: 762,
          column: 0
        },
        end: {
          line: 762,
          column: 44
        }
      },
      "319": {
        start: {
          line: 773,
          column: 18
        },
        end: {
          line: 844,
          column: 1
        }
      },
      "320": {
        start: {
          line: 774,
          column: 4
        },
        end: {
          line: 843,
          column: 5
        }
      },
      "321": {
        start: {
          line: 778,
          column: 53
        },
        end: {
          line: 782,
          column: 21
        }
      },
      "322": {
        start: {
          line: 783,
          column: 8
        },
        end: {
          line: 784,
          column: 29
        }
      },
      "323": {
        start: {
          line: 784,
          column: 12
        },
        end: {
          line: 784,
          column: 29
        }
      },
      "324": {
        start: {
          line: 785,
          column: 8
        },
        end: {
          line: 790,
          column: 9
        }
      },
      "325": {
        start: {
          line: 786,
          column: 12
        },
        end: {
          line: 789,
          column: 14
        }
      },
      "326": {
        start: {
          line: 791,
          column: 23
        },
        end: {
          line: 792,
          column: 28
        }
      },
      "327": {
        start: {
          line: 793,
          column: 23
        },
        end: {
          line: 795,
          column: 31
        }
      },
      "328": {
        start: {
          line: 796,
          column: 8
        },
        end: {
          line: 801,
          column: 9
        }
      },
      "329": {
        start: {
          line: 797,
          column: 12
        },
        end: {
          line: 800,
          column: 14
        }
      },
      "330": {
        start: {
          line: 806,
          column: 65
        },
        end: {
          line: 816,
          column: 21
        }
      },
      "331": {
        start: {
          line: 817,
          column: 8
        },
        end: {
          line: 818,
          column: 30
        }
      },
      "332": {
        start: {
          line: 818,
          column: 12
        },
        end: {
          line: 818,
          column: 30
        }
      },
      "333": {
        start: {
          line: 819,
          column: 8
        },
        end: {
          line: 824,
          column: 9
        }
      },
      "334": {
        start: {
          line: 820,
          column: 12
        },
        end: {
          line: 823,
          column: 14
        }
      },
      "335": {
        start: {
          line: 828,
          column: 36
        },
        end: {
          line: 835,
          column: 38
        }
      },
      "336": {
        start: {
          line: 836,
          column: 8
        },
        end: {
          line: 837,
          column: 27
        }
      },
      "337": {
        start: {
          line: 837,
          column: 12
        },
        end: {
          line: 837,
          column: 27
        }
      },
      "338": {
        start: {
          line: 838,
          column: 8
        },
        end: {
          line: 838,
          column: 52
        }
      },
      "339": {
        start: {
          line: 841,
          column: 8
        },
        end: {
          line: 841,
          column: 54
        }
      },
      "340": {
        start: {
          line: 842,
          column: 8
        },
        end: {
          line: 842,
          column: 82
        }
      },
      "341": {
        start: {
          line: 845,
          column: 0
        },
        end: {
          line: 845,
          column: 30
        }
      },
      "342": {
        start: {
          line: 849,
          column: 19
        },
        end: {
          line: 851,
          column: 1
        }
      },
      "343": {
        start: {
          line: 850,
          column: 4
        },
        end: {
          line: 850,
          column: 50
        }
      },
      "344": {
        start: {
          line: 852,
          column: 0
        },
        end: {
          line: 852,
          column: 32
        }
      },
      "345": {
        start: {
          line: 856,
          column: 19
        },
        end: {
          line: 858,
          column: 1
        }
      },
      "346": {
        start: {
          line: 857,
          column: 4
        },
        end: {
          line: 857,
          column: 50
        }
      },
      "347": {
        start: {
          line: 859,
          column: 0
        },
        end: {
          line: 859,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 27
          },
          end: {
            line: 17,
            column: 28
          }
        },
        loc: {
          start: {
            line: 17,
            column: 37
          },
          end: {
            line: 54,
            column: 1
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 55,
            column: 17
          },
          end: {
            line: 55,
            column: 18
          }
        },
        loc: {
          start: {
            line: 55,
            column: 41
          },
          end: {
            line: 345,
            column: 1
          }
        },
        line: 55
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 63,
            column: 22
          },
          end: {
            line: 63,
            column: 23
          }
        },
        loc: {
          start: {
            line: 63,
            column: 29
          },
          end: {
            line: 63,
            column: 68
          }
        },
        line: 63
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 106,
            column: 50
          },
          end: {
            line: 106,
            column: 51
          }
        },
        loc: {
          start: {
            line: 106,
            column: 57
          },
          end: {
            line: 106,
            column: 79
          }
        },
        line: 106
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 110,
            column: 59
          },
          end: {
            line: 110,
            column: 60
          }
        },
        loc: {
          start: {
            line: 110,
            column: 66
          },
          end: {
            line: 110,
            column: 88
          }
        },
        line: 110
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 127,
            column: 69
          },
          end: {
            line: 127,
            column: 70
          }
        },
        loc: {
          start: {
            line: 127,
            column: 76
          },
          end: {
            line: 127,
            column: 98
          }
        },
        line: 127
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 133,
            column: 55
          },
          end: {
            line: 133,
            column: 56
          }
        },
        loc: {
          start: {
            line: 133,
            column: 63
          },
          end: {
            line: 142,
            column: 21
          }
        },
        line: 133
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 147,
            column: 55
          },
          end: {
            line: 147,
            column: 56
          }
        },
        loc: {
          start: {
            line: 147,
            column: 63
          },
          end: {
            line: 147,
            column: 100
          }
        },
        line: 147
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 152,
            column: 55
          },
          end: {
            line: 152,
            column: 56
          }
        },
        loc: {
          start: {
            line: 152,
            column: 63
          },
          end: {
            line: 153,
            column: 85
          }
        },
        line: 152
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 153,
            column: 48
          },
          end: {
            line: 153,
            column: 49
          }
        },
        loc: {
          start: {
            line: 153,
            column: 55
          },
          end: {
            line: 153,
            column: 84
          }
        },
        line: 153
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 158,
            column: 55
          },
          end: {
            line: 158,
            column: 56
          }
        },
        loc: {
          start: {
            line: 158,
            column: 63
          },
          end: {
            line: 159,
            column: 90
          }
        },
        line: 158
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 159,
            column: 47
          },
          end: {
            line: 159,
            column: 48
          }
        },
        loc: {
          start: {
            line: 159,
            column: 58
          },
          end: {
            line: 159,
            column: 89
          }
        },
        line: 159
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 163,
            column: 57
          },
          end: {
            line: 163,
            column: 58
          }
        },
        loc: {
          start: {
            line: 163,
            column: 64
          },
          end: {
            line: 163,
            column: 86
          }
        },
        line: 163
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 199,
            column: 50
          },
          end: {
            line: 199,
            column: 51
          }
        },
        loc: {
          start: {
            line: 199,
            column: 57
          },
          end: {
            line: 199,
            column: 79
          }
        },
        line: 199
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 203,
            column: 56
          },
          end: {
            line: 203,
            column: 57
          }
        },
        loc: {
          start: {
            line: 203,
            column: 63
          },
          end: {
            line: 203,
            column: 85
          }
        },
        line: 203
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 219,
            column: 69
          },
          end: {
            line: 219,
            column: 70
          }
        },
        loc: {
          start: {
            line: 219,
            column: 76
          },
          end: {
            line: 219,
            column: 98
          }
        },
        line: 219
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 225,
            column: 55
          },
          end: {
            line: 225,
            column: 56
          }
        },
        loc: {
          start: {
            line: 225,
            column: 63
          },
          end: {
            line: 234,
            column: 21
          }
        },
        line: 225
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 239,
            column: 60
          },
          end: {
            line: 239,
            column: 61
          }
        },
        loc: {
          start: {
            line: 239,
            column: 67
          },
          end: {
            line: 239,
            column: 89
          }
        },
        line: 239
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 264,
            column: 55
          },
          end: {
            line: 264,
            column: 56
          }
        },
        loc: {
          start: {
            line: 264,
            column: 63
          },
          end: {
            line: 268,
            column: 21
          }
        },
        line: 264
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 272,
            column: 51
          },
          end: {
            line: 272,
            column: 52
          }
        },
        loc: {
          start: {
            line: 272,
            column: 59
          },
          end: {
            line: 277,
            column: 17
          }
        },
        line: 272
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 319,
            column: 61
          },
          end: {
            line: 319,
            column: 62
          }
        },
        loc: {
          start: {
            line: 319,
            column: 68
          },
          end: {
            line: 319,
            column: 90
          }
        },
        line: 319
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 325,
            column: 47
          },
          end: {
            line: 325,
            column: 48
          }
        },
        loc: {
          start: {
            line: 325,
            column: 55
          },
          end: {
            line: 334,
            column: 13
          }
        },
        line: 325
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 354,
            column: 26
          },
          end: {
            line: 354,
            column: 27
          }
        },
        loc: {
          start: {
            line: 354,
            column: 44
          },
          end: {
            line: 457,
            column: 1
          }
        },
        line: 354
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 358,
            column: 22
          },
          end: {
            line: 358,
            column: 23
          }
        },
        loc: {
          start: {
            line: 358,
            column: 29
          },
          end: {
            line: 358,
            column: 68
          }
        },
        line: 358
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 463,
            column: 34
          },
          end: {
            line: 463,
            column: 35
          }
        },
        loc: {
          start: {
            line: 463,
            column: 52
          },
          end: {
            line: 575,
            column: 1
          }
        },
        line: 463
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 466,
            column: 22
          },
          end: {
            line: 466,
            column: 23
          }
        },
        loc: {
          start: {
            line: 466,
            column: 29
          },
          end: {
            line: 466,
            column: 68
          }
        },
        line: 466
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 532,
            column: 47
          },
          end: {
            line: 532,
            column: 48
          }
        },
        loc: {
          start: {
            line: 532,
            column: 55
          },
          end: {
            line: 540,
            column: 13
          }
        },
        line: 532
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 580,
            column: 34
          },
          end: {
            line: 580,
            column: 35
          }
        },
        loc: {
          start: {
            line: 580,
            column: 52
          },
          end: {
            line: 641,
            column: 1
          }
        },
        line: 580
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 584,
            column: 22
          },
          end: {
            line: 584,
            column: 23
          }
        },
        loc: {
          start: {
            line: 584,
            column: 29
          },
          end: {
            line: 584,
            column: 68
          }
        },
        line: 584
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 646,
            column: 26
          },
          end: {
            line: 646,
            column: 27
          }
        },
        loc: {
          start: {
            line: 646,
            column: 54
          },
          end: {
            line: 655,
            column: 1
          }
        },
        line: 646
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 659,
            column: 20
          },
          end: {
            line: 659,
            column: 21
          }
        },
        loc: {
          start: {
            line: 659,
            column: 34
          },
          end: {
            line: 678,
            column: 1
          }
        },
        line: 659
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 683,
            column: 19
          },
          end: {
            line: 683,
            column: 20
          }
        },
        loc: {
          start: {
            line: 683,
            column: 25
          },
          end: {
            line: 685,
            column: 1
          }
        },
        line: 683
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 696,
            column: 25
          },
          end: {
            line: 696,
            column: 26
          }
        },
        loc: {
          start: {
            line: 696,
            column: 43
          },
          end: {
            line: 761,
            column: 1
          }
        },
        line: 696
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 718,
            column: 17
          },
          end: {
            line: 718,
            column: 18
          }
        },
        loc: {
          start: {
            line: 718,
            column: 26
          },
          end: {
            line: 718,
            column: 36
          }
        },
        line: 718
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 745,
            column: 47
          },
          end: {
            line: 745,
            column: 48
          }
        },
        loc: {
          start: {
            line: 745,
            column: 55
          },
          end: {
            line: 749,
            column: 13
          }
        },
        line: 745
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 773,
            column: 18
          },
          end: {
            line: 773,
            column: 19
          }
        },
        loc: {
          start: {
            line: 773,
            column: 44
          },
          end: {
            line: 844,
            column: 1
          }
        },
        line: 773
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 849,
            column: 19
          },
          end: {
            line: 849,
            column: 20
          }
        },
        loc: {
          start: {
            line: 849,
            column: 25
          },
          end: {
            line: 851,
            column: 1
          }
        },
        line: 849
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 856,
            column: 19
          },
          end: {
            line: 856,
            column: 20
          }
        },
        loc: {
          start: {
            line: 856,
            column: 25
          },
          end: {
            line: 858,
            column: 1
          }
        },
        line: 856
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 17
          },
          end: {
            line: 27,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 17
          },
          end: {
            line: 27,
            column: 32
          }
        }, {
          start: {
            line: 27,
            column: 36
          },
          end: {
            line: 27,
            column: 45
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 14
          },
          end: {
            line: 28,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 14
          },
          end: {
            line: 28,
            column: 27
          }
        }, {
          start: {
            line: 28,
            column: 31
          },
          end: {
            line: 28,
            column: 40
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 29,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 29,
            column: 22
          }
        }, {
          start: {
            line: 29,
            column: 26
          },
          end: {
            line: 29,
            column: 35
          }
        }],
        line: 29
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 17
          },
          end: {
            line: 45,
            column: 23
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 33,
            column: 10
          },
          end: {
            line: 36,
            column: 9
          }
        }, {
          start: {
            line: 37,
            column: 10
          },
          end: {
            line: 45,
            column: 23
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 32,
            column: 17
          },
          end: {
            line: 32,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 17
          },
          end: {
            line: 32,
            column: 49
          }
        }, {
          start: {
            line: 32,
            column: 53
          },
          end: {
            line: 32,
            column: 86
          }
        }],
        line: 32
      },
      "5": {
        loc: {
          start: {
            line: 37,
            column: 10
          },
          end: {
            line: 45,
            column: 23
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 41,
            column: 14
          },
          end: {
            line: 44,
            column: 13
          }
        }, {
          start: {
            line: 45,
            column: 14
          },
          end: {
            line: 45,
            column: 23
          }
        }],
        line: 37
      },
      "6": {
        loc: {
          start: {
            line: 37,
            column: 10
          },
          end: {
            line: 40,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 10
          },
          end: {
            line: 37,
            column: 25
          }
        }, {
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 38,
            column: 39
          }
        }, {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 54
          }
        }, {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 40,
            column: 51
          }
        }],
        line: 37
      },
      "7": {
        loc: {
          start: {
            line: 48,
            column: 14
          },
          end: {
            line: 48,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 14
          },
          end: {
            line: 48,
            column: 26
          }
        }, {
          start: {
            line: 48,
            column: 30
          },
          end: {
            line: 48,
            column: 32
          }
        }],
        line: 48
      },
      "8": {
        loc: {
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 49,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 49,
            column: 30
          }
        }, {
          start: {
            line: 49,
            column: 34
          },
          end: {
            line: 49,
            column: 36
          }
        }],
        line: 49
      },
      "9": {
        loc: {
          start: {
            line: 55,
            column: 24
          },
          end: {
            line: 55,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 55,
            column: 34
          },
          end: {
            line: 55,
            column: 36
          }
        }],
        line: 55
      },
      "10": {
        loc: {
          start: {
            line: 58,
            column: 18
          },
          end: {
            line: 58,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 18
          },
          end: {
            line: 58,
            column: 25
          }
        }, {
          start: {
            line: 58,
            column: 29
          },
          end: {
            line: 58,
            column: 31
          }
        }],
        line: 58
      },
      "11": {
        loc: {
          start: {
            line: 63,
            column: 29
          },
          end: {
            line: 63,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 63,
            column: 49
          },
          end: {
            line: 63,
            column: 64
          }
        }, {
          start: {
            line: 63,
            column: 67
          },
          end: {
            line: 63,
            column: 68
          }
        }],
        line: 63
      },
      "12": {
        loc: {
          start: {
            line: 65,
            column: 32
          },
          end: {
            line: 65,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 32
          },
          end: {
            line: 65,
            column: 49
          }
        }, {
          start: {
            line: 65,
            column: 53
          },
          end: {
            line: 65,
            column: 63
          }
        }],
        line: 65
      },
      "13": {
        loc: {
          start: {
            line: 66,
            column: 30
          },
          end: {
            line: 66,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 30
          },
          end: {
            line: 66,
            column: 45
          }
        }, {
          start: {
            line: 66,
            column: 49
          },
          end: {
            line: 66,
            column: 96
          }
        }],
        line: 66
      },
      "14": {
        loc: {
          start: {
            line: 68,
            column: 23
          },
          end: {
            line: 70,
            column: 16
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 69,
            column: 14
          },
          end: {
            line: 69,
            column: 28
          }
        }, {
          start: {
            line: 70,
            column: 14
          },
          end: {
            line: 70,
            column: 16
          }
        }],
        line: 68
      },
      "15": {
        loc: {
          start: {
            line: 68,
            column: 23
          },
          end: {
            line: 68,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 23
          },
          end: {
            line: 68,
            column: 57
          }
        }, {
          start: {
            line: 68,
            column: 61
          },
          end: {
            line: 68,
            column: 83
          }
        }],
        line: 68
      },
      "16": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 280,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 280,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "17": {
        loc: {
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 77,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 74,
            column: 48
          }
        }, {
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 75,
            column: 49
          }
        }, {
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 76,
            column: 36
          }
        }, {
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 77,
            column: 37
          }
        }],
        line: 74
      },
      "18": {
        loc: {
          start: {
            line: 78,
            column: 27
          },
          end: {
            line: 78,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 78,
            column: 64
          },
          end: {
            line: 78,
            column: 78
          }
        }, {
          start: {
            line: 78,
            column: 81
          },
          end: {
            line: 78,
            column: 83
          }
        }],
        line: 78
      },
      "19": {
        loc: {
          start: {
            line: 80,
            column: 12
          },
          end: {
            line: 82,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 12
          },
          end: {
            line: 82,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "20": {
        loc: {
          start: {
            line: 80,
            column: 16
          },
          end: {
            line: 80,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 16
          },
          end: {
            line: 80,
            column: 47
          }
        }, {
          start: {
            line: 80,
            column: 51
          },
          end: {
            line: 80,
            column: 84
          }
        }],
        line: 80
      },
      "21": {
        loc: {
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 167,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 167,
            column: 13
          }
        }, {
          start: {
            line: 102,
            column: 17
          },
          end: {
            line: 167,
            column: 13
          }
        }],
        line: 99
      },
      "22": {
        loc: {
          start: {
            line: 103,
            column: 69
          },
          end: {
            line: 103,
            column: 134
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 103,
            column: 113
          },
          end: {
            line: 103,
            column: 130
          }
        }, {
          start: {
            line: 103,
            column: 133
          },
          end: {
            line: 103,
            column: 134
          }
        }],
        line: 103
      },
      "23": {
        loc: {
          start: {
            line: 103,
            column: 70
          },
          end: {
            line: 103,
            column: 109
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 70
          },
          end: {
            line: 103,
            column: 80
          }
        }, {
          start: {
            line: 103,
            column: 84
          },
          end: {
            line: 103,
            column: 109
          }
        }],
        line: 103
      },
      "24": {
        loc: {
          start: {
            line: 105,
            column: 16
          },
          end: {
            line: 119,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 16
          },
          end: {
            line: 119,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "25": {
        loc: {
          start: {
            line: 107,
            column: 75
          },
          end: {
            line: 107,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 107,
            column: 83
          },
          end: {
            line: 107,
            column: 90
          }
        }, {
          start: {
            line: 107,
            column: 93
          },
          end: {
            line: 107,
            column: 104
          }
        }],
        line: 107
      },
      "26": {
        loc: {
          start: {
            line: 109,
            column: 20
          },
          end: {
            line: 118,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 20
          },
          end: {
            line: 118,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "27": {
        loc: {
          start: {
            line: 123,
            column: 16
          },
          end: {
            line: 144,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 16
          },
          end: {
            line: 144,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "28": {
        loc: {
          start: {
            line: 128,
            column: 20
          },
          end: {
            line: 132,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 20
          },
          end: {
            line: 132,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "29": {
        loc: {
          start: {
            line: 131,
            column: 168
          },
          end: {
            line: 131,
            column: 193
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 131,
            column: 181
          },
          end: {
            line: 131,
            column: 186
          }
        }, {
          start: {
            line: 131,
            column: 189
          },
          end: {
            line: 131,
            column: 193
          }
        }],
        line: 131
      },
      "30": {
        loc: {
          start: {
            line: 138,
            column: 24
          },
          end: {
            line: 140,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 24
          },
          end: {
            line: 140,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "31": {
        loc: {
          start: {
            line: 139,
            column: 136
          },
          end: {
            line: 139,
            column: 156
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 139,
            column: 146
          },
          end: {
            line: 139,
            column: 150
          }
        }, {
          start: {
            line: 139,
            column: 153
          },
          end: {
            line: 139,
            column: 156
          }
        }],
        line: 139
      },
      "32": {
        loc: {
          start: {
            line: 139,
            column: 194
          },
          end: {
            line: 139,
            column: 225
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 139,
            column: 204
          },
          end: {
            line: 139,
            column: 210
          }
        }, {
          start: {
            line: 139,
            column: 213
          },
          end: {
            line: 139,
            column: 225
          }
        }],
        line: 139
      },
      "33": {
        loc: {
          start: {
            line: 146,
            column: 16
          },
          end: {
            line: 148,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 16
          },
          end: {
            line: 148,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "34": {
        loc: {
          start: {
            line: 146,
            column: 20
          },
          end: {
            line: 146,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 20
          },
          end: {
            line: 146,
            column: 59
          }
        }, {
          start: {
            line: 146,
            column: 63
          },
          end: {
            line: 146,
            column: 90
          }
        }],
        line: 146
      },
      "35": {
        loc: {
          start: {
            line: 150,
            column: 16
          },
          end: {
            line: 154,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 16
          },
          end: {
            line: 154,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "36": {
        loc: {
          start: {
            line: 150,
            column: 20
          },
          end: {
            line: 151,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 150,
            column: 20
          },
          end: {
            line: 150,
            column: 38
          }
        }, {
          start: {
            line: 150,
            column: 42
          },
          end: {
            line: 150,
            column: 75
          }
        }, {
          start: {
            line: 151,
            column: 20
          },
          end: {
            line: 151,
            column: 49
          }
        }, {
          start: {
            line: 151,
            column: 53
          },
          end: {
            line: 151,
            column: 80
          }
        }],
        line: 150
      },
      "37": {
        loc: {
          start: {
            line: 152,
            column: 63
          },
          end: {
            line: 153,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 63
          },
          end: {
            line: 152,
            column: 78
          }
        }, {
          start: {
            line: 153,
            column: 24
          },
          end: {
            line: 153,
            column: 85
          }
        }],
        line: 152
      },
      "38": {
        loc: {
          start: {
            line: 156,
            column: 16
          },
          end: {
            line: 160,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 16
          },
          end: {
            line: 160,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "39": {
        loc: {
          start: {
            line: 156,
            column: 20
          },
          end: {
            line: 157,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 20
          },
          end: {
            line: 156,
            column: 36
          }
        }, {
          start: {
            line: 156,
            column: 40
          },
          end: {
            line: 156,
            column: 71
          }
        }, {
          start: {
            line: 157,
            column: 20
          },
          end: {
            line: 157,
            column: 47
          }
        }, {
          start: {
            line: 157,
            column: 51
          },
          end: {
            line: 157,
            column: 78
          }
        }],
        line: 156
      },
      "40": {
        loc: {
          start: {
            line: 158,
            column: 63
          },
          end: {
            line: 159,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 63
          },
          end: {
            line: 158,
            column: 76
          }
        }, {
          start: {
            line: 159,
            column: 24
          },
          end: {
            line: 159,
            column: 90
          }
        }],
        line: 158
      },
      "41": {
        loc: {
          start: {
            line: 162,
            column: 16
          },
          end: {
            line: 165,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 16
          },
          end: {
            line: 165,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "42": {
        loc: {
          start: {
            line: 164,
            column: 75
          },
          end: {
            line: 164,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 164,
            column: 88
          },
          end: {
            line: 164,
            column: 97
          }
        }, {
          start: {
            line: 164,
            column: 100
          },
          end: {
            line: 164,
            column: 118
          }
        }],
        line: 164
      },
      "43": {
        loc: {
          start: {
            line: 166,
            column: 23
          },
          end: {
            line: 166,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 166,
            column: 53
          },
          end: {
            line: 166,
            column: 89
          }
        }, {
          start: {
            line: 166,
            column: 92
          },
          end: {
            line: 166,
            column: 94
          }
        }],
        line: 166
      },
      "44": {
        loc: {
          start: {
            line: 177,
            column: 31
          },
          end: {
            line: 177,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 177,
            column: 31
          },
          end: {
            line: 177,
            column: 50
          }
        }, {
          start: {
            line: 177,
            column: 54
          },
          end: {
            line: 177,
            column: 58
          }
        }],
        line: 177
      },
      "45": {
        loc: {
          start: {
            line: 178,
            column: 33
          },
          end: {
            line: 178,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 178,
            column: 33
          },
          end: {
            line: 178,
            column: 51
          }
        }, {
          start: {
            line: 178,
            column: 55
          },
          end: {
            line: 178,
            column: 59
          }
        }],
        line: 178
      },
      "46": {
        loc: {
          start: {
            line: 179,
            column: 31
          },
          end: {
            line: 179,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 31
          },
          end: {
            line: 179,
            column: 47
          }
        }, {
          start: {
            line: 179,
            column: 51
          },
          end: {
            line: 179,
            column: 55
          }
        }],
        line: 179
      },
      "47": {
        loc: {
          start: {
            line: 183,
            column: 28
          },
          end: {
            line: 183,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 183,
            column: 67
          },
          end: {
            line: 183,
            column: 83
          }
        }, {
          start: {
            line: 183,
            column: 86
          },
          end: {
            line: 183,
            column: 90
          }
        }],
        line: 183
      },
      "48": {
        loc: {
          start: {
            line: 184,
            column: 28
          },
          end: {
            line: 184,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 184,
            column: 68
          },
          end: {
            line: 184,
            column: 85
          }
        }, {
          start: {
            line: 184,
            column: 88
          },
          end: {
            line: 184,
            column: 92
          }
        }],
        line: 184
      },
      "49": {
        loc: {
          start: {
            line: 185,
            column: 30
          },
          end: {
            line: 185,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 185,
            column: 67
          },
          end: {
            line: 185,
            column: 81
          }
        }, {
          start: {
            line: 185,
            column: 84
          },
          end: {
            line: 185,
            column: 86
          }
        }],
        line: 185
      },
      "50": {
        loc: {
          start: {
            line: 188,
            column: 31
          },
          end: {
            line: 188,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 188,
            column: 73
          },
          end: {
            line: 188,
            column: 92
          }
        }, {
          start: {
            line: 188,
            column: 95
          },
          end: {
            line: 188,
            column: 99
          }
        }],
        line: 188
      },
      "51": {
        loc: {
          start: {
            line: 189,
            column: 33
          },
          end: {
            line: 189,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 189,
            column: 69
          },
          end: {
            line: 189,
            column: 87
          }
        }, {
          start: {
            line: 189,
            column: 90
          },
          end: {
            line: 189,
            column: 94
          }
        }],
        line: 189
      },
      "52": {
        loc: {
          start: {
            line: 190,
            column: 31
          },
          end: {
            line: 190,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 190,
            column: 31
          },
          end: {
            line: 190,
            column: 47
          }
        }, {
          start: {
            line: 190,
            column: 51
          },
          end: {
            line: 190,
            column: 55
          }
        }],
        line: 190
      },
      "53": {
        loc: {
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 243,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 243,
            column: 13
          }
        }, {
          start: {
            line: 195,
            column: 17
          },
          end: {
            line: 243,
            column: 13
          }
        }],
        line: 192
      },
      "54": {
        loc: {
          start: {
            line: 196,
            column: 76
          },
          end: {
            line: 196,
            column: 132
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 196,
            column: 114
          },
          end: {
            line: 196,
            column: 128
          }
        }, {
          start: {
            line: 196,
            column: 131
          },
          end: {
            line: 196,
            column: 132
          }
        }],
        line: 196
      },
      "55": {
        loc: {
          start: {
            line: 196,
            column: 77
          },
          end: {
            line: 196,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 77
          },
          end: {
            line: 196,
            column: 84
          }
        }, {
          start: {
            line: 196,
            column: 88
          },
          end: {
            line: 196,
            column: 110
          }
        }],
        line: 196
      },
      "56": {
        loc: {
          start: {
            line: 198,
            column: 16
          },
          end: {
            line: 212,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 16
          },
          end: {
            line: 212,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "57": {
        loc: {
          start: {
            line: 200,
            column: 75
          },
          end: {
            line: 200,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 200,
            column: 86
          },
          end: {
            line: 200,
            column: 93
          }
        }, {
          start: {
            line: 200,
            column: 96
          },
          end: {
            line: 200,
            column: 107
          }
        }],
        line: 200
      },
      "58": {
        loc: {
          start: {
            line: 202,
            column: 20
          },
          end: {
            line: 211,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 20
          },
          end: {
            line: 211,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      },
      "59": {
        loc: {
          start: {
            line: 215,
            column: 16
          },
          end: {
            line: 236,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 16
          },
          end: {
            line: 236,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "60": {
        loc: {
          start: {
            line: 220,
            column: 20
          },
          end: {
            line: 224,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 20
          },
          end: {
            line: 224,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "61": {
        loc: {
          start: {
            line: 223,
            column: 184
          },
          end: {
            line: 223,
            column: 209
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 223,
            column: 197
          },
          end: {
            line: 223,
            column: 202
          }
        }, {
          start: {
            line: 223,
            column: 205
          },
          end: {
            line: 223,
            column: 209
          }
        }],
        line: 223
      },
      "62": {
        loc: {
          start: {
            line: 230,
            column: 24
          },
          end: {
            line: 232,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 24
          },
          end: {
            line: 232,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "63": {
        loc: {
          start: {
            line: 231,
            column: 152
          },
          end: {
            line: 231,
            column: 172
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 231,
            column: 162
          },
          end: {
            line: 231,
            column: 166
          }
        }, {
          start: {
            line: 231,
            column: 169
          },
          end: {
            line: 231,
            column: 172
          }
        }],
        line: 231
      },
      "64": {
        loc: {
          start: {
            line: 231,
            column: 210
          },
          end: {
            line: 231,
            column: 241
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 231,
            column: 220
          },
          end: {
            line: 231,
            column: 226
          }
        }, {
          start: {
            line: 231,
            column: 229
          },
          end: {
            line: 231,
            column: 241
          }
        }],
        line: 231
      },
      "65": {
        loc: {
          start: {
            line: 238,
            column: 16
          },
          end: {
            line: 241,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 16
          },
          end: {
            line: 241,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "66": {
        loc: {
          start: {
            line: 240,
            column: 75
          },
          end: {
            line: 240,
            column: 121
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 240,
            column: 91
          },
          end: {
            line: 240,
            column: 100
          }
        }, {
          start: {
            line: 240,
            column: 103
          },
          end: {
            line: 240,
            column: 121
          }
        }],
        line: 240
      },
      "67": {
        loc: {
          start: {
            line: 242,
            column: 23
          },
          end: {
            line: 242,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 242,
            column: 53
          },
          end: {
            line: 242,
            column: 89
          }
        }, {
          start: {
            line: 242,
            column: 92
          },
          end: {
            line: 242,
            column: 94
          }
        }],
        line: 242
      },
      "68": {
        loc: {
          start: {
            line: 248,
            column: 28
          },
          end: {
            line: 248,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 248,
            column: 67
          },
          end: {
            line: 248,
            column: 83
          }
        }, {
          start: {
            line: 248,
            column: 86
          },
          end: {
            line: 248,
            column: 90
          }
        }],
        line: 248
      },
      "69": {
        loc: {
          start: {
            line: 249,
            column: 28
          },
          end: {
            line: 249,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 249,
            column: 68
          },
          end: {
            line: 249,
            column: 85
          }
        }, {
          start: {
            line: 249,
            column: 88
          },
          end: {
            line: 249,
            column: 92
          }
        }],
        line: 249
      },
      "70": {
        loc: {
          start: {
            line: 252,
            column: 12
          },
          end: {
            line: 279,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 252,
            column: 12
          },
          end: {
            line: 279,
            column: 13
          }
        }, {
          start: {
            line: 256,
            column: 17
          },
          end: {
            line: 279,
            column: 13
          }
        }],
        line: 252
      },
      "71": {
        loc: {
          start: {
            line: 258,
            column: 81
          },
          end: {
            line: 258,
            column: 134
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 258,
            column: 117
          },
          end: {
            line: 258,
            column: 130
          }
        }, {
          start: {
            line: 258,
            column: 133
          },
          end: {
            line: 258,
            column: 134
          }
        }],
        line: 258
      },
      "72": {
        loc: {
          start: {
            line: 258,
            column: 82
          },
          end: {
            line: 258,
            column: 113
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 258,
            column: 82
          },
          end: {
            line: 258,
            column: 88
          }
        }, {
          start: {
            line: 258,
            column: 92
          },
          end: {
            line: 258,
            column: 113
          }
        }],
        line: 258
      },
      "73": {
        loc: {
          start: {
            line: 260,
            column: 35
          },
          end: {
            line: 260,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 260,
            column: 59
          },
          end: {
            line: 260,
            column: 65
          }
        }, {
          start: {
            line: 260,
            column: 68
          },
          end: {
            line: 260,
            column: 70
          }
        }],
        line: 260
      },
      "74": {
        loc: {
          start: {
            line: 262,
            column: 16
          },
          end: {
            line: 270,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 16
          },
          end: {
            line: 270,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 262
      },
      "75": {
        loc: {
          start: {
            line: 276,
            column: 27
          },
          end: {
            line: 276,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 276,
            column: 27
          },
          end: {
            line: 276,
            column: 59
          }
        }, {
          start: {
            line: 276,
            column: 63
          },
          end: {
            line: 276,
            column: 93
          }
        }],
        line: 276
      },
      "76": {
        loc: {
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 297,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 297,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "77": {
        loc: {
          start: {
            line: 298,
            column: 8
          },
          end: {
            line: 300,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 298,
            column: 8
          },
          end: {
            line: 300,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 298
      },
      "78": {
        loc: {
          start: {
            line: 298,
            column: 12
          },
          end: {
            line: 298,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 298,
            column: 12
          },
          end: {
            line: 298,
            column: 30
          }
        }, {
          start: {
            line: 298,
            column: 34
          },
          end: {
            line: 298,
            column: 67
          }
        }, {
          start: {
            line: 298,
            column: 71
          },
          end: {
            line: 298,
            column: 100
          }
        }],
        line: 298
      },
      "79": {
        loc: {
          start: {
            line: 311,
            column: 8
          },
          end: {
            line: 312,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 8
          },
          end: {
            line: 312,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 311
      },
      "80": {
        loc: {
          start: {
            line: 313,
            column: 60
          },
          end: {
            line: 313,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 313,
            column: 92
          },
          end: {
            line: 313,
            column: 103
          }
        }, {
          start: {
            line: 313,
            column: 106
          },
          end: {
            line: 313,
            column: 107
          }
        }],
        line: 313
      },
      "81": {
        loc: {
          start: {
            line: 313,
            column: 61
          },
          end: {
            line: 313,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 313,
            column: 61
          },
          end: {
            line: 313,
            column: 65
          }
        }, {
          start: {
            line: 313,
            column: 69
          },
          end: {
            line: 313,
            column: 88
          }
        }],
        line: 313
      },
      "82": {
        loc: {
          start: {
            line: 316,
            column: 8
          },
          end: {
            line: 336,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 316,
            column: 8
          },
          end: {
            line: 336,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 316
      },
      "83": {
        loc: {
          start: {
            line: 320,
            column: 12
          },
          end: {
            line: 324,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 320,
            column: 12
          },
          end: {
            line: 324,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 320
      },
      "84": {
        loc: {
          start: {
            line: 323,
            column: 174
          },
          end: {
            line: 323,
            column: 199
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 323,
            column: 187
          },
          end: {
            line: 323,
            column: 192
          }
        }, {
          start: {
            line: 323,
            column: 195
          },
          end: {
            line: 323,
            column: 199
          }
        }],
        line: 323
      },
      "85": {
        loc: {
          start: {
            line: 330,
            column: 16
          },
          end: {
            line: 332,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 330,
            column: 16
          },
          end: {
            line: 332,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 330
      },
      "86": {
        loc: {
          start: {
            line: 331,
            column: 142
          },
          end: {
            line: 331,
            column: 162
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 331,
            column: 152
          },
          end: {
            line: 331,
            column: 156
          }
        }, {
          start: {
            line: 331,
            column: 159
          },
          end: {
            line: 331,
            column: 162
          }
        }],
        line: 331
      },
      "87": {
        loc: {
          start: {
            line: 331,
            column: 200
          },
          end: {
            line: 331,
            column: 231
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 331,
            column: 210
          },
          end: {
            line: 331,
            column: 216
          }
        }, {
          start: {
            line: 331,
            column: 219
          },
          end: {
            line: 331,
            column: 231
          }
        }],
        line: 331
      },
      "88": {
        loc: {
          start: {
            line: 337,
            column: 15
          },
          end: {
            line: 337,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 337,
            column: 45
          },
          end: {
            line: 337,
            column: 81
          }
        }, {
          start: {
            line: 337,
            column: 84
          },
          end: {
            line: 337,
            column: 86
          }
        }],
        line: 337
      },
      "89": {
        loc: {
          start: {
            line: 341,
            column: 24
          },
          end: {
            line: 341,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 341,
            column: 24
          },
          end: {
            line: 341,
            column: 35
          }
        }, {
          start: {
            line: 341,
            column: 39
          },
          end: {
            line: 341,
            column: 62
          }
        }],
        line: 341
      },
      "90": {
        loc: {
          start: {
            line: 357,
            column: 37
          },
          end: {
            line: 357,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 357,
            column: 46
          },
          end: {
            line: 357,
            column: 48
          }
        }],
        line: 357
      },
      "91": {
        loc: {
          start: {
            line: 357,
            column: 50
          },
          end: {
            line: 357,
            column: 72
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 357,
            column: 62
          },
          end: {
            line: 357,
            column: 72
          }
        }],
        line: 357
      },
      "92": {
        loc: {
          start: {
            line: 357,
            column: 74
          },
          end: {
            line: 357,
            column: 131
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 357,
            column: 84
          },
          end: {
            line: 357,
            column: 131
          }
        }],
        line: 357
      },
      "93": {
        loc: {
          start: {
            line: 357,
            column: 133
          },
          end: {
            line: 357,
            column: 151
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 357,
            column: 147
          },
          end: {
            line: 357,
            column: 151
          }
        }],
        line: 357
      },
      "94": {
        loc: {
          start: {
            line: 357,
            column: 153
          },
          end: {
            line: 357,
            column: 170
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 357,
            column: 166
          },
          end: {
            line: 357,
            column: 170
          }
        }],
        line: 357
      },
      "95": {
        loc: {
          start: {
            line: 357,
            column: 172
          },
          end: {
            line: 357,
            column: 187
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 357,
            column: 183
          },
          end: {
            line: 357,
            column: 187
          }
        }],
        line: 357
      },
      "96": {
        loc: {
          start: {
            line: 357,
            column: 189
          },
          end: {
            line: 357,
            column: 202
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 357,
            column: 200
          },
          end: {
            line: 357,
            column: 202
          }
        }],
        line: 357
      },
      "97": {
        loc: {
          start: {
            line: 357,
            column: 204
          },
          end: {
            line: 357,
            column: 212
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 357,
            column: 211
          },
          end: {
            line: 357,
            column: 212
          }
        }],
        line: 357
      },
      "98": {
        loc: {
          start: {
            line: 358,
            column: 29
          },
          end: {
            line: 358,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 358,
            column: 49
          },
          end: {
            line: 358,
            column: 64
          }
        }, {
          start: {
            line: 358,
            column: 67
          },
          end: {
            line: 358,
            column: 68
          }
        }],
        line: 358
      },
      "99": {
        loc: {
          start: {
            line: 367,
            column: 26
          },
          end: {
            line: 367,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 367,
            column: 73
          },
          end: {
            line: 367,
            column: 79
          }
        }, {
          start: {
            line: 367,
            column: 82
          },
          end: {
            line: 367,
            column: 84
          }
        }],
        line: 367
      },
      "100": {
        loc: {
          start: {
            line: 367,
            column: 26
          },
          end: {
            line: 367,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 367,
            column: 26
          },
          end: {
            line: 367,
            column: 52
          }
        }, {
          start: {
            line: 367,
            column: 56
          },
          end: {
            line: 367,
            column: 70
          }
        }],
        line: 367
      },
      "101": {
        loc: {
          start: {
            line: 370,
            column: 27
          },
          end: {
            line: 370,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 370,
            column: 61
          },
          end: {
            line: 370,
            column: 72
          }
        }, {
          start: {
            line: 370,
            column: 75
          },
          end: {
            line: 370,
            column: 79
          }
        }],
        line: 370
      },
      "102": {
        loc: {
          start: {
            line: 380,
            column: 8
          },
          end: {
            line: 385,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 380,
            column: 8
          },
          end: {
            line: 385,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 380
      },
      "103": {
        loc: {
          start: {
            line: 390,
            column: 8
          },
          end: {
            line: 406,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 390,
            column: 8
          },
          end: {
            line: 406,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 390
      },
      "104": {
        loc: {
          start: {
            line: 390,
            column: 12
          },
          end: {
            line: 391,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 390,
            column: 12
          },
          end: {
            line: 390,
            column: 17
          }
        }, {
          start: {
            line: 391,
            column: 13
          },
          end: {
            line: 391,
            column: 37
          }
        }, {
          start: {
            line: 391,
            column: 41
          },
          end: {
            line: 391,
            column: 56
          }
        }],
        line: 390
      },
      "105": {
        loc: {
          start: {
            line: 392,
            column: 24
          },
          end: {
            line: 394,
            column: 40
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 393,
            column: 18
          },
          end: {
            line: 393,
            column: 28
          }
        }, {
          start: {
            line: 394,
            column: 18
          },
          end: {
            line: 394,
            column: 40
          }
        }],
        line: 392
      },
      "106": {
        loc: {
          start: {
            line: 413,
            column: 28
          },
          end: {
            line: 413,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 413,
            column: 72
          },
          end: {
            line: 413,
            column: 76
          }
        }, {
          start: {
            line: 413,
            column: 79
          },
          end: {
            line: 413,
            column: 81
          }
        }],
        line: 413
      },
      "107": {
        loc: {
          start: {
            line: 413,
            column: 28
          },
          end: {
            line: 413,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 413,
            column: 28
          },
          end: {
            line: 413,
            column: 52
          }
        }, {
          start: {
            line: 413,
            column: 56
          },
          end: {
            line: 413,
            column: 69
          }
        }],
        line: 413
      },
      "108": {
        loc: {
          start: {
            line: 414,
            column: 21
          },
          end: {
            line: 414,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 414,
            column: 55
          },
          end: {
            line: 414,
            column: 71
          }
        }, {
          start: {
            line: 414,
            column: 74
          },
          end: {
            line: 414,
            column: 76
          }
        }],
        line: 414
      },
      "109": {
        loc: {
          start: {
            line: 415,
            column: 30
          },
          end: {
            line: 417,
            column: 16
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 416,
            column: 14
          },
          end: {
            line: 416,
            column: 36
          }
        }, {
          start: {
            line: 417,
            column: 14
          },
          end: {
            line: 417,
            column: 16
          }
        }],
        line: 415
      },
      "110": {
        loc: {
          start: {
            line: 415,
            column: 30
          },
          end: {
            line: 415,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 415,
            column: 30
          },
          end: {
            line: 415,
            column: 72
          }
        }, {
          start: {
            line: 415,
            column: 76
          },
          end: {
            line: 415,
            column: 107
          }
        }],
        line: 415
      },
      "111": {
        loc: {
          start: {
            line: 418,
            column: 28
          },
          end: {
            line: 420,
            column: 16
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 419,
            column: 14
          },
          end: {
            line: 419,
            column: 42
          }
        }, {
          start: {
            line: 420,
            column: 14
          },
          end: {
            line: 420,
            column: 16
          }
        }],
        line: 418
      },
      "112": {
        loc: {
          start: {
            line: 423,
            column: 31
          },
          end: {
            line: 423,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 423,
            column: 31
          },
          end: {
            line: 423,
            column: 56
          }
        }, {
          start: {
            line: 423,
            column: 60
          },
          end: {
            line: 423,
            column: 61
          }
        }],
        line: 423
      },
      "113": {
        loc: {
          start: {
            line: 424,
            column: 29
          },
          end: {
            line: 424,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 424,
            column: 29
          },
          end: {
            line: 424,
            column: 52
          }
        }, {
          start: {
            line: 424,
            column: 56
          },
          end: {
            line: 424,
            column: 64
          }
        }],
        line: 424
      },
      "114": {
        loc: {
          start: {
            line: 425,
            column: 32
          },
          end: {
            line: 425,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 425,
            column: 32
          },
          end: {
            line: 425,
            column: 58
          }
        }, {
          start: {
            line: 425,
            column: 62
          },
          end: {
            line: 425,
            column: 66
          }
        }],
        line: 425
      },
      "115": {
        loc: {
          start: {
            line: 426,
            column: 31
          },
          end: {
            line: 426,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 426,
            column: 31
          },
          end: {
            line: 426,
            column: 56
          }
        }, {
          start: {
            line: 426,
            column: 60
          },
          end: {
            line: 426,
            column: 61
          }
        }],
        line: 426
      },
      "116": {
        loc: {
          start: {
            line: 437,
            column: 12
          },
          end: {
            line: 440,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 437,
            column: 12
          },
          end: {
            line: 440,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 437
      },
      "117": {
        loc: {
          start: {
            line: 437,
            column: 16
          },
          end: {
            line: 437,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 437,
            column: 16
          },
          end: {
            line: 437,
            column: 48
          }
        }, {
          start: {
            line: 437,
            column: 52
          },
          end: {
            line: 437,
            column: 92
          }
        }],
        line: 437
      },
      "118": {
        loc: {
          start: {
            line: 449,
            column: 30
          },
          end: {
            line: 449,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 449,
            column: 30
          },
          end: {
            line: 449,
            column: 45
          }
        }, {
          start: {
            line: 449,
            column: 49
          },
          end: {
            line: 449,
            column: 51
          }
        }],
        line: 449
      },
      "119": {
        loc: {
          start: {
            line: 450,
            column: 33
          },
          end: {
            line: 450,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 450,
            column: 33
          },
          end: {
            line: 450,
            column: 44
          }
        }, {
          start: {
            line: 450,
            column: 48
          },
          end: {
            line: 450,
            column: 49
          }
        }],
        line: 450
      },
      "120": {
        loc: {
          start: {
            line: 453,
            column: 23
          },
          end: {
            line: 453,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 453,
            column: 23
          },
          end: {
            line: 453,
            column: 34
          }
        }, {
          start: {
            line: 453,
            column: 38
          },
          end: {
            line: 453,
            column: 71
          }
        }],
        line: 453
      },
      "121": {
        loc: {
          start: {
            line: 465,
            column: 37
          },
          end: {
            line: 465,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 465,
            column: 46
          },
          end: {
            line: 465,
            column: 48
          }
        }],
        line: 465
      },
      "122": {
        loc: {
          start: {
            line: 465,
            column: 50
          },
          end: {
            line: 465,
            column: 72
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 465,
            column: 62
          },
          end: {
            line: 465,
            column: 72
          }
        }],
        line: 465
      },
      "123": {
        loc: {
          start: {
            line: 465,
            column: 74
          },
          end: {
            line: 465,
            column: 131
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 465,
            column: 84
          },
          end: {
            line: 465,
            column: 131
          }
        }],
        line: 465
      },
      "124": {
        loc: {
          start: {
            line: 465,
            column: 133
          },
          end: {
            line: 465,
            column: 151
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 465,
            column: 147
          },
          end: {
            line: 465,
            column: 151
          }
        }],
        line: 465
      },
      "125": {
        loc: {
          start: {
            line: 465,
            column: 153
          },
          end: {
            line: 465,
            column: 170
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 465,
            column: 166
          },
          end: {
            line: 465,
            column: 170
          }
        }],
        line: 465
      },
      "126": {
        loc: {
          start: {
            line: 465,
            column: 172
          },
          end: {
            line: 465,
            column: 187
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 465,
            column: 183
          },
          end: {
            line: 465,
            column: 187
          }
        }],
        line: 465
      },
      "127": {
        loc: {
          start: {
            line: 465,
            column: 189
          },
          end: {
            line: 465,
            column: 202
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 465,
            column: 200
          },
          end: {
            line: 465,
            column: 202
          }
        }],
        line: 465
      },
      "128": {
        loc: {
          start: {
            line: 465,
            column: 204
          },
          end: {
            line: 465,
            column: 212
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 465,
            column: 211
          },
          end: {
            line: 465,
            column: 212
          }
        }],
        line: 465
      },
      "129": {
        loc: {
          start: {
            line: 466,
            column: 29
          },
          end: {
            line: 466,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 466,
            column: 49
          },
          end: {
            line: 466,
            column: 64
          }
        }, {
          start: {
            line: 466,
            column: 67
          },
          end: {
            line: 466,
            column: 68
          }
        }],
        line: 466
      },
      "130": {
        loc: {
          start: {
            line: 484,
            column: 8
          },
          end: {
            line: 486,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 484,
            column: 8
          },
          end: {
            line: 486,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 484
      },
      "131": {
        loc: {
          start: {
            line: 487,
            column: 8
          },
          end: {
            line: 489,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 487,
            column: 8
          },
          end: {
            line: 489,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 487
      },
      "132": {
        loc: {
          start: {
            line: 487,
            column: 12
          },
          end: {
            line: 487,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 487,
            column: 12
          },
          end: {
            line: 487,
            column: 22
          }
        }, {
          start: {
            line: 487,
            column: 26
          },
          end: {
            line: 487,
            column: 51
          }
        }, {
          start: {
            line: 487,
            column: 55
          },
          end: {
            line: 487,
            column: 76
          }
        }],
        line: 487
      },
      "133": {
        loc: {
          start: {
            line: 492,
            column: 8
          },
          end: {
            line: 495,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 492,
            column: 8
          },
          end: {
            line: 495,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 492
      },
      "134": {
        loc: {
          start: {
            line: 505,
            column: 8
          },
          end: {
            line: 507,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 505,
            column: 8
          },
          end: {
            line: 507,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 505
      },
      "135": {
        loc: {
          start: {
            line: 508,
            column: 8
          },
          end: {
            line: 510,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 508,
            column: 8
          },
          end: {
            line: 510,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 508
      },
      "136": {
        loc: {
          start: {
            line: 508,
            column: 12
          },
          end: {
            line: 508,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 508,
            column: 12
          },
          end: {
            line: 508,
            column: 22
          }
        }, {
          start: {
            line: 508,
            column: 26
          },
          end: {
            line: 508,
            column: 51
          }
        }, {
          start: {
            line: 508,
            column: 55
          },
          end: {
            line: 508,
            column: 76
          }
        }],
        line: 508
      },
      "137": {
        loc: {
          start: {
            line: 517,
            column: 8
          },
          end: {
            line: 520,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 517,
            column: 8
          },
          end: {
            line: 520,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 517
      },
      "138": {
        loc: {
          start: {
            line: 523,
            column: 27
          },
          end: {
            line: 523,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 523,
            column: 27
          },
          end: {
            line: 523,
            column: 31
          }
        }, {
          start: {
            line: 523,
            column: 35
          },
          end: {
            line: 523,
            column: 37
          }
        }],
        line: 523
      },
      "139": {
        loc: {
          start: {
            line: 529,
            column: 37
          },
          end: {
            line: 529,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 529,
            column: 37
          },
          end: {
            line: 529,
            column: 61
          }
        }, {
          start: {
            line: 529,
            column: 65
          },
          end: {
            line: 529,
            column: 90
          }
        }],
        line: 529
      },
      "140": {
        loc: {
          start: {
            line: 530,
            column: 8
          },
          end: {
            line: 544,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 530,
            column: 8
          },
          end: {
            line: 544,
            column: 9
          }
        }, {
          start: {
            line: 542,
            column: 13
          },
          end: {
            line: 544,
            column: 9
          }
        }],
        line: 530
      },
      "141": {
        loc: {
          start: {
            line: 530,
            column: 12
          },
          end: {
            line: 530,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 530,
            column: 12
          },
          end: {
            line: 530,
            column: 18
          }
        }, {
          start: {
            line: 530,
            column: 22
          },
          end: {
            line: 530,
            column: 43
          }
        }],
        line: 530
      },
      "142": {
        loc: {
          start: {
            line: 534,
            column: 16
          },
          end: {
            line: 535,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 534,
            column: 16
          },
          end: {
            line: 535,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 534
      },
      "143": {
        loc: {
          start: {
            line: 534,
            column: 20
          },
          end: {
            line: 534,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 534,
            column: 20
          },
          end: {
            line: 534,
            column: 37
          }
        }, {
          start: {
            line: 534,
            column: 41
          },
          end: {
            line: 534,
            column: 70
          }
        }],
        line: 534
      },
      "144": {
        loc: {
          start: {
            line: 542,
            column: 13
          },
          end: {
            line: 544,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 542,
            column: 13
          },
          end: {
            line: 544,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 542
      },
      "145": {
        loc: {
          start: {
            line: 549,
            column: 27
          },
          end: {
            line: 549,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 549,
            column: 27
          },
          end: {
            line: 549,
            column: 32
          }
        }, {
          start: {
            line: 549,
            column: 36
          },
          end: {
            line: 549,
            column: 37
          }
        }],
        line: 549
      },
      "146": {
        loc: {
          start: {
            line: 568,
            column: 26
          },
          end: {
            line: 568,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 568,
            column: 26
          },
          end: {
            line: 568,
            column: 41
          }
        }, {
          start: {
            line: 568,
            column: 45
          },
          end: {
            line: 568,
            column: 47
          }
        }],
        line: 568
      },
      "147": {
        loc: {
          start: {
            line: 569,
            column: 29
          },
          end: {
            line: 569,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 569,
            column: 29
          },
          end: {
            line: 569,
            column: 40
          }
        }, {
          start: {
            line: 569,
            column: 44
          },
          end: {
            line: 569,
            column: 45
          }
        }],
        line: 569
      },
      "148": {
        loc: {
          start: {
            line: 572,
            column: 19
          },
          end: {
            line: 572,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 572,
            column: 19
          },
          end: {
            line: 572,
            column: 30
          }
        }, {
          start: {
            line: 572,
            column: 34
          },
          end: {
            line: 572,
            column: 67
          }
        }],
        line: 572
      },
      "149": {
        loc: {
          start: {
            line: 582,
            column: 16
          },
          end: {
            line: 582,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 582,
            column: 28
          },
          end: {
            line: 582,
            column: 38
          }
        }],
        line: 582
      },
      "150": {
        loc: {
          start: {
            line: 582,
            column: 40
          },
          end: {
            line: 582,
            column: 97
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 582,
            column: 50
          },
          end: {
            line: 582,
            column: 97
          }
        }],
        line: 582
      },
      "151": {
        loc: {
          start: {
            line: 582,
            column: 99
          },
          end: {
            line: 582,
            column: 112
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 582,
            column: 110
          },
          end: {
            line: 582,
            column: 112
          }
        }],
        line: 582
      },
      "152": {
        loc: {
          start: {
            line: 582,
            column: 114
          },
          end: {
            line: 582,
            column: 122
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 582,
            column: 121
          },
          end: {
            line: 582,
            column: 122
          }
        }],
        line: 582
      },
      "153": {
        loc: {
          start: {
            line: 584,
            column: 29
          },
          end: {
            line: 584,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 584,
            column: 49
          },
          end: {
            line: 584,
            column: 64
          }
        }, {
          start: {
            line: 584,
            column: 67
          },
          end: {
            line: 584,
            column: 68
          }
        }],
        line: 584
      },
      "154": {
        loc: {
          start: {
            line: 598,
            column: 8
          },
          end: {
            line: 601,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 598,
            column: 8
          },
          end: {
            line: 601,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 598
      },
      "155": {
        loc: {
          start: {
            line: 607,
            column: 8
          },
          end: {
            line: 610,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 607,
            column: 8
          },
          end: {
            line: 610,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 607
      },
      "156": {
        loc: {
          start: {
            line: 615,
            column: 27
          },
          end: {
            line: 615,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 615,
            column: 27
          },
          end: {
            line: 615,
            column: 32
          }
        }, {
          start: {
            line: 615,
            column: 36
          },
          end: {
            line: 615,
            column: 37
          }
        }],
        line: 615
      },
      "157": {
        loc: {
          start: {
            line: 634,
            column: 26
          },
          end: {
            line: 634,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 634,
            column: 26
          },
          end: {
            line: 634,
            column: 41
          }
        }, {
          start: {
            line: 634,
            column: 45
          },
          end: {
            line: 634,
            column: 47
          }
        }],
        line: 634
      },
      "158": {
        loc: {
          start: {
            line: 635,
            column: 29
          },
          end: {
            line: 635,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 635,
            column: 29
          },
          end: {
            line: 635,
            column: 40
          }
        }, {
          start: {
            line: 635,
            column: 44
          },
          end: {
            line: 635,
            column: 45
          }
        }],
        line: 635
      },
      "159": {
        loc: {
          start: {
            line: 638,
            column: 19
          },
          end: {
            line: 638,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 638,
            column: 19
          },
          end: {
            line: 638,
            column: 30
          }
        }, {
          start: {
            line: 638,
            column: 34
          },
          end: {
            line: 638,
            column: 57
          }
        }],
        line: 638
      },
      "160": {
        loc: {
          start: {
            line: 666,
            column: 8
          },
          end: {
            line: 668,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 666,
            column: 8
          },
          end: {
            line: 668,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 666
      },
      "161": {
        loc: {
          start: {
            line: 669,
            column: 8
          },
          end: {
            line: 671,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 669,
            column: 8
          },
          end: {
            line: 671,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 669
      },
      "162": {
        loc: {
          start: {
            line: 676,
            column: 36
          },
          end: {
            line: 676,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 676,
            column: 36
          },
          end: {
            line: 676,
            column: 47
          }
        }, {
          start: {
            line: 676,
            column: 51
          },
          end: {
            line: 676,
            column: 66
          }
        }],
        line: 676
      },
      "163": {
        loc: {
          start: {
            line: 699,
            column: 8
          },
          end: {
            line: 701,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 699,
            column: 8
          },
          end: {
            line: 701,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 699
      },
      "164": {
        loc: {
          start: {
            line: 710,
            column: 8
          },
          end: {
            line: 712,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 710,
            column: 8
          },
          end: {
            line: 712,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 710
      },
      "165": {
        loc: {
          start: {
            line: 713,
            column: 8
          },
          end: {
            line: 716,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 713,
            column: 8
          },
          end: {
            line: 716,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 713
      },
      "166": {
        loc: {
          start: {
            line: 713,
            column: 12
          },
          end: {
            line: 713,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 713,
            column: 12
          },
          end: {
            line: 713,
            column: 28
          }
        }, {
          start: {
            line: 713,
            column: 32
          },
          end: {
            line: 713,
            column: 60
          }
        }],
        line: 713
      },
      "167": {
        loc: {
          start: {
            line: 728,
            column: 8
          },
          end: {
            line: 730,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 728,
            column: 8
          },
          end: {
            line: 730,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 728
      },
      "168": {
        loc: {
          start: {
            line: 731,
            column: 8
          },
          end: {
            line: 733,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 731,
            column: 8
          },
          end: {
            line: 733,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 731
      },
      "169": {
        loc: {
          start: {
            line: 738,
            column: 8
          },
          end: {
            line: 740,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 738,
            column: 8
          },
          end: {
            line: 740,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 738
      },
      "170": {
        loc: {
          start: {
            line: 743,
            column: 8
          },
          end: {
            line: 751,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 743,
            column: 8
          },
          end: {
            line: 751,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 743
      },
      "171": {
        loc: {
          start: {
            line: 752,
            column: 23
          },
          end: {
            line: 754,
            column: 16
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 753,
            column: 14
          },
          end: {
            line: 753,
            column: 50
          }
        }, {
          start: {
            line: 754,
            column: 14
          },
          end: {
            line: 754,
            column: 16
          }
        }],
        line: 752
      },
      "172": {
        loc: {
          start: {
            line: 759,
            column: 36
          },
          end: {
            line: 759,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 759,
            column: 36
          },
          end: {
            line: 759,
            column: 47
          }
        }, {
          start: {
            line: 759,
            column: 51
          },
          end: {
            line: 759,
            column: 66
          }
        }],
        line: 759
      },
      "173": {
        loc: {
          start: {
            line: 783,
            column: 8
          },
          end: {
            line: 784,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 783,
            column: 8
          },
          end: {
            line: 784,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 783
      },
      "174": {
        loc: {
          start: {
            line: 785,
            column: 8
          },
          end: {
            line: 790,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 785,
            column: 8
          },
          end: {
            line: 790,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 785
      },
      "175": {
        loc: {
          start: {
            line: 791,
            column: 24
          },
          end: {
            line: 791,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 791,
            column: 24
          },
          end: {
            line: 791,
            column: 36
          }
        }, {
          start: {
            line: 791,
            column: 40
          },
          end: {
            line: 791,
            column: 42
          }
        }],
        line: 791
      },
      "176": {
        loc: {
          start: {
            line: 793,
            column: 23
          },
          end: {
            line: 795,
            column: 31
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 794,
            column: 14
          },
          end: {
            line: 794,
            column: 18
          }
        }, {
          start: {
            line: 795,
            column: 14
          },
          end: {
            line: 795,
            column: 31
          }
        }],
        line: 793
      },
      "177": {
        loc: {
          start: {
            line: 796,
            column: 8
          },
          end: {
            line: 801,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 796,
            column: 8
          },
          end: {
            line: 801,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 796
      },
      "178": {
        loc: {
          start: {
            line: 796,
            column: 12
          },
          end: {
            line: 796,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 796,
            column: 12
          },
          end: {
            line: 796,
            column: 19
          }
        }, {
          start: {
            line: 796,
            column: 23
          },
          end: {
            line: 796,
            column: 30
          }
        }],
        line: 796
      },
      "179": {
        loc: {
          start: {
            line: 817,
            column: 8
          },
          end: {
            line: 818,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 817,
            column: 8
          },
          end: {
            line: 818,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 817
      },
      "180": {
        loc: {
          start: {
            line: 819,
            column: 8
          },
          end: {
            line: 824,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 819,
            column: 8
          },
          end: {
            line: 824,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 819
      },
      "181": {
        loc: {
          start: {
            line: 819,
            column: 12
          },
          end: {
            line: 819,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 819,
            column: 12
          },
          end: {
            line: 819,
            column: 24
          }
        }, {
          start: {
            line: 819,
            column: 28
          },
          end: {
            line: 819,
            column: 39
          }
        }],
        line: 819
      },
      "182": {
        loc: {
          start: {
            line: 836,
            column: 8
          },
          end: {
            line: 837,
            column: 27
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 836,
            column: 8
          },
          end: {
            line: 837,
            column: 27
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 836
      },
      "183": {
        loc: {
          start: {
            line: 842,
            column: 42
          },
          end: {
            line: 842,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 842,
            column: 42
          },
          end: {
            line: 842,
            column: 53
          }
        }, {
          start: {
            line: 842,
            column: 57
          },
          end: {
            line: 842,
            column: 79
          }
        }],
        line: 842
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0,
      "314": 0,
      "315": 0,
      "316": 0,
      "317": 0,
      "318": 0,
      "319": 0,
      "320": 0,
      "321": 0,
      "322": 0,
      "323": 0,
      "324": 0,
      "325": 0,
      "326": 0,
      "327": 0,
      "328": 0,
      "329": 0,
      "330": 0,
      "331": 0,
      "332": 0,
      "333": 0,
      "334": 0,
      "335": 0,
      "336": 0,
      "337": 0,
      "338": 0,
      "339": 0,
      "340": 0,
      "341": 0,
      "342": 0,
      "343": 0,
      "344": 0,
      "345": 0,
      "346": 0,
      "347": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0, 0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0, 0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0, 0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0],
      "91": [0],
      "92": [0],
      "93": [0],
      "94": [0],
      "95": [0],
      "96": [0],
      "97": [0],
      "98": [0, 0],
      "99": [0, 0],
      "100": [0, 0],
      "101": [0, 0],
      "102": [0, 0],
      "103": [0, 0],
      "104": [0, 0, 0],
      "105": [0, 0],
      "106": [0, 0],
      "107": [0, 0],
      "108": [0, 0],
      "109": [0, 0],
      "110": [0, 0],
      "111": [0, 0],
      "112": [0, 0],
      "113": [0, 0],
      "114": [0, 0],
      "115": [0, 0],
      "116": [0, 0],
      "117": [0, 0],
      "118": [0, 0],
      "119": [0, 0],
      "120": [0, 0],
      "121": [0],
      "122": [0],
      "123": [0],
      "124": [0],
      "125": [0],
      "126": [0],
      "127": [0],
      "128": [0],
      "129": [0, 0],
      "130": [0, 0],
      "131": [0, 0],
      "132": [0, 0, 0],
      "133": [0, 0],
      "134": [0, 0],
      "135": [0, 0],
      "136": [0, 0, 0],
      "137": [0, 0],
      "138": [0, 0],
      "139": [0, 0],
      "140": [0, 0],
      "141": [0, 0],
      "142": [0, 0],
      "143": [0, 0],
      "144": [0, 0],
      "145": [0, 0],
      "146": [0, 0],
      "147": [0, 0],
      "148": [0, 0],
      "149": [0],
      "150": [0],
      "151": [0],
      "152": [0],
      "153": [0, 0],
      "154": [0, 0],
      "155": [0, 0],
      "156": [0, 0],
      "157": [0, 0],
      "158": [0, 0],
      "159": [0, 0],
      "160": [0, 0],
      "161": [0, 0],
      "162": [0, 0],
      "163": [0, 0],
      "164": [0, 0],
      "165": [0, 0],
      "166": [0, 0],
      "167": [0, 0],
      "168": [0, 0],
      "169": [0, 0],
      "170": [0, 0],
      "171": [0, 0],
      "172": [0, 0],
      "173": [0, 0],
      "174": [0, 0],
      "175": [0, 0],
      "176": [0, 0],
      "177": [0, 0],
      "178": [0, 0],
      "179": [0, 0],
      "180": [0, 0],
      "181": [0, 0],
      "182": [0, 0],
      "183": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kevin/card-show-finder/src/services/showService.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/kevin/card-show-finder/src/services/showService.ts"],
      sourcesContent: ["/**\n * Show Service\n *\n * This file contains helpers for fetching shows from Supabase.\n */\n\nimport { supabase } from '../supabase';\nimport { Show, ShowStatus } from '../types';\n\n/**\n * Convert a raw Supabase row into an app `Show` object.\n */\n/* ------------------------------------------------------------------ */\n/* Debug helper \u2013 track a single show end-to-end                        */\n/* ------------------------------------------------------------------ */\nconst DEBUG_SHOW_ID = 'cd175b33-3144-4ccb-9d85-94490446bf26';\n\nconst mapDbShowToAppShow = (row: any): Show => ({\n  id: row.id,\n  title: row.title,\n  location: row.location,\n  address: row.address,\n  startDate: row.start_date,\n  endDate: row.end_date,\n  startTime: row.start_time,\n  endTime: row.end_time,\n  entryFee: row.entry_fee,\n  description: row.description ?? undefined,\n  imageUrl: row.image_url ?? undefined,\n  rating: row.rating ?? undefined,\n  // Prefer explicit latitude / longitude columns (added in updated Supabase functions);\n  // fall back to legacy PostGIS object when they are not present.\n  coordinates:\n    typeof row.latitude === 'number' && typeof row.longitude === 'number'\n      ? {\n          latitude: row.latitude,\n          longitude: row.longitude,\n        }\n      : row.coordinates &&\n        row.coordinates.coordinates &&\n        Array.isArray(row.coordinates.coordinates) &&\n        row.coordinates.coordinates.length >= 2\n      ? {\n          latitude: row.coordinates.coordinates[1],\n          longitude: row.coordinates.coordinates[0],\n        }\n      : undefined,\n  status: row.status as ShowStatus,\n  organizerId: row.organizer_id,\n  features: row.features ?? {},\n  categories: row.categories ?? [],\n  createdAt: row.created_at,\n  updatedAt: row.updated_at,\n  seriesId: row.series_id,\n  websiteUrl: row.website_url,\n});\n\n/**\n * Fetch a list of active shows.\n *\n * The caller supplies a `ShowFilters` object that may contain:\n *   \u2022 latitude / longitude / radius \u2192 geo-filtered RPC\n *   \u2022 startDate / endDate / maxEntryFee / categories / features, etc.\n *\n * The function always returns an **array of Show objects** (may be empty) and\n * throws on error \u2013 this aligns with `HomeScreen.tsx`, which expects a plain\n * array.\n */\nimport { ShowFilters } from '../types';\n\n/* ------------------------------------------------------------------ */\n/* Pagination helper types                                             */\n/* ------------------------------------------------------------------ */\n\n/**\n * Metadata describing pagination state returned from the\n * `get_paginated_shows` RPC.\n */\nexport interface PaginationMeta {\n  totalCount: number;\n  pageSize: number;\n  currentPage: number;\n  totalPages: number;\n}\n\n/**\n * Params accepted by `getPaginatedShows`.\n * Inherits all normal ShowFilters plus `pageSize` & `page`.\n * `latitude` and `longitude` are **required** because the RPC\n * is geo-aware \u2013 calling code (e.g. HomeScreen) must supply them.\n */\nexport interface PaginatedShowsParams extends ShowFilters {\n  latitude: number;\n  longitude: number;\n  /** Number of rows per page (default: 20) */\n  pageSize?: number;\n  /** 1-based page index (default: 1)            */\n  page?: number;\n}\n\n/**\n * Shape returned by `getPaginatedShows`.\n */\nexport interface PaginatedShowsResult {\n  data: Show[];\n  pagination: PaginationMeta;\n  error: string | null;\n}\n\nexport const getShows = async (filters: ShowFilters = {}): Promise<Show[]> => {\n  try {\n    // Ensure filters is a valid object\n    filters = filters || {};\n\n    /* -----------------------------------------------------------\n     * Derive **normalized** filter values so every query path\n     * (RPCs & basic SELECT) uses the exact same parameters.\n     * --------------------------------------------------------- */\n    const toIso = (d: Date | string): string =>\n      d instanceof Date ? d.toISOString() : d;\n\n    // Default date range: today \u2192 +30 days (ISO strings)\n    const startDate = toIso(\n      filters.startDate ?? new Date()\n    );\n    const endDate = toIso(\n      filters.endDate ?? new Date(Date.now() + 30 * 24 * 60 * 60 * 1000)\n    );\n\n    // Default radius: 25 mi\n    const radius =\n      typeof filters.radius === 'number' && !isNaN(filters.radius)\n        ? filters.radius\n        : 25;\n    \n    /* -----------------------------------------------------------\n     * 1. Geo-aware query via nearby_shows RPC when lat/lng present\n     * --------------------------------------------------------- */\n    if (\n      typeof filters.latitude === 'number' &&\n      typeof filters.longitude === 'number' &&\n      !isNaN(filters.latitude) &&\n      !isNaN(filters.longitude)\n    ) {\n      const radius = typeof filters.radius === 'number' ? filters.radius : 25;\n\n      /* ---------- Sanity-check lat / lng values ---------- */\n      if (Math.abs(filters.latitude) > 90 || Math.abs(filters.longitude) > 180) {\n        console.warn(\n          '[showService] Suspicious coordinates detected \u2013 latitude / longitude might be swapped:',\n          { latitude: filters.latitude, longitude: filters.longitude }\n        );\n      }\n\n      console.debug('[showService] Calling nearby_shows with params:', {\n        lat: filters.latitude,\n        long: filters.longitude,\n        radius_miles: radius,\n        start_date: startDate,\n        end_date: endDate,\n        debugShowId: DEBUG_SHOW_ID, // helpful when grepping logs\n      });\n\n      // Call the new nearby_shows function as primary method\n      const { data: nearbyData, error: nearbyError } = await supabase.rpc(\n        'nearby_shows',\n        {\n          lat: filters.latitude,\n          long: filters.longitude,\n          radius_miles: radius,\n          start_date: startDate, // Always include a date range\n          end_date: endDate,    // to filter out past shows\n        }\n      );\n\n      if (nearbyError) {\n        console.warn(\n          '[showService] nearby_shows RPC failed \u2013 attempting fallback',\n          nearbyError.message\n        );\n      } else {\n        console.info(\n          `[showService] nearby_shows returned ${((nearbyData && Array.isArray(nearbyData)) ? nearbyData.length : 0)} show(s)`\n        );\n\n        /* ----- DEBUG: Is target show present in raw nearby_shows data? ---- */\n        if (Array.isArray(nearbyData)) {\n          const found = nearbyData.some((s: any) => s.id === DEBUG_SHOW_ID);\n          console.debug(\n            `[showService][DEBUG_SHOW] Target show ${\n              found ? 'FOUND' : 'NOT found'\n            } in raw nearby_shows payload`\n          );\n\n          // If found, get the show details for further debugging\n          if (found) {\n            const targetShow = nearbyData.find((s: any) => s.id === DEBUG_SHOW_ID);\n            console.debug(\n              `[showService][DEBUG_SHOW] Target show details:`,\n              {\n                id: targetShow.id,\n                title: targetShow.title,\n                start_date: targetShow.start_date,\n                end_date: targetShow.end_date,\n                status: targetShow.status\n              }\n            );\n          }\n        }\n        \n        // Apply additional filters that weren't handled by the RPC\n        let filteredData = nearbyData;\n        \n        // Ensure we're not showing past shows\n        if (Array.isArray(filteredData)) {\n          const today = new Date();\n          console.debug(`[showService][DEBUG_SHOW] Today's date for filtering: ${today.toISOString()}`);\n          \n          // Check if target show exists before filtering\n          const targetShowBeforeFilter = filteredData.find((s: any) => s.id === DEBUG_SHOW_ID);\n          \n          if (targetShowBeforeFilter) {\n            const targetEndDate = new Date(targetShowBeforeFilter.end_date);\n            const isPastShow = targetEndDate < today;\n            \n            console.debug(\n              `[showService][DEBUG_SHOW] Target show end_date: ${targetEndDate.toISOString()} | Today: ${today.toISOString()} | Is past show? ${isPastShow ? 'YES' : 'NO'}`\n            );\n          }\n          \n          filteredData = filteredData.filter(show => {\n            // Parse the end date, ensuring timezone issues don't cause off-by-one errors\n            const showEndDate = new Date(show.end_date);\n            const isValid = showEndDate >= today;\n            \n            // Debug logging specifically for our target show\n            if (show.id === DEBUG_SHOW_ID) {\n              console.debug(\n                `[showService][DEBUG_SHOW] Filtering decision: show.end_date (${showEndDate.toISOString()}) ${isValid ? '>=' : '<'} today (${today.toISOString()}) => ${isValid ? 'KEEP' : 'FILTER OUT'}`\n              );\n            }\n            \n            return isValid;\n          });\n          \n          console.debug(`[showService] Filtered out past shows. ${filteredData.length} shows remaining.`);\n        }\n        \n        // Filter by max entry fee if specified\n        if (typeof filters.maxEntryFee === 'number' && Array.isArray(filteredData)) {\n          filteredData = filteredData.filter(show => \n            show.entry_fee <= filters.maxEntryFee!\n          );\n        }\n        \n        // Filter by categories if specified\n        if (filters.categories && Array.isArray(filters.categories) && \n            filters.categories.length > 0 && Array.isArray(filteredData)) {\n          filteredData = filteredData.filter(show => \n            show.categories && \n            filters.categories!.some(cat => show.categories.includes(cat))\n          );\n        }\n        \n        // Filter by features if specified\n        if (filters.features && Array.isArray(filters.features) && \n            filters.features.length > 0 && Array.isArray(filteredData)) {\n          filteredData = filteredData.filter(show => \n            show.features && \n            filters.features!.every(feature => show.features[feature] === true)\n          );\n        }\n        \n        /* ----- DEBUG: Is target show present after client-side filters? ---- */\n        if (Array.isArray(filteredData)) {\n          const foundAfter = filteredData.some((s: any) => s.id === DEBUG_SHOW_ID);\n          console.debug(\n            `[showService][DEBUG_SHOW] Target show ${\n              foundAfter ? 'REMAINS' : 'WAS FILTERED OUT'\n            } after nearby_shows client-side filters`\n          );\n        }\n\n        return Array.isArray(filteredData) ? filteredData.map(mapDbShowToAppShow) : [];\n      }\n\n      /* -------------------------------------------------------\n       * 1b. Fallback to find_filtered_shows if nearby_shows fails\n       * ----------------------------------------------------- */\n      console.debug('[showService] Falling back to find_filtered_shows with params:', {\n        center_lat: filters.latitude,\n        center_lng: filters.longitude,\n        radius_miles: radius,\n        start_date: startDate,\n        end_date: endDate,\n        max_entry_fee: filters.maxEntryFee ?? null,\n        show_categories: filters.categories ?? null,\n        show_features: filters.features ?? null,\n      });\n\n      const { data: rpcData, error: rpcError } = await supabase.rpc(\n        'find_filtered_shows',\n        {\n          // Primary/filter-aware RPC parameters\n          center_lat: typeof filters.latitude === 'number' ? filters.latitude : null,\n          center_lng: typeof filters.longitude === 'number' ? filters.longitude : null,\n          radius_miles: typeof filters.radius === 'number' ? filters.radius : 25,\n          start_date: startDate,\n          end_date: endDate,\n          max_entry_fee: typeof filters.maxEntryFee === 'number' ? filters.maxEntryFee : null,\n          show_categories: Array.isArray(filters.categories) ? filters.categories : null,\n          show_features: filters.features || null,\n        }\n      );\n\n      if (rpcError) {\n        console.warn(\n          '[showService] find_filtered_shows RPC failed \u2013 attempting second fallback',\n          rpcError.message\n        );\n      } else {\n        console.info(\n          `[showService] find_filtered_shows returned ${((rpcData && Array.isArray(rpcData)) ? rpcData.length : 0)} show(s)`\n        );\n        \n        /* ----- DEBUG: Target show in raw find_filtered_shows payload? ----- */\n        if (Array.isArray(rpcData)) {\n          const foundRaw = rpcData.some((s: any) => s.id === DEBUG_SHOW_ID);\n          console.debug(\n            `[showService][DEBUG_SHOW] Target show ${\n              foundRaw ? 'FOUND' : 'NOT found'\n            } in raw find_filtered_shows payload`\n          );\n          \n          // If found, get the show details for further debugging\n          if (foundRaw) {\n            const targetShow = rpcData.find((s: any) => s.id === DEBUG_SHOW_ID);\n            console.debug(\n              `[showService][DEBUG_SHOW] Target show details from find_filtered_shows:`,\n              {\n                id: targetShow.id,\n                title: targetShow.title,\n                start_date: targetShow.start_date,\n                end_date: targetShow.end_date,\n                status: targetShow.status\n              }\n            );\n          }\n        }\n\n        // Ensure we're not showing past shows\n        let filteredData = rpcData;\n        if (Array.isArray(filteredData)) {\n          const today = new Date();\n          console.debug(`[showService][DEBUG_SHOW] Today's date for filtering (find_filtered): ${today.toISOString()}`);\n          \n          // Check if target show exists before filtering\n          const targetShowBeforeFilter = filteredData.find((s: any) => s.id === DEBUG_SHOW_ID);\n          \n          if (targetShowBeforeFilter) {\n            const targetEndDate = new Date(targetShowBeforeFilter.end_date);\n            const isPastShow = targetEndDate < today;\n            \n            console.debug(\n              `[showService][DEBUG_SHOW] Target show end_date (find_filtered): ${targetEndDate.toISOString()} | Today: ${today.toISOString()} | Is past show? ${isPastShow ? 'YES' : 'NO'}`\n            );\n          }\n          \n          filteredData = filteredData.filter(show => {\n            // Parse the end date, ensuring timezone issues don't cause off-by-one errors\n            const showEndDate = new Date(show.end_date);\n            const isValid = showEndDate >= today;\n            \n            // Debug logging specifically for our target show\n            if (show.id === DEBUG_SHOW_ID) {\n              console.debug(\n                `[showService][DEBUG_SHOW] Filtering decision (find_filtered): show.end_date (${showEndDate.toISOString()}) ${isValid ? '>=' : '<'} today (${today.toISOString()}) => ${isValid ? 'KEEP' : 'FILTER OUT'}`\n              );\n            }\n            \n            return isValid;\n          });\n          \n          console.debug(`[showService] Filtered out past shows. ${filteredData.length} shows remaining.`);\n        }\n        \n        /* ----- DEBUG: Target show after filters (find_filtered_shows) ----- */\n        if (Array.isArray(filteredData)) {\n          const foundFiltered = filteredData.some((s: any) => s.id === DEBUG_SHOW_ID);\n          console.debug(\n            `[showService][DEBUG_SHOW] Target show ${\n              foundFiltered ? 'REMAINS' : 'WAS FILTERED OUT'\n            } after find_filtered_shows client-side filters`\n          );\n        }\n\n        return Array.isArray(filteredData) ? filteredData.map(mapDbShowToAppShow) : [];\n      }\n\n      /* -------------------------------------------------------\n       * 1c. Fallback to simple radius-only RPC if the above fails\n       * ----------------------------------------------------- */\n      const { data: fbData, error: fbError } = await supabase.rpc(\n        'find_shows_within_radius',\n        {\n          center_lat: typeof filters.latitude === 'number' ? filters.latitude : null,\n          center_lng: typeof filters.longitude === 'number' ? filters.longitude : null,\n          radius_miles: radius,\n        }\n      );\n\n      if (fbError) {\n        console.warn(\n          '[showService] find_shows_within_radius fallback failed \u2013 will use basic query',\n          fbError.message\n        );\n        // fall through to non-spatial query below\n      } else {\n        console.debug(\n          '[showService] find_shows_within_radius params:',\n          { center_lat: filters.latitude, center_lng: filters.longitude, radius_miles: radius }\n        );\n        console.info(\n          `[showService] find_shows_within_radius returned ${((fbData && Array.isArray(fbData)) ? fbData.length : 0)} show(s)`\n        );\n        \n        // Apply date filtering since this RPC doesn't do it\n        let filteredData = Array.isArray(fbData) ? fbData : [];\n        \n        // Ensure we're not showing past shows\n        if (Array.isArray(filteredData)) {\n          const today = new Date();\n          filteredData = filteredData.filter(show => {\n            // Parse the end date, ensuring timezone issues don't cause off-by-one errors\n            const showEndDate = new Date(show.end_date);\n            return showEndDate >= today;\n          });\n          \n          console.debug(`[showService] Filtered out past shows. ${filteredData.length} shows remaining.`);\n        }\n        \n        // Apply date range filtering\n        filteredData = filteredData.filter(show => {\n          const showStartDate = new Date(show.start_date);\n          const filterStartDate = new Date(startDate);\n          const filterEndDate = new Date(endDate);\n          return showStartDate >= filterStartDate && showStartDate <= filterEndDate;\n        });\n        \n        return filteredData.map(mapDbShowToAppShow);\n      }\n    }\n\n    /* -----------------------------------------------------------\n     * 2. Basic (non-spatial) SELECT with optional filters\n     * --------------------------------------------------------- */\n    let query = supabase\n      .from('shows')\n      .select('*')\n      .eq('status', 'ACTIVE')\n      .order('start_date', { ascending: true });\n\n    // Always apply date filters to show only future/current shows\n    query = query.gte('start_date', startDate as any);\n    query = query.lte('start_date', endDate as any);\n    \n    // Also ensure the end_date is not in the past\n    const today = new Date();\n    query = query.gte('end_date', today.toISOString() as any);\n    \n    if (typeof filters.maxEntryFee === 'number') {\n      query = query.lte('entry_fee', filters.maxEntryFee);\n    }\n    if (filters.categories && Array.isArray(filters.categories) && filters.categories.length > 0) {\n      query = query.overlaps('categories', filters.categories);\n    }\n\n    /* ---------- Log basic-query filters for debugging ---------- */\n    console.debug('[showService] Executing basic query with filters:', {\n      startDate,\n      endDate,\n      today: today.toISOString(),\n      maxEntryFee: filters.maxEntryFee,\n      categories: filters.categories,\n      status: 'ACTIVE',\n    });\n\n    const { data, error } = await query;\n\n    if (error) throw error;\n\n    console.info(\n      `[showService] basic query returned ${((data && Array.isArray(data)) ? data.length : 0)} show(s)`\n    );\n    \n    // Ensure we're not showing past shows\n    let filteredData = data;\n    if (Array.isArray(filteredData)) {\n      const today = new Date();\n      \n      // Check if target show exists before filtering\n      const targetShowBeforeFilter = filteredData.find((s: any) => s.id === DEBUG_SHOW_ID);\n      \n      if (targetShowBeforeFilter) {\n        const targetEndDate = new Date(targetShowBeforeFilter.end_date);\n        const isPastShow = targetEndDate < today;\n        \n        console.debug(\n          `[showService][DEBUG_SHOW] Target show end_date (basic query): ${targetEndDate.toISOString()} | Today: ${today.toISOString()} | Is past show? ${isPastShow ? 'YES' : 'NO'}`\n        );\n      }\n      \n      filteredData = filteredData.filter(show => {\n        // Parse the end date, ensuring timezone issues don't cause off-by-one errors\n        const showEndDate = new Date(show.end_date);\n        const isValid = showEndDate >= today;\n        \n        // Debug logging specifically for our target show\n        if (show.id === DEBUG_SHOW_ID) {\n          console.debug(\n            `[showService][DEBUG_SHOW] Filtering decision (basic query): show.end_date (${showEndDate.toISOString()}) ${isValid ? '>=' : '<'} today (${today.toISOString()}) => ${isValid ? 'KEEP' : 'FILTER OUT'}`\n          );\n        }\n        \n        return isValid;\n      });\n      \n      console.debug(`[showService] Filtered out past shows. ${filteredData.length} shows remaining.`);\n    }\n    \n    return Array.isArray(filteredData) ? filteredData.map(mapDbShowToAppShow) : [];\n  } catch (err: any) {\n    console.error('Error fetching shows:', err);\n    throw new Error(err.message ?? 'Failed to fetch shows');\n  }\n  \n  // Safety return if we somehow get here without data\n  return [];\n};\n\n/* ------------------------------------------------------------------ */\n/* Paginated / infinite-scroll helper                                  */\n/* ------------------------------------------------------------------ */\n\n/**\n * Fetch shows in **paged** chunks using the `get_paginated_shows` RPC.\n * Designed for infinite-scroll lists (Home screen, etc.).\n */\nexport const getPaginatedShows = async (\n  params: PaginatedShowsParams\n): Promise<PaginatedShowsResult> => {\n  try {\n    /* ---------------- Normalise & default params ----------------- */\n    const {\n      latitude,\n      longitude,\n      radius = 25,\n      startDate = new Date(),\n      endDate = new Date(Date.now() + 30 * 24 * 60 * 60 * 1000),\n      maxEntryFee = null,\n      categories = null,\n      features = null,\n      pageSize = 20,\n      page = 1,\n    } = params;\n\n    const toIso = (d: Date | string): string =>\n      d instanceof Date ? d.toISOString() : d;\n    \n    console.debug('[showService] getPaginatedShows called with params:', {\n      latitude, longitude, radius, startDate, endDate, maxEntryFee, \n      categories, features, pageSize, page\n    });\n\n    /* ---------------------- RPC invocation ----------------------- */\n    const { data, error } = await supabase.rpc('get_paginated_shows', {\n      lat: latitude,\n      lng: longitude,\n      radius_miles: typeof radius === 'number' && !isNaN(radius) ? radius : 25,\n      start_date: toIso(startDate),\n      end_date: toIso(endDate),\n      max_entry_fee: typeof maxEntryFee === 'number' ? maxEntryFee : null,\n      categories,\n      features,\n      page_size: pageSize,\n      page,\n      status: 'ACTIVE', // Explicitly request only ACTIVE shows\n    });\n\n    /* -------------------------------------------------------------\n     * 1. Handle RPC-level error (network / SQL exception, etc.)\n     * ----------------------------------------------------------- */\n    if (error) {\n      console.warn('[showService] get_paginated_shows RPC failed:', error.message);\n      console.warn('[showService] Falling back to direct query...');\n      \n      // Fallback to direct query if RPC fails\n      return await getFallbackPaginatedShows(params);\n    }\n\n    /* -------------------------------------------------------------\n     * 2. Guard against malformed payloads or error wrapper returned\n     *    by the SQL function itself (it returns `{ error: .. }`).\n     * ----------------------------------------------------------- */\n    if (\n      !data ||\n      (typeof data === 'object' && 'error' in (data as any))\n    ) {\n      const msg =\n        typeof (data as any)?.error === 'string'\n          ? (data as any).error\n          : 'Failed to load shows';\n      console.warn('[showService] get_paginated_shows returned error payload:', msg);\n      return {\n        data: [],\n        pagination: {\n          totalCount: 0,\n          pageSize,\n          currentPage: page,\n          totalPages: 0,\n        },\n        error: msg,\n      };\n    }\n\n    /* -------------------------------------------------------------\n     * 3. Normalise successful payload to avoid \"undefined value\n     *    to object\" errors when the function returns unexpected\n     *    shapes.  Always guarantee `rows` is an array and\n     *    `paginationRaw` is an object.\n     * ----------------------------------------------------------- */\n    const safePayload = typeof data === 'object' && data !== null ? data as any : {};\n    const rows: any[] = Array.isArray(safePayload.data) ? safePayload.data : [];\n    const paginationRaw: any = typeof safePayload.pagination === 'object' && safePayload.pagination !== null\n      ? safePayload.pagination\n      : {};\n\n    const mappedShows: Show[] = Array.isArray(rows)\n      ? rows.map(mapDbShowToAppShow)\n      : [];\n      \n    console.info(`[showService] get_paginated_shows returned ${mappedShows.length} shows`);\n\n    const pagination: PaginationMeta = {\n      totalCount: Number(paginationRaw.total_count ?? 0),\n      pageSize: Number(paginationRaw.page_size ?? pageSize),\n      currentPage: Number(paginationRaw.current_page ?? page),\n      totalPages: Number(paginationRaw.total_pages ?? 0),\n    };\n\n    return { data: mappedShows, pagination, error: null };\n  } catch (err: any) {\n    console.error('[showService] Error in getPaginatedShows:', err);\n    \n    // Try fallback if the main method fails\n    try {\n      console.warn('[showService] Attempting fallback after error...');\n      const fallbackResult = await getFallbackPaginatedShows(params);\n      \n      // If the fallback found no shows, try the emergency fallback\n      if (fallbackResult.data.length === 0 && fallbackResult.pagination.totalCount > 0) {\n        console.warn('[showService] Fallback found 0 shows but totalCount > 0, trying emergency fallback');\n        return await getAllActiveShowsFallback(params);\n      }\n      \n      return fallbackResult;\n    } catch (fallbackErr: any) {\n      console.error('[showService] Fallback also failed:', fallbackErr);\n      return {\n        data: [],\n        pagination: {\n          totalCount: 0,\n          pageSize: params.pageSize ?? 20,\n          currentPage: params.page ?? 1,\n          totalPages: 0,\n        },\n        error: err.message ?? 'Failed to fetch paginated shows',\n      };\n    }\n  }\n};\n\n/**\n * Fallback implementation for getPaginatedShows that uses direct Supabase queries\n * instead of the RPC. This is used when the RPC fails for any reason.\n */\nconst getFallbackPaginatedShows = async (\n  params: PaginatedShowsParams\n): Promise<PaginatedShowsResult> => {\n  try {\n    const {\n      latitude,\n      longitude,\n      radius = 25,\n      startDate = new Date(),\n      endDate = new Date(Date.now() + 30 * 24 * 60 * 60 * 1000),\n      maxEntryFee = null,\n      categories = null,\n      features = null,\n      pageSize = 20,\n      page = 1,\n    } = params;\n\n    const toIso = (d: Date | string): string =>\n      d instanceof Date ? d.toISOString() : d;\n    \n    console.debug('[showService] getFallbackPaginatedShows executing with params:', {\n      latitude, longitude, radius, \n      startDate: toIso(startDate),\n      endDate: toIso(endDate)\n    });\n    \n    // First get the total count with a separate query\n    let countQuery = supabase\n      .from('shows')\n      .select('id', { count: 'exact' })\n      .eq('status', 'ACTIVE');\n    \n    // Apply date filters\n    countQuery = countQuery.gte('start_date', toIso(startDate) as any);\n    countQuery = countQuery.lte('start_date', toIso(endDate) as any);\n    \n    // Ensure end_date is not in the past\n    const today = new Date();\n    countQuery = countQuery.gte('end_date', today.toISOString() as any);\n    \n    // Apply other filters\n    if (typeof maxEntryFee === 'number') {\n      countQuery = countQuery.lte('entry_fee', maxEntryFee);\n    }\n    \n    if (categories && Array.isArray(categories) && categories.length > 0) {\n      countQuery = countQuery.overlaps('categories', categories);\n    }\n    \n    // Execute count query\n    const { count, error: countError } = await countQuery;\n    \n    if (countError) {\n      console.error('[showService] Error getting count:', countError);\n      throw countError;\n    }\n    \n    // Now get the actual data for this page\n    let dataQuery = supabase\n      .from('shows')\n      .select('*')\n      .eq('status', 'ACTIVE');\n    \n    // Apply the same filters as the count query\n    dataQuery = dataQuery.gte('start_date', toIso(startDate) as any);\n    dataQuery = dataQuery.lte('start_date', toIso(endDate) as any);\n    dataQuery = dataQuery.gte('end_date', today.toISOString() as any);\n    \n    if (typeof maxEntryFee === 'number') {\n      dataQuery = dataQuery.lte('entry_fee', maxEntryFee);\n    }\n    \n    if (categories && Array.isArray(categories) && categories.length > 0) {\n      dataQuery = dataQuery.overlaps('categories', categories);\n    }\n    \n    // Apply pagination\n    dataQuery = dataQuery\n      .order('start_date', { ascending: true })\n      .range((page - 1) * pageSize, page * pageSize - 1);\n    \n    // Execute data query\n    const { data, error: dataError } = await dataQuery;\n    \n    if (dataError) {\n      console.error('[showService] Error getting data:', dataError);\n      throw dataError;\n    }\n    \n    // Filter results for shows within the radius\n    // (since we can't do this in the query without the RPC)\n    let filteredData = data || [];\n\n    /* ------------------------------------------------------------------\n     * Skip distance filtering if we're using the default (0,0) placeholder\n     * coordinates.  Applying the radius filter in that case removes every\n     * show because all real-world coordinates are far from (0,0).\n     * ------------------------------------------------------------------ */\n    const isDefaultCoordinates =\n      Math.abs(latitude) < 0.1 && Math.abs(longitude) < 0.1;\n\n    if (radius && !isDefaultCoordinates) {\n      console.debug(\n        `[showService] Applying distance filtering with coordinates (${latitude}, ${longitude})`\n      );\n\n      filteredData = filteredData.filter(show => {\n        // Skip shows without coordinates\n        if (!show.coordinates || !show.coordinates.coordinates) return false;\n\n        const showLat = show.coordinates.coordinates[1];\n        const showLng = show.coordinates.coordinates[0];\n        const distance = calculateDistance(\n          latitude,\n          longitude,\n          showLat,\n          showLng\n        );\n        return distance <= radius;\n      });\n    } else if (isDefaultCoordinates) {\n      console.debug(\n        `[showService] Skipping distance filtering \u2013 default coordinates detected (${latitude}, ${longitude})`\n      );\n    }\n    \n    console.info(`[showService] getFallbackPaginatedShows found ${filteredData.length} shows (from ${count} total)`);\n    \n    // Map to app format\n    const mappedShows = filteredData.map(mapDbShowToAppShow);\n    \n    // Calculate pagination info\n    const totalCount = count || 0;\n    const totalPages = Math.ceil(totalCount / pageSize);\n    \n    return {\n      data: mappedShows,\n      pagination: {\n        totalCount,\n        pageSize,\n        currentPage: page,\n        totalPages,\n      },\n      error: null,\n    };\n  } catch (err: any) {\n    console.error('[showService] Error in getFallbackPaginatedShows:', err);\n    return {\n      data: [],\n      pagination: {\n        totalCount: 0,\n        pageSize: params.pageSize ?? 20,\n        currentPage: params.page ?? 1,\n        totalPages: 0,\n      },\n      error: err.message ?? 'Failed to fetch paginated shows',\n    };\n  }\n};\n\n/**\n * Completely bypass all location filtering if we're still not getting results.\n * This ensures users always see shows even if there are issues with coordinates.\n */\nconst getAllActiveShowsFallback = async (\n  params: PaginatedShowsParams\n): Promise<PaginatedShowsResult> => {\n  try {\n    const {\n      startDate = new Date(),\n      endDate = new Date(Date.now() + 30 * 24 * 60 * 60 * 1000),\n      pageSize = 20,\n      page = 1,\n    } = params;\n\n    console.warn('[showService] Using emergency getAllActiveShowsFallback without coordinate filtering');\n    \n    const toIso = (d: Date | string): string =>\n      d instanceof Date ? d.toISOString() : d;\n    \n    // Simple query - just get active shows\n    let dataQuery = supabase\n      .from('shows')\n      .select('*')\n      .eq('status', 'ACTIVE');\n    \n    // Apply minimal filtering to ensure we don't show past shows\n    const today = new Date();\n    dataQuery = dataQuery.gte('end_date', today.toISOString() as any);\n    \n    // Only apply date filtering to start date to match what we promise users\n    dataQuery = dataQuery.gte('start_date', toIso(startDate) as any);\n    dataQuery = dataQuery.lte('start_date', toIso(endDate) as any);\n    \n    // Get total count first\n    const { count, error: countError } = await dataQuery.count();\n    \n    if (countError) {\n      console.error('[showService] Error getting count in emergency fallback:', countError);\n      throw countError;\n    }\n    \n    // Now apply pagination to the same query\n    dataQuery = dataQuery\n      .order('start_date', { ascending: true })\n      .range((page - 1) * pageSize, page * pageSize - 1);\n    \n    const { data, error: dataError } = await dataQuery;\n    \n    if (dataError) {\n      console.error('[showService] Error getting data in emergency fallback:', dataError);\n      throw dataError;\n    }\n    \n    console.info(`[showService] Emergency getAllActiveShowsFallback found ${data.length} shows (from ${count} total)`);\n    \n    // Map to app format\n    const mappedShows = data.map(mapDbShowToAppShow);\n    \n    // Calculate pagination info\n    const totalCount = count || 0;\n    const totalPages = Math.ceil(totalCount / pageSize);\n    \n    return {\n      data: mappedShows,\n      pagination: {\n        totalCount,\n        pageSize,\n        currentPage: page,\n        totalPages,\n      },\n      error: null,\n    };\n  } catch (err: any) {\n    console.error('[showService] Error in emergency fallback:', err);\n    return {\n      data: [],\n      pagination: {\n        totalCount: 0,\n        pageSize: params.pageSize ?? 20,\n        currentPage: params.page ?? 1,\n        totalPages: 0,\n      },\n      error: err.message ?? 'Failed to fetch shows',\n    };\n  }\n};\n\n/**\n * Calculate distance between two points using the Haversine formula\n * @returns Distance in miles\n */\nconst calculateDistance = (lat1: number, lon1: number, lat2: number, lon2: number): number => {\n  const R = 3958.8; // Earth's radius in miles\n  const dLat = (lat2 - lat1) * Math.PI / 180;\n  const dLon = (lon2 - lon1) * Math.PI / 180;\n  const a = \n    Math.sin(dLat/2) * Math.sin(dLat/2) +\n    Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * \n    Math.sin(dLon/2) * Math.sin(dLon/2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n  return R * c;\n};\n\n/**\n * Fetch a single show by ID.\n */\nexport const getShowById = async (\n  id: string\n): Promise<{ data: Show | null; error: string | null }> => {\n  try {\n    const { data, error } = await supabase\n      .from('shows')\n      .select('*')\n      .eq('id', id)\n      .single();\n\n    if (error) {\n      throw error;\n    }\n\n    if (!data) {\n      return { data: null, error: 'Show not found' };\n    }\n\n    return { data: mapDbShowToAppShow(data), error: null };\n  } catch (err: any) {\n    console.error('Error fetching show by id:', err);\n    return { data: null, error: err.message ?? 'Unknown error' };\n  }\n};\n\n/**\n * Create a new show (stub)\n */\nexport const createShow = () => {\n  throw new Error('createShow not implemented');\n};\n\n/**\n * Fetch upcoming (or otherwise date-filtered) shows a user is planning to attend.\n *\n * Looks up the `show_participants` table for the supplied `userId` and then\n * fetches matching shows from `shows`, with optional date-range constraints.\n *\n * @param params - { userId, startDate, endDate? }\n * @returns { data, error } shape \u2013 `data` will be an array of `Show`s.\n */\nexport const getUpcomingShows = async (params: {\n  userId: string;\n  startDate: Date | string;\n  endDate?: Date | string;\n}): Promise<{ data: Show[] | null; error: string | null }> => {\n  try {\n    const { userId, startDate, endDate } = params;\n\n    if (!userId) {\n      return { data: null, error: 'Invalid userId' };\n    }\n\n    /* -----------------------------------------------------------\n     * 1. Fetch show IDs the user plans to attend\n     * --------------------------------------------------------- */\n    const { data: participantRows, error: participantError } = await supabase\n      .from('show_participants')\n      // use lowercase column names in db\n      .select('showid')\n      .eq('userid', userId);\n\n    if (participantError) {\n      throw participantError;\n    }\n\n    if (!participantRows || participantRows.length === 0) {\n      // User is not signed up for any shows\n      return { data: [], error: null };\n    }\n\n    const showIds = participantRows\n      .map((row: any) => row.showid)\n      .filter(Boolean);\n\n    /* -----------------------------------------------------------\n     * 2. Fetch shows matching those IDs + date filters\n     * --------------------------------------------------------- */\n    let showQuery = supabase\n      .from('shows')\n      .select('*')\n      .in('id', showIds)\n      .order('start_date', { ascending: true });\n\n    if (startDate) {\n      showQuery = showQuery.gte('start_date', startDate as any);\n    }\n    if (endDate) {\n      showQuery = showQuery.lte('end_date', endDate as any);\n    }\n    \n    // Also ensure the end_date is not in the past\n    const today = new Date();\n    showQuery = showQuery.gte('end_date', today.toISOString() as any);\n\n    const { data: showRows, error: showError } = await showQuery;\n\n    if (showError) {\n      throw showError;\n    }\n    \n    // Ensure we're not showing past shows\n    let filteredData = showRows;\n    if (Array.isArray(filteredData)) {\n      const today = new Date();\n      filteredData = filteredData.filter(show => {\n        // Parse the end date, ensuring timezone issues don't cause off-by-one errors\n        const showEndDate = new Date(show.end_date);\n        return showEndDate >= today;\n      });\n      \n      console.debug(`[showService] Filtered out past shows. ${filteredData.length} shows remaining.`);\n    }\n\n    const mapped = Array.isArray(filteredData)\n      ? filteredData.map(mapDbShowToAppShow)\n      : [];\n\n    return { data: mapped, error: null };\n  } catch (err: any) {\n    console.error('Error fetching upcoming shows for user:', err);\n    return { data: null, error: err.message ?? 'Unknown error' };\n  }\n};\n\n/**\n * Claims a show for a show organizer.\n *\n * 1. Marks the show row as claimed (`claimed`, `claimed_by`, `claimed_at`).\n * 2. Inserts a row in the `show_organizers` join table so we can\n *    easily query which organisers manage which shows.\n *\n * On success returns `{ success: true, data: <updated show row> }`\n * On failure returns `{ success: false, message: <reason> }`\n */\nexport const claimShow = async (\n  showId: string,\n  userId: string\n): Promise<{ success: boolean; data?: any; message?: string }> => {\n  try {\n    /* --------------------------------------------------------\n     * 0. Verify user is a (paid) show organiser\n     * ------------------------------------------------------ */\n    const { data: profile, error: profileErr } = await supabase\n      .from('profiles')\n      .select('role, is_paid')\n      .eq('id', userId)\n      .single();\n\n    if (profileErr) throw profileErr;\n    if (!profile) {\n      return {\n        success: false,\n        message: 'User profile not found',\n      };\n    }\n\n    const roleOk =\n      (profile.role ?? '').toString().toLowerCase() ===\n      'show_organizer';\n    const paidOk =\n      profile.is_paid === undefined\n        ? true // tolerate missing column\n        : !!profile.is_paid;\n\n    if (!roleOk || !paidOk) {\n      return {\n        success: false,\n        message:\n          'Only paid Show Organizers can claim shows. Please upgrade your plan.',\n      };\n    }\n\n    /* --------------------------------------------------------\n     * 1. Atomically flag the show as claimed IF not yet claimed\n     *    \u2014 PostgREST will return 0 rows if the condition fails.\n     * ------------------------------------------------------ */\n    const { data: updatedShow, error: updateError, count } =\n      await supabase\n        .from('shows')\n        .update({\n          claimed: true,\n          claimed_by: userId,\n          claimed_at: new Date().toISOString(),\n        })\n        .eq('id', showId)\n        .or('claimed.is.null,claimed.eq.false') // only update unclaimed\n        .select('*', { count: 'exact' })\n        .single();\n\n    if (updateError) throw updateError;\n\n    if (!updatedShow || count === 0) {\n      return {\n        success: false,\n        message: 'Show has already been claimed by another organiser.',\n      };\n    }\n\n    /* --------------------------------------------------------\n     * 2. Insert organiser \u2194 show relation (ignore duplicates)\n     * ------------------------------------------------------ */\n    const { error: orgError } = await supabase\n      .from('show_organizers')\n      .insert(\n        {\n          show_id: showId,\n          user_id: userId,\n          role: 'owner',\n          created_at: new Date().toISOString(),\n        },\n        { ignoreDuplicates: true }\n      );\n\n    if (orgError) throw orgError;\n\n    return { success: true, data: updatedShow };\n  } catch (err: any) {\n    console.error('API error in claimShow:', err);\n    return { success: false, message: err.message || 'Failed to claim show' };\n  }\n};\n\n/**\n * Update an existing show (stub)\n */\nexport const updateShow = () => {\n  throw new Error('updateShow not implemented');\n};\n\n/**\n * Delete a show (stub)\n */\nexport const deleteShow = () => {\n  throw new Error('deleteShow not implemented');\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "66db1496471be5ead0b9c8dbce855ec0f6ce9a6d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2e6bcnjtba = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2e6bcnjtba();
cov_2e6bcnjtba().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2e6bcnjtba().s[1]++;
exports.deleteShow = exports.updateShow = exports.claimShow = exports.getUpcomingShows = exports.createShow = exports.getShowById = exports.getPaginatedShows = exports.getShows = void 0;
const supabase_1 =
/* istanbul ignore next */
(cov_2e6bcnjtba().s[2]++, require("../supabase"));
/**
 * Convert a raw Supabase row into an app `Show` object.
 */
/* ------------------------------------------------------------------ */
/* Debug helper – track a single show end-to-end                        */
/* ------------------------------------------------------------------ */
const DEBUG_SHOW_ID =
/* istanbul ignore next */
(cov_2e6bcnjtba().s[3]++, 'cd175b33-3144-4ccb-9d85-94490446bf26');
/* istanbul ignore next */
cov_2e6bcnjtba().s[4]++;
const mapDbShowToAppShow = row => {
  /* istanbul ignore next */
  cov_2e6bcnjtba().f[0]++;
  cov_2e6bcnjtba().s[5]++;
  return {
    id: row.id,
    title: row.title,
    location: row.location,
    address: row.address,
    startDate: row.start_date,
    endDate: row.end_date,
    startTime: row.start_time,
    endTime: row.end_time,
    entryFee: row.entry_fee,
    description:
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[0][0]++, row.description) ??
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[0][1]++, undefined),
    imageUrl:
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[1][0]++, row.image_url) ??
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[1][1]++, undefined),
    rating:
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[2][0]++, row.rating) ??
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[2][1]++, undefined),
    // Prefer explicit latitude / longitude columns (added in updated Supabase functions);
    // fall back to legacy PostGIS object when they are not present.
    coordinates:
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[4][0]++, typeof row.latitude === 'number') &&
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[4][1]++, typeof row.longitude === 'number') ?
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[3][0]++, {
      latitude: row.latitude,
      longitude: row.longitude
    }) :
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[3][1]++,
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[6][0]++, row.coordinates) &&
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[6][1]++, row.coordinates.coordinates) &&
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[6][2]++, Array.isArray(row.coordinates.coordinates)) &&
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[6][3]++, row.coordinates.coordinates.length >= 2) ?
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[5][0]++, {
      latitude: row.coordinates.coordinates[1],
      longitude: row.coordinates.coordinates[0]
    }) :
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[5][1]++, undefined)),
    status: row.status,
    organizerId: row.organizer_id,
    features:
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[7][0]++, row.features) ??
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[7][1]++, {}),
    categories:
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[8][0]++, row.categories) ??
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[8][1]++, []),
    createdAt: row.created_at,
    updatedAt: row.updated_at,
    seriesId: row.series_id,
    websiteUrl: row.website_url
  };
};
/* istanbul ignore next */
cov_2e6bcnjtba().s[6]++;
const getShows = async (filters =
/* istanbul ignore next */
(cov_2e6bcnjtba().b[9][0]++, {})) => {
  /* istanbul ignore next */
  cov_2e6bcnjtba().f[1]++;
  cov_2e6bcnjtba().s[7]++;
  try {
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[8]++;
    // Ensure filters is a valid object
    filters =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[10][0]++, filters) ||
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[10][1]++, {});
    /* -----------------------------------------------------------
     * Derive **normalized** filter values so every query path
     * (RPCs & basic SELECT) uses the exact same parameters.
     * --------------------------------------------------------- */
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[9]++;
    const toIso = d => {
      /* istanbul ignore next */
      cov_2e6bcnjtba().f[2]++;
      cov_2e6bcnjtba().s[10]++;
      return d instanceof Date ?
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[11][0]++, d.toISOString()) :
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[11][1]++, d);
    };
    // Default date range: today → +30 days (ISO strings)
    const startDate =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[11]++, toIso(
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[12][0]++, filters.startDate) ??
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[12][1]++, new Date())));
    const endDate =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[12]++, toIso(
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[13][0]++, filters.endDate) ??
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[13][1]++, new Date(Date.now() + 30 * 24 * 60 * 60 * 1000))));
    // Default radius: 25 mi
    const radius =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[13]++,
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[15][0]++, typeof filters.radius === 'number') &&
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[15][1]++, !isNaN(filters.radius)) ?
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[14][0]++, filters.radius) :
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[14][1]++, 25));
    /* -----------------------------------------------------------
     * 1. Geo-aware query via nearby_shows RPC when lat/lng present
     * --------------------------------------------------------- */
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[14]++;
    if (
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[17][0]++, typeof filters.latitude === 'number') &&
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[17][1]++, typeof filters.longitude === 'number') &&
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[17][2]++, !isNaN(filters.latitude)) &&
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[17][3]++, !isNaN(filters.longitude))) {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[16][0]++;
      const radius =
      /* istanbul ignore next */
      (cov_2e6bcnjtba().s[15]++, typeof filters.radius === 'number' ?
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[18][0]++, filters.radius) :
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[18][1]++, 25));
      /* ---------- Sanity-check lat / lng values ---------- */
      /* istanbul ignore next */
      cov_2e6bcnjtba().s[16]++;
      if (
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[20][0]++, Math.abs(filters.latitude) > 90) ||
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[20][1]++, Math.abs(filters.longitude) > 180)) {
        /* istanbul ignore next */
        cov_2e6bcnjtba().b[19][0]++;
        cov_2e6bcnjtba().s[17]++;
        console.warn('[showService] Suspicious coordinates detected – latitude / longitude might be swapped:', {
          latitude: filters.latitude,
          longitude: filters.longitude
        });
      } else
      /* istanbul ignore next */
      {
        cov_2e6bcnjtba().b[19][1]++;
      }
      cov_2e6bcnjtba().s[18]++;
      console.debug('[showService] Calling nearby_shows with params:', {
        lat: filters.latitude,
        long: filters.longitude,
        radius_miles: radius,
        start_date: startDate,
        end_date: endDate,
        debugShowId: DEBUG_SHOW_ID // helpful when grepping logs
      });
      // Call the new nearby_shows function as primary method
      const {
        data: nearbyData,
        error: nearbyError
      } =
      /* istanbul ignore next */
      (cov_2e6bcnjtba().s[19]++, await supabase_1.supabase.rpc('nearby_shows', {
        lat: filters.latitude,
        long: filters.longitude,
        radius_miles: radius,
        start_date: startDate,
        // Always include a date range
        end_date: endDate // to filter out past shows
      }));
      /* istanbul ignore next */
      cov_2e6bcnjtba().s[20]++;
      if (nearbyError) {
        /* istanbul ignore next */
        cov_2e6bcnjtba().b[21][0]++;
        cov_2e6bcnjtba().s[21]++;
        console.warn('[showService] nearby_shows RPC failed – attempting fallback', nearbyError.message);
      } else {
        /* istanbul ignore next */
        cov_2e6bcnjtba().b[21][1]++;
        cov_2e6bcnjtba().s[22]++;
        console.info(`[showService] nearby_shows returned ${
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[23][0]++, nearbyData) &&
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[23][1]++, Array.isArray(nearbyData)) ?
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[22][0]++, nearbyData.length) :
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[22][1]++, 0)} show(s)`);
        /* ----- DEBUG: Is target show present in raw nearby_shows data? ---- */
        /* istanbul ignore next */
        cov_2e6bcnjtba().s[23]++;
        if (Array.isArray(nearbyData)) {
          /* istanbul ignore next */
          cov_2e6bcnjtba().b[24][0]++;
          const found =
          /* istanbul ignore next */
          (cov_2e6bcnjtba().s[24]++, nearbyData.some(s => {
            /* istanbul ignore next */
            cov_2e6bcnjtba().f[3]++;
            cov_2e6bcnjtba().s[25]++;
            return s.id === DEBUG_SHOW_ID;
          }));
          /* istanbul ignore next */
          cov_2e6bcnjtba().s[26]++;
          console.debug(`[showService][DEBUG_SHOW] Target show ${found ?
          /* istanbul ignore next */
          (cov_2e6bcnjtba().b[25][0]++, 'FOUND') :
          /* istanbul ignore next */
          (cov_2e6bcnjtba().b[25][1]++, 'NOT found')} in raw nearby_shows payload`);
          // If found, get the show details for further debugging
          /* istanbul ignore next */
          cov_2e6bcnjtba().s[27]++;
          if (found) {
            /* istanbul ignore next */
            cov_2e6bcnjtba().b[26][0]++;
            const targetShow =
            /* istanbul ignore next */
            (cov_2e6bcnjtba().s[28]++, nearbyData.find(s => {
              /* istanbul ignore next */
              cov_2e6bcnjtba().f[4]++;
              cov_2e6bcnjtba().s[29]++;
              return s.id === DEBUG_SHOW_ID;
            }));
            /* istanbul ignore next */
            cov_2e6bcnjtba().s[30]++;
            console.debug(`[showService][DEBUG_SHOW] Target show details:`, {
              id: targetShow.id,
              title: targetShow.title,
              start_date: targetShow.start_date,
              end_date: targetShow.end_date,
              status: targetShow.status
            });
          } else
          /* istanbul ignore next */
          {
            cov_2e6bcnjtba().b[26][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_2e6bcnjtba().b[24][1]++;
        }
        // Apply additional filters that weren't handled by the RPC
        let filteredData =
        /* istanbul ignore next */
        (cov_2e6bcnjtba().s[31]++, nearbyData);
        // Ensure we're not showing past shows
        /* istanbul ignore next */
        cov_2e6bcnjtba().s[32]++;
        if (Array.isArray(filteredData)) {
          /* istanbul ignore next */
          cov_2e6bcnjtba().b[27][0]++;
          const today =
          /* istanbul ignore next */
          (cov_2e6bcnjtba().s[33]++, new Date());
          /* istanbul ignore next */
          cov_2e6bcnjtba().s[34]++;
          console.debug(`[showService][DEBUG_SHOW] Today's date for filtering: ${today.toISOString()}`);
          // Check if target show exists before filtering
          const targetShowBeforeFilter =
          /* istanbul ignore next */
          (cov_2e6bcnjtba().s[35]++, filteredData.find(s => {
            /* istanbul ignore next */
            cov_2e6bcnjtba().f[5]++;
            cov_2e6bcnjtba().s[36]++;
            return s.id === DEBUG_SHOW_ID;
          }));
          /* istanbul ignore next */
          cov_2e6bcnjtba().s[37]++;
          if (targetShowBeforeFilter) {
            /* istanbul ignore next */
            cov_2e6bcnjtba().b[28][0]++;
            const targetEndDate =
            /* istanbul ignore next */
            (cov_2e6bcnjtba().s[38]++, new Date(targetShowBeforeFilter.end_date));
            const isPastShow =
            /* istanbul ignore next */
            (cov_2e6bcnjtba().s[39]++, targetEndDate < today);
            /* istanbul ignore next */
            cov_2e6bcnjtba().s[40]++;
            console.debug(`[showService][DEBUG_SHOW] Target show end_date: ${targetEndDate.toISOString()} | Today: ${today.toISOString()} | Is past show? ${isPastShow ?
            /* istanbul ignore next */
            (cov_2e6bcnjtba().b[29][0]++, 'YES') :
            /* istanbul ignore next */
            (cov_2e6bcnjtba().b[29][1]++, 'NO')}`);
          } else
          /* istanbul ignore next */
          {
            cov_2e6bcnjtba().b[28][1]++;
          }
          cov_2e6bcnjtba().s[41]++;
          filteredData = filteredData.filter(show => {
            /* istanbul ignore next */
            cov_2e6bcnjtba().f[6]++;
            // Parse the end date, ensuring timezone issues don't cause off-by-one errors
            const showEndDate =
            /* istanbul ignore next */
            (cov_2e6bcnjtba().s[42]++, new Date(show.end_date));
            const isValid =
            /* istanbul ignore next */
            (cov_2e6bcnjtba().s[43]++, showEndDate >= today);
            // Debug logging specifically for our target show
            /* istanbul ignore next */
            cov_2e6bcnjtba().s[44]++;
            if (show.id === DEBUG_SHOW_ID) {
              /* istanbul ignore next */
              cov_2e6bcnjtba().b[30][0]++;
              cov_2e6bcnjtba().s[45]++;
              console.debug(`[showService][DEBUG_SHOW] Filtering decision: show.end_date (${showEndDate.toISOString()}) ${isValid ?
              /* istanbul ignore next */
              (cov_2e6bcnjtba().b[31][0]++, '>=') :
              /* istanbul ignore next */
              (cov_2e6bcnjtba().b[31][1]++, '<')} today (${today.toISOString()}) => ${isValid ?
              /* istanbul ignore next */
              (cov_2e6bcnjtba().b[32][0]++, 'KEEP') :
              /* istanbul ignore next */
              (cov_2e6bcnjtba().b[32][1]++, 'FILTER OUT')}`);
            } else
            /* istanbul ignore next */
            {
              cov_2e6bcnjtba().b[30][1]++;
            }
            cov_2e6bcnjtba().s[46]++;
            return isValid;
          });
          /* istanbul ignore next */
          cov_2e6bcnjtba().s[47]++;
          console.debug(`[showService] Filtered out past shows. ${filteredData.length} shows remaining.`);
        } else
        /* istanbul ignore next */
        {
          cov_2e6bcnjtba().b[27][1]++;
        }
        // Filter by max entry fee if specified
        cov_2e6bcnjtba().s[48]++;
        if (
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[34][0]++, typeof filters.maxEntryFee === 'number') &&
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[34][1]++, Array.isArray(filteredData))) {
          /* istanbul ignore next */
          cov_2e6bcnjtba().b[33][0]++;
          cov_2e6bcnjtba().s[49]++;
          filteredData = filteredData.filter(show => {
            /* istanbul ignore next */
            cov_2e6bcnjtba().f[7]++;
            cov_2e6bcnjtba().s[50]++;
            return show.entry_fee <= filters.maxEntryFee;
          });
        } else
        /* istanbul ignore next */
        {
          cov_2e6bcnjtba().b[33][1]++;
        }
        // Filter by categories if specified
        cov_2e6bcnjtba().s[51]++;
        if (
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[36][0]++, filters.categories) &&
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[36][1]++, Array.isArray(filters.categories)) &&
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[36][2]++, filters.categories.length > 0) &&
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[36][3]++, Array.isArray(filteredData))) {
          /* istanbul ignore next */
          cov_2e6bcnjtba().b[35][0]++;
          cov_2e6bcnjtba().s[52]++;
          filteredData = filteredData.filter(show => {
            /* istanbul ignore next */
            cov_2e6bcnjtba().f[8]++;
            cov_2e6bcnjtba().s[53]++;
            return /* istanbul ignore next */(cov_2e6bcnjtba().b[37][0]++, show.categories) &&
            /* istanbul ignore next */
            (cov_2e6bcnjtba().b[37][1]++, filters.categories.some(cat => {
              /* istanbul ignore next */
              cov_2e6bcnjtba().f[9]++;
              cov_2e6bcnjtba().s[54]++;
              return show.categories.includes(cat);
            }));
          });
        } else
        /* istanbul ignore next */
        {
          cov_2e6bcnjtba().b[35][1]++;
        }
        // Filter by features if specified
        cov_2e6bcnjtba().s[55]++;
        if (
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[39][0]++, filters.features) &&
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[39][1]++, Array.isArray(filters.features)) &&
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[39][2]++, filters.features.length > 0) &&
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[39][3]++, Array.isArray(filteredData))) {
          /* istanbul ignore next */
          cov_2e6bcnjtba().b[38][0]++;
          cov_2e6bcnjtba().s[56]++;
          filteredData = filteredData.filter(show => {
            /* istanbul ignore next */
            cov_2e6bcnjtba().f[10]++;
            cov_2e6bcnjtba().s[57]++;
            return /* istanbul ignore next */(cov_2e6bcnjtba().b[40][0]++, show.features) &&
            /* istanbul ignore next */
            (cov_2e6bcnjtba().b[40][1]++, filters.features.every(feature => {
              /* istanbul ignore next */
              cov_2e6bcnjtba().f[11]++;
              cov_2e6bcnjtba().s[58]++;
              return show.features[feature] === true;
            }));
          });
        } else
        /* istanbul ignore next */
        {
          cov_2e6bcnjtba().b[38][1]++;
        }
        /* ----- DEBUG: Is target show present after client-side filters? ---- */
        cov_2e6bcnjtba().s[59]++;
        if (Array.isArray(filteredData)) {
          /* istanbul ignore next */
          cov_2e6bcnjtba().b[41][0]++;
          const foundAfter =
          /* istanbul ignore next */
          (cov_2e6bcnjtba().s[60]++, filteredData.some(s => {
            /* istanbul ignore next */
            cov_2e6bcnjtba().f[12]++;
            cov_2e6bcnjtba().s[61]++;
            return s.id === DEBUG_SHOW_ID;
          }));
          /* istanbul ignore next */
          cov_2e6bcnjtba().s[62]++;
          console.debug(`[showService][DEBUG_SHOW] Target show ${foundAfter ?
          /* istanbul ignore next */
          (cov_2e6bcnjtba().b[42][0]++, 'REMAINS') :
          /* istanbul ignore next */
          (cov_2e6bcnjtba().b[42][1]++, 'WAS FILTERED OUT')} after nearby_shows client-side filters`);
        } else
        /* istanbul ignore next */
        {
          cov_2e6bcnjtba().b[41][1]++;
        }
        cov_2e6bcnjtba().s[63]++;
        return Array.isArray(filteredData) ?
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[43][0]++, filteredData.map(mapDbShowToAppShow)) :
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[43][1]++, []);
      }
      /* -------------------------------------------------------
       * 1b. Fallback to find_filtered_shows if nearby_shows fails
       * ----------------------------------------------------- */
      /* istanbul ignore next */
      cov_2e6bcnjtba().s[64]++;
      console.debug('[showService] Falling back to find_filtered_shows with params:', {
        center_lat: filters.latitude,
        center_lng: filters.longitude,
        radius_miles: radius,
        start_date: startDate,
        end_date: endDate,
        max_entry_fee:
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[44][0]++, filters.maxEntryFee) ??
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[44][1]++, null),
        show_categories:
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[45][0]++, filters.categories) ??
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[45][1]++, null),
        show_features:
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[46][0]++, filters.features) ??
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[46][1]++, null)
      });
      const {
        data: rpcData,
        error: rpcError
      } =
      /* istanbul ignore next */
      (cov_2e6bcnjtba().s[65]++, await supabase_1.supabase.rpc('find_filtered_shows', {
        // Primary/filter-aware RPC parameters
        center_lat: typeof filters.latitude === 'number' ?
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[47][0]++, filters.latitude) :
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[47][1]++, null),
        center_lng: typeof filters.longitude === 'number' ?
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[48][0]++, filters.longitude) :
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[48][1]++, null),
        radius_miles: typeof filters.radius === 'number' ?
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[49][0]++, filters.radius) :
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[49][1]++, 25),
        start_date: startDate,
        end_date: endDate,
        max_entry_fee: typeof filters.maxEntryFee === 'number' ?
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[50][0]++, filters.maxEntryFee) :
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[50][1]++, null),
        show_categories: Array.isArray(filters.categories) ?
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[51][0]++, filters.categories) :
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[51][1]++, null),
        show_features:
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[52][0]++, filters.features) ||
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[52][1]++, null)
      }));
      /* istanbul ignore next */
      cov_2e6bcnjtba().s[66]++;
      if (rpcError) {
        /* istanbul ignore next */
        cov_2e6bcnjtba().b[53][0]++;
        cov_2e6bcnjtba().s[67]++;
        console.warn('[showService] find_filtered_shows RPC failed – attempting second fallback', rpcError.message);
      } else {
        /* istanbul ignore next */
        cov_2e6bcnjtba().b[53][1]++;
        cov_2e6bcnjtba().s[68]++;
        console.info(`[showService] find_filtered_shows returned ${
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[55][0]++, rpcData) &&
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[55][1]++, Array.isArray(rpcData)) ?
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[54][0]++, rpcData.length) :
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[54][1]++, 0)} show(s)`);
        /* ----- DEBUG: Target show in raw find_filtered_shows payload? ----- */
        /* istanbul ignore next */
        cov_2e6bcnjtba().s[69]++;
        if (Array.isArray(rpcData)) {
          /* istanbul ignore next */
          cov_2e6bcnjtba().b[56][0]++;
          const foundRaw =
          /* istanbul ignore next */
          (cov_2e6bcnjtba().s[70]++, rpcData.some(s => {
            /* istanbul ignore next */
            cov_2e6bcnjtba().f[13]++;
            cov_2e6bcnjtba().s[71]++;
            return s.id === DEBUG_SHOW_ID;
          }));
          /* istanbul ignore next */
          cov_2e6bcnjtba().s[72]++;
          console.debug(`[showService][DEBUG_SHOW] Target show ${foundRaw ?
          /* istanbul ignore next */
          (cov_2e6bcnjtba().b[57][0]++, 'FOUND') :
          /* istanbul ignore next */
          (cov_2e6bcnjtba().b[57][1]++, 'NOT found')} in raw find_filtered_shows payload`);
          // If found, get the show details for further debugging
          /* istanbul ignore next */
          cov_2e6bcnjtba().s[73]++;
          if (foundRaw) {
            /* istanbul ignore next */
            cov_2e6bcnjtba().b[58][0]++;
            const targetShow =
            /* istanbul ignore next */
            (cov_2e6bcnjtba().s[74]++, rpcData.find(s => {
              /* istanbul ignore next */
              cov_2e6bcnjtba().f[14]++;
              cov_2e6bcnjtba().s[75]++;
              return s.id === DEBUG_SHOW_ID;
            }));
            /* istanbul ignore next */
            cov_2e6bcnjtba().s[76]++;
            console.debug(`[showService][DEBUG_SHOW] Target show details from find_filtered_shows:`, {
              id: targetShow.id,
              title: targetShow.title,
              start_date: targetShow.start_date,
              end_date: targetShow.end_date,
              status: targetShow.status
            });
          } else
          /* istanbul ignore next */
          {
            cov_2e6bcnjtba().b[58][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_2e6bcnjtba().b[56][1]++;
        }
        // Ensure we're not showing past shows
        let filteredData =
        /* istanbul ignore next */
        (cov_2e6bcnjtba().s[77]++, rpcData);
        /* istanbul ignore next */
        cov_2e6bcnjtba().s[78]++;
        if (Array.isArray(filteredData)) {
          /* istanbul ignore next */
          cov_2e6bcnjtba().b[59][0]++;
          const today =
          /* istanbul ignore next */
          (cov_2e6bcnjtba().s[79]++, new Date());
          /* istanbul ignore next */
          cov_2e6bcnjtba().s[80]++;
          console.debug(`[showService][DEBUG_SHOW] Today's date for filtering (find_filtered): ${today.toISOString()}`);
          // Check if target show exists before filtering
          const targetShowBeforeFilter =
          /* istanbul ignore next */
          (cov_2e6bcnjtba().s[81]++, filteredData.find(s => {
            /* istanbul ignore next */
            cov_2e6bcnjtba().f[15]++;
            cov_2e6bcnjtba().s[82]++;
            return s.id === DEBUG_SHOW_ID;
          }));
          /* istanbul ignore next */
          cov_2e6bcnjtba().s[83]++;
          if (targetShowBeforeFilter) {
            /* istanbul ignore next */
            cov_2e6bcnjtba().b[60][0]++;
            const targetEndDate =
            /* istanbul ignore next */
            (cov_2e6bcnjtba().s[84]++, new Date(targetShowBeforeFilter.end_date));
            const isPastShow =
            /* istanbul ignore next */
            (cov_2e6bcnjtba().s[85]++, targetEndDate < today);
            /* istanbul ignore next */
            cov_2e6bcnjtba().s[86]++;
            console.debug(`[showService][DEBUG_SHOW] Target show end_date (find_filtered): ${targetEndDate.toISOString()} | Today: ${today.toISOString()} | Is past show? ${isPastShow ?
            /* istanbul ignore next */
            (cov_2e6bcnjtba().b[61][0]++, 'YES') :
            /* istanbul ignore next */
            (cov_2e6bcnjtba().b[61][1]++, 'NO')}`);
          } else
          /* istanbul ignore next */
          {
            cov_2e6bcnjtba().b[60][1]++;
          }
          cov_2e6bcnjtba().s[87]++;
          filteredData = filteredData.filter(show => {
            /* istanbul ignore next */
            cov_2e6bcnjtba().f[16]++;
            // Parse the end date, ensuring timezone issues don't cause off-by-one errors
            const showEndDate =
            /* istanbul ignore next */
            (cov_2e6bcnjtba().s[88]++, new Date(show.end_date));
            const isValid =
            /* istanbul ignore next */
            (cov_2e6bcnjtba().s[89]++, showEndDate >= today);
            // Debug logging specifically for our target show
            /* istanbul ignore next */
            cov_2e6bcnjtba().s[90]++;
            if (show.id === DEBUG_SHOW_ID) {
              /* istanbul ignore next */
              cov_2e6bcnjtba().b[62][0]++;
              cov_2e6bcnjtba().s[91]++;
              console.debug(`[showService][DEBUG_SHOW] Filtering decision (find_filtered): show.end_date (${showEndDate.toISOString()}) ${isValid ?
              /* istanbul ignore next */
              (cov_2e6bcnjtba().b[63][0]++, '>=') :
              /* istanbul ignore next */
              (cov_2e6bcnjtba().b[63][1]++, '<')} today (${today.toISOString()}) => ${isValid ?
              /* istanbul ignore next */
              (cov_2e6bcnjtba().b[64][0]++, 'KEEP') :
              /* istanbul ignore next */
              (cov_2e6bcnjtba().b[64][1]++, 'FILTER OUT')}`);
            } else
            /* istanbul ignore next */
            {
              cov_2e6bcnjtba().b[62][1]++;
            }
            cov_2e6bcnjtba().s[92]++;
            return isValid;
          });
          /* istanbul ignore next */
          cov_2e6bcnjtba().s[93]++;
          console.debug(`[showService] Filtered out past shows. ${filteredData.length} shows remaining.`);
        } else
        /* istanbul ignore next */
        {
          cov_2e6bcnjtba().b[59][1]++;
        }
        /* ----- DEBUG: Target show after filters (find_filtered_shows) ----- */
        cov_2e6bcnjtba().s[94]++;
        if (Array.isArray(filteredData)) {
          /* istanbul ignore next */
          cov_2e6bcnjtba().b[65][0]++;
          const foundFiltered =
          /* istanbul ignore next */
          (cov_2e6bcnjtba().s[95]++, filteredData.some(s => {
            /* istanbul ignore next */
            cov_2e6bcnjtba().f[17]++;
            cov_2e6bcnjtba().s[96]++;
            return s.id === DEBUG_SHOW_ID;
          }));
          /* istanbul ignore next */
          cov_2e6bcnjtba().s[97]++;
          console.debug(`[showService][DEBUG_SHOW] Target show ${foundFiltered ?
          /* istanbul ignore next */
          (cov_2e6bcnjtba().b[66][0]++, 'REMAINS') :
          /* istanbul ignore next */
          (cov_2e6bcnjtba().b[66][1]++, 'WAS FILTERED OUT')} after find_filtered_shows client-side filters`);
        } else
        /* istanbul ignore next */
        {
          cov_2e6bcnjtba().b[65][1]++;
        }
        cov_2e6bcnjtba().s[98]++;
        return Array.isArray(filteredData) ?
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[67][0]++, filteredData.map(mapDbShowToAppShow)) :
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[67][1]++, []);
      }
      /* -------------------------------------------------------
       * 1c. Fallback to simple radius-only RPC if the above fails
       * ----------------------------------------------------- */
      const {
        data: fbData,
        error: fbError
      } =
      /* istanbul ignore next */
      (cov_2e6bcnjtba().s[99]++, await supabase_1.supabase.rpc('find_shows_within_radius', {
        center_lat: typeof filters.latitude === 'number' ?
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[68][0]++, filters.latitude) :
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[68][1]++, null),
        center_lng: typeof filters.longitude === 'number' ?
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[69][0]++, filters.longitude) :
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[69][1]++, null),
        radius_miles: radius
      }));
      /* istanbul ignore next */
      cov_2e6bcnjtba().s[100]++;
      if (fbError) {
        /* istanbul ignore next */
        cov_2e6bcnjtba().b[70][0]++;
        cov_2e6bcnjtba().s[101]++;
        console.warn('[showService] find_shows_within_radius fallback failed – will use basic query', fbError.message);
        // fall through to non-spatial query below
      } else {
        /* istanbul ignore next */
        cov_2e6bcnjtba().b[70][1]++;
        cov_2e6bcnjtba().s[102]++;
        console.debug('[showService] find_shows_within_radius params:', {
          center_lat: filters.latitude,
          center_lng: filters.longitude,
          radius_miles: radius
        });
        /* istanbul ignore next */
        cov_2e6bcnjtba().s[103]++;
        console.info(`[showService] find_shows_within_radius returned ${
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[72][0]++, fbData) &&
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[72][1]++, Array.isArray(fbData)) ?
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[71][0]++, fbData.length) :
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[71][1]++, 0)} show(s)`);
        // Apply date filtering since this RPC doesn't do it
        let filteredData =
        /* istanbul ignore next */
        (cov_2e6bcnjtba().s[104]++, Array.isArray(fbData) ?
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[73][0]++, fbData) :
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[73][1]++, []));
        // Ensure we're not showing past shows
        /* istanbul ignore next */
        cov_2e6bcnjtba().s[105]++;
        if (Array.isArray(filteredData)) {
          /* istanbul ignore next */
          cov_2e6bcnjtba().b[74][0]++;
          const today =
          /* istanbul ignore next */
          (cov_2e6bcnjtba().s[106]++, new Date());
          /* istanbul ignore next */
          cov_2e6bcnjtba().s[107]++;
          filteredData = filteredData.filter(show => {
            /* istanbul ignore next */
            cov_2e6bcnjtba().f[18]++;
            // Parse the end date, ensuring timezone issues don't cause off-by-one errors
            const showEndDate =
            /* istanbul ignore next */
            (cov_2e6bcnjtba().s[108]++, new Date(show.end_date));
            /* istanbul ignore next */
            cov_2e6bcnjtba().s[109]++;
            return showEndDate >= today;
          });
          /* istanbul ignore next */
          cov_2e6bcnjtba().s[110]++;
          console.debug(`[showService] Filtered out past shows. ${filteredData.length} shows remaining.`);
        } else
        /* istanbul ignore next */
        {
          cov_2e6bcnjtba().b[74][1]++;
        }
        // Apply date range filtering
        cov_2e6bcnjtba().s[111]++;
        filteredData = filteredData.filter(show => {
          /* istanbul ignore next */
          cov_2e6bcnjtba().f[19]++;
          const showStartDate =
          /* istanbul ignore next */
          (cov_2e6bcnjtba().s[112]++, new Date(show.start_date));
          const filterStartDate =
          /* istanbul ignore next */
          (cov_2e6bcnjtba().s[113]++, new Date(startDate));
          const filterEndDate =
          /* istanbul ignore next */
          (cov_2e6bcnjtba().s[114]++, new Date(endDate));
          /* istanbul ignore next */
          cov_2e6bcnjtba().s[115]++;
          return /* istanbul ignore next */(cov_2e6bcnjtba().b[75][0]++, showStartDate >= filterStartDate) &&
          /* istanbul ignore next */
          (cov_2e6bcnjtba().b[75][1]++, showStartDate <= filterEndDate);
        });
        /* istanbul ignore next */
        cov_2e6bcnjtba().s[116]++;
        return filteredData.map(mapDbShowToAppShow);
      }
    } else
    /* istanbul ignore next */
    {
      cov_2e6bcnjtba().b[16][1]++;
    }
    /* -----------------------------------------------------------
     * 2. Basic (non-spatial) SELECT with optional filters
     * --------------------------------------------------------- */
    let query =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[117]++, supabase_1.supabase.from('shows').select('*').eq('status', 'ACTIVE').order('start_date', {
      ascending: true
    }));
    // Always apply date filters to show only future/current shows
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[118]++;
    query = query.gte('start_date', startDate);
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[119]++;
    query = query.lte('start_date', endDate);
    // Also ensure the end_date is not in the past
    const today =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[120]++, new Date());
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[121]++;
    query = query.gte('end_date', today.toISOString());
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[122]++;
    if (typeof filters.maxEntryFee === 'number') {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[76][0]++;
      cov_2e6bcnjtba().s[123]++;
      query = query.lte('entry_fee', filters.maxEntryFee);
    } else
    /* istanbul ignore next */
    {
      cov_2e6bcnjtba().b[76][1]++;
    }
    cov_2e6bcnjtba().s[124]++;
    if (
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[78][0]++, filters.categories) &&
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[78][1]++, Array.isArray(filters.categories)) &&
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[78][2]++, filters.categories.length > 0)) {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[77][0]++;
      cov_2e6bcnjtba().s[125]++;
      query = query.overlaps('categories', filters.categories);
    } else
    /* istanbul ignore next */
    {
      cov_2e6bcnjtba().b[77][1]++;
    }
    /* ---------- Log basic-query filters for debugging ---------- */
    cov_2e6bcnjtba().s[126]++;
    console.debug('[showService] Executing basic query with filters:', {
      startDate,
      endDate,
      today: today.toISOString(),
      maxEntryFee: filters.maxEntryFee,
      categories: filters.categories,
      status: 'ACTIVE'
    });
    const {
      data,
      error
    } =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[127]++, await query);
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[128]++;
    if (error) {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[79][0]++;
      cov_2e6bcnjtba().s[129]++;
      throw error;
    } else
    /* istanbul ignore next */
    {
      cov_2e6bcnjtba().b[79][1]++;
    }
    cov_2e6bcnjtba().s[130]++;
    console.info(`[showService] basic query returned ${
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[81][0]++, data) &&
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[81][1]++, Array.isArray(data)) ?
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[80][0]++, data.length) :
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[80][1]++, 0)} show(s)`);
    // Ensure we're not showing past shows
    let filteredData =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[131]++, data);
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[132]++;
    if (Array.isArray(filteredData)) {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[82][0]++;
      const today =
      /* istanbul ignore next */
      (cov_2e6bcnjtba().s[133]++, new Date());
      // Check if target show exists before filtering
      const targetShowBeforeFilter =
      /* istanbul ignore next */
      (cov_2e6bcnjtba().s[134]++, filteredData.find(s => {
        /* istanbul ignore next */
        cov_2e6bcnjtba().f[20]++;
        cov_2e6bcnjtba().s[135]++;
        return s.id === DEBUG_SHOW_ID;
      }));
      /* istanbul ignore next */
      cov_2e6bcnjtba().s[136]++;
      if (targetShowBeforeFilter) {
        /* istanbul ignore next */
        cov_2e6bcnjtba().b[83][0]++;
        const targetEndDate =
        /* istanbul ignore next */
        (cov_2e6bcnjtba().s[137]++, new Date(targetShowBeforeFilter.end_date));
        const isPastShow =
        /* istanbul ignore next */
        (cov_2e6bcnjtba().s[138]++, targetEndDate < today);
        /* istanbul ignore next */
        cov_2e6bcnjtba().s[139]++;
        console.debug(`[showService][DEBUG_SHOW] Target show end_date (basic query): ${targetEndDate.toISOString()} | Today: ${today.toISOString()} | Is past show? ${isPastShow ?
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[84][0]++, 'YES') :
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[84][1]++, 'NO')}`);
      } else
      /* istanbul ignore next */
      {
        cov_2e6bcnjtba().b[83][1]++;
      }
      cov_2e6bcnjtba().s[140]++;
      filteredData = filteredData.filter(show => {
        /* istanbul ignore next */
        cov_2e6bcnjtba().f[21]++;
        // Parse the end date, ensuring timezone issues don't cause off-by-one errors
        const showEndDate =
        /* istanbul ignore next */
        (cov_2e6bcnjtba().s[141]++, new Date(show.end_date));
        const isValid =
        /* istanbul ignore next */
        (cov_2e6bcnjtba().s[142]++, showEndDate >= today);
        // Debug logging specifically for our target show
        /* istanbul ignore next */
        cov_2e6bcnjtba().s[143]++;
        if (show.id === DEBUG_SHOW_ID) {
          /* istanbul ignore next */
          cov_2e6bcnjtba().b[85][0]++;
          cov_2e6bcnjtba().s[144]++;
          console.debug(`[showService][DEBUG_SHOW] Filtering decision (basic query): show.end_date (${showEndDate.toISOString()}) ${isValid ?
          /* istanbul ignore next */
          (cov_2e6bcnjtba().b[86][0]++, '>=') :
          /* istanbul ignore next */
          (cov_2e6bcnjtba().b[86][1]++, '<')} today (${today.toISOString()}) => ${isValid ?
          /* istanbul ignore next */
          (cov_2e6bcnjtba().b[87][0]++, 'KEEP') :
          /* istanbul ignore next */
          (cov_2e6bcnjtba().b[87][1]++, 'FILTER OUT')}`);
        } else
        /* istanbul ignore next */
        {
          cov_2e6bcnjtba().b[85][1]++;
        }
        cov_2e6bcnjtba().s[145]++;
        return isValid;
      });
      /* istanbul ignore next */
      cov_2e6bcnjtba().s[146]++;
      console.debug(`[showService] Filtered out past shows. ${filteredData.length} shows remaining.`);
    } else
    /* istanbul ignore next */
    {
      cov_2e6bcnjtba().b[82][1]++;
    }
    cov_2e6bcnjtba().s[147]++;
    return Array.isArray(filteredData) ?
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[88][0]++, filteredData.map(mapDbShowToAppShow)) :
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[88][1]++, []);
  } catch (err) {
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[148]++;
    console.error('Error fetching shows:', err);
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[149]++;
    throw new Error(
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[89][0]++, err.message) ??
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[89][1]++, 'Failed to fetch shows'));
  }
  // Safety return if we somehow get here without data
  /* istanbul ignore next */
  cov_2e6bcnjtba().s[150]++;
  return [];
};
/* istanbul ignore next */
cov_2e6bcnjtba().s[151]++;
exports.getShows = getShows;
/* ------------------------------------------------------------------ */
/* Paginated / infinite-scroll helper                                  */
/* ------------------------------------------------------------------ */
/**
 * Fetch shows in **paged** chunks using the `get_paginated_shows` RPC.
 * Designed for infinite-scroll lists (Home screen, etc.).
 */
/* istanbul ignore next */
cov_2e6bcnjtba().s[152]++;
const getPaginatedShows = async params => {
  /* istanbul ignore next */
  cov_2e6bcnjtba().f[22]++;
  cov_2e6bcnjtba().s[153]++;
  try {
    /* ---------------- Normalise & default params ----------------- */
    const {
      latitude,
      longitude,
      radius =
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[90][0]++, 25),
      startDate =
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[91][0]++, new Date()),
      endDate =
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[92][0]++, new Date(Date.now() + 30 * 24 * 60 * 60 * 1000)),
      maxEntryFee =
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[93][0]++, null),
      categories =
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[94][0]++, null),
      features =
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[95][0]++, null),
      pageSize =
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[96][0]++, 20),
      page =
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[97][0]++, 1)
    } =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[154]++, params);
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[155]++;
    const toIso = d => {
      /* istanbul ignore next */
      cov_2e6bcnjtba().f[23]++;
      cov_2e6bcnjtba().s[156]++;
      return d instanceof Date ?
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[98][0]++, d.toISOString()) :
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[98][1]++, d);
    };
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[157]++;
    console.debug('[showService] getPaginatedShows called with params:', {
      latitude,
      longitude,
      radius,
      startDate,
      endDate,
      maxEntryFee,
      categories,
      features,
      pageSize,
      page
    });
    /* ---------------------- RPC invocation ----------------------- */
    const {
      data,
      error
    } =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[158]++, await supabase_1.supabase.rpc('get_paginated_shows', {
      lat: latitude,
      lng: longitude,
      radius_miles:
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[100][0]++, typeof radius === 'number') &&
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[100][1]++, !isNaN(radius)) ?
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[99][0]++, radius) :
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[99][1]++, 25),
      start_date: toIso(startDate),
      end_date: toIso(endDate),
      max_entry_fee: typeof maxEntryFee === 'number' ?
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[101][0]++, maxEntryFee) :
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[101][1]++, null),
      categories,
      features,
      page_size: pageSize,
      page,
      status: 'ACTIVE' // Explicitly request only ACTIVE shows
    }));
    /* -------------------------------------------------------------
     * 1. Handle RPC-level error (network / SQL exception, etc.)
     * ----------------------------------------------------------- */
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[159]++;
    if (error) {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[102][0]++;
      cov_2e6bcnjtba().s[160]++;
      console.warn('[showService] get_paginated_shows RPC failed:', error.message);
      /* istanbul ignore next */
      cov_2e6bcnjtba().s[161]++;
      console.warn('[showService] Falling back to direct query...');
      // Fallback to direct query if RPC fails
      /* istanbul ignore next */
      cov_2e6bcnjtba().s[162]++;
      return await getFallbackPaginatedShows(params);
    } else
    /* istanbul ignore next */
    {
      cov_2e6bcnjtba().b[102][1]++;
    }
    /* -------------------------------------------------------------
     * 2. Guard against malformed payloads or error wrapper returned
     *    by the SQL function itself (it returns `{ error: .. }`).
     * ----------------------------------------------------------- */
    cov_2e6bcnjtba().s[163]++;
    if (
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[104][0]++, !data) ||
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[104][1]++, typeof data === 'object') &&
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[104][2]++, 'error' in data)) {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[103][0]++;
      const msg =
      /* istanbul ignore next */
      (cov_2e6bcnjtba().s[164]++, typeof data?.error === 'string' ?
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[105][0]++, data.error) :
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[105][1]++, 'Failed to load shows'));
      /* istanbul ignore next */
      cov_2e6bcnjtba().s[165]++;
      console.warn('[showService] get_paginated_shows returned error payload:', msg);
      /* istanbul ignore next */
      cov_2e6bcnjtba().s[166]++;
      return {
        data: [],
        pagination: {
          totalCount: 0,
          pageSize,
          currentPage: page,
          totalPages: 0
        },
        error: msg
      };
    } else
    /* istanbul ignore next */
    {
      cov_2e6bcnjtba().b[103][1]++;
    }
    /* -------------------------------------------------------------
     * 3. Normalise successful payload to avoid "undefined value
     *    to object" errors when the function returns unexpected
     *    shapes.  Always guarantee `rows` is an array and
     *    `paginationRaw` is an object.
     * ----------------------------------------------------------- */
    const safePayload =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[167]++,
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[107][0]++, typeof data === 'object') &&
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[107][1]++, data !== null) ?
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[106][0]++, data) :
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[106][1]++, {}));
    const rows =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[168]++, Array.isArray(safePayload.data) ?
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[108][0]++, safePayload.data) :
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[108][1]++, []));
    const paginationRaw =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[169]++,
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[110][0]++, typeof safePayload.pagination === 'object') &&
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[110][1]++, safePayload.pagination !== null) ?
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[109][0]++, safePayload.pagination) :
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[109][1]++, {}));
    const mappedShows =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[170]++, Array.isArray(rows) ?
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[111][0]++, rows.map(mapDbShowToAppShow)) :
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[111][1]++, []));
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[171]++;
    console.info(`[showService] get_paginated_shows returned ${mappedShows.length} shows`);
    const pagination =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[172]++, {
      totalCount: Number(
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[112][0]++, paginationRaw.total_count) ??
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[112][1]++, 0)),
      pageSize: Number(
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[113][0]++, paginationRaw.page_size) ??
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[113][1]++, pageSize)),
      currentPage: Number(
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[114][0]++, paginationRaw.current_page) ??
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[114][1]++, page)),
      totalPages: Number(
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[115][0]++, paginationRaw.total_pages) ??
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[115][1]++, 0))
    });
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[173]++;
    return {
      data: mappedShows,
      pagination,
      error: null
    };
  } catch (err) {
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[174]++;
    console.error('[showService] Error in getPaginatedShows:', err);
    // Try fallback if the main method fails
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[175]++;
    try {
      /* istanbul ignore next */
      cov_2e6bcnjtba().s[176]++;
      console.warn('[showService] Attempting fallback after error...');
      const fallbackResult =
      /* istanbul ignore next */
      (cov_2e6bcnjtba().s[177]++, await getFallbackPaginatedShows(params));
      // If the fallback found no shows, try the emergency fallback
      /* istanbul ignore next */
      cov_2e6bcnjtba().s[178]++;
      if (
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[117][0]++, fallbackResult.data.length === 0) &&
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[117][1]++, fallbackResult.pagination.totalCount > 0)) {
        /* istanbul ignore next */
        cov_2e6bcnjtba().b[116][0]++;
        cov_2e6bcnjtba().s[179]++;
        console.warn('[showService] Fallback found 0 shows but totalCount > 0, trying emergency fallback');
        /* istanbul ignore next */
        cov_2e6bcnjtba().s[180]++;
        return await getAllActiveShowsFallback(params);
      } else
      /* istanbul ignore next */
      {
        cov_2e6bcnjtba().b[116][1]++;
      }
      cov_2e6bcnjtba().s[181]++;
      return fallbackResult;
    } catch (fallbackErr) {
      /* istanbul ignore next */
      cov_2e6bcnjtba().s[182]++;
      console.error('[showService] Fallback also failed:', fallbackErr);
      /* istanbul ignore next */
      cov_2e6bcnjtba().s[183]++;
      return {
        data: [],
        pagination: {
          totalCount: 0,
          pageSize:
          /* istanbul ignore next */
          (cov_2e6bcnjtba().b[118][0]++, params.pageSize) ??
          /* istanbul ignore next */
          (cov_2e6bcnjtba().b[118][1]++, 20),
          currentPage:
          /* istanbul ignore next */
          (cov_2e6bcnjtba().b[119][0]++, params.page) ??
          /* istanbul ignore next */
          (cov_2e6bcnjtba().b[119][1]++, 1),
          totalPages: 0
        },
        error:
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[120][0]++, err.message) ??
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[120][1]++, 'Failed to fetch paginated shows')
      };
    }
  }
};
/* istanbul ignore next */
cov_2e6bcnjtba().s[184]++;
exports.getPaginatedShows = getPaginatedShows;
/**
 * Fallback implementation for getPaginatedShows that uses direct Supabase queries
 * instead of the RPC. This is used when the RPC fails for any reason.
 */
/* istanbul ignore next */
cov_2e6bcnjtba().s[185]++;
const getFallbackPaginatedShows = async params => {
  /* istanbul ignore next */
  cov_2e6bcnjtba().f[24]++;
  cov_2e6bcnjtba().s[186]++;
  try {
    const {
      latitude,
      longitude,
      radius =
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[121][0]++, 25),
      startDate =
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[122][0]++, new Date()),
      endDate =
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[123][0]++, new Date(Date.now() + 30 * 24 * 60 * 60 * 1000)),
      maxEntryFee =
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[124][0]++, null),
      categories =
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[125][0]++, null),
      features =
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[126][0]++, null),
      pageSize =
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[127][0]++, 20),
      page =
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[128][0]++, 1)
    } =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[187]++, params);
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[188]++;
    const toIso = d => {
      /* istanbul ignore next */
      cov_2e6bcnjtba().f[25]++;
      cov_2e6bcnjtba().s[189]++;
      return d instanceof Date ?
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[129][0]++, d.toISOString()) :
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[129][1]++, d);
    };
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[190]++;
    console.debug('[showService] getFallbackPaginatedShows executing with params:', {
      latitude,
      longitude,
      radius,
      startDate: toIso(startDate),
      endDate: toIso(endDate)
    });
    // First get the total count with a separate query
    let countQuery =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[191]++, supabase_1.supabase.from('shows').select('id', {
      count: 'exact'
    }).eq('status', 'ACTIVE'));
    // Apply date filters
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[192]++;
    countQuery = countQuery.gte('start_date', toIso(startDate));
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[193]++;
    countQuery = countQuery.lte('start_date', toIso(endDate));
    // Ensure end_date is not in the past
    const today =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[194]++, new Date());
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[195]++;
    countQuery = countQuery.gte('end_date', today.toISOString());
    // Apply other filters
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[196]++;
    if (typeof maxEntryFee === 'number') {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[130][0]++;
      cov_2e6bcnjtba().s[197]++;
      countQuery = countQuery.lte('entry_fee', maxEntryFee);
    } else
    /* istanbul ignore next */
    {
      cov_2e6bcnjtba().b[130][1]++;
    }
    cov_2e6bcnjtba().s[198]++;
    if (
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[132][0]++, categories) &&
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[132][1]++, Array.isArray(categories)) &&
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[132][2]++, categories.length > 0)) {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[131][0]++;
      cov_2e6bcnjtba().s[199]++;
      countQuery = countQuery.overlaps('categories', categories);
    } else
    /* istanbul ignore next */
    {
      cov_2e6bcnjtba().b[131][1]++;
    }
    // Execute count query
    const {
      count,
      error: countError
    } =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[200]++, await countQuery);
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[201]++;
    if (countError) {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[133][0]++;
      cov_2e6bcnjtba().s[202]++;
      console.error('[showService] Error getting count:', countError);
      /* istanbul ignore next */
      cov_2e6bcnjtba().s[203]++;
      throw countError;
    } else
    /* istanbul ignore next */
    {
      cov_2e6bcnjtba().b[133][1]++;
    }
    // Now get the actual data for this page
    let dataQuery =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[204]++, supabase_1.supabase.from('shows').select('*').eq('status', 'ACTIVE'));
    // Apply the same filters as the count query
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[205]++;
    dataQuery = dataQuery.gte('start_date', toIso(startDate));
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[206]++;
    dataQuery = dataQuery.lte('start_date', toIso(endDate));
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[207]++;
    dataQuery = dataQuery.gte('end_date', today.toISOString());
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[208]++;
    if (typeof maxEntryFee === 'number') {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[134][0]++;
      cov_2e6bcnjtba().s[209]++;
      dataQuery = dataQuery.lte('entry_fee', maxEntryFee);
    } else
    /* istanbul ignore next */
    {
      cov_2e6bcnjtba().b[134][1]++;
    }
    cov_2e6bcnjtba().s[210]++;
    if (
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[136][0]++, categories) &&
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[136][1]++, Array.isArray(categories)) &&
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[136][2]++, categories.length > 0)) {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[135][0]++;
      cov_2e6bcnjtba().s[211]++;
      dataQuery = dataQuery.overlaps('categories', categories);
    } else
    /* istanbul ignore next */
    {
      cov_2e6bcnjtba().b[135][1]++;
    }
    // Apply pagination
    cov_2e6bcnjtba().s[212]++;
    dataQuery = dataQuery.order('start_date', {
      ascending: true
    }).range((page - 1) * pageSize, page * pageSize - 1);
    // Execute data query
    const {
      data,
      error: dataError
    } =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[213]++, await dataQuery);
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[214]++;
    if (dataError) {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[137][0]++;
      cov_2e6bcnjtba().s[215]++;
      console.error('[showService] Error getting data:', dataError);
      /* istanbul ignore next */
      cov_2e6bcnjtba().s[216]++;
      throw dataError;
    } else
    /* istanbul ignore next */
    {
      cov_2e6bcnjtba().b[137][1]++;
    }
    // Filter results for shows within the radius
    // (since we can't do this in the query without the RPC)
    let filteredData =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[217]++,
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[138][0]++, data) ||
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[138][1]++, []));
    /* ------------------------------------------------------------------
     * Skip distance filtering if we're using the default (0,0) placeholder
     * coordinates.  Applying the radius filter in that case removes every
     * show because all real-world coordinates are far from (0,0).
     * ------------------------------------------------------------------ */
    const isDefaultCoordinates =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[218]++,
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[139][0]++, Math.abs(latitude) < 0.1) &&
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[139][1]++, Math.abs(longitude) < 0.1));
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[219]++;
    if (
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[141][0]++, radius) &&
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[141][1]++, !isDefaultCoordinates)) {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[140][0]++;
      cov_2e6bcnjtba().s[220]++;
      console.debug(`[showService] Applying distance filtering with coordinates (${latitude}, ${longitude})`);
      /* istanbul ignore next */
      cov_2e6bcnjtba().s[221]++;
      filteredData = filteredData.filter(show => {
        /* istanbul ignore next */
        cov_2e6bcnjtba().f[26]++;
        cov_2e6bcnjtba().s[222]++;
        // Skip shows without coordinates
        if (
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[143][0]++, !show.coordinates) ||
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[143][1]++, !show.coordinates.coordinates)) {
          /* istanbul ignore next */
          cov_2e6bcnjtba().b[142][0]++;
          cov_2e6bcnjtba().s[223]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_2e6bcnjtba().b[142][1]++;
        }
        const showLat =
        /* istanbul ignore next */
        (cov_2e6bcnjtba().s[224]++, show.coordinates.coordinates[1]);
        const showLng =
        /* istanbul ignore next */
        (cov_2e6bcnjtba().s[225]++, show.coordinates.coordinates[0]);
        const distance =
        /* istanbul ignore next */
        (cov_2e6bcnjtba().s[226]++, calculateDistance(latitude, longitude, showLat, showLng));
        /* istanbul ignore next */
        cov_2e6bcnjtba().s[227]++;
        return distance <= radius;
      });
    } else {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[140][1]++;
      cov_2e6bcnjtba().s[228]++;
      if (isDefaultCoordinates) {
        /* istanbul ignore next */
        cov_2e6bcnjtba().b[144][0]++;
        cov_2e6bcnjtba().s[229]++;
        console.debug(`[showService] Skipping distance filtering – default coordinates detected (${latitude}, ${longitude})`);
      } else
      /* istanbul ignore next */
      {
        cov_2e6bcnjtba().b[144][1]++;
      }
    }
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[230]++;
    console.info(`[showService] getFallbackPaginatedShows found ${filteredData.length} shows (from ${count} total)`);
    // Map to app format
    const mappedShows =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[231]++, filteredData.map(mapDbShowToAppShow));
    // Calculate pagination info
    const totalCount =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[232]++,
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[145][0]++, count) ||
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[145][1]++, 0));
    const totalPages =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[233]++, Math.ceil(totalCount / pageSize));
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[234]++;
    return {
      data: mappedShows,
      pagination: {
        totalCount,
        pageSize,
        currentPage: page,
        totalPages
      },
      error: null
    };
  } catch (err) {
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[235]++;
    console.error('[showService] Error in getFallbackPaginatedShows:', err);
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[236]++;
    return {
      data: [],
      pagination: {
        totalCount: 0,
        pageSize:
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[146][0]++, params.pageSize) ??
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[146][1]++, 20),
        currentPage:
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[147][0]++, params.page) ??
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[147][1]++, 1),
        totalPages: 0
      },
      error:
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[148][0]++, err.message) ??
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[148][1]++, 'Failed to fetch paginated shows')
    };
  }
};
/**
 * Completely bypass all location filtering if we're still not getting results.
 * This ensures users always see shows even if there are issues with coordinates.
 */
/* istanbul ignore next */
cov_2e6bcnjtba().s[237]++;
const getAllActiveShowsFallback = async params => {
  /* istanbul ignore next */
  cov_2e6bcnjtba().f[27]++;
  cov_2e6bcnjtba().s[238]++;
  try {
    const {
      startDate =
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[149][0]++, new Date()),
      endDate =
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[150][0]++, new Date(Date.now() + 30 * 24 * 60 * 60 * 1000)),
      pageSize =
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[151][0]++, 20),
      page =
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[152][0]++, 1)
    } =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[239]++, params);
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[240]++;
    console.warn('[showService] Using emergency getAllActiveShowsFallback without coordinate filtering');
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[241]++;
    const toIso = d => {
      /* istanbul ignore next */
      cov_2e6bcnjtba().f[28]++;
      cov_2e6bcnjtba().s[242]++;
      return d instanceof Date ?
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[153][0]++, d.toISOString()) :
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[153][1]++, d);
    };
    // Simple query - just get active shows
    let dataQuery =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[243]++, supabase_1.supabase.from('shows').select('*').eq('status', 'ACTIVE'));
    // Apply minimal filtering to ensure we don't show past shows
    const today =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[244]++, new Date());
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[245]++;
    dataQuery = dataQuery.gte('end_date', today.toISOString());
    // Only apply date filtering to start date to match what we promise users
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[246]++;
    dataQuery = dataQuery.gte('start_date', toIso(startDate));
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[247]++;
    dataQuery = dataQuery.lte('start_date', toIso(endDate));
    // Get total count first
    const {
      count,
      error: countError
    } =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[248]++, await dataQuery.count());
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[249]++;
    if (countError) {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[154][0]++;
      cov_2e6bcnjtba().s[250]++;
      console.error('[showService] Error getting count in emergency fallback:', countError);
      /* istanbul ignore next */
      cov_2e6bcnjtba().s[251]++;
      throw countError;
    } else
    /* istanbul ignore next */
    {
      cov_2e6bcnjtba().b[154][1]++;
    }
    // Now apply pagination to the same query
    cov_2e6bcnjtba().s[252]++;
    dataQuery = dataQuery.order('start_date', {
      ascending: true
    }).range((page - 1) * pageSize, page * pageSize - 1);
    const {
      data,
      error: dataError
    } =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[253]++, await dataQuery);
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[254]++;
    if (dataError) {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[155][0]++;
      cov_2e6bcnjtba().s[255]++;
      console.error('[showService] Error getting data in emergency fallback:', dataError);
      /* istanbul ignore next */
      cov_2e6bcnjtba().s[256]++;
      throw dataError;
    } else
    /* istanbul ignore next */
    {
      cov_2e6bcnjtba().b[155][1]++;
    }
    cov_2e6bcnjtba().s[257]++;
    console.info(`[showService] Emergency getAllActiveShowsFallback found ${data.length} shows (from ${count} total)`);
    // Map to app format
    const mappedShows =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[258]++, data.map(mapDbShowToAppShow));
    // Calculate pagination info
    const totalCount =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[259]++,
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[156][0]++, count) ||
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[156][1]++, 0));
    const totalPages =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[260]++, Math.ceil(totalCount / pageSize));
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[261]++;
    return {
      data: mappedShows,
      pagination: {
        totalCount,
        pageSize,
        currentPage: page,
        totalPages
      },
      error: null
    };
  } catch (err) {
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[262]++;
    console.error('[showService] Error in emergency fallback:', err);
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[263]++;
    return {
      data: [],
      pagination: {
        totalCount: 0,
        pageSize:
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[157][0]++, params.pageSize) ??
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[157][1]++, 20),
        currentPage:
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[158][0]++, params.page) ??
        /* istanbul ignore next */
        (cov_2e6bcnjtba().b[158][1]++, 1),
        totalPages: 0
      },
      error:
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[159][0]++, err.message) ??
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[159][1]++, 'Failed to fetch shows')
    };
  }
};
/**
 * Calculate distance between two points using the Haversine formula
 * @returns Distance in miles
 */
/* istanbul ignore next */
cov_2e6bcnjtba().s[264]++;
const calculateDistance = (lat1, lon1, lat2, lon2) => {
  /* istanbul ignore next */
  cov_2e6bcnjtba().f[29]++;
  const R =
  /* istanbul ignore next */
  (cov_2e6bcnjtba().s[265]++, 3958.8); // Earth's radius in miles
  const dLat =
  /* istanbul ignore next */
  (cov_2e6bcnjtba().s[266]++, (lat2 - lat1) * Math.PI / 180);
  const dLon =
  /* istanbul ignore next */
  (cov_2e6bcnjtba().s[267]++, (lon2 - lon1) * Math.PI / 180);
  const a =
  /* istanbul ignore next */
  (cov_2e6bcnjtba().s[268]++, Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2));
  const c =
  /* istanbul ignore next */
  (cov_2e6bcnjtba().s[269]++, 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)));
  /* istanbul ignore next */
  cov_2e6bcnjtba().s[270]++;
  return R * c;
};
/**
 * Fetch a single show by ID.
 */
/* istanbul ignore next */
cov_2e6bcnjtba().s[271]++;
const getShowById = async id => {
  /* istanbul ignore next */
  cov_2e6bcnjtba().f[30]++;
  cov_2e6bcnjtba().s[272]++;
  try {
    const {
      data,
      error
    } =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[273]++, await supabase_1.supabase.from('shows').select('*').eq('id', id).single());
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[274]++;
    if (error) {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[160][0]++;
      cov_2e6bcnjtba().s[275]++;
      throw error;
    } else
    /* istanbul ignore next */
    {
      cov_2e6bcnjtba().b[160][1]++;
    }
    cov_2e6bcnjtba().s[276]++;
    if (!data) {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[161][0]++;
      cov_2e6bcnjtba().s[277]++;
      return {
        data: null,
        error: 'Show not found'
      };
    } else
    /* istanbul ignore next */
    {
      cov_2e6bcnjtba().b[161][1]++;
    }
    cov_2e6bcnjtba().s[278]++;
    return {
      data: mapDbShowToAppShow(data),
      error: null
    };
  } catch (err) {
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[279]++;
    console.error('Error fetching show by id:', err);
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[280]++;
    return {
      data: null,
      error:
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[162][0]++, err.message) ??
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[162][1]++, 'Unknown error')
    };
  }
};
/* istanbul ignore next */
cov_2e6bcnjtba().s[281]++;
exports.getShowById = getShowById;
/**
 * Create a new show (stub)
 */
/* istanbul ignore next */
cov_2e6bcnjtba().s[282]++;
const createShow = () => {
  /* istanbul ignore next */
  cov_2e6bcnjtba().f[31]++;
  cov_2e6bcnjtba().s[283]++;
  throw new Error('createShow not implemented');
};
/* istanbul ignore next */
cov_2e6bcnjtba().s[284]++;
exports.createShow = createShow;
/**
 * Fetch upcoming (or otherwise date-filtered) shows a user is planning to attend.
 *
 * Looks up the `show_participants` table for the supplied `userId` and then
 * fetches matching shows from `shows`, with optional date-range constraints.
 *
 * @param params - { userId, startDate, endDate? }
 * @returns { data, error } shape – `data` will be an array of `Show`s.
 */
/* istanbul ignore next */
cov_2e6bcnjtba().s[285]++;
const getUpcomingShows = async params => {
  /* istanbul ignore next */
  cov_2e6bcnjtba().f[32]++;
  cov_2e6bcnjtba().s[286]++;
  try {
    const {
      userId,
      startDate,
      endDate
    } =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[287]++, params);
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[288]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[163][0]++;
      cov_2e6bcnjtba().s[289]++;
      return {
        data: null,
        error: 'Invalid userId'
      };
    } else
    /* istanbul ignore next */
    {
      cov_2e6bcnjtba().b[163][1]++;
    }
    /* -----------------------------------------------------------
     * 1. Fetch show IDs the user plans to attend
     * --------------------------------------------------------- */
    const {
      data: participantRows,
      error: participantError
    } =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[290]++, await supabase_1.supabase.from('show_participants')
    // use lowercase column names in db
    .select('showid').eq('userid', userId));
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[291]++;
    if (participantError) {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[164][0]++;
      cov_2e6bcnjtba().s[292]++;
      throw participantError;
    } else
    /* istanbul ignore next */
    {
      cov_2e6bcnjtba().b[164][1]++;
    }
    cov_2e6bcnjtba().s[293]++;
    if (
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[166][0]++, !participantRows) ||
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[166][1]++, participantRows.length === 0)) {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[165][0]++;
      cov_2e6bcnjtba().s[294]++;
      // User is not signed up for any shows
      return {
        data: [],
        error: null
      };
    } else
    /* istanbul ignore next */
    {
      cov_2e6bcnjtba().b[165][1]++;
    }
    const showIds =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[295]++, participantRows.map(row => {
      /* istanbul ignore next */
      cov_2e6bcnjtba().f[33]++;
      cov_2e6bcnjtba().s[296]++;
      return row.showid;
    }).filter(Boolean));
    /* -----------------------------------------------------------
     * 2. Fetch shows matching those IDs + date filters
     * --------------------------------------------------------- */
    let showQuery =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[297]++, supabase_1.supabase.from('shows').select('*').in('id', showIds).order('start_date', {
      ascending: true
    }));
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[298]++;
    if (startDate) {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[167][0]++;
      cov_2e6bcnjtba().s[299]++;
      showQuery = showQuery.gte('start_date', startDate);
    } else
    /* istanbul ignore next */
    {
      cov_2e6bcnjtba().b[167][1]++;
    }
    cov_2e6bcnjtba().s[300]++;
    if (endDate) {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[168][0]++;
      cov_2e6bcnjtba().s[301]++;
      showQuery = showQuery.lte('end_date', endDate);
    } else
    /* istanbul ignore next */
    {
      cov_2e6bcnjtba().b[168][1]++;
    }
    // Also ensure the end_date is not in the past
    const today =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[302]++, new Date());
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[303]++;
    showQuery = showQuery.gte('end_date', today.toISOString());
    const {
      data: showRows,
      error: showError
    } =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[304]++, await showQuery);
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[305]++;
    if (showError) {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[169][0]++;
      cov_2e6bcnjtba().s[306]++;
      throw showError;
    } else
    /* istanbul ignore next */
    {
      cov_2e6bcnjtba().b[169][1]++;
    }
    // Ensure we're not showing past shows
    let filteredData =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[307]++, showRows);
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[308]++;
    if (Array.isArray(filteredData)) {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[170][0]++;
      const today =
      /* istanbul ignore next */
      (cov_2e6bcnjtba().s[309]++, new Date());
      /* istanbul ignore next */
      cov_2e6bcnjtba().s[310]++;
      filteredData = filteredData.filter(show => {
        /* istanbul ignore next */
        cov_2e6bcnjtba().f[34]++;
        // Parse the end date, ensuring timezone issues don't cause off-by-one errors
        const showEndDate =
        /* istanbul ignore next */
        (cov_2e6bcnjtba().s[311]++, new Date(show.end_date));
        /* istanbul ignore next */
        cov_2e6bcnjtba().s[312]++;
        return showEndDate >= today;
      });
      /* istanbul ignore next */
      cov_2e6bcnjtba().s[313]++;
      console.debug(`[showService] Filtered out past shows. ${filteredData.length} shows remaining.`);
    } else
    /* istanbul ignore next */
    {
      cov_2e6bcnjtba().b[170][1]++;
    }
    const mapped =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[314]++, Array.isArray(filteredData) ?
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[171][0]++, filteredData.map(mapDbShowToAppShow)) :
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[171][1]++, []));
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[315]++;
    return {
      data: mapped,
      error: null
    };
  } catch (err) {
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[316]++;
    console.error('Error fetching upcoming shows for user:', err);
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[317]++;
    return {
      data: null,
      error:
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[172][0]++, err.message) ??
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[172][1]++, 'Unknown error')
    };
  }
};
/* istanbul ignore next */
cov_2e6bcnjtba().s[318]++;
exports.getUpcomingShows = getUpcomingShows;
/**
 * Claims a show for a show organizer.
 *
 * 1. Marks the show row as claimed (`claimed`, `claimed_by`, `claimed_at`).
 * 2. Inserts a row in the `show_organizers` join table so we can
 *    easily query which organisers manage which shows.
 *
 * On success returns `{ success: true, data: <updated show row> }`
 * On failure returns `{ success: false, message: <reason> }`
 */
/* istanbul ignore next */
cov_2e6bcnjtba().s[319]++;
const claimShow = async (showId, userId) => {
  /* istanbul ignore next */
  cov_2e6bcnjtba().f[35]++;
  cov_2e6bcnjtba().s[320]++;
  try {
    /* --------------------------------------------------------
     * 0. Verify user is a (paid) show organiser
     * ------------------------------------------------------ */
    const {
      data: profile,
      error: profileErr
    } =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[321]++, await supabase_1.supabase.from('profiles').select('role, is_paid').eq('id', userId).single());
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[322]++;
    if (profileErr) {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[173][0]++;
      cov_2e6bcnjtba().s[323]++;
      throw profileErr;
    } else
    /* istanbul ignore next */
    {
      cov_2e6bcnjtba().b[173][1]++;
    }
    cov_2e6bcnjtba().s[324]++;
    if (!profile) {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[174][0]++;
      cov_2e6bcnjtba().s[325]++;
      return {
        success: false,
        message: 'User profile not found'
      };
    } else
    /* istanbul ignore next */
    {
      cov_2e6bcnjtba().b[174][1]++;
    }
    const roleOk =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[326]++, (
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[175][0]++, profile.role) ??
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[175][1]++, '')).toString().toLowerCase() === 'show_organizer');
    const paidOk =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[327]++, profile.is_paid === undefined ?
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[176][0]++, true // tolerate missing column
    ) :
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[176][1]++, !!profile.is_paid));
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[328]++;
    if (
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[178][0]++, !roleOk) ||
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[178][1]++, !paidOk)) {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[177][0]++;
      cov_2e6bcnjtba().s[329]++;
      return {
        success: false,
        message: 'Only paid Show Organizers can claim shows. Please upgrade your plan.'
      };
    } else
    /* istanbul ignore next */
    {
      cov_2e6bcnjtba().b[177][1]++;
    }
    /* --------------------------------------------------------
     * 1. Atomically flag the show as claimed IF not yet claimed
     *    — PostgREST will return 0 rows if the condition fails.
     * ------------------------------------------------------ */
    const {
      data: updatedShow,
      error: updateError,
      count
    } =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[330]++, await supabase_1.supabase.from('shows').update({
      claimed: true,
      claimed_by: userId,
      claimed_at: new Date().toISOString()
    }).eq('id', showId).or('claimed.is.null,claimed.eq.false') // only update unclaimed
    .select('*', {
      count: 'exact'
    }).single());
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[331]++;
    if (updateError) {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[179][0]++;
      cov_2e6bcnjtba().s[332]++;
      throw updateError;
    } else
    /* istanbul ignore next */
    {
      cov_2e6bcnjtba().b[179][1]++;
    }
    cov_2e6bcnjtba().s[333]++;
    if (
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[181][0]++, !updatedShow) ||
    /* istanbul ignore next */
    (cov_2e6bcnjtba().b[181][1]++, count === 0)) {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[180][0]++;
      cov_2e6bcnjtba().s[334]++;
      return {
        success: false,
        message: 'Show has already been claimed by another organiser.'
      };
    } else
    /* istanbul ignore next */
    {
      cov_2e6bcnjtba().b[180][1]++;
    }
    /* --------------------------------------------------------
     * 2. Insert organiser ↔ show relation (ignore duplicates)
     * ------------------------------------------------------ */
    const {
      error: orgError
    } =
    /* istanbul ignore next */
    (cov_2e6bcnjtba().s[335]++, await supabase_1.supabase.from('show_organizers').insert({
      show_id: showId,
      user_id: userId,
      role: 'owner',
      created_at: new Date().toISOString()
    }, {
      ignoreDuplicates: true
    }));
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[336]++;
    if (orgError) {
      /* istanbul ignore next */
      cov_2e6bcnjtba().b[182][0]++;
      cov_2e6bcnjtba().s[337]++;
      throw orgError;
    } else
    /* istanbul ignore next */
    {
      cov_2e6bcnjtba().b[182][1]++;
    }
    cov_2e6bcnjtba().s[338]++;
    return {
      success: true,
      data: updatedShow
    };
  } catch (err) {
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[339]++;
    console.error('API error in claimShow:', err);
    /* istanbul ignore next */
    cov_2e6bcnjtba().s[340]++;
    return {
      success: false,
      message:
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[183][0]++, err.message) ||
      /* istanbul ignore next */
      (cov_2e6bcnjtba().b[183][1]++, 'Failed to claim show')
    };
  }
};
/* istanbul ignore next */
cov_2e6bcnjtba().s[341]++;
exports.claimShow = claimShow;
/**
 * Update an existing show (stub)
 */
/* istanbul ignore next */
cov_2e6bcnjtba().s[342]++;
const updateShow = () => {
  /* istanbul ignore next */
  cov_2e6bcnjtba().f[36]++;
  cov_2e6bcnjtba().s[343]++;
  throw new Error('updateShow not implemented');
};
/* istanbul ignore next */
cov_2e6bcnjtba().s[344]++;
exports.updateShow = updateShow;
/**
 * Delete a show (stub)
 */
/* istanbul ignore next */
cov_2e6bcnjtba().s[345]++;
const deleteShow = () => {
  /* istanbul ignore next */
  cov_2e6bcnjtba().f[37]++;
  cov_2e6bcnjtba().s[346]++;
  throw new Error('deleteShow not implemented');
};
/* istanbul ignore next */
cov_2e6bcnjtba().s[347]++;
exports.deleteShow = deleteShow;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,