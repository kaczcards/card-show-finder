7308ad2e8d5fcd9fbbbd705b07b3d379
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
function cov_n3y6st7dr() {
  var path = "/Users/kevin/card-show-finder/src/components/SentryTester.tsx";
  var hash = "930fc3e3e3a15eb61a3f32712cd199f371418f44";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/components/SentryTester.tsx",
    statementMap: {
      "0": {
        start: {
          line: 24,
          column: 31
        },
        end: {
          line: 320,
          column: 1
        }
      },
      "1": {
        start: {
          line: 25,
          column: 38
        },
        end: {
          line: 25,
          column: 58
        }
      },
      "2": {
        start: {
          line: 28,
          column: 23
        },
        end: {
          line: 39,
          column: 3
        }
      },
      "3": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "4": {
        start: {
          line: 31,
          column: 30
        },
        end: {
          line: 31,
          column: 34
        }
      },
      "5": {
        start: {
          line: 32,
          column: 6
        },
        end: {
          line: 32,
          column: 37
        }
      },
      "6": {
        start: {
          line: 34,
          column: 6
        },
        end: {
          line: 37,
          column: 7
        }
      },
      "7": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 32
        }
      },
      "8": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 58
        }
      },
      "9": {
        start: {
          line: 42,
          column: 43
        },
        end: {
          line: 50,
          column: 3
        }
      },
      "10": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 63
        }
      },
      "11": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 49,
          column: 7
        }
      },
      "12": {
        start: {
          line: 46,
          column: 6
        },
        end: {
          line: 48,
          column: 14
        }
      },
      "13": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 68
        }
      },
      "14": {
        start: {
          line: 53,
          column: 28
        },
        end: {
          line: 74,
          column: 3
        }
      },
      "15": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 47
        }
      },
      "16": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 73,
          column: 6
        }
      },
      "17": {
        start: {
          line: 67,
          column: 29
        },
        end: {
          line: 67,
          column: 31
        }
      },
      "18": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 69
        }
      },
      "19": {
        start: {
          line: 77,
          column: 22
        },
        end: {
          line: 88,
          column: 3
        }
      },
      "20": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 86,
          column: 7
        }
      },
      "21": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 87,
          column: 53
        }
      },
      "22": {
        start: {
          line: 91,
          column: 26
        },
        end: {
          line: 130,
          column: 3
        }
      },
      "23": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 97,
          column: 7
        }
      },
      "24": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 105,
          column: 12
        }
      },
      "25": {
        start: {
          line: 100,
          column: 6
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "26": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 127,
          column: 13
        }
      },
      "27": {
        start: {
          line: 108,
          column: 6
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "28": {
        start: {
          line: 119,
          column: 6
        },
        end: {
          line: 126,
          column: 7
        }
      },
      "29": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 51
        }
      },
      "30": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "31": {
        start: {
          line: 123,
          column: 10
        },
        end: {
          line: 123,
          column: 34
        }
      },
      "32": {
        start: {
          line: 124,
          column: 10
        },
        end: {
          line: 124,
          column: 65
        }
      },
      "33": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 129,
          column: 43
        }
      },
      "34": {
        start: {
          line: 133,
          column: 26
        },
        end: {
          line: 166,
          column: 3
        }
      },
      "35": {
        start: {
          line: 134,
          column: 24
        },
        end: {
          line: 134,
          column: 68
        }
      },
      "36": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 136,
          column: 50
        }
      },
      "37": {
        start: {
          line: 139,
          column: 17
        },
        end: {
          line: 142,
          column: 6
        }
      },
      "38": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 145,
          column: 60
        }
      },
      "39": {
        start: {
          line: 145,
          column: 33
        },
        end: {
          line: 145,
          column: 58
        }
      },
      "40": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 148,
          column: 18
        }
      },
      "41": {
        start: {
          line: 151,
          column: 18
        },
        end: {
          line: 154,
          column: 6
        }
      },
      "42": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 157,
          column: 59
        }
      },
      "43": {
        start: {
          line: 157,
          column: 33
        },
        end: {
          line: 157,
          column: 57
        }
      },
      "44": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 160,
          column: 19
        }
      },
      "45": {
        start: {
          line: 163,
          column: 4
        },
        end: {
          line: 163,
          column: 25
        }
      },
      "46": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 165,
          column: 48
        }
      },
      "47": {
        start: {
          line: 169,
          column: 27
        },
        end: {
          line: 192,
          column: 3
        }
      },
      "48": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 191,
          column: 5
        }
      },
      "49": {
        start: {
          line: 171,
          column: 6
        },
        end: {
          line: 171,
          column: 49
        }
      },
      "50": {
        start: {
          line: 173,
          column: 6
        },
        end: {
          line: 190,
          column: 7
        }
      },
      "51": {
        start: {
          line: 175,
          column: 24
        },
        end: {
          line: 175,
          column: 64
        }
      },
      "52": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 187,
          column: 11
        }
      },
      "53": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 52
        }
      },
      "54": {
        start: {
          line: 195,
          column: 25
        },
        end: {
          line: 216,
          column: 3
        }
      },
      "55": {
        start: {
          line: 196,
          column: 4
        },
        end: {
          line: 201,
          column: 7
        }
      },
      "56": {
        start: {
          line: 203,
          column: 4
        },
        end: {
          line: 203,
          column: 68
        }
      },
      "57": {
        start: {
          line: 206,
          column: 4
        },
        end: {
          line: 215,
          column: 12
        }
      },
      "58": {
        start: {
          line: 207,
          column: 6
        },
        end: {
          line: 214,
          column: 7
        }
      },
      "59": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 208,
          column: 53
        }
      },
      "60": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 213,
          column: 9
        }
      },
      "61": {
        start: {
          line: 211,
          column: 10
        },
        end: {
          line: 211,
          column: 34
        }
      },
      "62": {
        start: {
          line: 212,
          column: 10
        },
        end: {
          line: 212,
          column: 62
        }
      },
      "63": {
        start: {
          line: 218,
          column: 2
        },
        end: {
          line: 319,
          column: 4
        }
      },
      "64": {
        start: {
          line: 259,
          column: 27
        },
        end: {
          line: 259,
          column: 46
        }
      },
      "65": {
        start: {
          line: 266,
          column: 27
        },
        end: {
          line: 266,
          column: 49
        }
      },
      "66": {
        start: {
          line: 273,
          column: 27
        },
        end: {
          line: 273,
          column: 47
        }
      },
      "67": {
        start: {
          line: 322,
          column: 15
        },
        end: {
          line: 402,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 24,
            column: 31
          },
          end: {
            line: 24,
            column: 32
          }
        },
        loc: {
          start: {
            line: 24,
            column: 37
          },
          end: {
            line: 320,
            column: 1
          }
        },
        line: 24
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 28,
            column: 23
          },
          end: {
            line: 28,
            column: 24
          }
        },
        loc: {
          start: {
            line: 28,
            column: 29
          },
          end: {
            line: 39,
            column: 3
          }
        },
        line: 28
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 42,
            column: 43
          },
          end: {
            line: 42,
            column: 44
          }
        },
        loc: {
          start: {
            line: 42,
            column: 49
          },
          end: {
            line: 50,
            column: 3
          }
        },
        line: 42
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 45,
            column: 17
          }
        },
        loc: {
          start: {
            line: 45,
            column: 31
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 45
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 46,
            column: 17
          },
          end: {
            line: 46,
            column: 18
          }
        },
        loc: {
          start: {
            line: 46,
            column: 23
          },
          end: {
            line: 48,
            column: 7
          }
        },
        line: 46
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 53,
            column: 28
          },
          end: {
            line: 53,
            column: 29
          }
        },
        loc: {
          start: {
            line: 53,
            column: 34
          },
          end: {
            line: 74,
            column: 3
          }
        },
        line: 53
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 65,
            column: 19
          },
          end: {
            line: 65,
            column: 20
          }
        },
        loc: {
          start: {
            line: 65,
            column: 25
          },
          end: {
            line: 70,
            column: 11
          }
        },
        line: 65
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 77,
            column: 22
          },
          end: {
            line: 77,
            column: 23
          }
        },
        loc: {
          start: {
            line: 77,
            column: 73
          },
          end: {
            line: 88,
            column: 3
          }
        },
        line: 77
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 91,
            column: 26
          },
          end: {
            line: 91,
            column: 27
          }
        },
        loc: {
          start: {
            line: 91,
            column: 32
          },
          end: {
            line: 130,
            column: 3
          }
        },
        line: 91
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 99,
            column: 15
          },
          end: {
            line: 99,
            column: 16
          }
        },
        loc: {
          start: {
            line: 99,
            column: 21
          },
          end: {
            line: 105,
            column: 5
          }
        },
        line: 99
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 107,
            column: 15
          },
          end: {
            line: 107,
            column: 16
          }
        },
        loc: {
          start: {
            line: 107,
            column: 21
          },
          end: {
            line: 127,
            column: 5
          }
        },
        line: 107
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 133,
            column: 26
          },
          end: {
            line: 133,
            column: 27
          }
        },
        loc: {
          start: {
            line: 133,
            column: 38
          },
          end: {
            line: 166,
            column: 3
          }
        },
        line: 133
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 145,
            column: 22
          },
          end: {
            line: 145,
            column: 23
          }
        },
        loc: {
          start: {
            line: 145,
            column: 33
          },
          end: {
            line: 145,
            column: 58
          }
        },
        line: 145
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 157,
            column: 22
          },
          end: {
            line: 157,
            column: 23
          }
        },
        loc: {
          start: {
            line: 157,
            column: 33
          },
          end: {
            line: 157,
            column: 57
          }
        },
        line: 157
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 169,
            column: 27
          },
          end: {
            line: 169,
            column: 28
          }
        },
        loc: {
          start: {
            line: 169,
            column: 33
          },
          end: {
            line: 192,
            column: 3
          }
        },
        line: 169
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 195,
            column: 25
          },
          end: {
            line: 195,
            column: 26
          }
        },
        loc: {
          start: {
            line: 195,
            column: 31
          },
          end: {
            line: 216,
            column: 3
          }
        },
        line: 195
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 206,
            column: 15
          },
          end: {
            line: 206,
            column: 16
          }
        },
        loc: {
          start: {
            line: 206,
            column: 21
          },
          end: {
            line: 215,
            column: 5
          }
        },
        line: 206
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 259,
            column: 21
          },
          end: {
            line: 259,
            column: 22
          }
        },
        loc: {
          start: {
            line: 259,
            column: 27
          },
          end: {
            line: 259,
            column: 46
          }
        },
        line: 259
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 266,
            column: 21
          },
          end: {
            line: 266,
            column: 22
          }
        },
        loc: {
          start: {
            line: 266,
            column: 27
          },
          end: {
            line: 266,
            column: 49
          }
        },
        line: 266
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 273,
            column: 21
          },
          end: {
            line: 273,
            column: 22
          }
        },
        loc: {
          start: {
            line: 273,
            column: 27
          },
          end: {
            line: 273,
            column: 47
          }
        },
        line: 273
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 34,
            column: 6
          },
          end: {
            line: 37,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 6
          },
          end: {
            line: 37,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "1": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "2": {
        loc: {
          start: {
            line: 173,
            column: 6
          },
          end: {
            line: 190,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 6
          },
          end: {
            line: 190,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "3": {
        loc: {
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 213,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 213,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 210
      },
      "4": {
        loc: {
          start: {
            line: 311,
            column: 9
          },
          end: {
            line: 316,
            column: 16
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 312,
            column: 10
          },
          end: {
            line: 315,
            column: 17
          }
        }, {
          start: {
            line: 316,
            column: 12
          },
          end: {
            line: 316,
            column: 16
          }
        }],
        line: 311
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "930fc3e3e3a15eb61a3f32712cd199f371418f44"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_n3y6st7dr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_n3y6st7dr();
import React, { useState } from 'react';
import { View, Text, StyleSheet, TouchableOpacity, ScrollView, SafeAreaView, Alert } from 'react-native';
import { captureException, captureMessage, addBreadcrumb, startTransaction, SentryRaw } from '../services/sentryConfig';
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
cov_n3y6st7dr().s[0]++;
var SentryTester = function SentryTester() {
  cov_n3y6st7dr().f[0]++;
  var _ref = (cov_n3y6st7dr().s[1]++, useState('')),
    _ref2 = _slicedToArray(_ref, 2),
    lastAction = _ref2[0],
    setLastAction = _ref2[1];
  cov_n3y6st7dr().s[2]++;
  var triggerError = function triggerError() {
    cov_n3y6st7dr().f[1]++;
    cov_n3y6st7dr().s[3]++;
    try {
      var nullObject = (cov_n3y6st7dr().s[4]++, null);
      cov_n3y6st7dr().s[5]++;
      nullObject.nonExistentMethod();
    } catch (error) {
      cov_n3y6st7dr().s[6]++;
      if (error instanceof Error) {
        cov_n3y6st7dr().b[0][0]++;
        cov_n3y6st7dr().s[7]++;
        captureException(error);
        cov_n3y6st7dr().s[8]++;
        setLastAction(`Error captured: ${error.message}`);
      } else {
        cov_n3y6st7dr().b[0][1]++;
      }
    }
  };
  cov_n3y6st7dr().s[9]++;
  var triggerUnhandledPromiseRejection = function triggerUnhandledPromiseRejection() {
    cov_n3y6st7dr().f[2]++;
    cov_n3y6st7dr().s[10]++;
    setLastAction('Triggering unhandled promise rejection...');
    cov_n3y6st7dr().s[11]++;
    new Promise(function (_, reject) {
      cov_n3y6st7dr().f[3]++;
      cov_n3y6st7dr().s[12]++;
      setTimeout(function () {
        cov_n3y6st7dr().f[4]++;
        cov_n3y6st7dr().s[13]++;
        reject(new Error('This is an unhandled promise rejection'));
      }, 100);
    });
  };
  cov_n3y6st7dr().s[14]++;
  var triggerFatalError = function triggerFatalError() {
    cov_n3y6st7dr().f[5]++;
    cov_n3y6st7dr().s[15]++;
    setLastAction('Triggering fatal error...');
    cov_n3y6st7dr().s[16]++;
    Alert.alert('Trigger Fatal Error', 'This will crash the app. Are you sure?', [{
      text: 'Cancel',
      style: 'cancel'
    }, {
      text: 'Yes, Crash It',
      onPress: function onPress() {
        cov_n3y6st7dr().f[6]++;
        var badArray = (cov_n3y6st7dr().s[17]++, []);
        cov_n3y6st7dr().s[18]++;
        badArray[999999].nonExistentProperty.nonExistentMethod();
      }
    }]);
  };
  cov_n3y6st7dr().s[19]++;
  var sendMessage = function sendMessage(level) {
    cov_n3y6st7dr().f[7]++;
    cov_n3y6st7dr().s[20]++;
    captureMessage(`Test ${level} message from SentryTester`, level, {
      tags: {
        source: 'SentryTester',
        testType: 'message'
      },
      extra: {
        timestamp: new Date().toISOString()
      }
    });
    cov_n3y6st7dr().s[21]++;
    setLastAction(`${level} message sent to Sentry`);
  };
  cov_n3y6st7dr().s[22]++;
  var testBreadcrumbs = function testBreadcrumbs() {
    cov_n3y6st7dr().f[8]++;
    cov_n3y6st7dr().s[23]++;
    addBreadcrumb({
      category: 'test',
      message: 'First breadcrumb',
      level: 'info'
    });
    cov_n3y6st7dr().s[24]++;
    setTimeout(function () {
      cov_n3y6st7dr().f[9]++;
      cov_n3y6st7dr().s[25]++;
      addBreadcrumb({
        category: 'test',
        message: 'Second breadcrumb',
        level: 'info'
      });
    }, 500);
    cov_n3y6st7dr().s[26]++;
    setTimeout(function () {
      cov_n3y6st7dr().f[10]++;
      cov_n3y6st7dr().s[27]++;
      addBreadcrumb({
        category: 'test',
        message: 'Third breadcrumb',
        level: 'warning',
        data: {
          testId: 123,
          action: 'breadcrumb-test'
        }
      });
      cov_n3y6st7dr().s[28]++;
      try {
        cov_n3y6st7dr().s[29]++;
        throw new Error('Error after breadcrumbs');
      } catch (error) {
        cov_n3y6st7dr().s[30]++;
        if (error instanceof Error) {
          cov_n3y6st7dr().b[1][0]++;
          cov_n3y6st7dr().s[31]++;
          captureException(error);
          cov_n3y6st7dr().s[32]++;
          setLastAction('Breadcrumbs test completed with error');
        } else {
          cov_n3y6st7dr().b[1][1]++;
        }
      }
    }, 1000);
    cov_n3y6st7dr().s[33]++;
    setLastAction('Adding breadcrumbs...');
  };
  cov_n3y6st7dr().s[34]++;
  var testPerformance = function () {
    var _ref3 = _asyncToGenerator(function* () {
      cov_n3y6st7dr().f[11]++;
      var transaction = (cov_n3y6st7dr().s[35]++, startTransaction('test-transaction', 'test'));
      cov_n3y6st7dr().s[36]++;
      setLastAction('Starting performance test...');
      var span = (cov_n3y6st7dr().s[37]++, transaction.startChild({
        op: 'test-operation',
        description: 'Test operation for Sentry performance monitoring'
      }));
      cov_n3y6st7dr().s[38]++;
      yield new Promise(function (resolve) {
        cov_n3y6st7dr().f[12]++;
        cov_n3y6st7dr().s[39]++;
        return setTimeout(resolve, 1500);
      });
      cov_n3y6st7dr().s[40]++;
      span.finish();
      var span2 = (cov_n3y6st7dr().s[41]++, transaction.startChild({
        op: 'another-operation',
        description: 'Another test operation'
      }));
      cov_n3y6st7dr().s[42]++;
      yield new Promise(function (resolve) {
        cov_n3y6st7dr().f[13]++;
        cov_n3y6st7dr().s[43]++;
        return setTimeout(resolve, 800);
      });
      cov_n3y6st7dr().s[44]++;
      span2.finish();
      cov_n3y6st7dr().s[45]++;
      transaction.finish();
      cov_n3y6st7dr().s[46]++;
      setLastAction('Performance test completed');
    });
    return function testPerformance() {
      return _ref3.apply(this, arguments);
    };
  }();
  cov_n3y6st7dr().s[47]++;
  var testUserFeedback = function testUserFeedback() {
    cov_n3y6st7dr().f[14]++;
    cov_n3y6st7dr().s[48]++;
    try {
      cov_n3y6st7dr().s[49]++;
      throw new Error('Error for user feedback');
    } catch (error) {
      cov_n3y6st7dr().s[50]++;
      if (error instanceof Error) {
        cov_n3y6st7dr().b[2][0]++;
        var eventId = (cov_n3y6st7dr().s[51]++, SentryRaw.Native.captureException(error));
        cov_n3y6st7dr().s[52]++;
        SentryRaw.Native.showReportDialog({
          eventId: eventId,
          title: 'Report Feedback',
          subtitle: 'Tell us what happened',
          subtitle2: 'Your feedback helps us improve',
          user: {
            email: 'test@example.com',
            name: 'Test User'
          }
        });
        cov_n3y6st7dr().s[53]++;
        setLastAction('User feedback dialog shown');
      } else {
        cov_n3y6st7dr().b[2][1]++;
      }
    }
  };
  cov_n3y6st7dr().s[54]++;
  var testSetContext = function testSetContext() {
    cov_n3y6st7dr().f[15]++;
    cov_n3y6st7dr().s[55]++;
    SentryRaw.Native.setContext('test-context', {
      testKey1: 'testValue1',
      testKey2: true,
      testKey3: 123,
      timestamp: new Date().toISOString()
    });
    cov_n3y6st7dr().s[56]++;
    setLastAction('Context set - will be included with next error');
    cov_n3y6st7dr().s[57]++;
    setTimeout(function () {
      cov_n3y6st7dr().f[16]++;
      cov_n3y6st7dr().s[58]++;
      try {
        cov_n3y6st7dr().s[59]++;
        throw new Error('Error with custom context');
      } catch (error) {
        cov_n3y6st7dr().s[60]++;
        if (error instanceof Error) {
          cov_n3y6st7dr().b[3][0]++;
          cov_n3y6st7dr().s[61]++;
          captureException(error);
          cov_n3y6st7dr().s[62]++;
          setLastAction('Error with custom context captured');
        } else {
          cov_n3y6st7dr().b[3][1]++;
        }
      }
    }, 500);
  };
  cov_n3y6st7dr().s[63]++;
  return _jsx(SafeAreaView, {
    style: styles.container,
    children: _jsxs(ScrollView, {
      contentContainerStyle: styles.scrollContainer,
      children: [_jsxs(View, {
        style: styles.header,
        children: [_jsx(Text, {
          style: styles.title,
          children: "Sentry Testing Tool"
        }), _jsx(Text, {
          style: styles.description,
          children: "Use the buttons below to test Sentry integration features. Check your Sentry dashboard to verify events are being captured."
        })]
      }), _jsxs(View, {
        style: styles.section,
        children: [_jsx(Text, {
          style: styles.sectionTitle,
          children: "Error Capturing"
        }), _jsx(TouchableOpacity, {
          style: styles.button,
          onPress: triggerError,
          children: _jsx(Text, {
            style: styles.buttonText,
            children: "Trigger Handled Error"
          })
        }), _jsx(TouchableOpacity, {
          style: styles.button,
          onPress: triggerUnhandledPromiseRejection,
          children: _jsx(Text, {
            style: styles.buttonText,
            children: "Trigger Unhandled Promise Rejection"
          })
        }), _jsx(TouchableOpacity, {
          style: [styles.button, styles.dangerButton],
          onPress: triggerFatalError,
          children: _jsx(Text, {
            style: styles.buttonText,
            children: "Trigger Fatal Error (App Crash)"
          })
        })]
      }), _jsxs(View, {
        style: styles.section,
        children: [_jsx(Text, {
          style: styles.sectionTitle,
          children: "Message Capturing"
        }), _jsx(TouchableOpacity, {
          style: [styles.button, styles.infoButton],
          onPress: function onPress() {
            cov_n3y6st7dr().f[17]++;
            cov_n3y6st7dr().s[64]++;
            return sendMessage('info');
          },
          children: _jsx(Text, {
            style: styles.buttonText,
            children: "Send Info Message"
          })
        }), _jsx(TouchableOpacity, {
          style: [styles.button, styles.warningButton],
          onPress: function onPress() {
            cov_n3y6st7dr().f[18]++;
            cov_n3y6st7dr().s[65]++;
            return sendMessage('warning');
          },
          children: _jsx(Text, {
            style: styles.buttonText,
            children: "Send Warning Message"
          })
        }), _jsx(TouchableOpacity, {
          style: [styles.button, styles.errorButton],
          onPress: function onPress() {
            cov_n3y6st7dr().f[19]++;
            cov_n3y6st7dr().s[66]++;
            return sendMessage('error');
          },
          children: _jsx(Text, {
            style: styles.buttonText,
            children: "Send Error Message"
          })
        })]
      }), _jsxs(View, {
        style: styles.section,
        children: [_jsx(Text, {
          style: styles.sectionTitle,
          children: "Advanced Features"
        }), _jsx(TouchableOpacity, {
          style: styles.button,
          onPress: testBreadcrumbs,
          children: _jsx(Text, {
            style: styles.buttonText,
            children: "Test Breadcrumbs"
          })
        }), _jsx(TouchableOpacity, {
          style: styles.button,
          onPress: testPerformance,
          children: _jsx(Text, {
            style: styles.buttonText,
            children: "Test Performance Monitoring"
          })
        }), _jsx(TouchableOpacity, {
          style: styles.button,
          onPress: testSetContext,
          children: _jsx(Text, {
            style: styles.buttonText,
            children: "Test Custom Context"
          })
        }), _jsx(TouchableOpacity, {
          style: styles.button,
          onPress: testUserFeedback,
          children: _jsx(Text, {
            style: styles.buttonText,
            children: "Test User Feedback"
          })
        })]
      }), lastAction ? (cov_n3y6st7dr().b[4][0]++, _jsxs(View, {
        style: styles.resultContainer,
        children: [_jsx(Text, {
          style: styles.resultLabel,
          children: "Last Action:"
        }), _jsx(Text, {
          style: styles.resultText,
          children: lastAction
        })]
      })) : (cov_n3y6st7dr().b[4][1]++, null)]
    })
  });
};
var styles = (cov_n3y6st7dr().s[67]++, StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#f8f9fa'
  },
  scrollContainer: {
    padding: 16
  },
  header: {
    marginBottom: 24
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#343a40',
    marginBottom: 8
  },
  description: {
    fontSize: 16,
    color: '#6c757d',
    lineHeight: 22
  },
  section: {
    marginBottom: 24,
    backgroundColor: '#ffffff',
    borderRadius: 8,
    padding: 16,
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 2
    },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 2
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: '600',
    color: '#343a40',
    marginBottom: 12
  },
  button: {
    backgroundColor: '#007bff',
    borderRadius: 8,
    padding: 14,
    alignItems: 'center',
    marginBottom: 10
  },
  dangerButton: {
    backgroundColor: '#dc3545'
  },
  infoButton: {
    backgroundColor: '#17a2b8'
  },
  warningButton: {
    backgroundColor: '#ffc107'
  },
  errorButton: {
    backgroundColor: '#dc3545'
  },
  buttonText: {
    color: '#ffffff',
    fontSize: 16,
    fontWeight: '600'
  },
  resultContainer: {
    backgroundColor: '#e9ecef',
    borderRadius: 8,
    padding: 16,
    marginTop: 8,
    marginBottom: 24
  },
  resultLabel: {
    fontSize: 14,
    fontWeight: '600',
    color: '#495057',
    marginBottom: 4
  },
  resultText: {
    fontSize: 14,
    color: '#212529'
  }
}));
export default SentryTester;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,