4860b19e22b6ae7a23679713fe102c2f
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
function cov_22yuiicert() {
  var path = "/Users/kevin/card-show-finder/src/services/errorService.ts";
  var hash = "2f38730fd09d849d94e683ec636b3f3276dcc46e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/services/errorService.ts",
    statementMap: {
      "0": {
        start: {
          line: 50,
          column: 42
        },
        end: {
          line: 55,
          column: 1
        }
      },
      "1": {
        start: {
          line: 58,
          column: 40
        },
        end: {
          line: 58,
          column: 60
        }
      },
      "2": {
        start: {
          line: 64,
          column: 2
        },
        end: {
          line: 64,
          column: 50
        }
      },
      "3": {
        start: {
          line: 76,
          column: 2
        },
        end: {
          line: 86,
          column: 3
        }
      },
      "4": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 85,
          column: 6
        }
      },
      "5": {
        start: {
          line: 89,
          column: 2
        },
        end: {
          line: 98,
          column: 3
        }
      },
      "6": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 97,
          column: 6
        }
      },
      "7": {
        start: {
          line: 101,
          column: 2
        },
        end: {
          line: 108,
          column: 4
        }
      },
      "8": {
        start: {
          line: 118,
          column: 29
        },
        end: {
          line: 125,
          column: 3
        }
      },
      "9": {
        start: {
          line: 127,
          column: 2
        },
        end: {
          line: 127,
          column: 21
        }
      },
      "10": {
        start: {
          line: 128,
          column: 2
        },
        end: {
          line: 128,
          column: 18
        }
      },
      "11": {
        start: {
          line: 138,
          column: 29
        },
        end: {
          line: 145,
          column: 3
        }
      },
      "12": {
        start: {
          line: 147,
          column: 2
        },
        end: {
          line: 147,
          column: 21
        }
      },
      "13": {
        start: {
          line: 148,
          column: 2
        },
        end: {
          line: 148,
          column: 18
        }
      },
      "14": {
        start: {
          line: 158,
          column: 29
        },
        end: {
          line: 164,
          column: 3
        }
      },
      "15": {
        start: {
          line: 166,
          column: 2
        },
        end: {
          line: 166,
          column: 21
        }
      },
      "16": {
        start: {
          line: 167,
          column: 2
        },
        end: {
          line: 167,
          column: 18
        }
      },
      "17": {
        start: {
          line: 177,
          column: 29
        },
        end: {
          line: 183,
          column: 3
        }
      },
      "18": {
        start: {
          line: 185,
          column: 2
        },
        end: {
          line: 185,
          column: 21
        }
      },
      "19": {
        start: {
          line: 186,
          column: 2
        },
        end: {
          line: 186,
          column: 18
        }
      },
      "20": {
        start: {
          line: 194,
          column: 2
        },
        end: {
          line: 204,
          column: 3
        }
      },
      "21": {
        start: {
          line: 195,
          column: 4
        },
        end: {
          line: 203,
          column: 6
        }
      },
      "22": {
        start: {
          line: 207,
          column: 2
        },
        end: {
          line: 211,
          column: 3
        }
      },
      "23": {
        start: {
          line: 208,
          column: 4
        },
        end: {
          line: 210,
          column: 6
        }
      },
      "24": {
        start: {
          line: 209,
          column: 6
        },
        end: {
          line: 209,
          column: 64
        }
      },
      "25": {
        start: {
          line: 214,
          column: 2
        },
        end: {
          line: 217,
          column: 3
        }
      },
      "26": {
        start: {
          line: 224,
          column: 2
        },
        end: {
          line: 242,
          column: 3
        }
      },
      "27": {
        start: {
          line: 226,
          column: 29
        },
        end: {
          line: 226,
          column: 69
        }
      },
      "28": {
        start: {
          line: 227,
          column: 35
        },
        end: {
          line: 227,
          column: 87
        }
      },
      "29": {
        start: {
          line: 230,
          column: 4
        },
        end: {
          line: 230,
          column: 29
        }
      },
      "30": {
        start: {
          line: 233,
          column: 4
        },
        end: {
          line: 235,
          column: 5
        }
      },
      "31": {
        start: {
          line: 234,
          column: 6
        },
        end: {
          line: 234,
          column: 72
        }
      },
      "32": {
        start: {
          line: 238,
          column: 4
        },
        end: {
          line: 238,
          column: 75
        }
      },
      "33": {
        start: {
          line: 241,
          column: 4
        },
        end: {
          line: 241,
          column: 62
        }
      },
      "34": {
        start: {
          line: 249,
          column: 2
        },
        end: {
          line: 255,
          column: 3
        }
      },
      "35": {
        start: {
          line: 250,
          column: 29
        },
        end: {
          line: 250,
          column: 69
        }
      },
      "36": {
        start: {
          line: 251,
          column: 4
        },
        end: {
          line: 251,
          column: 64
        }
      },
      "37": {
        start: {
          line: 253,
          column: 4
        },
        end: {
          line: 253,
          column: 68
        }
      },
      "38": {
        start: {
          line: 254,
          column: 4
        },
        end: {
          line: 254,
          column: 14
        }
      },
      "39": {
        start: {
          line: 262,
          column: 2
        },
        end: {
          line: 266,
          column: 3
        }
      },
      "40": {
        start: {
          line: 263,
          column: 4
        },
        end: {
          line: 263,
          column: 65
        }
      },
      "41": {
        start: {
          line: 265,
          column: 4
        },
        end: {
          line: 265,
          column: 66
        }
      },
      "42": {
        start: {
          line: 274,
          column: 57
        },
        end: {
          line: 281,
          column: 3
        }
      },
      "43": {
        start: {
          line: 284,
          column: 2
        },
        end: {
          line: 315,
          column: 3
        }
      },
      "44": {
        start: {
          line: 285,
          column: 4
        },
        end: {
          line: 314,
          column: 5
        }
      },
      "45": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 287,
          column: 64
        }
      },
      "46": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 289,
          column: 88
        }
      },
      "47": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 291,
          column: 68
        }
      },
      "48": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 293,
          column: 88
        }
      },
      "49": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 295,
          column: 55
        }
      },
      "50": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 300,
          column: 82
        }
      },
      "51": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 302,
          column: 69
        }
      },
      "52": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 304,
          column: 55
        }
      },
      "53": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 306,
          column: 60
        }
      },
      "54": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 308,
          column: 55
        }
      },
      "55": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 313,
          column: 44
        }
      },
      "56": {
        start: {
          line: 318,
          column: 2
        },
        end: {
          line: 320,
          column: 38
        }
      },
      "57": {
        start: {
          line: 327,
          column: 2
        },
        end: {
          line: 333,
          column: 4
        }
      },
      "58": {
        start: {
          line: 340,
          column: 2
        },
        end: {
          line: 347,
          column: 3
        }
      },
      "59": {
        start: {
          line: 342,
          column: 4
        },
        end: {
          line: 342,
          column: 70
        }
      },
      "60": {
        start: {
          line: 342,
          column: 38
        },
        end: {
          line: 342,
          column: 70
        }
      },
      "61": {
        start: {
          line: 343,
          column: 4
        },
        end: {
          line: 343,
          column: 105
        }
      },
      "62": {
        start: {
          line: 343,
          column: 73
        },
        end: {
          line: 343,
          column: 105
        }
      },
      "63": {
        start: {
          line: 344,
          column: 4
        },
        end: {
          line: 344,
          column: 74
        }
      },
      "64": {
        start: {
          line: 344,
          column: 42
        },
        end: {
          line: 344,
          column: 74
        }
      },
      "65": {
        start: {
          line: 346,
          column: 4
        },
        end: {
          line: 346,
          column: 34
        }
      },
      "66": {
        start: {
          line: 350,
          column: 14
        },
        end: {
          line: 350,
          column: 41
        }
      },
      "67": {
        start: {
          line: 351,
          column: 2
        },
        end: {
          line: 351,
          column: 90
        }
      },
      "68": {
        start: {
          line: 351,
          column: 61
        },
        end: {
          line: 351,
          column: 90
        }
      },
      "69": {
        start: {
          line: 352,
          column: 2
        },
        end: {
          line: 352,
          column: 117
        }
      },
      "70": {
        start: {
          line: 352,
          column: 81
        },
        end: {
          line: 352,
          column: 117
        }
      },
      "71": {
        start: {
          line: 353,
          column: 2
        },
        end: {
          line: 353,
          column: 118
        }
      },
      "72": {
        start: {
          line: 353,
          column: 86
        },
        end: {
          line: 353,
          column: 118
        }
      },
      "73": {
        start: {
          line: 354,
          column: 2
        },
        end: {
          line: 354,
          column: 89
        }
      },
      "74": {
        start: {
          line: 354,
          column: 57
        },
        end: {
          line: 354,
          column: 89
        }
      },
      "75": {
        start: {
          line: 356,
          column: 2
        },
        end: {
          line: 356,
          column: 31
        }
      },
      "76": {
        start: {
          line: 363,
          column: 2
        },
        end: {
          line: 363,
          column: 29
        }
      },
      "77": {
        start: {
          line: 363,
          column: 16
        },
        end: {
          line: 363,
          column: 29
        }
      },
      "78": {
        start: {
          line: 366,
          column: 25
        },
        end: {
          line: 399,
          column: 3
        }
      },
      "79": {
        start: {
          line: 402,
          column: 23
        },
        end: {
          line: 402,
          column: 44
        }
      },
      "80": {
        start: {
          line: 403,
          column: 2
        },
        end: {
          line: 403,
          column: 81
        }
      },
      "81": {
        start: {
          line: 403,
          column: 38
        },
        end: {
          line: 403,
          column: 79
        }
      },
      "82": {
        start: {
          line: 413,
          column: 2
        },
        end: {
          line: 427,
          column: 4
        }
      },
      "83": {
        start: {
          line: 414,
          column: 4
        },
        end: {
          line: 426,
          column: 5
        }
      },
      "84": {
        start: {
          line: 415,
          column: 6
        },
        end: {
          line: 415,
          column: 31
        }
      },
      "85": {
        start: {
          line: 417,
          column: 23
        },
        end: {
          line: 417,
          column: 82
        }
      },
      "86": {
        start: {
          line: 419,
          column: 6
        },
        end: {
          line: 423,
          column: 7
        }
      },
      "87": {
        start: {
          line: 420,
          column: 8
        },
        end: {
          line: 420,
          column: 31
        }
      },
      "88": {
        start: {
          line: 422,
          column: 8
        },
        end: {
          line: 422,
          column: 27
        }
      },
      "89": {
        start: {
          line: 425,
          column: 6
        },
        end: {
          line: 425,
          column: 21
        }
      }
    },
    fnMap: {
      "0": {
        name: "configureErrorService",
        decl: {
          start: {
            line: 63,
            column: 16
          },
          end: {
            line: 63,
            column: 37
          }
        },
        loc: {
          start: {
            line: 63,
            column: 81
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 63
      },
      "1": {
        name: "handleSupabaseError",
        decl: {
          start: {
            line: 70,
            column: 16
          },
          end: {
            line: 70,
            column: 35
          }
        },
        loc: {
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 109,
            column: 1
          }
        },
        line: 74
      },
      "2": {
        name: "handleNetworkError",
        decl: {
          start: {
            line: 114,
            column: 16
          },
          end: {
            line: 114,
            column: 34
          }
        },
        loc: {
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 129,
            column: 1
          }
        },
        line: 117
      },
      "3": {
        name: "handleAuthError",
        decl: {
          start: {
            line: 134,
            column: 16
          },
          end: {
            line: 134,
            column: 31
          }
        },
        loc: {
          start: {
            line: 137,
            column: 12
          },
          end: {
            line: 149,
            column: 1
          }
        },
        line: 137
      },
      "4": {
        name: "createValidationError",
        decl: {
          start: {
            line: 154,
            column: 16
          },
          end: {
            line: 154,
            column: 37
          }
        },
        loc: {
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 168,
            column: 1
          }
        },
        line: 157
      },
      "5": {
        name: "createPermissionError",
        decl: {
          start: {
            line: 173,
            column: 16
          },
          end: {
            line: 173,
            column: 37
          }
        },
        loc: {
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 187,
            column: 1
          }
        },
        line: 176
      },
      "6": {
        name: "logError",
        decl: {
          start: {
            line: 192,
            column: 16
          },
          end: {
            line: 192,
            column: 24
          }
        },
        loc: {
          start: {
            line: 192,
            column: 48
          },
          end: {
            line: 218,
            column: 1
          }
        },
        line: 192
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 208,
            column: 37
          },
          end: {
            line: 208,
            column: 38
          }
        },
        loc: {
          start: {
            line: 209,
            column: 6
          },
          end: {
            line: 209,
            column: 64
          }
        },
        line: 209
      },
      "8": {
        name: "storeErrorInStorage",
        decl: {
          start: {
            line: 223,
            column: 15
          },
          end: {
            line: 223,
            column: 34
          }
        },
        loc: {
          start: {
            line: 223,
            column: 67
          },
          end: {
            line: 243,
            column: 1
          }
        },
        line: 223
      },
      "9": {
        name: "getStoredErrors",
        decl: {
          start: {
            line: 248,
            column: 22
          },
          end: {
            line: 248,
            column: 37
          }
        },
        loc: {
          start: {
            line: 248,
            column: 61
          },
          end: {
            line: 256,
            column: 1
          }
        },
        line: 248
      },
      "10": {
        name: "clearStoredErrors",
        decl: {
          start: {
            line: 261,
            column: 22
          },
          end: {
            line: 261,
            column: 39
          }
        },
        loc: {
          start: {
            line: 261,
            column: 57
          },
          end: {
            line: 267,
            column: 1
          }
        },
        line: 261
      },
      "11": {
        name: "getUserFriendlyMessage",
        decl: {
          start: {
            line: 272,
            column: 16
          },
          end: {
            line: 272,
            column: 38
          }
        },
        loc: {
          start: {
            line: 272,
            column: 64
          },
          end: {
            line: 321,
            column: 1
          }
        },
        line: 272
      },
      "12": {
        name: "isPostgrestError",
        decl: {
          start: {
            line: 326,
            column: 9
          },
          end: {
            line: 326,
            column: 25
          }
        },
        loc: {
          start: {
            line: 326,
            column: 63
          },
          end: {
            line: 334,
            column: 1
          }
        },
        line: 326
      },
      "13": {
        name: "determineErrorCategory",
        decl: {
          start: {
            line: 339,
            column: 9
          },
          end: {
            line: 339,
            column: 31
          }
        },
        loc: {
          start: {
            line: 339,
            column: 78
          },
          end: {
            line: 357,
            column: 1
          }
        },
        line: 339
      },
      "14": {
        name: "isUserFriendlyMessage",
        decl: {
          start: {
            line: 362,
            column: 9
          },
          end: {
            line: 362,
            column: 30
          }
        },
        loc: {
          start: {
            line: 362,
            column: 57
          },
          end: {
            line: 404,
            column: 1
          }
        },
        line: 362
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 403,
            column: 30
          },
          end: {
            line: 403,
            column: 31
          }
        },
        loc: {
          start: {
            line: 403,
            column: 38
          },
          end: {
            line: 403,
            column: 79
          }
        },
        line: 403
      },
      "16": {
        name: "withErrorHandling",
        decl: {
          start: {
            line: 409,
            column: 16
          },
          end: {
            line: 409,
            column: 33
          }
        },
        loc: {
          start: {
            line: 412,
            column: 54
          },
          end: {
            line: 428,
            column: 1
          }
        },
        line: 412
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 413,
            column: 9
          },
          end: {
            line: 413,
            column: 10
          }
        },
        loc: {
          start: {
            line: 413,
            column: 67
          },
          end: {
            line: 427,
            column: 3
          }
        },
        line: 413
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 73,
            column: 2
          },
          end: {
            line: 73,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 73,
            column: 28
          },
          end: {
            line: 73,
            column: 47
          }
        }],
        line: 73
      },
      "1": {
        loc: {
          start: {
            line: 76,
            column: 2
          },
          end: {
            line: 86,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 2
          },
          end: {
            line: 86,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "2": {
        loc: {
          start: {
            line: 78,
            column: 15
          },
          end: {
            line: 78,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 15
          },
          end: {
            line: 78,
            column: 28
          }
        }, {
          start: {
            line: 78,
            column: 32
          },
          end: {
            line: 78,
            column: 59
          }
        }],
        line: 78
      },
      "3": {
        loc: {
          start: {
            line: 89,
            column: 2
          },
          end: {
            line: 98,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 2
          },
          end: {
            line: 98,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "4": {
        loc: {
          start: {
            line: 91,
            column: 15
          },
          end: {
            line: 91,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 15
          },
          end: {
            line: 91,
            column: 28
          }
        }, {
          start: {
            line: 91,
            column: 32
          },
          end: {
            line: 91,
            column: 62
          }
        }],
        line: 91
      },
      "5": {
        loc: {
          start: {
            line: 119,
            column: 13
          },
          end: {
            line: 119,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 119,
            column: 38
          },
          end: {
            line: 119,
            column: 51
          }
        }, {
          start: {
            line: 119,
            column: 54
          },
          end: {
            line: 119,
            column: 81
          }
        }],
        line: 119
      },
      "6": {
        loc: {
          start: {
            line: 139,
            column: 13
          },
          end: {
            line: 139,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 139,
            column: 38
          },
          end: {
            line: 139,
            column: 51
          }
        }, {
          start: {
            line: 139,
            column: 54
          },
          end: {
            line: 139,
            column: 77
          }
        }],
        line: 139
      },
      "7": {
        loc: {
          start: {
            line: 174,
            column: 2
          },
          end: {
            line: 174,
            column: 71
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 174,
            column: 20
          },
          end: {
            line: 174,
            column: 71
          }
        }],
        line: 174
      },
      "8": {
        loc: {
          start: {
            line: 194,
            column: 2
          },
          end: {
            line: 204,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 2
          },
          end: {
            line: 204,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "9": {
        loc: {
          start: {
            line: 207,
            column: 2
          },
          end: {
            line: 211,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 2
          },
          end: {
            line: 211,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "10": {
        loc: {
          start: {
            line: 214,
            column: 2
          },
          end: {
            line: 217,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 2
          },
          end: {
            line: 217,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "11": {
        loc: {
          start: {
            line: 227,
            column: 35
          },
          end: {
            line: 227,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 227,
            column: 54
          },
          end: {
            line: 227,
            column: 82
          }
        }, {
          start: {
            line: 227,
            column: 85
          },
          end: {
            line: 227,
            column: 87
          }
        }],
        line: 227
      },
      "12": {
        loc: {
          start: {
            line: 233,
            column: 4
          },
          end: {
            line: 235,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 4
          },
          end: {
            line: 235,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 233
      },
      "13": {
        loc: {
          start: {
            line: 251,
            column: 11
          },
          end: {
            line: 251,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 251,
            column: 30
          },
          end: {
            line: 251,
            column: 58
          }
        }, {
          start: {
            line: 251,
            column: 61
          },
          end: {
            line: 251,
            column: 63
          }
        }],
        line: 251
      },
      "14": {
        loc: {
          start: {
            line: 284,
            column: 2
          },
          end: {
            line: 315,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 284,
            column: 2
          },
          end: {
            line: 315,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 284
      },
      "15": {
        loc: {
          start: {
            line: 285,
            column: 4
          },
          end: {
            line: 314,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 286,
            column: 6
          },
          end: {
            line: 287,
            column: 64
          }
        }, {
          start: {
            line: 288,
            column: 6
          },
          end: {
            line: 289,
            column: 88
          }
        }, {
          start: {
            line: 290,
            column: 6
          },
          end: {
            line: 291,
            column: 68
          }
        }, {
          start: {
            line: 292,
            column: 6
          },
          end: {
            line: 293,
            column: 88
          }
        }, {
          start: {
            line: 294,
            column: 6
          },
          end: {
            line: 295,
            column: 55
          }
        }, {
          start: {
            line: 296,
            column: 6
          },
          end: {
            line: 296,
            column: 17
          }
        }, {
          start: {
            line: 297,
            column: 6
          },
          end: {
            line: 297,
            column: 32
          }
        }, {
          start: {
            line: 298,
            column: 6
          },
          end: {
            line: 298,
            column: 33
          }
        }, {
          start: {
            line: 299,
            column: 6
          },
          end: {
            line: 300,
            column: 82
          }
        }, {
          start: {
            line: 301,
            column: 6
          },
          end: {
            line: 302,
            column: 69
          }
        }, {
          start: {
            line: 303,
            column: 6
          },
          end: {
            line: 304,
            column: 55
          }
        }, {
          start: {
            line: 305,
            column: 6
          },
          end: {
            line: 306,
            column: 60
          }
        }, {
          start: {
            line: 307,
            column: 6
          },
          end: {
            line: 308,
            column: 55
          }
        }, {
          start: {
            line: 309,
            column: 6
          },
          end: {
            line: 313,
            column: 44
          }
        }],
        line: 285
      },
      "16": {
        loc: {
          start: {
            line: 311,
            column: 15
          },
          end: {
            line: 313,
            column: 43
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 312,
            column: 12
          },
          end: {
            line: 312,
            column: 25
          }
        }, {
          start: {
            line: 313,
            column: 12
          },
          end: {
            line: 313,
            column: 43
          }
        }],
        line: 311
      },
      "17": {
        loc: {
          start: {
            line: 318,
            column: 9
          },
          end: {
            line: 320,
            column: 37
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 319,
            column: 6
          },
          end: {
            line: 319,
            column: 19
          }
        }, {
          start: {
            line: 320,
            column: 6
          },
          end: {
            line: 320,
            column: 37
          }
        }],
        line: 318
      },
      "18": {
        loc: {
          start: {
            line: 328,
            column: 4
          },
          end: {
            line: 332,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 328,
            column: 4
          },
          end: {
            line: 328,
            column: 9
          }
        }, {
          start: {
            line: 329,
            column: 4
          },
          end: {
            line: 329,
            column: 29
          }
        }, {
          start: {
            line: 330,
            column: 4
          },
          end: {
            line: 330,
            column: 19
          }
        }, {
          start: {
            line: 331,
            column: 4
          },
          end: {
            line: 331,
            column: 22
          }
        }, {
          start: {
            line: 332,
            column: 4
          },
          end: {
            line: 332,
            column: 22
          }
        }],
        line: 328
      },
      "19": {
        loc: {
          start: {
            line: 340,
            column: 2
          },
          end: {
            line: 347,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 340,
            column: 2
          },
          end: {
            line: 347,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 340
      },
      "20": {
        loc: {
          start: {
            line: 342,
            column: 4
          },
          end: {
            line: 342,
            column: 70
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 342,
            column: 4
          },
          end: {
            line: 342,
            column: 70
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 342
      },
      "21": {
        loc: {
          start: {
            line: 343,
            column: 4
          },
          end: {
            line: 343,
            column: 105
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 343,
            column: 4
          },
          end: {
            line: 343,
            column: 105
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 343
      },
      "22": {
        loc: {
          start: {
            line: 343,
            column: 8
          },
          end: {
            line: 343,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 343,
            column: 8
          },
          end: {
            line: 343,
            column: 36
          }
        }, {
          start: {
            line: 343,
            column: 40
          },
          end: {
            line: 343,
            column: 71
          }
        }],
        line: 343
      },
      "23": {
        loc: {
          start: {
            line: 344,
            column: 4
          },
          end: {
            line: 344,
            column: 74
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 4
          },
          end: {
            line: 344,
            column: 74
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 344
      },
      "24": {
        loc: {
          start: {
            line: 351,
            column: 2
          },
          end: {
            line: 351,
            column: 90
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 351,
            column: 2
          },
          end: {
            line: 351,
            column: 90
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 351
      },
      "25": {
        loc: {
          start: {
            line: 351,
            column: 6
          },
          end: {
            line: 351,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 351,
            column: 6
          },
          end: {
            line: 351,
            column: 29
          }
        }, {
          start: {
            line: 351,
            column: 33
          },
          end: {
            line: 351,
            column: 59
          }
        }],
        line: 351
      },
      "26": {
        loc: {
          start: {
            line: 352,
            column: 2
          },
          end: {
            line: 352,
            column: 117
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 352,
            column: 2
          },
          end: {
            line: 352,
            column: 117
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 352
      },
      "27": {
        loc: {
          start: {
            line: 352,
            column: 6
          },
          end: {
            line: 352,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 352,
            column: 6
          },
          end: {
            line: 352,
            column: 26
          }
        }, {
          start: {
            line: 352,
            column: 30
          },
          end: {
            line: 352,
            column: 51
          }
        }, {
          start: {
            line: 352,
            column: 55
          },
          end: {
            line: 352,
            column: 79
          }
        }],
        line: 352
      },
      "28": {
        loc: {
          start: {
            line: 353,
            column: 2
          },
          end: {
            line: 353,
            column: 118
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 353,
            column: 2
          },
          end: {
            line: 353,
            column: 118
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 353
      },
      "29": {
        loc: {
          start: {
            line: 353,
            column: 6
          },
          end: {
            line: 353,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 353,
            column: 6
          },
          end: {
            line: 353,
            column: 32
          }
        }, {
          start: {
            line: 353,
            column: 36
          },
          end: {
            line: 353,
            column: 58
          }
        }, {
          start: {
            line: 353,
            column: 62
          },
          end: {
            line: 353,
            column: 84
          }
        }],
        line: 353
      },
      "30": {
        loc: {
          start: {
            line: 354,
            column: 2
          },
          end: {
            line: 354,
            column: 89
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 354,
            column: 2
          },
          end: {
            line: 354,
            column: 89
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 354
      },
      "31": {
        loc: {
          start: {
            line: 354,
            column: 6
          },
          end: {
            line: 354,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 354,
            column: 6
          },
          end: {
            line: 354,
            column: 27
          }
        }, {
          start: {
            line: 354,
            column: 31
          },
          end: {
            line: 354,
            column: 55
          }
        }],
        line: 354
      },
      "32": {
        loc: {
          start: {
            line: 363,
            column: 2
          },
          end: {
            line: 363,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 363,
            column: 2
          },
          end: {
            line: 363,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 363
      },
      "33": {
        loc: {
          start: {
            line: 419,
            column: 6
          },
          end: {
            line: 423,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 419,
            column: 6
          },
          end: {
            line: 423,
            column: 7
          }
        }, {
          start: {
            line: 421,
            column: 13
          },
          end: {
            line: 423,
            column: 7
          }
        }],
        line: 419
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0, 0, 0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0, 0],
      "28": [0, 0],
      "29": [0, 0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2f38730fd09d849d94e683ec636b3f3276dcc46e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_22yuiicert = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_22yuiicert();
import AsyncStorage from '@react-native-async-storage/async-storage';
export var ErrorSeverity = function (ErrorSeverity) {
  ErrorSeverity["INFO"] = "info";
  ErrorSeverity["WARNING"] = "warning";
  ErrorSeverity["ERROR"] = "error";
  ErrorSeverity["CRITICAL"] = "critical";
  return ErrorSeverity;
}({});
export var ErrorCategory = function (ErrorCategory) {
  ErrorCategory["DATABASE"] = "database";
  ErrorCategory["AUTHENTICATION"] = "authentication";
  ErrorCategory["NETWORK"] = "network";
  ErrorCategory["VALIDATION"] = "validation";
  ErrorCategory["PERMISSION"] = "permission";
  ErrorCategory["UNKNOWN"] = "unknown";
  return ErrorCategory;
}({});
var defaultConfig = (cov_22yuiicert().s[0]++, {
  enableConsoleLogging: true,
  enableRemoteLogging: false,
  enableStorageLogging: true,
  maxStoredErrors: 100
});
var currentConfig = (cov_22yuiicert().s[1]++, Object.assign({}, defaultConfig));
export function configureErrorService(config) {
  cov_22yuiicert().f[0]++;
  cov_22yuiicert().s[2]++;
  currentConfig = Object.assign({}, currentConfig, config);
}
export function handleSupabaseError(error, context) {
  var severity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : (cov_22yuiicert().b[0][0]++, ErrorSeverity.ERROR);
  cov_22yuiicert().f[1]++;
  cov_22yuiicert().s[3]++;
  if (isPostgrestError(error)) {
    cov_22yuiicert().b[1][0]++;
    cov_22yuiicert().s[4]++;
    return {
      message: (cov_22yuiicert().b[2][0]++, error.message) || (cov_22yuiicert().b[2][1]++, 'Database operation failed'),
      code: error.code,
      category: determineErrorCategory(error),
      severity: severity,
      originalError: error,
      context: context,
      timestamp: new Date()
    };
  } else {
    cov_22yuiicert().b[1][1]++;
  }
  cov_22yuiicert().s[5]++;
  if (error instanceof Error) {
    cov_22yuiicert().b[3][0]++;
    cov_22yuiicert().s[6]++;
    return {
      message: (cov_22yuiicert().b[4][0]++, error.message) || (cov_22yuiicert().b[4][1]++, 'An unexpected error occurred'),
      category: ErrorCategory.UNKNOWN,
      severity: severity,
      originalError: error,
      context: context,
      timestamp: new Date()
    };
  } else {
    cov_22yuiicert().b[3][1]++;
  }
  cov_22yuiicert().s[7]++;
  return {
    message: 'An unknown error occurred',
    category: ErrorCategory.UNKNOWN,
    severity: severity,
    originalError: error,
    context: context,
    timestamp: new Date()
  };
}
export function handleNetworkError(error, context) {
  cov_22yuiicert().f[2]++;
  var appError = (cov_22yuiicert().s[8]++, {
    message: error instanceof Error ? (cov_22yuiicert().b[5][0]++, error.message) : (cov_22yuiicert().b[5][1]++, 'Network connection failed'),
    category: ErrorCategory.NETWORK,
    severity: ErrorSeverity.ERROR,
    originalError: error,
    context: context,
    timestamp: new Date()
  });
  cov_22yuiicert().s[9]++;
  logError(appError);
  cov_22yuiicert().s[10]++;
  return appError;
}
export function handleAuthError(error, context) {
  cov_22yuiicert().f[3]++;
  var appError = (cov_22yuiicert().s[11]++, {
    message: error instanceof Error ? (cov_22yuiicert().b[6][0]++, error.message) : (cov_22yuiicert().b[6][1]++, 'Authentication failed'),
    category: ErrorCategory.AUTHENTICATION,
    severity: ErrorSeverity.ERROR,
    originalError: error,
    context: context,
    timestamp: new Date()
  });
  cov_22yuiicert().s[12]++;
  logError(appError);
  cov_22yuiicert().s[13]++;
  return appError;
}
export function createValidationError(message, context) {
  cov_22yuiicert().f[4]++;
  var appError = (cov_22yuiicert().s[14]++, {
    message: message,
    category: ErrorCategory.VALIDATION,
    severity: ErrorSeverity.WARNING,
    context: context,
    timestamp: new Date()
  });
  cov_22yuiicert().s[15]++;
  logError(appError);
  cov_22yuiicert().s[16]++;
  return appError;
}
export function createPermissionError() {
  var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (cov_22yuiicert().b[7][0]++, 'You do not have permission to perform this action');
  var context = arguments.length > 1 ? arguments[1] : undefined;
  cov_22yuiicert().f[5]++;
  var appError = (cov_22yuiicert().s[17]++, {
    message: message,
    category: ErrorCategory.PERMISSION,
    severity: ErrorSeverity.WARNING,
    context: context,
    timestamp: new Date()
  });
  cov_22yuiicert().s[18]++;
  logError(appError);
  cov_22yuiicert().s[19]++;
  return appError;
}
export function logError(error) {
  cov_22yuiicert().f[6]++;
  cov_22yuiicert().s[20]++;
  if (currentConfig.enableConsoleLogging) {
    cov_22yuiicert().b[8][0]++;
    cov_22yuiicert().s[21]++;
    console.error(`[${error.severity.toUpperCase()}] [${error.category}] ${error.message}`, {
      code: error.code,
      context: error.context,
      timestamp: error.timestamp,
      originalError: error.originalError
    });
  } else {
    cov_22yuiicert().b[8][1]++;
  }
  cov_22yuiicert().s[22]++;
  if (currentConfig.enableStorageLogging) {
    cov_22yuiicert().b[9][0]++;
    cov_22yuiicert().s[23]++;
    storeErrorInStorage(error).catch(function (e) {
      cov_22yuiicert().f[7]++;
      cov_22yuiicert().s[24]++;
      return console.error('Failed to store error in AsyncStorage:', e);
    });
  } else {
    cov_22yuiicert().b[9][1]++;
  }
  cov_22yuiicert().s[25]++;
  if (currentConfig.enableRemoteLogging) {
    cov_22yuiicert().b[10][0]++;
  } else {
    cov_22yuiicert().b[10][1]++;
  }
}
function storeErrorInStorage(_x) {
  return _storeErrorInStorage.apply(this, arguments);
}
function _storeErrorInStorage() {
  _storeErrorInStorage = _asyncToGenerator(function* (error) {
    cov_22yuiicert().f[8]++;
    cov_22yuiicert().s[26]++;
    try {
      var storedErrorsJson = (cov_22yuiicert().s[27]++, yield AsyncStorage.getItem('app_errors'));
      var storedErrors = (cov_22yuiicert().s[28]++, storedErrorsJson ? (cov_22yuiicert().b[11][0]++, JSON.parse(storedErrorsJson)) : (cov_22yuiicert().b[11][1]++, []));
      cov_22yuiicert().s[29]++;
      storedErrors.push(error);
      cov_22yuiicert().s[30]++;
      if (storedErrors.length > currentConfig.maxStoredErrors) {
        cov_22yuiicert().b[12][0]++;
        cov_22yuiicert().s[31]++;
        storedErrors = storedErrors.slice(-currentConfig.maxStoredErrors);
      } else {
        cov_22yuiicert().b[12][1]++;
      }
      cov_22yuiicert().s[32]++;
      yield AsyncStorage.setItem('app_errors', JSON.stringify(storedErrors));
    } catch (_e) {
      cov_22yuiicert().s[33]++;
      console.error('Error storing error in AsyncStorage:', _e);
    }
  });
  return _storeErrorInStorage.apply(this, arguments);
}
export function getStoredErrors() {
  return _getStoredErrors.apply(this, arguments);
}
function _getStoredErrors() {
  _getStoredErrors = _asyncToGenerator(function* () {
    cov_22yuiicert().f[9]++;
    cov_22yuiicert().s[34]++;
    try {
      var storedErrorsJson = (cov_22yuiicert().s[35]++, yield AsyncStorage.getItem('app_errors'));
      cov_22yuiicert().s[36]++;
      return storedErrorsJson ? (cov_22yuiicert().b[13][0]++, JSON.parse(storedErrorsJson)) : (cov_22yuiicert().b[13][1]++, []);
    } catch (_e) {
      cov_22yuiicert().s[37]++;
      console.error('Error retrieving errors from AsyncStorage:', _e);
      cov_22yuiicert().s[38]++;
      return [];
    }
  });
  return _getStoredErrors.apply(this, arguments);
}
export function clearStoredErrors() {
  return _clearStoredErrors.apply(this, arguments);
}
function _clearStoredErrors() {
  _clearStoredErrors = _asyncToGenerator(function* () {
    cov_22yuiicert().f[10]++;
    cov_22yuiicert().s[39]++;
    try {
      cov_22yuiicert().s[40]++;
      yield AsyncStorage.setItem('app_errors', JSON.stringify([]));
    } catch (_e) {
      cov_22yuiicert().s[41]++;
      console.error('Error clearing errors from AsyncStorage:', _e);
    }
  });
  return _clearStoredErrors.apply(this, arguments);
}
export function getUserFriendlyMessage(error) {
  cov_22yuiicert().f[11]++;
  var defaultMessages = (cov_22yuiicert().s[42]++, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, ErrorCategory.DATABASE, 'There was a problem accessing the database.'), ErrorCategory.AUTHENTICATION, 'There was a problem with your account authentication.'), ErrorCategory.NETWORK, 'Network connection issue. Please check your internet connection.'), ErrorCategory.VALIDATION, 'Some information you entered is not valid.'), ErrorCategory.PERMISSION, 'You do not have permission to perform this action.'), ErrorCategory.UNKNOWN, 'An unexpected error occurred. Please try again later.'));
  cov_22yuiicert().s[43]++;
  if (error.code) {
    cov_22yuiicert().b[14][0]++;
    cov_22yuiicert().s[44]++;
    switch (error.code) {
      case '23505':
        cov_22yuiicert().b[15][0]++;
        cov_22yuiicert().s[45]++;
        return 'This information already exists in our system.';
      case '42P01':
        cov_22yuiicert().b[15][1]++;
        cov_22yuiicert().s[46]++;
        return 'We encountered a database configuration issue. Please contact support.';
      case '42501':
        cov_22yuiicert().b[15][2]++;
        cov_22yuiicert().s[47]++;
        return 'You do not have permission to perform this action.';
      case '23503':
        cov_22yuiicert().b[15][3]++;
        cov_22yuiicert().s[48]++;
        return 'This operation cannot be completed because it references missing data.';
      case 'PGRST301':
        cov_22yuiicert().b[15][4]++;
        cov_22yuiicert().s[49]++;
        return 'Access denied due to security policy.';
      case '401':
        cov_22yuiicert().b[15][5]++;
      case 'auth/invalid-email':
        cov_22yuiicert().b[15][6]++;
      case 'auth/user-not-found':
        cov_22yuiicert().b[15][7]++;
      case 'auth/wrong-password':
        cov_22yuiicert().b[15][8]++;
        cov_22yuiicert().s[50]++;
        return 'Invalid login credentials. Please check your email and password.';
      case '403':
        cov_22yuiicert().b[15][9]++;
        cov_22yuiicert().s[51]++;
        return 'You do not have permission to access this resource.';
      case '404':
        cov_22yuiicert().b[15][10]++;
        cov_22yuiicert().s[52]++;
        return 'The requested resource was not found.';
      case '429':
        cov_22yuiicert().b[15][11]++;
        cov_22yuiicert().s[53]++;
        return 'Too many requests. Please try again later.';
      case '500':
        cov_22yuiicert().b[15][12]++;
        cov_22yuiicert().s[54]++;
        return 'Server error. Please try again later.';
      default:
        cov_22yuiicert().b[15][13]++;
        cov_22yuiicert().s[55]++;
        return isUserFriendlyMessage(error.message) ? (cov_22yuiicert().b[16][0]++, error.message) : (cov_22yuiicert().b[16][1]++, defaultMessages[error.category]);
    }
  } else {
    cov_22yuiicert().b[14][1]++;
  }
  cov_22yuiicert().s[56]++;
  return isUserFriendlyMessage(error.message) ? (cov_22yuiicert().b[17][0]++, error.message) : (cov_22yuiicert().b[17][1]++, defaultMessages[error.category]);
}
function isPostgrestError(error) {
  cov_22yuiicert().f[12]++;
  cov_22yuiicert().s[57]++;
  return (cov_22yuiicert().b[18][0]++, error) && (cov_22yuiicert().b[18][1]++, typeof error === 'object') && (cov_22yuiicert().b[18][2]++, 'code' in error) && (cov_22yuiicert().b[18][3]++, 'message' in error) && (cov_22yuiicert().b[18][4]++, 'details' in error);
}
function determineErrorCategory(error) {
  cov_22yuiicert().f[13]++;
  cov_22yuiicert().s[58]++;
  if (isPostgrestError(error)) {
    var _error$code, _error$code2, _error$code3, _error$code4;
    cov_22yuiicert().b[19][0]++;
    cov_22yuiicert().s[59]++;
    if ((_error$code = error.code) != null && _error$code.startsWith('23')) {
      cov_22yuiicert().b[20][0]++;
      cov_22yuiicert().s[60]++;
      return ErrorCategory.VALIDATION;
    } else {
      cov_22yuiicert().b[20][1]++;
    }
    cov_22yuiicert().s[61]++;
    if ((cov_22yuiicert().b[22][0]++, (_error$code2 = error.code) != null && _error$code2.startsWith('28')) || (cov_22yuiicert().b[22][1]++, (_error$code3 = error.code) != null && _error$code3.startsWith('42501'))) {
      cov_22yuiicert().b[21][0]++;
      cov_22yuiicert().s[62]++;
      return ErrorCategory.PERMISSION;
    } else {
      cov_22yuiicert().b[21][1]++;
    }
    cov_22yuiicert().s[63]++;
    if ((_error$code4 = error.code) != null && _error$code4.startsWith('PGRST3')) {
      cov_22yuiicert().b[23][0]++;
      cov_22yuiicert().s[64]++;
      return ErrorCategory.PERMISSION;
    } else {
      cov_22yuiicert().b[23][1]++;
    }
    cov_22yuiicert().s[65]++;
    return ErrorCategory.DATABASE;
  } else {
    cov_22yuiicert().b[19][1]++;
  }
  var msg = (cov_22yuiicert().s[66]++, error.message.toLowerCase());
  cov_22yuiicert().s[67]++;
  if ((cov_22yuiicert().b[25][0]++, msg.includes('network')) || (cov_22yuiicert().b[25][1]++, msg.includes('connection'))) {
    cov_22yuiicert().b[24][0]++;
    cov_22yuiicert().s[68]++;
    return ErrorCategory.NETWORK;
  } else {
    cov_22yuiicert().b[24][1]++;
  }
  cov_22yuiicert().s[69]++;
  if ((cov_22yuiicert().b[27][0]++, msg.includes('auth')) || (cov_22yuiicert().b[27][1]++, msg.includes('login')) || (cov_22yuiicert().b[27][2]++, msg.includes('password'))) {
    cov_22yuiicert().b[26][0]++;
    cov_22yuiicert().s[70]++;
    return ErrorCategory.AUTHENTICATION;
  } else {
    cov_22yuiicert().b[26][1]++;
  }
  cov_22yuiicert().s[71]++;
  if ((cov_22yuiicert().b[29][0]++, msg.includes('permission')) || (cov_22yuiicert().b[29][1]++, msg.includes('access')) || (cov_22yuiicert().b[29][2]++, msg.includes('denied'))) {
    cov_22yuiicert().b[28][0]++;
    cov_22yuiicert().s[72]++;
    return ErrorCategory.PERMISSION;
  } else {
    cov_22yuiicert().b[28][1]++;
  }
  cov_22yuiicert().s[73]++;
  if ((cov_22yuiicert().b[31][0]++, msg.includes('valid')) || (cov_22yuiicert().b[31][1]++, msg.includes('required'))) {
    cov_22yuiicert().b[30][0]++;
    cov_22yuiicert().s[74]++;
    return ErrorCategory.VALIDATION;
  } else {
    cov_22yuiicert().b[30][1]++;
  }
  cov_22yuiicert().s[75]++;
  return ErrorCategory.UNKNOWN;
}
function isUserFriendlyMessage(message) {
  cov_22yuiicert().f[14]++;
  cov_22yuiicert().s[76]++;
  if (!message) {
    cov_22yuiicert().b[32][0]++;
    cov_22yuiicert().s[77]++;
    return false;
  } else {
    cov_22yuiicert().b[32][1]++;
  }
  var technicalTerms = (cov_22yuiicert().s[78]++, ['undefined', 'null', 'NaN', 'exception', 'syntax error', 'unexpected token', 'stack', 'reference error', 'type error', 'cannot read property', 'is not a function', 'failed to fetch', 'network request failed', 'JSON', 'parse', 'promise', 'async', 'timeout', 'cors', 'xhr', 'http', 'ssl', 'certificate', 'localhost', 'port', 'proxy', 'socket', 'postgresql', 'supabase', 'database', 'query', 'sql']);
  var lowercaseMsg = (cov_22yuiicert().s[79]++, message.toLowerCase());
  cov_22yuiicert().s[80]++;
  return !technicalTerms.some(function (term) {
    cov_22yuiicert().f[15]++;
    cov_22yuiicert().s[81]++;
    return lowercaseMsg.includes(term.toLowerCase());
  });
}
export function withErrorHandling(fn, errorHandler) {
  cov_22yuiicert().f[16]++;
  cov_22yuiicert().s[82]++;
  return _asyncToGenerator(function* () {
    cov_22yuiicert().f[17]++;
    cov_22yuiicert().s[83]++;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    try {
      cov_22yuiicert().s[84]++;
      return yield fn.apply(void 0, args);
    } catch (error) {
      var appError = (cov_22yuiicert().s[85]++, handleSupabaseError(error, {
        functionName: fn.name,
        args: args
      }));
      cov_22yuiicert().s[86]++;
      if (errorHandler) {
        cov_22yuiicert().b[33][0]++;
        cov_22yuiicert().s[87]++;
        errorHandler(appError);
      } else {
        cov_22yuiicert().b[33][1]++;
        cov_22yuiicert().s[88]++;
        logError(appError);
      }
      cov_22yuiicert().s[89]++;
      throw appError;
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,