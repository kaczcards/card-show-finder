c4b89983c18cf81a446480801f0f7318
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.refreshUserSession = exports.isSessionValid = exports.getCurrentUserId = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _supabase = require("../supabase");
function cov_ok4zfbnid() {
  var path = "/Users/kevin/card-show-finder/src/services/sessionService.ts";
  var hash = "e1e957f998c1114517231eb04648862287731257";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/services/sessionService.ts",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 34
        },
        end: {
          line: 25,
          column: 1
        }
      },
      "1": {
        start: {
          line: 14,
          column: 2
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "2": {
        start: {
          line: 15,
          column: 22
        },
        end: {
          line: 15,
          column: 58
        }
      },
      "3": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 19,
          column: 5
        }
      },
      "4": {
        start: {
          line: 17,
          column: 6
        },
        end: {
          line: 17,
          column: 65
        }
      },
      "5": {
        start: {
          line: 18,
          column: 6
        },
        end: {
          line: 18,
          column: 39
        }
      },
      "6": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 29
        }
      },
      "7": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 66
        }
      },
      "8": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 42
        }
      },
      "9": {
        start: {
          line: 31,
          column: 30
        },
        end: {
          line: 39,
          column: 1
        }
      },
      "10": {
        start: {
          line: 32,
          column: 2
        },
        end: {
          line: 38,
          column: 3
        }
      },
      "11": {
        start: {
          line: 33,
          column: 21
        },
        end: {
          line: 33,
          column: 53
        }
      },
      "12": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 26
        }
      },
      "13": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 59
        }
      },
      "14": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 17
        }
      },
      "15": {
        start: {
          line: 45,
          column: 32
        },
        end: {
          line: 53,
          column: 1
        }
      },
      "16": {
        start: {
          line: 46,
          column: 2
        },
        end: {
          line: 52,
          column: 3
        }
      },
      "17": {
        start: {
          line: 47,
          column: 21
        },
        end: {
          line: 47,
          column: 53
        }
      },
      "18": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 42
        }
      },
      "19": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 50,
          column: 57
        }
      },
      "20": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 16
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 35
          }
        },
        loc: {
          start: {
            line: 13,
            column: 90
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 31,
            column: 30
          },
          end: {
            line: 31,
            column: 31
          }
        },
        loc: {
          start: {
            line: 31,
            column: 60
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 31
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 45,
            column: 32
          },
          end: {
            line: 45,
            column: 33
          }
        },
        loc: {
          start: {
            line: 45,
            column: 68
          },
          end: {
            line: 53,
            column: 1
          }
        },
        line: 45
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 48,
            column: 11
          },
          end: {
            line: 48,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 11
          },
          end: {
            line: 48,
            column: 33
          }
        }, {
          start: {
            line: 48,
            column: 37
          },
          end: {
            line: 48,
            column: 41
          }
        }],
        line: 48
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e1e957f998c1114517231eb04648862287731257"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_ok4zfbnid = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ok4zfbnid();
cov_ok4zfbnid().s[0]++;
var refreshUserSession = exports.refreshUserSession = function () {
  var _ref = (0, _asyncToGenerator2.default)(function* () {
    cov_ok4zfbnid().f[0]++;
    cov_ok4zfbnid().s[1]++;
    try {
      var _ref2 = (cov_ok4zfbnid().s[2]++, yield _supabase.supabase.auth.refreshSession()),
        error = _ref2.error;
      cov_ok4zfbnid().s[3]++;
      if (error) {
        cov_ok4zfbnid().b[0][0]++;
        cov_ok4zfbnid().s[4]++;
        console.error('Error refreshing Supabase session:', error);
        cov_ok4zfbnid().s[5]++;
        return {
          success: false,
          error: error
        };
      } else {
        cov_ok4zfbnid().b[0][1]++;
      }
      cov_ok4zfbnid().s[6]++;
      return {
        success: true
      };
    } catch (err) {
      cov_ok4zfbnid().s[7]++;
      console.error('Unexpected error in refreshUserSession:', err);
      cov_ok4zfbnid().s[8]++;
      return {
        success: false,
        error: err
      };
    }
  });
  return function refreshUserSession() {
    return _ref.apply(this, arguments);
  };
}();
cov_ok4zfbnid().s[9]++;
var isSessionValid = exports.isSessionValid = function () {
  var _ref3 = (0, _asyncToGenerator2.default)(function* () {
    cov_ok4zfbnid().f[1]++;
    cov_ok4zfbnid().s[10]++;
    try {
      var _ref4 = (cov_ok4zfbnid().s[11]++, yield _supabase.supabase.auth.getSession()),
        data = _ref4.data;
      cov_ok4zfbnid().s[12]++;
      return !!data.session;
    } catch (err) {
      cov_ok4zfbnid().s[13]++;
      console.error('Error checking session validity:', err);
      cov_ok4zfbnid().s[14]++;
      return false;
    }
  });
  return function isSessionValid() {
    return _ref3.apply(this, arguments);
  };
}();
cov_ok4zfbnid().s[15]++;
var getCurrentUserId = exports.getCurrentUserId = function () {
  var _ref5 = (0, _asyncToGenerator2.default)(function* () {
    cov_ok4zfbnid().f[2]++;
    cov_ok4zfbnid().s[16]++;
    try {
      var _data$session;
      var _ref6 = (cov_ok4zfbnid().s[17]++, yield _supabase.supabase.auth.getSession()),
        data = _ref6.data;
      cov_ok4zfbnid().s[18]++;
      return (cov_ok4zfbnid().b[1][0]++, (_data$session = data.session) == null || (_data$session = _data$session.user) == null ? void 0 : _data$session.id) || (cov_ok4zfbnid().b[1][1]++, null);
    } catch (err) {
      cov_ok4zfbnid().s[19]++;
      console.error('Error getting current user ID:', err);
      cov_ok4zfbnid().s[20]++;
      return null;
    }
  });
  return function getCurrentUserId() {
    return _ref5.apply(this, arguments);
  };
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,