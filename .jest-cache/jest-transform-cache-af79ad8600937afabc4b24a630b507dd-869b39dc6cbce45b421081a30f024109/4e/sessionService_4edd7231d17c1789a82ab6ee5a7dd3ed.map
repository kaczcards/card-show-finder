{"version":3,"names":["_supabase","require","cov_ok4zfbnid","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","refreshUserSession","exports","_ref","_asyncToGenerator2","default","_ref2","supabase","auth","refreshSession","error","console","success","err","apply","arguments","isSessionValid","_ref3","_ref4","getSession","data","session","getCurrentUserId","_ref5","_data$session","_ref6","user","id"],"sources":["sessionService.ts"],"sourcesContent":["// src/services/sessionService.ts\n\nimport { supabase } from '../supabase';\n\n/**\n * Forces Supabase to refresh the current JWT/session so that any recent\n * changes to the user's profile (e.g., role upgrades) are immediately\n * reflected in `supabase.auth`.\n * \n * This function is extracted to its own service to avoid circular dependencies\n * between AuthContext, userRoleService, and supabaseAuthService.\n */\nexport const refreshUserSession = async (): Promise<{ success: boolean; error?: any }> => {\n  try {\n    const { error } = await supabase.auth.refreshSession();\n    if (error) {\n      console.error('Error refreshing Supabase session:', error);\n      return { success: false, error };\n    }\n    return { success: true };\n  } catch (err) {\n    console.error('Unexpected error in refreshUserSession:', err);\n    return { success: false, error: err };\n  }\n};\n\n/**\n * Checks if the current user session is valid\n * @returns Boolean indicating if the session is valid\n */\nexport const isSessionValid = async (): Promise<boolean> => {\n  try {\n    const { data } = await supabase.auth.getSession();\n    return !!data.session;\n  } catch (err) {\n    console.error('Error checking session validity:', err);\n    return false;\n  }\n};\n\n/**\n * Gets the current user ID from the session\n * @returns User ID string or null if not authenticated\n */\nexport const getCurrentUserId = async (): Promise<string | null> => {\n  try {\n    const { data } = await supabase.auth.getSession();\n    return data.session?.user?.id || null;\n  } catch (err) {\n    console.error('Error getting current user ID:', err);\n    return null;\n  }\n};\n"],"mappings":"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","ignoreList":[]}