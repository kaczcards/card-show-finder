2bed90350299a430c8d250d73c504c17
function cov_1w9iy6kbmg() {
  var path = "/Users/kevin/card-show-finder/src/components/ui/Loading.tsx";
  var hash = "911f41f9d6f6031d2f94810056914c91c7b7ad64";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/components/ui/Loading.tsx",
    statementMap: {
      "0": {
        start: {
          line: 34,
          column: 40
        },
        end: {
          line: 61,
          column: 1
        }
      },
      "1": {
        start: {
          line: 41,
          column: 20
        },
        end: {
          line: 41,
          column: 30
        }
      },
      "2": {
        start: {
          line: 44,
          column: 23
        },
        end: {
          line: 46,
          column: 43
        }
      },
      "3": {
        start: {
          line: 48,
          column: 2
        },
        end: {
          line: 60,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 34,
            column: 40
          },
          end: {
            line: 34,
            column: 41
          }
        },
        loc: {
          start: {
            line: 39,
            column: 6
          },
          end: {
            line: 61,
            column: 1
          }
        },
        line: 39
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 35,
            column: 2
          },
          end: {
            line: 35,
            column: 21
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 35,
            column: 9
          },
          end: {
            line: 35,
            column: 21
          }
        }],
        line: 35
      },
      "1": {
        loc: {
          start: {
            line: 37,
            column: 2
          },
          end: {
            line: 37,
            column: 16
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 37,
            column: 9
          },
          end: {
            line: 37,
            column: 16
          }
        }],
        line: 37
      },
      "2": {
        loc: {
          start: {
            line: 44,
            column: 23
          },
          end: {
            line: 46,
            column: 43
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 45,
            column: 6
          },
          end: {
            line: 45,
            column: 47
          }
        }, {
          start: {
            line: 46,
            column: 6
          },
          end: {
            line: 46,
            column: 43
          }
        }],
        line: 44
      },
      "3": {
        loc: {
          start: {
            line: 54,
            column: 7
          },
          end: {
            line: 58,
            column: 7
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 7
          },
          end: {
            line: 54,
            column: 14
          }
        }, {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 57,
            column: 15
          }
        }],
        line: 54
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "911f41f9d6f6031d2f94810056914c91c7b7ad64"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1w9iy6kbmg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1w9iy6kbmg();
import React from 'react';
import { View, Text, ActivityIndicator } from 'react-native';
import { useTheme } from '../../contexts/ThemeContext';
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
cov_1w9iy6kbmg().s[0]++;
var Loading = function Loading(_ref) {
  var _ref$type = _ref.type,
    type = _ref$type === void 0 ? (cov_1w9iy6kbmg().b[0][0]++, 'fullScreen') : _ref$type,
    message = _ref.message,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? (cov_1w9iy6kbmg().b[1][0]++, 'large') : _ref$size,
    style = _ref.style;
  cov_1w9iy6kbmg().f[0]++;
  var _ref2 = (cov_1w9iy6kbmg().s[1]++, useTheme()),
    theme = _ref2.theme;
  var loadingStyle = (cov_1w9iy6kbmg().s[2]++, type === 'fullScreen' ? (cov_1w9iy6kbmg().b[2][0]++, theme.components.loadingStates.fullScreen) : (cov_1w9iy6kbmg().b[2][1]++, theme.components.loadingStates.inline));
  cov_1w9iy6kbmg().s[3]++;
  return _jsxs(View, {
    style: [loadingStyle.container, style],
    children: [_jsx(ActivityIndicator, {
      size: size,
      color: loadingStyle.indicatorColor
    }), (cov_1w9iy6kbmg().b[3][0]++, message) && (cov_1w9iy6kbmg().b[3][1]++, _jsx(Text, {
      style: loadingStyle.text,
      children: message
    }))]
  });
};
export default Loading;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIlZpZXciLCJUZXh0IiwiQWN0aXZpdHlJbmRpY2F0b3IiLCJ1c2VUaGVtZSIsImpzeCIsIl9qc3giLCJqc3hzIiwiX2pzeHMiLCJjb3ZfMXc5aXk2a2JtZyIsInMiLCJMb2FkaW5nIiwiX3JlZiIsIl9yZWYkdHlwZSIsInR5cGUiLCJiIiwibWVzc2FnZSIsIl9yZWYkc2l6ZSIsInNpemUiLCJzdHlsZSIsImYiLCJfcmVmMiIsInRoZW1lIiwibG9hZGluZ1N0eWxlIiwiY29tcG9uZW50cyIsImxvYWRpbmdTdGF0ZXMiLCJmdWxsU2NyZWVuIiwiaW5saW5lIiwiY29udGFpbmVyIiwiY2hpbGRyZW4iLCJjb2xvciIsImluZGljYXRvckNvbG9yIiwidGV4dCJdLCJzb3VyY2VzIjpbIkxvYWRpbmcudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBWaWV3LCBUZXh0LCBBY3Rpdml0eUluZGljYXRvciwgU3R5bGVQcm9wLCBWaWV3U3R5bGUgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IHsgdXNlVGhlbWUgfSBmcm9tICcuLi8uLi9jb250ZXh0cy9UaGVtZUNvbnRleHQnO1xuXG5pbnRlcmZhY2UgTG9hZGluZ1Byb3BzIHtcbiAgLyoqXG4gICAqIERpc3BsYXkgdHlwZTogJ2Z1bGxTY3JlZW4nIGZvciBlbnRpcmUgc2NyZWVuIGxvYWRpbmcsIFxuICAgKiAnaW5saW5lJyBmb3Igd2l0aGluLWNvbXBvbmVudCBsb2FkaW5nXG4gICAqL1xuICB0eXBlPzogJ2Z1bGxTY3JlZW4nIHwgJ2lubGluZSc7XG4gIFxuICAvKipcbiAgICogTWVzc2FnZSB0byBkaXNwbGF5IGJlbG93IHRoZSBsb2FkaW5nIGluZGljYXRvclxuICAgKi9cbiAgbWVzc2FnZT86IHN0cmluZztcbiAgXG4gIC8qKlxuICAgKiBTaXplIG9mIHRoZSBsb2FkaW5nIGluZGljYXRvclxuICAgKi9cbiAgc2l6ZT86ICdzbWFsbCcgfCAnbGFyZ2UnO1xuICBcbiAgLyoqXG4gICAqIE9wdGlvbmFsIGN1c3RvbSBzdHlsZSBmb3IgdGhlIGNvbnRhaW5lclxuICAgKi9cbiAgc3R5bGU/OiBTdHlsZVByb3A8Vmlld1N0eWxlPjtcbn1cblxuLyoqXG4gKiBMb2FkaW5nIC0gQSBzdGFuZGFyZGl6ZWQgbG9hZGluZyBjb21wb25lbnRcbiAqIFxuICogVGhpcyBjb21wb25lbnQgcHJvdmlkZXMgYSBjb25zaXN0ZW50IGxvYWRpbmcgc3RhdGUgZGlzcGxheSB0aHJvdWdob3V0IHRoZSBhcHAsXG4gKiB3aXRoIHN1cHBvcnQgZm9yIGJvdGggZnVsbC1zY3JlZW4gYW5kIGlubGluZSBsb2FkaW5nIHN0YXRlcy5cbiAqL1xuY29uc3QgTG9hZGluZzogUmVhY3QuRkM8TG9hZGluZ1Byb3BzPiA9ICh7XG4gIHR5cGUgPSAnZnVsbFNjcmVlbicsXG4gIG1lc3NhZ2UsXG4gIHNpemUgPSAnbGFyZ2UnLFxuICBzdHlsZSxcbn0pID0+IHtcbiAgLy8gR2V0IHRoZW1lIGZyb20gY29udGV4dFxuICBjb25zdCB7IHRoZW1lIH0gPSB1c2VUaGVtZSgpO1xuICBcbiAgLy8gRGV0ZXJtaW5lIGxvYWRpbmcgc3R5bGUgYmFzZWQgb24gdHlwZVxuICBjb25zdCBsb2FkaW5nU3R5bGUgPSB0eXBlID09PSAnZnVsbFNjcmVlbicgXG4gICAgPyB0aGVtZS5jb21wb25lbnRzLmxvYWRpbmdTdGF0ZXMuZnVsbFNjcmVlblxuICAgIDogdGhlbWUuY29tcG9uZW50cy5sb2FkaW5nU3RhdGVzLmlubGluZTtcbiAgXG4gIHJldHVybiAoXG4gICAgPFZpZXcgc3R5bGU9e1tsb2FkaW5nU3R5bGUuY29udGFpbmVyLCBzdHlsZV19PlxuICAgICAgPEFjdGl2aXR5SW5kaWNhdG9yIFxuICAgICAgICBzaXplPXtzaXplfSBcbiAgICAgICAgY29sb3I9e2xvYWRpbmdTdHlsZS5pbmRpY2F0b3JDb2xvcn1cbiAgICAgIC8+XG4gICAgICB7bWVzc2FnZSAmJiAoXG4gICAgICAgIDxUZXh0IHN0eWxlPXtsb2FkaW5nU3R5bGUudGV4dH0+XG4gICAgICAgICAge21lc3NhZ2V9XG4gICAgICAgIDwvVGV4dD5cbiAgICAgICl9XG4gICAgPC9WaWV3PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgTG9hZGluZztcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsT0FBT0EsS0FBSyxNQUFNLE9BQU87QUFDekIsU0FBU0MsSUFBSSxFQUFFQyxJQUFJLEVBQUVDLGlCQUFpQixRQUE4QixjQUFjO0FBQ2xGLFNBQVNDLFFBQVEsUUFBUSw2QkFBNkI7QUFBQyxTQUFBQyxHQUFBLElBQUFDLElBQUEsRUFBQUMsSUFBQSxJQUFBQyxLQUFBO0FBQUFDLGNBQUEsR0FBQUMsQ0FBQTtBQStCdkQsSUFBTUMsT0FBK0IsR0FBRyxTQUFsQ0EsT0FBK0JBLENBQUFDLElBQUEsRUFLL0I7RUFBQSxJQUFBQyxTQUFBLEdBQUFELElBQUEsQ0FKSkUsSUFBSTtJQUFKQSxJQUFJLEdBQUFELFNBQUEsZUFBQUosY0FBQSxHQUFBTSxDQUFBLFVBQUcsWUFBWSxJQUFBRixTQUFBO0lBQ25CRyxPQUFPLEdBQUFKLElBQUEsQ0FBUEksT0FBTztJQUFBQyxTQUFBLEdBQUFMLElBQUEsQ0FDUE0sSUFBSTtJQUFKQSxJQUFJLEdBQUFELFNBQUEsZUFBQVIsY0FBQSxHQUFBTSxDQUFBLFVBQUcsT0FBTyxJQUFBRSxTQUFBO0lBQ2RFLEtBQUssR0FBQVAsSUFBQSxDQUFMTyxLQUFLO0VBQUFWLGNBQUEsR0FBQVcsQ0FBQTtFQUdMLElBQUFDLEtBQUEsSUFBQVosY0FBQSxHQUFBQyxDQUFBLE9BQWtCTixRQUFRLENBQUMsQ0FBQztJQUFwQmtCLEtBQUssR0FBQUQsS0FBQSxDQUFMQyxLQUFLO0VBR2IsSUFBTUMsWUFBWSxJQUFBZCxjQUFBLEdBQUFDLENBQUEsT0FBR0ksSUFBSSxLQUFLLFlBQVksSUFBQUwsY0FBQSxHQUFBTSxDQUFBLFVBQ3RDTyxLQUFLLENBQUNFLFVBQVUsQ0FBQ0MsYUFBYSxDQUFDQyxVQUFVLEtBQUFqQixjQUFBLEdBQUFNLENBQUEsVUFDekNPLEtBQUssQ0FBQ0UsVUFBVSxDQUFDQyxhQUFhLENBQUNFLE1BQU07RUFBQ2xCLGNBQUEsR0FBQUMsQ0FBQTtFQUUxQyxPQUNFRixLQUFBLENBQUNQLElBQUk7SUFBQ2tCLEtBQUssRUFBRSxDQUFDSSxZQUFZLENBQUNLLFNBQVMsRUFBRVQsS0FBSyxDQUFFO0lBQUFVLFFBQUEsR0FDM0N2QixJQUFBLENBQUNILGlCQUFpQjtNQUNoQmUsSUFBSSxFQUFFQSxJQUFLO01BQ1hZLEtBQUssRUFBRVAsWUFBWSxDQUFDUTtJQUFlLENBQ3BDLENBQUMsRUFDRCxDQUFBdEIsY0FBQSxHQUFBTSxDQUFBLFVBQUFDLE9BQU8sTUFBQVAsY0FBQSxHQUFBTSxDQUFBLFVBQ05ULElBQUEsQ0FBQ0osSUFBSTtNQUFDaUIsS0FBSyxFQUFFSSxZQUFZLENBQUNTLElBQUs7TUFBQUgsUUFBQSxFQUM1QmI7SUFBTyxDQUNKLENBQUMsQ0FDUjtFQUFBLENBQ0csQ0FBQztBQUVYLENBQUM7QUFFRCxlQUFlTCxPQUFPIiwiaWdub3JlTGlzdCI6W119