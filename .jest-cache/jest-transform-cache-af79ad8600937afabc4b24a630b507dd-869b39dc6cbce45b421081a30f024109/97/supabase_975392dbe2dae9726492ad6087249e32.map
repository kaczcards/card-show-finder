{"version":3,"names":["createClient","AsyncStorage","Constants","supabaseUrl","cov_1sukd5hs0x","s","b","_env","EXPO_PUBLIC_SUPABASE_URL","_Constants$expoConfig","expoConfig","extra","supabaseAnonKey","EXPO_PUBLIC_SUPABASE_ANON_KEY","_Constants$expoConfig2","console","log","slice","error","supabaseSingleton","auth","storage","autoRefreshToken","persistSession","detectSessionInUrl","supabase","isSupabaseInitialized","f","Boolean","err","getSupabase","Error","recreateSupabaseClient"],"sources":["supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Constants from 'expo-constants';\n\n// Supabase configuration - ideally from environment variables\nconst supabaseUrl = process.env.EXPO_PUBLIC_SUPABASE_URL || Constants.expoConfig?.extra?.supabaseUrl || '';\nconst supabaseAnonKey = process.env.EXPO_PUBLIC_SUPABASE_ANON_KEY || Constants.expoConfig?.extra?.supabaseAnonKey || '';\n\n/* -------------------------------------------------------------------------- */\n/*  üîç DIAGNOSTICS ‚Äì PRINT SUPABASE CREDS IN DEV                              */\n/* -------------------------------------------------------------------------- */\n// NOTE: These values are **public** (anon key & project URL) so it's safe\n// to log them for debugging.  Remove or wrap behind an env‚Äêguard before\n// shipping production builds if desired.\nconsole.log(\n  '\\n================= [SUPABASE CONFIG] =================\\n' +\n  `‚Ä¢ SUPABASE URL : ${supabaseUrl || '<EMPTY>'}\\n` +\n  `‚Ä¢ ANON KEY     : ${supabaseAnonKey?.slice(0, 8) || '<EMPTY>'}‚Ä¶\\n` +\n  '====================================================\\n'\n);\n\n/* -------------------------------------------------------------------------- */\n/* 1. Guard-rails / configuration validation                                  */\n/* -------------------------------------------------------------------------- */\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  // Fail fast ‚Äì running with a broken client leads to subtle bugs later\n  console.error(\n    '[Supabase] Missing configuration. ' +\n      'Ensure EXPO_PUBLIC_SUPABASE_URL and EXPO_PUBLIC_SUPABASE_ANON_KEY are set.'\n  );\n}\n\n/* -------------------------------------------------------------------------- */\n/* 2. Singleton client creation                                               */\n/* -------------------------------------------------------------------------- */\n\n/**\n * Internal holder for the Supabase singleton.\n * We keep it in a `let` so tests (or a logout flow) can force-recreate it\n * via `recreateSupabaseClient()`.\n */\nlet supabaseSingleton = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    storage: AsyncStorage,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: false, // we never use browser-based auth redirects\n  },\n});\n\n/**\n * Public accessor used throughout the codebase to avoid importing\n * `createClient` elsewhere.  Always returns **the same** instance.\n */\nexport const supabase = supabaseSingleton;\n\n/* -------------------------------------------------------------------------- */\n/* 3. Helper utilities                                                        */\n/* -------------------------------------------------------------------------- */\n\n/**\n * Defensive check used by legacy code (`isSupabaseInitialized()`).\n */\nexport const isSupabaseInitialized = (): boolean => {\n  try {\n    return Boolean(supabaseSingleton && supabaseSingleton.auth);\n  } catch (err) {\n    console.error('[Supabase] initialization check failed:', err);\n    return false;\n  }\n};\n\n/**\n * Provides the singleton client or throws a descriptive error.\n * Prefer this helper in newly-written code so errors surface early.\n */\nexport const getSupabase = () => {\n  if (!isSupabaseInitialized()) {\n    throw new Error(\n      '[Supabase] Client not initialised ‚Äì check environment variables.'\n    );\n  }\n  return supabaseSingleton;\n};\n\n/**\n * Optional helper to **re**create the client (e.g. after logout to purge\n * cached auth state, or inside E2E tests).  Most apps will never need this.\n */\nexport const recreateSupabaseClient = () => {\n  supabaseSingleton = createClient(supabaseUrl, supabaseAnonKey, {\n    auth: {\n      storage: AsyncStorage,\n      autoRefreshToken: true,\n      persistSession: true,\n      detectSessionInUrl: false,\n    },\n  });\n  return supabaseSingleton;\n};\n\n// Export types from Supabase for use in other files\nexport type { User, Session } from '@supabase/supabase-js';\n"],"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","ignoreList":[]}