{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","ScrollView","ActivityIndicator","TouchableOpacity","Alert","Ionicons","CommonActions","useNavigation","useAuth","DealerDetailModal","ReviewForm","UserRole","ShowHeaderActions","ShowBasicInfo","ShowTimeInfo","OrganizerInfo","DealersList","ShowDescription","ShowManagementButtons","useShowDetailQuery","jsx","_jsx","jsxs","_jsxs","cov_24efe72ysl","s","ShowDetailScreen","_ref","_authContext$authStat","route","navigation","f","_ref2","params","showId","authContext","user","b","authState","nav","_ref3","_ref4","_slicedToArray","showSeries","setShowSeries","_ref5","_ref6","loadingSeries","setLoadingSeries","_ref7","_ref8","showReviewForm","setShowReviewForm","_ref9","_ref0","showDealerDetailModal","setShowDealerDetailModal","_ref1","_ref10","selectedDealer","setSelectedDealer","_ref11","show","organizer","participatingDealers","loading","error","isFavorite","isShowOrganizer","isCurrentUserOrganizer","isClaimingShow","fetchShowDetails","toggleFavorite","shareShow","openMapLocation","setOptions","title","handleViewDealerDetails","dealerId","dealerName","id","name","handleClaimShow","alert","navigateToEditShow","navigate","navigateToSubscription","dispatch","screen","MVPDealerUpgradeMessage","role","DEALER","style","styles","upgradeMessageContainer","children","size","color","upgradeIcon","upgradeMessageText","upgradeLink","onPress","loadingContainer","loadingText","errorContainer","errorText","retryButton","retryButtonText","container","onToggleFavorite","onOpenMap","onShare","onReview","detailsContainer","onClaimShow","onEditShow","description","dealers","isLoading","onViewDealerDetails","isVisible","onClose","seriesId","onSubmit","onCancel","create","flex","backgroundColor","justifyContent","alignItems","padding","marginTop","fontSize","textAlign","paddingVertical","paddingHorizontal","borderRadius","fontWeight","marginVertical","borderLeftWidth","borderLeftColor","flexDirection","marginRight","lineHeight","textDecorationLine"],"sources":["ShowDetailScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  ActivityIndicator,\n  TouchableOpacity,\n  Alert,\n  Linking,\n  Share\n} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { CommonActions, useNavigation } from '@react-navigation/native';\nimport { useAuth } from '../../contexts/AuthContext';\nimport * as userRoleService from '../../services/userRoleService';\nimport DealerDetailModal from '../../components/DealerDetailModal';\nimport ReviewForm from '../../components/ReviewForm';\nimport { UserRole } from '../../types'; // Import UserRole enum\n\n// Import components from the components folder\nimport {\n  ShowHeaderActions,\n  ShowBasicInfo,\n  ShowTimeInfo,\n  OrganizerInfo,\n  DealersList,\n  ShowDescription,\n  ShowManagementButtons\n} from './components';\n\n// Import the new hook\nimport { useShowDetailQuery } from '../../hooks/useShowDetailQuery';\n\ninterface ShowDetailProps {\n  route: any;\n  navigation: any;\n}\n\ninterface ShowSeries {\n  id: string;\n  organizerId: string;\n}\n\n/**\n * Local superset of a Show row that satisfies the prop-type\n * requirements of the downstream UI components.  It augments the\n * shape returned by useShowDetailQuery with the additional fields\n * those components expect (they are marked optional so we can pass\n * through whatever the API gives us without extra mapping).\n */\ninterface Show {\n  id: string;\n  /* Optional series identifier so ReviewForm and other components\n     can associate this show with a broader series when available. */\n  seriesId?: string;\n  title?: string;\n  description?: string;\n  location?: string;\n  address?: string;\n  /* --- additional fields required by other components ------------- */\n  startDate?: string | Date;\n  endDate?: string | Date;\n  entryFee?: number | string | null;\n  status?: string;\n  createdAt?: string;\n  updatedAt?: string;\n  coordinates?: {\n    latitude: number;\n    longitude: number;\n  } | null;\n  /* --- raw column names from Supabase ‘shows’ table ---------------- */\n  start_date?: string;\n  end_date?: string;\n  start_time?: string;\n  end_time?: string;\n  entry_fee?: number | string;\n  organizer_id?: string;\n  claimed_by?: string;\n  /** organiser profile returned via join in useShowDetailQuery */\n  profiles?: {\n    id?: string;\n    first_name?: string;\n    last_name?: string;\n    profile_image_url?: string;\n    username?: string;\n    full_name?: string;\n    avatar_url?: string;\n  } | null;\n  /* catch-all so TS doesn’t complain about any extra keys */\n  [key: string]: any;\n}\n\nconst ShowDetailScreen: React.FC<ShowDetailProps> = ({ route, navigation }) => {\n  const { showId } = route.params;\n  const authContext = useAuth();\n  const user = authContext.authState?.user || null;\n  // Hook-based navigation (needed for hyperlink handler)\n  const nav = useNavigation<any>();\n\n  // State for modals and UI elements\n  const [showSeries, setShowSeries] = useState<ShowSeries | null>(null);\n  const [loadingSeries, setLoadingSeries] = useState(false);\n  const [showReviewForm, setShowReviewForm] = useState(false);\n  const [showDealerDetailModal, setShowDealerDetailModal] = useState(false);\n  const [selectedDealer, setSelectedDealer] = useState<{ id: string; name: string } | null>(null);\n\n  // Use the new custom hook for show details\n  const {\n    show,\n    organizer,\n    participatingDealers,\n    loading,\n    error,\n    isFavorite,\n    isShowOrganizer,\n    isCurrentUserOrganizer,\n    isClaimingShow,\n    fetchShowDetails,\n    toggleFavorite,\n    shareShow,\n    openMapLocation\n  } = useShowDetailQuery(showId);\n\n  // Set navigation title when show data is loaded\n  useEffect(() => {\n    if (show) {\n      navigation.setOptions({ title: show.title || 'Show Details' });\n    }\n  }, [show, navigation]);\n\n  // Handle dealer interactions\n  const handleViewDealerDetails = (dealerId: string, dealerName: string) => {\n    setSelectedDealer({ id: dealerId, name: dealerName });\n    setShowDealerDetailModal(true);\n  };\n\n  // Handle show management\n  const handleClaimShow = () => Alert.alert(\"Claim Show\", \"This feature is coming soon!\");\n  const navigateToEditShow = () => navigation.navigate('EditShow', { showId });\n\n  // Navigate dealer to the Subscription upgrade screen inside Profile tab\n  const navigateToSubscription = () => {\n    nav.dispatch(\n      CommonActions.navigate({\n        name: 'MainTabs', // parent tab navigator\n        params: {\n          screen: 'My Profile', // profile tab\n          params: {\n            screen: 'SubscriptionScreen', // nested stack screen\n          },\n        },\n      })\n    );\n  };\n\n  // MVP Dealer upgrade message component\n  const MVPDealerUpgradeMessage = () => {\n    if (user?.role !== UserRole.DEALER) return null;\n    \n    return (\n      <View style={styles.upgradeMessageContainer}>\n        <Ionicons name=\"star\" size={24} color=\"#FF6A00\" style={styles.upgradeIcon} />\n        <Text style={styles.upgradeMessageText}>\n          <Text style={styles.upgradeLink} onPress={navigateToSubscription}>\n            Upgrade to MVP Dealer\n          </Text>{' '}\n          to be featured in shows you set up for and find out what people are looking for in advance of the show.\n        </Text>\n      </View>\n    );\n  };\n\n  // Loading state\n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color=\"#FF6A00\" />\n        <Text style={styles.loadingText}>Loading show details...</Text>\n      </View>\n    );\n  }\n\n  // Error state\n  if (error || !show) {\n    return (\n      <View style={styles.errorContainer}>\n        <Ionicons name=\"alert-circle-outline\" size={60} color=\"#FF6A00\" />\n        <Text style={styles.errorText}>{error || 'Show not found'}</Text>\n        {/* wrap the call so we pass a function, not the promise */}\n        <TouchableOpacity\n          style={styles.retryButton}\n          onPress={() => fetchShowDetails()}\n        >\n          <Text style={styles.retryButtonText}>Retry</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView style={styles.container}>\n      {/* Header Actions */}\n      <ShowHeaderActions\n        isFavorite={isFavorite}\n        isCurrentUserOrganizer={isCurrentUserOrganizer}\n        onToggleFavorite={toggleFavorite}\n        onOpenMap={openMapLocation}\n        onShare={shareShow}\n        onReview={() => setShowReviewForm(true)}\n        show={show}\n      />\n\n      <View style={styles.detailsContainer}>\n        {/* Basic Show Info */}\n        <ShowBasicInfo show={show} />\n        \n        {/* MVP Dealer Upgrade Message - conditionally rendered */}\n        <MVPDealerUpgradeMessage />\n        \n        {/* Show Time Info */}\n        <ShowTimeInfo show={show} />\n        \n        {/* Show Management Buttons */}\n        <ShowManagementButtons\n          isShowOrganizer={isShowOrganizer}\n          isCurrentUserOrganizer={isCurrentUserOrganizer}\n          isClaimingShow={isClaimingShow}\n          onClaimShow={handleClaimShow}\n          onEditShow={navigateToEditShow}\n        />\n        \n        {/* Organizer Info */}\n        {organizer && <OrganizerInfo organizer={organizer} />}\n        \n        {/* Show Description */}\n        <ShowDescription description={show.description} />\n        \n        {/* Dealers List */}\n        <DealersList\n          dealers={participatingDealers}\n          isLoading={false}\n          onViewDealerDetails={handleViewDealerDetails}\n        />\n      </View>\n\n      {/* Modals */}\n      {selectedDealer && (\n        <DealerDetailModal\n          isVisible={showDealerDetailModal}\n          onClose={() => setShowDealerDetailModal(false)}\n          dealerId={selectedDealer.id}\n          showId={showId}\n          dealerName={selectedDealer.name}\n        />\n      )}\n      \n      {showReviewForm && showSeries && (\n        <ReviewForm\n          seriesId={showSeries.id}\n          onSubmit={() => {}}\n          onCancel={() => setShowReviewForm(false)}\n        />\n      )}\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F5F5F5',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  loadingText: {\n    marginTop: 10,\n    fontSize: 16,\n    color: '#666666',\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  errorText: {\n    marginTop: 16,\n    fontSize: 18,\n    color: '#FF6A00',\n    textAlign: 'center',\n  },\n  retryButton: {\n    marginTop: 16,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    backgroundColor: '#FF6A00',\n    borderRadius: 8,\n  },\n  retryButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  detailsContainer: {\n    padding: 16,\n    backgroundColor: 'white',\n    marginTop: 10,\n  },\n  upgradeMessageContainer: {\n    backgroundColor: '#FFF3E0',\n    borderRadius: 8,\n    padding: 16,\n    marginVertical: 12,\n    borderLeftWidth: 4,\n    borderLeftColor: '#FF6A00',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  upgradeIcon: {\n    marginRight: 12,\n  },\n  upgradeMessageText: {\n    flex: 1,\n    fontSize: 14,\n    color: '#333333',\n    lineHeight: 20,\n  },\n  /* Highlighted hyperlink style for “Upgrade to MVP Dealer” */\n  upgradeLink: {\n    color: '#FF6A00',           /* Brand orange */\n    fontWeight: 'bold',         /* Make it stand out */\n    textDecorationLine: 'underline', /* Clearly indicate it's clickable */\n  }\n});\n\nexport default ShowDetailScreen;\n"],"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","ignoreList":[]}