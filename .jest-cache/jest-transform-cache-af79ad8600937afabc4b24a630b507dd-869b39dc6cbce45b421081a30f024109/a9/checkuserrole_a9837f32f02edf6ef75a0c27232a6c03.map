{"version":3,"names":["_ref","cov_qtrntxm1y","s","require","createClient","config","supabaseUrl","b","process","env","REACT_APP_SUPABASE_URL","SUPABASE_URL","supabaseKey","REACT_APP_SUPABASE_ANON_KEY","SUPABASE_ANON_KEY","console","error","exit","supabase","USER_ID","checkUserRole","_checkUserRole","apply","arguments","_asyncToGenerator","f","log","_ref2","from","select","eq","single","data","id","firstName","lastName","email","role","accountType","err","then","catch"],"sources":["check-user-role.js"],"sourcesContent":["// src/scripts/check-user-role.js\nconst { createClient } = require('@supabase/supabase-js');\nrequire('dotenv').config();\n\n// Initialize Supabase client\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL || process.env.SUPABASE_URL;\nconst supabaseKey = process.env.REACT_APP_SUPABASE_ANON_KEY || process.env.SUPABASE_ANON_KEY;\n\nif (!supabaseUrl || !supabaseKey) {\n  console.error('Error: Supabase URL or key not found in environment variables');\n  console.error('Please set SUPABASE_URL and SUPABASE_ANON_KEY in your .env file');\n  process.exit(1);\n}\n\nconst supabase = createClient(supabaseUrl, supabaseKey);\n\n// User ID to check\nconst USER_ID = '50dddcd7-77b5-46d1-9072-22b7b93d5835';\n\nasync function checkUserRole() {\n  try {\n    console.log(`Checking role for user ID: ${USER_ID}`);\n    \n    // Query the user from the database\n    const { data, error } = await supabase\n      .from('users')\n      .select('id, email, firstName, lastName, role, accountType')\n      .eq('id', USER_ID)\n      .single();\n    \n    if (error) {\n      console.error('Error fetching user data:', error);\n      return;\n    }\n    \n    if (!data) {\n      console.log(`No user found with ID: ${USER_ID}`);\n      return;\n    }\n    \n    // Display user information\n    console.log('\\nUser Information:');\n    console.log('----------------');\n    console.log(`ID: ${data.id}`);\n    console.log(`Name: ${data.firstName} ${data.lastName || ''}`);\n    console.log(`Email: ${data.email}`);\n    console.log(`Role: ${data.role}`);\n    console.log(`Account Type: ${data.accountType}`);\n    \n    // Check if the role is what we expect\n    if (data.role === 'dealer') {\n      console.log('\\n✅ User has the DEALER role (should see upgrade message)');\n    } else if (data.role === 'mvp_dealer') {\n      console.log('\\n❌ User has the MVP_DEALER role (will NOT see upgrade message)');\n      console.log('To fix: Update the user role to \"dealer\" in the database');\n    } else {\n      console.log(`\\nUser has role: ${data.role}`);\n    }\n    \n  } catch (err) {\n    console.error('Unexpected error:', err);\n  }\n}\n\n// Run the function\ncheckUserRole()\n  .then(() => console.log('\\nDone!'))\n  .catch(err => console.error('Fatal error:', err));\n"],"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","ignoreList":[]}