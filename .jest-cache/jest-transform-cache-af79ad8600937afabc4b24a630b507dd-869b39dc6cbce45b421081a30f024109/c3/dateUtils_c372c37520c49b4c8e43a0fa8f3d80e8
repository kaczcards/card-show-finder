962b608123756367f59bd1a8892431b3
"use strict";

/**
 * dateUtils.ts
 * Utility functions for date formatting and manipulation
 */
/* istanbul ignore next */
function cov_1m20yk0rz3() {
  var path = "/Users/kevin/card-show-finder/src/utils/dateUtils.ts";
  var hash = "58623ecc1711764b5360b6b90fa938e4440c7491";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/utils/dateUtils.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "1": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 74
        }
      },
      "2": {
        start: {
          line: 14,
          column: 19
        },
        end: {
          line: 30,
          column: 1
        }
      },
      "3": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 21,
          column: 18
        }
      },
      "4": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 18
        }
      },
      "5": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "6": {
        start: {
          line: 23,
          column: 24
        },
        end: {
          line: 23,
          column: 72
        }
      },
      "7": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 60
        }
      },
      "8": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 55
        }
      },
      "9": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 52
        }
      },
      "10": {
        start: {
          line: 31,
          column: 0
        },
        end: {
          line: 31,
          column: 32
        }
      },
      "11": {
        start: {
          line: 38,
          column: 18
        },
        end: {
          line: 52,
          column: 1
        }
      },
      "12": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 40,
          column: 21
        }
      },
      "13": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 21
        }
      },
      "14": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "15": {
        start: {
          line: 42,
          column: 19
        },
        end: {
          line: 42,
          column: 70
        }
      },
      "16": {
        start: {
          line: 43,
          column: 19
        },
        end: {
          line: 43,
          column: 70
        }
      },
      "17": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 46,
          column: 43
        }
      },
      "18": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 55
        }
      },
      "19": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 21
        }
      },
      "20": {
        start: {
          line: 53,
          column: 0
        },
        end: {
          line: 53,
          column: 30
        }
      },
      "21": {
        start: {
          line: 61,
          column: 24
        },
        end: {
          line: 75,
          column: 1
        }
      },
      "22": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 68,
          column: 18
        }
      },
      "23": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 18
        }
      },
      "24": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 72,
          column: 5
        }
      },
      "25": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 59
        }
      },
      "26": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 74,
          column: 108
        }
      },
      "27": {
        start: {
          line: 76,
          column: 0
        },
        end: {
          line: 76,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 19
          },
          end: {
            line: 14,
            column: 20
          }
        },
        loc: {
          start: {
            line: 19,
            column: 6
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 38,
            column: 18
          },
          end: {
            line: 38,
            column: 19
          }
        },
        loc: {
          start: {
            line: 38,
            column: 36
          },
          end: {
            line: 52,
            column: 1
          }
        },
        line: 38
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 61,
            column: 24
          },
          end: {
            line: 61,
            column: 25
          }
        },
        loc: {
          start: {
            line: 66,
            column: 6
          },
          end: {
            line: 75,
            column: 1
          }
        },
        line: 66
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 26
          },
          end: {
            line: 19,
            column: 1
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 14,
            column: 36
          },
          end: {
            line: 19,
            column: 1
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 21,
            column: 18
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 21,
            column: 18
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "2": {
        loc: {
          start: {
            line: 23,
            column: 24
          },
          end: {
            line: 23,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 23,
            column: 51
          },
          end: {
            line: 23,
            column: 65
          }
        }, {
          start: {
            line: 23,
            column: 68
          },
          end: {
            line: 23,
            column: 72
          }
        }],
        line: 23
      },
      "3": {
        loc: {
          start: {
            line: 28,
            column: 15
          },
          end: {
            line: 28,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 42
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: 28,
            column: 49
          },
          end: {
            line: 28,
            column: 51
          }
        }],
        line: 28
      },
      "4": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 40,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 40,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "5": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 24
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 14
          }
        }, {
          start: {
            line: 39,
            column: 18
          },
          end: {
            line: 39,
            column: 24
          }
        }],
        line: 39
      },
      "6": {
        loc: {
          start: {
            line: 42,
            column: 19
          },
          end: {
            line: 42,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 42,
            column: 47
          },
          end: {
            line: 42,
            column: 62
          }
        }, {
          start: {
            line: 42,
            column: 65
          },
          end: {
            line: 42,
            column: 70
          }
        }],
        line: 42
      },
      "7": {
        loc: {
          start: {
            line: 43,
            column: 19
          },
          end: {
            line: 43,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 47
          },
          end: {
            line: 43,
            column: 62
          }
        }, {
          start: {
            line: 43,
            column: 65
          },
          end: {
            line: 43,
            column: 70
          }
        }],
        line: 43
      },
      "8": {
        loc: {
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 46,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 44,
            column: 53
          }
        }, {
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 45,
            column: 43
          }
        }, {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 46,
            column: 41
          }
        }],
        line: 44
      },
      "9": {
        loc: {
          start: {
            line: 61,
            column: 45
          },
          end: {
            line: 66,
            column: 1
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 61,
            column: 55
          },
          end: {
            line: 66,
            column: 1
          }
        }],
        line: 61
      },
      "10": {
        loc: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 68,
            column: 18
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 68,
            column: 18
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "11": {
        loc: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "12": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 70,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 70,
            column: 16
          }
        }, {
          start: {
            line: 70,
            column: 20
          },
          end: {
            line: 70,
            column: 62
          }
        }],
        line: 70
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/kevin/card-show-finder/src/utils/dateUtils.ts",
      mappings: ";AAAA;;;GAGG;;;AAEH;;;;;GAKG;AACI,MAAM,UAAU,GAAG,CACxB,IAAsC,EACtC,UAAsC;IACpC,OAAO,EAAE,MAAM;IACf,IAAI,EAAE,SAAS;IACf,KAAK,EAAE,MAAM;IACb,GAAG,EAAE,SAAS;CACf,EACO,EAAE;IACV,IAAI,CAAC,IAAI;QAAE,OAAO,EAAE,CAAC;IAErB,IAAI,CAAC;QACH,MAAM,OAAO,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACjE,OAAO,OAAO,CAAC,kBAAkB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IACtD,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC;QAC/C,OAAO,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAC9C,CAAC;AACH,CAAC,CAAC;AAlBW,QAAA,UAAU,cAkBrB;AAEF;;;;;GAKG;AACI,MAAM,SAAS,GAAG,CACvB,KAAuC,EACvC,KAAuC,EAC9B,EAAE;IACX,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK;QAAE,OAAO,KAAK,CAAC;IAEnC,IAAI,CAAC;QACH,MAAM,EAAE,GAAG,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAC/D,MAAM,EAAE,GAAG,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAE/D,OAAO,CACL,EAAE,CAAC,WAAW,EAAE,KAAK,EAAE,CAAC,WAAW,EAAE;YACrC,EAAE,CAAC,QAAQ,EAAE,KAAK,EAAE,CAAC,QAAQ,EAAE;YAC/B,EAAE,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,OAAO,EAAE,CAC9B,CAAC;IACJ,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC;QAC/C,OAAO,KAAK,CAAC;IACf,CAAC;AACH,CAAC,CAAC;AAnBW,QAAA,SAAS,aAmBpB;AAEF;;;;;;GAMG;AACI,MAAM,eAAe,GAAG,CAC7B,SAA2C,EAC3C,OAAyC,EACzC,UAAsC;IACpC,OAAO,EAAE,MAAM;IACf,IAAI,EAAE,SAAS;IACf,KAAK,EAAE,MAAM;IACb,GAAG,EAAE,SAAS;CACf,EACO,EAAE;IACV,IAAI,CAAC,SAAS;QAAE,OAAO,EAAE,CAAC;IAE1B,iEAAiE;IACjE,IAAI,CAAC,OAAO,IAAI,IAAA,iBAAS,EAAC,SAAS,EAAE,OAAO,CAAC,EAAE,CAAC;QAC9C,OAAO,IAAA,kBAAU,EAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IACxC,CAAC;IAED,4BAA4B;IAC5B,OAAO,GAAG,IAAA,kBAAU,EAAC,SAAS,EAAE,OAAO,CAAC,OAAO,IAAA,kBAAU,EAAC,OAAO,EAAE,OAAO,CAAC,EAAE,CAAC;AAChF,CAAC,CAAC;AAnBW,QAAA,eAAe,mBAmB1B",
      names: [],
      sources: ["/Users/kevin/card-show-finder/src/utils/dateUtils.ts"],
      sourcesContent: ["/**\n * dateUtils.ts\n * Utility functions for date formatting and manipulation\n */\n\n/**\n * Format a date to a human-readable string\n * @param date Date object or ISO string\n * @param options Intl.DateTimeFormatOptions to customize the format\n * @returns Formatted date string\n */\nexport const formatDate = (\n  date: Date | string | undefined | null,\n  options: Intl.DateTimeFormatOptions = { \n    weekday: 'long', \n    year: 'numeric', \n    month: 'long', \n    day: 'numeric' \n  }\n): string => {\n  if (!date) return '';\n  \n  try {\n    const dateObj = typeof date === 'string' ? new Date(date) : date;\n    return dateObj.toLocaleDateString('en-US', options);\n  } catch (error) {\n    console.error('Error formatting date:', error);\n    return typeof date === 'string' ? date : '';\n  }\n};\n\n/**\n * Check if two dates represent the same day\n * @param date1 First date\n * @param date2 Second date\n * @returns True if both dates are on the same day\n */\nexport const isSameDay = (\n  date1: Date | string | undefined | null,\n  date2: Date | string | undefined | null\n): boolean => {\n  if (!date1 || !date2) return false;\n  \n  try {\n    const d1 = typeof date1 === 'string' ? new Date(date1) : date1;\n    const d2 = typeof date2 === 'string' ? new Date(date2) : date2;\n    \n    return (\n      d1.getFullYear() === d2.getFullYear() &&\n      d1.getMonth() === d2.getMonth() &&\n      d1.getDate() === d2.getDate()\n    );\n  } catch (error) {\n    console.error('Error comparing dates:', error);\n    return false;\n  }\n};\n\n/**\n * Format a date range intelligently, handling one-day shows\n * @param startDate Start date\n * @param endDate End date\n * @param options Intl.DateTimeFormatOptions to customize the format\n * @returns Formatted date range string\n */\nexport const formatDateRange = (\n  startDate: Date | string | undefined | null,\n  endDate: Date | string | undefined | null,\n  options: Intl.DateTimeFormatOptions = { \n    weekday: 'long', \n    year: 'numeric', \n    month: 'long', \n    day: 'numeric' \n  }\n): string => {\n  if (!startDate) return '';\n  \n  // If no end date or same as start date, just show the start date\n  if (!endDate || isSameDay(startDate, endDate)) {\n    return formatDate(startDate, options);\n  }\n  \n  // Otherwise, show the range\n  return `${formatDate(startDate, options)} to ${formatDate(endDate, options)}`;\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "58623ecc1711764b5360b6b90fa938e4440c7491"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1m20yk0rz3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1m20yk0rz3();
cov_1m20yk0rz3().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1m20yk0rz3().s[1]++;
exports.formatDateRange = exports.isSameDay = exports.formatDate = void 0;
/**
 * Format a date to a human-readable string
 * @param date Date object or ISO string
 * @param options Intl.DateTimeFormatOptions to customize the format
 * @returns Formatted date string
 */
/* istanbul ignore next */
cov_1m20yk0rz3().s[2]++;
const formatDate = (date, options =
/* istanbul ignore next */
(cov_1m20yk0rz3().b[0][0]++, {
  weekday: 'long',
  year: 'numeric',
  month: 'long',
  day: 'numeric'
})) => {
  /* istanbul ignore next */
  cov_1m20yk0rz3().f[0]++;
  cov_1m20yk0rz3().s[3]++;
  if (!date) {
    /* istanbul ignore next */
    cov_1m20yk0rz3().b[1][0]++;
    cov_1m20yk0rz3().s[4]++;
    return '';
  } else
  /* istanbul ignore next */
  {
    cov_1m20yk0rz3().b[1][1]++;
  }
  cov_1m20yk0rz3().s[5]++;
  try {
    const dateObj =
    /* istanbul ignore next */
    (cov_1m20yk0rz3().s[6]++, typeof date === 'string' ?
    /* istanbul ignore next */
    (cov_1m20yk0rz3().b[2][0]++, new Date(date)) :
    /* istanbul ignore next */
    (cov_1m20yk0rz3().b[2][1]++, date));
    /* istanbul ignore next */
    cov_1m20yk0rz3().s[7]++;
    return dateObj.toLocaleDateString('en-US', options);
  } catch (error) {
    /* istanbul ignore next */
    cov_1m20yk0rz3().s[8]++;
    console.error('Error formatting date:', error);
    /* istanbul ignore next */
    cov_1m20yk0rz3().s[9]++;
    return typeof date === 'string' ?
    /* istanbul ignore next */
    (cov_1m20yk0rz3().b[3][0]++, date) :
    /* istanbul ignore next */
    (cov_1m20yk0rz3().b[3][1]++, '');
  }
};
/* istanbul ignore next */
cov_1m20yk0rz3().s[10]++;
exports.formatDate = formatDate;
/**
 * Check if two dates represent the same day
 * @param date1 First date
 * @param date2 Second date
 * @returns True if both dates are on the same day
 */
/* istanbul ignore next */
cov_1m20yk0rz3().s[11]++;
const isSameDay = (date1, date2) => {
  /* istanbul ignore next */
  cov_1m20yk0rz3().f[1]++;
  cov_1m20yk0rz3().s[12]++;
  if (
  /* istanbul ignore next */
  (cov_1m20yk0rz3().b[5][0]++, !date1) ||
  /* istanbul ignore next */
  (cov_1m20yk0rz3().b[5][1]++, !date2)) {
    /* istanbul ignore next */
    cov_1m20yk0rz3().b[4][0]++;
    cov_1m20yk0rz3().s[13]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_1m20yk0rz3().b[4][1]++;
  }
  cov_1m20yk0rz3().s[14]++;
  try {
    const d1 =
    /* istanbul ignore next */
    (cov_1m20yk0rz3().s[15]++, typeof date1 === 'string' ?
    /* istanbul ignore next */
    (cov_1m20yk0rz3().b[6][0]++, new Date(date1)) :
    /* istanbul ignore next */
    (cov_1m20yk0rz3().b[6][1]++, date1));
    const d2 =
    /* istanbul ignore next */
    (cov_1m20yk0rz3().s[16]++, typeof date2 === 'string' ?
    /* istanbul ignore next */
    (cov_1m20yk0rz3().b[7][0]++, new Date(date2)) :
    /* istanbul ignore next */
    (cov_1m20yk0rz3().b[7][1]++, date2));
    /* istanbul ignore next */
    cov_1m20yk0rz3().s[17]++;
    return /* istanbul ignore next */(cov_1m20yk0rz3().b[8][0]++, d1.getFullYear() === d2.getFullYear()) &&
    /* istanbul ignore next */
    (cov_1m20yk0rz3().b[8][1]++, d1.getMonth() === d2.getMonth()) &&
    /* istanbul ignore next */
    (cov_1m20yk0rz3().b[8][2]++, d1.getDate() === d2.getDate());
  } catch (error) {
    /* istanbul ignore next */
    cov_1m20yk0rz3().s[18]++;
    console.error('Error comparing dates:', error);
    /* istanbul ignore next */
    cov_1m20yk0rz3().s[19]++;
    return false;
  }
};
/* istanbul ignore next */
cov_1m20yk0rz3().s[20]++;
exports.isSameDay = isSameDay;
/**
 * Format a date range intelligently, handling one-day shows
 * @param startDate Start date
 * @param endDate End date
 * @param options Intl.DateTimeFormatOptions to customize the format
 * @returns Formatted date range string
 */
/* istanbul ignore next */
cov_1m20yk0rz3().s[21]++;
const formatDateRange = (startDate, endDate, options =
/* istanbul ignore next */
(cov_1m20yk0rz3().b[9][0]++, {
  weekday: 'long',
  year: 'numeric',
  month: 'long',
  day: 'numeric'
})) => {
  /* istanbul ignore next */
  cov_1m20yk0rz3().f[2]++;
  cov_1m20yk0rz3().s[22]++;
  if (!startDate) {
    /* istanbul ignore next */
    cov_1m20yk0rz3().b[10][0]++;
    cov_1m20yk0rz3().s[23]++;
    return '';
  } else
  /* istanbul ignore next */
  {
    cov_1m20yk0rz3().b[10][1]++;
  }
  // If no end date or same as start date, just show the start date
  cov_1m20yk0rz3().s[24]++;
  if (
  /* istanbul ignore next */
  (cov_1m20yk0rz3().b[12][0]++, !endDate) ||
  /* istanbul ignore next */
  (cov_1m20yk0rz3().b[12][1]++, (0, exports.isSameDay)(startDate, endDate))) {
    /* istanbul ignore next */
    cov_1m20yk0rz3().b[11][0]++;
    cov_1m20yk0rz3().s[25]++;
    return (0, exports.formatDate)(startDate, options);
  } else
  /* istanbul ignore next */
  {
    cov_1m20yk0rz3().b[11][1]++;
  }
  // Otherwise, show the range
  cov_1m20yk0rz3().s[26]++;
  return `${(0, exports.formatDate)(startDate, options)} to ${(0, exports.formatDate)(endDate, options)}`;
};
/* istanbul ignore next */
cov_1m20yk0rz3().s[27]++;
exports.formatDateRange = formatDateRange;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,