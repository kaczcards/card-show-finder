ec08f50a38ff60df864d0acf65f4ee51
function cov_1px2i6r3u1() {
  var path = "/Users/kevin/card-show-finder/src/navigation/AuthNavigator.tsx";
  var hash = "a3b226814d4082b932fbd756dd2da4efecf9e89c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/navigation/AuthNavigator.tsx",
    statementMap: {
      "0": {
        start: {
          line: 21,
          column: 18
        },
        end: {
          line: 21,
          column: 66
        }
      },
      "1": {
        start: {
          line: 27,
          column: 32
        },
        end: {
          line: 46,
          column: 1
        }
      },
      "2": {
        start: {
          line: 28,
          column: 2
        },
        end: {
          line: 45,
          column: 4
        }
      },
      "3": {
        start: {
          line: 42,
          column: 18
        },
        end: {
          line: 42,
          column: 52
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 27,
            column: 32
          },
          end: {
            line: 27,
            column: 33
          }
        },
        loc: {
          start: {
            line: 27,
            column: 38
          },
          end: {
            line: 46,
            column: 1
          }
        },
        line: 27
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 42,
            column: 9
          },
          end: {
            line: 42,
            column: 10
          }
        },
        loc: {
          start: {
            line: 42,
            column: 18
          },
          end: {
            line: 42,
            column: 52
          }
        },
        line: 42
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a3b226814d4082b932fbd756dd2da4efecf9e89c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1px2i6r3u1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1px2i6r3u1();
import React from 'react';
import { createNativeStackNavigator } from '@react-navigation/native-stack';
import { LoginScreen, RegisterScreen, ForgotPasswordScreen, ResetPasswordScreen } from '../screens/Auth';
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
var AuthStack = (cov_1px2i6r3u1().s[0]++, createNativeStackNavigator());
cov_1px2i6r3u1().s[1]++;
var AuthNavigator = function AuthNavigator() {
  cov_1px2i6r3u1().f[0]++;
  cov_1px2i6r3u1().s[2]++;
  return _jsxs(AuthStack.Navigator, {
    initialRouteName: "Login",
    screenOptions: {
      headerShown: false,
      contentStyle: {
        backgroundColor: 'white'
      },
      animation: 'slide_from_right'
    },
    children: [_jsx(AuthStack.Screen, {
      name: "Login",
      component: LoginScreen
    }), _jsx(AuthStack.Screen, {
      name: "Register",
      component: RegisterScreen
    }), _jsx(AuthStack.Screen, {
      name: "ForgotPassword",
      component: ForgotPasswordScreen
    }), _jsx(AuthStack.Screen, {
      name: "ResetPassword",
      children: function children(props) {
        cov_1px2i6r3u1().f[1]++;
        cov_1px2i6r3u1().s[3]++;
        return _jsx(ResetPasswordScreen, Object.assign({}, props));
      }
    })]
  });
};
export default AuthNavigator;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsImNyZWF0ZU5hdGl2ZVN0YWNrTmF2aWdhdG9yIiwiTG9naW5TY3JlZW4iLCJSZWdpc3RlclNjcmVlbiIsIkZvcmdvdFBhc3N3b3JkU2NyZWVuIiwiUmVzZXRQYXNzd29yZFNjcmVlbiIsImpzeCIsIl9qc3giLCJqc3hzIiwiX2pzeHMiLCJBdXRoU3RhY2siLCJjb3ZfMXB4Mmk2cjN1MSIsInMiLCJBdXRoTmF2aWdhdG9yIiwiZiIsIk5hdmlnYXRvciIsImluaXRpYWxSb3V0ZU5hbWUiLCJzY3JlZW5PcHRpb25zIiwiaGVhZGVyU2hvd24iLCJjb250ZW50U3R5bGUiLCJiYWNrZ3JvdW5kQ29sb3IiLCJhbmltYXRpb24iLCJjaGlsZHJlbiIsIlNjcmVlbiIsIm5hbWUiLCJjb21wb25lbnQiLCJwcm9wcyIsIk9iamVjdCIsImFzc2lnbiJdLCJzb3VyY2VzIjpbIkF1dGhOYXZpZ2F0b3IudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjcmVhdGVOYXRpdmVTdGFja05hdmlnYXRvciB9IGZyb20gJ0ByZWFjdC1uYXZpZ2F0aW9uL25hdGl2ZS1zdGFjayc7XG5cbi8vIEltcG9ydCBhdXRoIHNjcmVlbnNcbmltcG9ydCB7XG4gIExvZ2luU2NyZWVuLFxuICBSZWdpc3RlclNjcmVlbixcbiAgRm9yZ290UGFzc3dvcmRTY3JlZW4sXG4gIFJlc2V0UGFzc3dvcmRTY3JlZW4sXG59IGZyb20gJy4uL3NjcmVlbnMvQXV0aCc7XG5cbi8vIERlZmluZSBuYXZpZ2F0aW9uIHR5cGVzIGZvciBhdXRoIGZsb3dcbmV4cG9ydCB0eXBlIEF1dGhTdGFja1BhcmFtTGlzdCA9IHtcbiAgTG9naW46IHVuZGVmaW5lZDtcbiAgUmVnaXN0ZXI6IHVuZGVmaW5lZDtcbiAgRm9yZ290UGFzc3dvcmQ6IHVuZGVmaW5lZDtcbiAgUmVzZXRQYXNzd29yZDogeyB0b2tlbj86IHN0cmluZyB9O1xufTtcblxuLy8gQ3JlYXRlIG5hdmlnYXRpb24gc3RhY2tcbmNvbnN0IEF1dGhTdGFjayA9IGNyZWF0ZU5hdGl2ZVN0YWNrTmF2aWdhdG9yPEF1dGhTdGFja1BhcmFtTGlzdD4oKTtcblxuLyoqXG4gKiBBdXRoTmF2aWdhdG9yIC0gSGFuZGxlcyBuYXZpZ2F0aW9uIGJldHdlZW4gYXV0aGVudGljYXRpb24gc2NyZWVuc1xuICogSW5jbHVkZXMgTG9naW4sIFJlZ2lzdGVyLCBhbmQgRm9yZ290IFBhc3N3b3JkIHNjcmVlbnNcbiAqL1xuY29uc3QgQXV0aE5hdmlnYXRvcjogUmVhY3QuRkMgPSAoKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPEF1dGhTdGFjay5OYXZpZ2F0b3JcbiAgICAgIGluaXRpYWxSb3V0ZU5hbWU9XCJMb2dpblwiXG4gICAgICBzY3JlZW5PcHRpb25zPXt7XG4gICAgICAgIGhlYWRlclNob3duOiBmYWxzZSxcbiAgICAgICAgY29udGVudFN0eWxlOiB7IGJhY2tncm91bmRDb2xvcjogJ3doaXRlJyB9LFxuICAgICAgICBhbmltYXRpb246ICdzbGlkZV9mcm9tX3JpZ2h0JyxcbiAgICAgIH19XG4gICAgPlxuICAgICAgPEF1dGhTdGFjay5TY3JlZW4gbmFtZT1cIkxvZ2luXCIgY29tcG9uZW50PXtMb2dpblNjcmVlbn0gLz5cbiAgICAgIDxBdXRoU3RhY2suU2NyZWVuIG5hbWU9XCJSZWdpc3RlclwiIGNvbXBvbmVudD17UmVnaXN0ZXJTY3JlZW59IC8+XG4gICAgICA8QXV0aFN0YWNrLlNjcmVlbiBuYW1lPVwiRm9yZ290UGFzc3dvcmRcIiBjb21wb25lbnQ9e0ZvcmdvdFBhc3N3b3JkU2NyZWVufSAvPlxuICAgICAgey8qIFVzZSBhIHJlbmRlciBjYWxsYmFjayBzbyBUeXBlU2NyaXB0IGluZmVycyB0aGUgY29ycmVjdCBwcm9wIHR5cGVzICovfVxuICAgICAgPEF1dGhTdGFjay5TY3JlZW4gbmFtZT1cIlJlc2V0UGFzc3dvcmRcIj5cbiAgICAgICAge3Byb3BzID0+IDxSZXNldFBhc3N3b3JkU2NyZWVuIHsuLi5wcm9wc30gLz59XG4gICAgICA8L0F1dGhTdGFjay5TY3JlZW4+XG4gICAgPC9BdXRoU3RhY2suTmF2aWdhdG9yPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQXV0aE5hdmlnYXRvcjtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLE9BQU9BLEtBQUssTUFBTSxPQUFPO0FBQ3pCLFNBQVNDLDBCQUEwQixRQUFRLGdDQUFnQztBQUczRSxTQUNFQyxXQUFXLEVBQ1hDLGNBQWMsRUFDZEMsb0JBQW9CLEVBQ3BCQyxtQkFBbUIsUUFDZCxpQkFBaUI7QUFBQyxTQUFBQyxHQUFBLElBQUFDLElBQUEsRUFBQUMsSUFBQSxJQUFBQyxLQUFBO0FBV3pCLElBQU1DLFNBQVMsSUFBQUMsY0FBQSxHQUFBQyxDQUFBLE9BQUdYLDBCQUEwQixDQUFxQixDQUFDO0FBQUNVLGNBQUEsR0FBQUMsQ0FBQTtBQU1uRSxJQUFNQyxhQUF1QixHQUFHLFNBQTFCQSxhQUF1QkEsQ0FBQSxFQUFTO0VBQUFGLGNBQUEsR0FBQUcsQ0FBQTtFQUFBSCxjQUFBLEdBQUFDLENBQUE7RUFDcEMsT0FDRUgsS0FBQSxDQUFDQyxTQUFTLENBQUNLLFNBQVM7SUFDbEJDLGdCQUFnQixFQUFDLE9BQU87SUFDeEJDLGFBQWEsRUFBRTtNQUNiQyxXQUFXLEVBQUUsS0FBSztNQUNsQkMsWUFBWSxFQUFFO1FBQUVDLGVBQWUsRUFBRTtNQUFRLENBQUM7TUFDMUNDLFNBQVMsRUFBRTtJQUNiLENBQUU7SUFBQUMsUUFBQSxHQUVGZixJQUFBLENBQUNHLFNBQVMsQ0FBQ2EsTUFBTTtNQUFDQyxJQUFJLEVBQUMsT0FBTztNQUFDQyxTQUFTLEVBQUV2QjtJQUFZLENBQUUsQ0FBQyxFQUN6REssSUFBQSxDQUFDRyxTQUFTLENBQUNhLE1BQU07TUFBQ0MsSUFBSSxFQUFDLFVBQVU7TUFBQ0MsU0FBUyxFQUFFdEI7SUFBZSxDQUFFLENBQUMsRUFDL0RJLElBQUEsQ0FBQ0csU0FBUyxDQUFDYSxNQUFNO01BQUNDLElBQUksRUFBQyxnQkFBZ0I7TUFBQ0MsU0FBUyxFQUFFckI7SUFBcUIsQ0FBRSxDQUFDLEVBRTNFRyxJQUFBLENBQUNHLFNBQVMsQ0FBQ2EsTUFBTTtNQUFDQyxJQUFJLEVBQUMsZUFBZTtNQUFBRixRQUFBLEVBQ25DLFNBQUFBLFNBQUFJLEtBQUssRUFBSTtRQUFBZixjQUFBLEdBQUFHLENBQUE7UUFBQUgsY0FBQSxHQUFBQyxDQUFBO1FBQUEsT0FBQUwsSUFBQSxDQUFDRixtQkFBbUIsRUFBQXNCLE1BQUEsQ0FBQUMsTUFBQSxLQUFLRixLQUFLLENBQUcsQ0FBQztNQUFEO0lBQUMsQ0FDNUIsQ0FBQztFQUFBLENBQ0EsQ0FBQztBQUUxQixDQUFDO0FBRUQsZUFBZWIsYUFBYSIsImlnbm9yZUxpc3QiOltdfQ==