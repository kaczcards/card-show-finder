830746ab0f5d01a125e329b9b97825d8
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
function cov_aqm4thb94() {
  var path = "/Users/kevin/card-show-finder/src/services/cacheService.ts";
  var hash = "6cb6c43c2e79285efd335f5e05086608b0e224a2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/services/cacheService.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 19
        },
        end: {
          line: 9,
          column: 1
        }
      },
      "1": {
        start: {
          line: 12,
          column: 25
        },
        end: {
          line: 12,
          column: 39
        }
      },
      "2": {
        start: {
          line: 19,
          column: 26
        },
        end: {
          line: 36,
          column: 1
        }
      },
      "3": {
        start: {
          line: 20,
          column: 2
        },
        end: {
          line: 35,
          column: 3
        }
      },
      "4": {
        start: {
          line: 21,
          column: 22
        },
        end: {
          line: 21,
          column: 32
        }
      },
      "5": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 72
        }
      },
      "6": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 81
        }
      },
      "7": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 80
        }
      },
      "8": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 91
        }
      },
      "9": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 49
        }
      },
      "10": {
        start: {
          line: 42,
          column: 30
        },
        end: {
          line: 78,
          column: 1
        }
      },
      "11": {
        start: {
          line: 43,
          column: 2
        },
        end: {
          line: 77,
          column: 3
        }
      },
      "12": {
        start: {
          line: 45,
          column: 25
        },
        end: {
          line: 45,
          column: 78
        }
      },
      "13": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "14": {
        start: {
          line: 48,
          column: 6
        },
        end: {
          line: 48,
          column: 18
        }
      },
      "15": {
        start: {
          line: 51,
          column: 22
        },
        end: {
          line: 51,
          column: 48
        }
      },
      "16": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 26
        }
      },
      "17": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "18": {
        start: {
          line: 56,
          column: 6
        },
        end: {
          line: 56,
          column: 61
        }
      },
      "19": {
        start: {
          line: 57,
          column: 6
        },
        end: {
          line: 57,
          column: 18
        }
      },
      "20": {
        start: {
          line: 61,
          column: 22
        },
        end: {
          line: 61,
          column: 66
        }
      },
      "21": {
        start: {
          line: 62,
          column: 24
        },
        end: {
          line: 62,
          column: 75
        }
      },
      "22": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 66,
          column: 5
        }
      },
      "23": {
        start: {
          line: 65,
          column: 6
        },
        end: {
          line: 65,
          column: 18
        }
      },
      "24": {
        start: {
          line: 68,
          column: 18
        },
        end: {
          line: 68,
          column: 49
        }
      },
      "25": {
        start: {
          line: 69,
          column: 20
        },
        end: {
          line: 69,
          column: 58
        }
      },
      "26": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 121
        }
      },
      "27": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 73,
          column: 30
        }
      },
      "28": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 75,
          column: 59
        }
      },
      "29": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 76,
          column: 16
        }
      },
      "30": {
        start: {
          line: 83,
          column: 31
        },
        end: {
          line: 92,
          column: 1
        }
      },
      "31": {
        start: {
          line: 84,
          column: 2
        },
        end: {
          line: 91,
          column: 3
        }
      },
      "32": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 85,
          column: 52
        }
      },
      "33": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 86,
          column: 59
        }
      },
      "34": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 87,
          column: 61
        }
      },
      "35": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 88,
          column: 39
        }
      },
      "36": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 90,
          column: 56
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 19,
            column: 26
          },
          end: {
            line: 19,
            column: 27
          }
        },
        loc: {
          start: {
            line: 19,
            column: 88
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 42,
            column: 30
          },
          end: {
            line: 42,
            column: 31
          }
        },
        loc: {
          start: {
            line: 42,
            column: 99
          },
          end: {
            line: 78,
            column: 1
          }
        },
        line: 42
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 83,
            column: 31
          },
          end: {
            line: 83,
            column: 32
          }
        },
        loc: {
          start: {
            line: 83,
            column: 58
          },
          end: {
            line: 92,
            column: 1
          }
        },
        line: 83
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "1": {
        loc: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "2": {
        loc: {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "3": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 64,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 64,
            column: 18
          }
        }, {
          start: {
            line: 64,
            column: 22
          },
          end: {
            line: 64,
            column: 34
          }
        }],
        line: 64
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6cb6c43c2e79285efd335f5e05086608b0e224a2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_aqm4thb94 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_aqm4thb94();
import AsyncStorage from '@react-native-async-storage/async-storage';
var CACHE_KEYS = (cov_aqm4thb94().s[0]++, {
  SHOWS: 'cache:shows',
  SHOW_FILTERS: 'cache:show_filters',
  SHOW_TIMESTAMP: 'cache:shows_timestamp'
});
var CACHE_EXPIRATION = (cov_aqm4thb94().s[1]++, 60 * 60 * 1000);
cov_aqm4thb94().s[2]++;
export var cacheShows = function () {
  var _ref = _asyncToGenerator(function* (shows, filters) {
    cov_aqm4thb94().f[0]++;
    cov_aqm4thb94().s[3]++;
    try {
      var timestamp = (cov_aqm4thb94().s[4]++, Date.now());
      cov_aqm4thb94().s[5]++;
      yield AsyncStorage.setItem(CACHE_KEYS.SHOWS, JSON.stringify(shows));
      cov_aqm4thb94().s[6]++;
      yield AsyncStorage.setItem(CACHE_KEYS.SHOW_FILTERS, JSON.stringify(filters));
      cov_aqm4thb94().s[7]++;
      yield AsyncStorage.setItem(CACHE_KEYS.SHOW_TIMESTAMP, timestamp.toString());
      cov_aqm4thb94().s[8]++;
      console.log(`Cached ${shows.length} shows at ${new Date(timestamp).toLocaleString()}`);
    } catch (error) {
      cov_aqm4thb94().s[9]++;
      console.error('Error caching shows:', error);
    }
  });
  return function cacheShows(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();
cov_aqm4thb94().s[10]++;
export var getCachedShows = function () {
  var _ref2 = _asyncToGenerator(function* () {
    cov_aqm4thb94().f[1]++;
    cov_aqm4thb94().s[11]++;
    try {
      var timestampStr = (cov_aqm4thb94().s[12]++, yield AsyncStorage.getItem(CACHE_KEYS.SHOW_TIMESTAMP));
      cov_aqm4thb94().s[13]++;
      if (!timestampStr) {
        cov_aqm4thb94().b[0][0]++;
        cov_aqm4thb94().s[14]++;
        return null;
      } else {
        cov_aqm4thb94().b[0][1]++;
      }
      var timestamp = (cov_aqm4thb94().s[15]++, parseInt(timestampStr, 10));
      var now = (cov_aqm4thb94().s[16]++, Date.now());
      cov_aqm4thb94().s[17]++;
      if (now - timestamp > CACHE_EXPIRATION) {
        cov_aqm4thb94().b[1][0]++;
        cov_aqm4thb94().s[18]++;
        console.log('Show cache expired, fetching fresh data');
        cov_aqm4thb94().s[19]++;
        return null;
      } else {
        cov_aqm4thb94().b[1][1]++;
      }
      var showsJson = (cov_aqm4thb94().s[20]++, yield AsyncStorage.getItem(CACHE_KEYS.SHOWS));
      var filtersJson = (cov_aqm4thb94().s[21]++, yield AsyncStorage.getItem(CACHE_KEYS.SHOW_FILTERS));
      cov_aqm4thb94().s[22]++;
      if ((cov_aqm4thb94().b[3][0]++, !showsJson) || (cov_aqm4thb94().b[3][1]++, !filtersJson)) {
        cov_aqm4thb94().b[2][0]++;
        cov_aqm4thb94().s[23]++;
        return null;
      } else {
        cov_aqm4thb94().b[2][1]++;
      }
      var shows = (cov_aqm4thb94().s[24]++, JSON.parse(showsJson));
      var filters = (cov_aqm4thb94().s[25]++, JSON.parse(filtersJson));
      cov_aqm4thb94().s[26]++;
      console.log(`Retrieved ${shows.length} shows from cache (${Math.round((now - timestamp) / 1000 / 60)} minutes old)`);
      cov_aqm4thb94().s[27]++;
      return {
        shows: shows,
        filters: filters
      };
    } catch (error) {
      cov_aqm4thb94().s[28]++;
      console.error('Error retrieving cached shows:', error);
      cov_aqm4thb94().s[29]++;
      return null;
    }
  });
  return function getCachedShows() {
    return _ref2.apply(this, arguments);
  };
}();
cov_aqm4thb94().s[30]++;
export var clearShowsCache = function () {
  var _ref3 = _asyncToGenerator(function* () {
    cov_aqm4thb94().f[2]++;
    cov_aqm4thb94().s[31]++;
    try {
      cov_aqm4thb94().s[32]++;
      yield AsyncStorage.removeItem(CACHE_KEYS.SHOWS);
      cov_aqm4thb94().s[33]++;
      yield AsyncStorage.removeItem(CACHE_KEYS.SHOW_FILTERS);
      cov_aqm4thb94().s[34]++;
      yield AsyncStorage.removeItem(CACHE_KEYS.SHOW_TIMESTAMP);
      cov_aqm4thb94().s[35]++;
      console.log('Shows cache cleared');
    } catch (error) {
      cov_aqm4thb94().s[36]++;
      console.error('Error clearing shows cache:', error);
    }
  });
  return function clearShowsCache() {
    return _ref3.apply(this, arguments);
  };
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,