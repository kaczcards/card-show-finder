cea393365e4dae3c5302ba4dfa7c353b
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
function cov_7p9bcyhz4() {
  var path = "/Users/kevin/card-show-finder/src/services/mfaService.ts";
  var hash = "7aa2f2a936f0dc1487c6dab3147fc8f2281729b5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/kevin/card-show-finder/src/services/mfaService.ts",
    statementMap: {
      "0": {
        start: {
          line: 65,
          column: 32
        },
        end: {
          line: 65,
          column: 59
        }
      },
      "1": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 72
        }
      },
      "2": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "3": {
        start: {
          line: 76,
          column: 30
        },
        end: {
          line: 76,
          column: 100
        }
      },
      "4": {
        start: {
          line: 77,
          column: 6
        },
        end: {
          line: 79,
          column: 7
        }
      },
      "5": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 39
        }
      },
      "6": {
        start: {
          line: 81,
          column: 6
        },
        end: {
          line: 81,
          column: 18
        }
      },
      "7": {
        start: {
          line: 83,
          column: 6
        },
        end: {
          line: 83,
          column: 60
        }
      },
      "8": {
        start: {
          line: 84,
          column: 6
        },
        end: {
          line: 84,
          column: 16
        }
      },
      "9": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 108,
          column: 5
        }
      },
      "10": {
        start: {
          line: 96,
          column: 30
        },
        end: {
          line: 99,
          column: 8
        }
      },
      "11": {
        start: {
          line: 100,
          column: 6
        },
        end: {
          line: 102,
          column: 7
        }
      },
      "12": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 39
        }
      },
      "13": {
        start: {
          line: 104,
          column: 6
        },
        end: {
          line: 104,
          column: 18
        }
      },
      "14": {
        start: {
          line: 106,
          column: 6
        },
        end: {
          line: 106,
          column: 56
        }
      },
      "15": {
        start: {
          line: 107,
          column: 6
        },
        end: {
          line: 107,
          column: 16
        }
      },
      "16": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 134,
          column: 5
        }
      },
      "17": {
        start: {
          line: 120,
          column: 30
        },
        end: {
          line: 124,
          column: 8
        }
      },
      "18": {
        start: {
          line: 126,
          column: 6
        },
        end: {
          line: 128,
          column: 7
        }
      },
      "19": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 39
        }
      },
      "20": {
        start: {
          line: 130,
          column: 6
        },
        end: {
          line: 130,
          column: 18
        }
      },
      "21": {
        start: {
          line: 132,
          column: 6
        },
        end: {
          line: 132,
          column: 61
        }
      },
      "22": {
        start: {
          line: 133,
          column: 6
        },
        end: {
          line: 133,
          column: 16
        }
      },
      "23": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 159,
          column: 5
        }
      },
      "24": {
        start: {
          line: 146,
          column: 30
        },
        end: {
          line: 150,
          column: 8
        }
      },
      "25": {
        start: {
          line: 151,
          column: 6
        },
        end: {
          line: 153,
          column: 7
        }
      },
      "26": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 39
        }
      },
      "27": {
        start: {
          line: 155,
          column: 6
        },
        end: {
          line: 155,
          column: 18
        }
      },
      "28": {
        start: {
          line: 157,
          column: 6
        },
        end: {
          line: 157,
          column: 62
        }
      },
      "29": {
        start: {
          line: 158,
          column: 6
        },
        end: {
          line: 158,
          column: 16
        }
      },
      "30": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 181,
          column: 5
        }
      },
      "31": {
        start: {
          line: 169,
          column: 30
        },
        end: {
          line: 171,
          column: 8
        }
      },
      "32": {
        start: {
          line: 173,
          column: 6
        },
        end: {
          line: 175,
          column: 7
        }
      },
      "33": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 39
        }
      },
      "34": {
        start: {
          line: 177,
          column: 6
        },
        end: {
          line: 177,
          column: 18
        }
      },
      "35": {
        start: {
          line: 179,
          column: 6
        },
        end: {
          line: 179,
          column: 51
        }
      },
      "36": {
        start: {
          line: 180,
          column: 6
        },
        end: {
          line: 180,
          column: 16
        }
      },
      "37": {
        start: {
          line: 189,
          column: 4
        },
        end: {
          line: 200,
          column: 5
        }
      },
      "38": {
        start: {
          line: 190,
          column: 30
        },
        end: {
          line: 190,
          column: 96
        }
      },
      "39": {
        start: {
          line: 192,
          column: 6
        },
        end: {
          line: 194,
          column: 7
        }
      },
      "40": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 39
        }
      },
      "41": {
        start: {
          line: 196,
          column: 6
        },
        end: {
          line: 196,
          column: 18
        }
      },
      "42": {
        start: {
          line: 198,
          column: 6
        },
        end: {
          line: 198,
          column: 54
        }
      },
      "43": {
        start: {
          line: 199,
          column: 6
        },
        end: {
          line: 199,
          column: 16
        }
      },
      "44": {
        start: {
          line: 209,
          column: 4
        },
        end: {
          line: 222,
          column: 5
        }
      },
      "45": {
        start: {
          line: 210,
          column: 30
        },
        end: {
          line: 212,
          column: 8
        }
      },
      "46": {
        start: {
          line: 214,
          column: 6
        },
        end: {
          line: 216,
          column: 7
        }
      },
      "47": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 39
        }
      },
      "48": {
        start: {
          line: 218,
          column: 6
        },
        end: {
          line: 218,
          column: 18
        }
      },
      "49": {
        start: {
          line: 220,
          column: 6
        },
        end: {
          line: 220,
          column: 65
        }
      },
      "50": {
        start: {
          line: 221,
          column: 6
        },
        end: {
          line: 221,
          column: 16
        }
      },
      "51": {
        start: {
          line: 231,
          column: 4
        },
        end: {
          line: 247,
          column: 5
        }
      },
      "52": {
        start: {
          line: 233,
          column: 39
        },
        end: {
          line: 237,
          column: 17
        }
      },
      "53": {
        start: {
          line: 239,
          column: 6
        },
        end: {
          line: 241,
          column: 7
        }
      },
      "54": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 240,
          column: 39
        }
      },
      "55": {
        start: {
          line: 243,
          column: 6
        },
        end: {
          line: 243,
          column: 59
        }
      },
      "56": {
        start: {
          line: 245,
          column: 6
        },
        end: {
          line: 245,
          column: 64
        }
      },
      "57": {
        start: {
          line: 246,
          column: 6
        },
        end: {
          line: 246,
          column: 19
        }
      },
      "58": {
        start: {
          line: 262,
          column: 4
        },
        end: {
          line: 296,
          column: 5
        }
      },
      "59": {
        start: {
          line: 264,
          column: 36
        },
        end: {
          line: 264,
          column: 68
        }
      },
      "60": {
        start: {
          line: 266,
          column: 6
        },
        end: {
          line: 268,
          column: 7
        }
      },
      "61": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 267,
          column: 45
        }
      },
      "62": {
        start: {
          line: 270,
          column: 18
        },
        end: {
          line: 270,
          column: 47
        }
      },
      "63": {
        start: {
          line: 271,
          column: 22
        },
        end: {
          line: 274,
          column: 7
        }
      },
      "64": {
        start: {
          line: 277,
          column: 6
        },
        end: {
          line: 285,
          column: 7
        }
      },
      "65": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 278,
          column: 57
        }
      },
      "66": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 284,
          column: 11
        }
      },
      "67": {
        start: {
          line: 287,
          column: 6
        },
        end: {
          line: 290,
          column: 7
        }
      },
      "68": {
        start: {
          line: 288,
          column: 26
        },
        end: {
          line: 288,
          column: 47
        }
      },
      "69": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 289,
          column: 76
        }
      },
      "70": {
        start: {
          line: 292,
          column: 19
        },
        end: {
          line: 292,
          column: 40
        }
      },
      "71": {
        start: {
          line: 293,
          column: 6
        },
        end: {
          line: 293,
          column: 46
        }
      },
      "72": {
        start: {
          line: 295,
          column: 6
        },
        end: {
          line: 295,
          column: 52
        }
      },
      "73": {
        start: {
          line: 301,
          column: 26
        },
        end: {
          line: 301,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 62,
            column: 2
          },
          end: {
            line: 62,
            column: 3
          }
        },
        loc: {
          start: {
            line: 62,
            column: 16
          },
          end: {
            line: 68,
            column: 3
          }
        },
        line: 62
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 74,
            column: 2
          },
          end: {
            line: 74,
            column: 3
          }
        },
        loc: {
          start: {
            line: 74,
            column: 58
          },
          end: {
            line: 86,
            column: 3
          }
        },
        line: 74
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 94,
            column: 2
          },
          end: {
            line: 94,
            column: 3
          }
        },
        loc: {
          start: {
            line: 94,
            column: 89
          },
          end: {
            line: 109,
            column: 3
          }
        },
        line: 94
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 118,
            column: 2
          },
          end: {
            line: 118,
            column: 3
          }
        },
        loc: {
          start: {
            line: 118,
            column: 107
          },
          end: {
            line: 135,
            column: 3
          }
        },
        line: 118
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 144,
            column: 2
          },
          end: {
            line: 144,
            column: 3
          }
        },
        loc: {
          start: {
            line: 144,
            column: 109
          },
          end: {
            line: 160,
            column: 3
          }
        },
        line: 144
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 167,
            column: 2
          },
          end: {
            line: 167,
            column: 3
          }
        },
        loc: {
          start: {
            line: 167,
            column: 82
          },
          end: {
            line: 182,
            column: 3
          }
        },
        line: 167
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 188,
            column: 2
          },
          end: {
            line: 188,
            column: 3
          }
        },
        loc: {
          start: {
            line: 188,
            column: 51
          },
          end: {
            line: 201,
            column: 3
          }
        },
        line: 188
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 208,
            column: 2
          },
          end: {
            line: 208,
            column: 3
          }
        },
        loc: {
          start: {
            line: 208,
            column: 80
          },
          end: {
            line: 223,
            column: 3
          }
        },
        line: 208
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 230,
            column: 2
          },
          end: {
            line: 230,
            column: 3
          }
        },
        loc: {
          start: {
            line: 230,
            column: 56
          },
          end: {
            line: 248,
            column: 3
          }
        },
        line: 230
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 257,
            column: 2
          },
          end: {
            line: 257,
            column: 3
          }
        },
        loc: {
          start: {
            line: 261,
            column: 47
          },
          end: {
            line: 297,
            column: 3
          }
        },
        line: 261
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 65,
            column: 32
          },
          end: {
            line: 65,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 32
          },
          end: {
            line: 65,
            column: 53
          }
        }, {
          start: {
            line: 65,
            column: 57
          },
          end: {
            line: 65,
            column: 59
          }
        }],
        line: 65
      },
      "1": {
        loc: {
          start: {
            line: 77,
            column: 6
          },
          end: {
            line: 79,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 6
          },
          end: {
            line: 79,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "2": {
        loc: {
          start: {
            line: 100,
            column: 6
          },
          end: {
            line: 102,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 6
          },
          end: {
            line: 102,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "3": {
        loc: {
          start: {
            line: 126,
            column: 6
          },
          end: {
            line: 128,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 6
          },
          end: {
            line: 128,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "4": {
        loc: {
          start: {
            line: 151,
            column: 6
          },
          end: {
            line: 153,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 6
          },
          end: {
            line: 153,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "5": {
        loc: {
          start: {
            line: 173,
            column: 6
          },
          end: {
            line: 175,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 6
          },
          end: {
            line: 175,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "6": {
        loc: {
          start: {
            line: 192,
            column: 6
          },
          end: {
            line: 194,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 6
          },
          end: {
            line: 194,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "7": {
        loc: {
          start: {
            line: 214,
            column: 6
          },
          end: {
            line: 216,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 6
          },
          end: {
            line: 216,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "8": {
        loc: {
          start: {
            line: 239,
            column: 6
          },
          end: {
            line: 241,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 6
          },
          end: {
            line: 241,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 239
      },
      "9": {
        loc: {
          start: {
            line: 243,
            column: 13
          },
          end: {
            line: 243,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 243,
            column: 13
          },
          end: {
            line: 243,
            column: 33
          }
        }, {
          start: {
            line: 243,
            column: 37
          },
          end: {
            line: 243,
            column: 58
          }
        }],
        line: 243
      },
      "10": {
        loc: {
          start: {
            line: 259,
            column: 4
          },
          end: {
            line: 259,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 259,
            column: 32
          },
          end: {
            line: 259,
            column: 34
          }
        }],
        line: 259
      },
      "11": {
        loc: {
          start: {
            line: 260,
            column: 4
          },
          end: {
            line: 260,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 260,
            column: 29
          },
          end: {
            line: 260,
            column: 35
          }
        }],
        line: 260
      },
      "12": {
        loc: {
          start: {
            line: 266,
            column: 6
          },
          end: {
            line: 268,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 266,
            column: 6
          },
          end: {
            line: 268,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 266
      },
      "13": {
        loc: {
          start: {
            line: 277,
            column: 6
          },
          end: {
            line: 285,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 6
          },
          end: {
            line: 285,
            column: 7
          }
        }, {
          start: {
            line: 279,
            column: 13
          },
          end: {
            line: 285,
            column: 7
          }
        }],
        line: 277
      },
      "14": {
        loc: {
          start: {
            line: 287,
            column: 6
          },
          end: {
            line: 290,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 6
          },
          end: {
            line: 290,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 287
      },
      "15": {
        loc: {
          start: {
            line: 289,
            column: 24
          },
          end: {
            line: 289,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 289,
            column: 24
          },
          end: {
            line: 289,
            column: 39
          }
        }, {
          start: {
            line: 289,
            column: 43
          },
          end: {
            line: 289,
            column: 74
          }
        }],
        line: 289
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0],
      "11": [0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7aa2f2a936f0dc1487c6dab3147fc8f2281729b5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_7p9bcyhz4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_7p9bcyhz4();
import { supabase } from '../supabase';
export var MFAService = function () {
  function MFAService() {
    var _ref;
    _classCallCheck(this, MFAService);
    cov_7p9bcyhz4().f[0]++;
    var supabaseUrl = (cov_7p9bcyhz4().s[0]++, (_ref = (cov_7p9bcyhz4().b[0][0]++, supabase.url)) != null ? _ref : (cov_7p9bcyhz4().b[0][1]++, ""));
    cov_7p9bcyhz4().s[1]++;
    this.baseUrl = supabaseUrl.replace("/auth/v1", "/functions/v1/mfa");
  }
  return _createClass(MFAService, [{
    key: "startEnrollment",
    value: (function () {
      var _startEnrollment = _asyncToGenerator(function* () {
        cov_7p9bcyhz4().f[1]++;
        cov_7p9bcyhz4().s[2]++;
        try {
          var _ref2 = (cov_7p9bcyhz4().s[3]++, yield this.callMFAEndpoint("enroll", {}, "GET")),
            data = _ref2.data,
            error = _ref2.error;
          cov_7p9bcyhz4().s[4]++;
          if (error) {
            cov_7p9bcyhz4().b[1][0]++;
            cov_7p9bcyhz4().s[5]++;
            throw new Error(error.message);
          } else {
            cov_7p9bcyhz4().b[1][1]++;
          }
          cov_7p9bcyhz4().s[6]++;
          return data;
        } catch (err) {
          cov_7p9bcyhz4().s[7]++;
          console.error("Failed to start MFA enrollment:", err);
          cov_7p9bcyhz4().s[8]++;
          throw err;
        }
      });
      function startEnrollment() {
        return _startEnrollment.apply(this, arguments);
      }
      return startEnrollment;
    }())
  }, {
    key: "verifySetup",
    value: (function () {
      var _verifySetup = _asyncToGenerator(function* (code, challengeId) {
        cov_7p9bcyhz4().f[2]++;
        cov_7p9bcyhz4().s[9]++;
        try {
          var _ref3 = (cov_7p9bcyhz4().s[10]++, yield this.callMFAEndpoint("verify", {
              code: code,
              challengeId: challengeId
            })),
            data = _ref3.data,
            error = _ref3.error;
          cov_7p9bcyhz4().s[11]++;
          if (error) {
            cov_7p9bcyhz4().b[2][0]++;
            cov_7p9bcyhz4().s[12]++;
            throw new Error(error.message);
          } else {
            cov_7p9bcyhz4().b[2][1]++;
          }
          cov_7p9bcyhz4().s[13]++;
          return data;
        } catch (err) {
          cov_7p9bcyhz4().s[14]++;
          console.error("Failed to verify MFA setup:", err);
          cov_7p9bcyhz4().s[15]++;
          throw err;
        }
      });
      function verifySetup(_x, _x2) {
        return _verifySetup.apply(this, arguments);
      }
      return verifySetup;
    }())
  }, {
    key: "authenticate",
    value: (function () {
      var _authenticate = _asyncToGenerator(function* (code, userId, sessionId) {
        cov_7p9bcyhz4().f[3]++;
        cov_7p9bcyhz4().s[16]++;
        try {
          var _ref4 = (cov_7p9bcyhz4().s[17]++, yield this.callMFAEndpoint("authenticate", {
              code: code,
              userId: userId,
              sessionId: sessionId
            })),
            data = _ref4.data,
            error = _ref4.error;
          cov_7p9bcyhz4().s[18]++;
          if (error) {
            cov_7p9bcyhz4().b[3][0]++;
            cov_7p9bcyhz4().s[19]++;
            throw new Error(error.message);
          } else {
            cov_7p9bcyhz4().b[3][1]++;
          }
          cov_7p9bcyhz4().s[20]++;
          return data;
        } catch (err) {
          cov_7p9bcyhz4().s[21]++;
          console.error("Failed to authenticate with MFA:", err);
          cov_7p9bcyhz4().s[22]++;
          throw err;
        }
      });
      function authenticate(_x3, _x4, _x5) {
        return _authenticate.apply(this, arguments);
      }
      return authenticate;
    }())
  }, {
    key: "validateRecoveryCode",
    value: (function () {
      var _validateRecoveryCode = _asyncToGenerator(function* (code, userId, sessionId) {
        cov_7p9bcyhz4().f[4]++;
        cov_7p9bcyhz4().s[23]++;
        try {
          var _ref5 = (cov_7p9bcyhz4().s[24]++, yield this.callMFAEndpoint("validate-recovery", {
              code: code,
              userId: userId,
              sessionId: sessionId
            })),
            data = _ref5.data,
            error = _ref5.error;
          cov_7p9bcyhz4().s[25]++;
          if (error) {
            cov_7p9bcyhz4().b[4][0]++;
            cov_7p9bcyhz4().s[26]++;
            throw new Error(error.message);
          } else {
            cov_7p9bcyhz4().b[4][1]++;
          }
          cov_7p9bcyhz4().s[27]++;
          return data;
        } catch (err) {
          cov_7p9bcyhz4().s[28]++;
          console.error("Failed to validate recovery code:", err);
          cov_7p9bcyhz4().s[29]++;
          throw err;
        }
      });
      function validateRecoveryCode(_x6, _x7, _x8) {
        return _validateRecoveryCode.apply(this, arguments);
      }
      return validateRecoveryCode;
    }())
  }, {
    key: "disableMFA",
    value: (function () {
      var _disableMFA = _asyncToGenerator(function* (code) {
        cov_7p9bcyhz4().f[5]++;
        cov_7p9bcyhz4().s[30]++;
        try {
          var _ref6 = (cov_7p9bcyhz4().s[31]++, yield this.callMFAEndpoint("disable", {
              code: code
            })),
            data = _ref6.data,
            error = _ref6.error;
          cov_7p9bcyhz4().s[32]++;
          if (error) {
            cov_7p9bcyhz4().b[5][0]++;
            cov_7p9bcyhz4().s[33]++;
            throw new Error(error.message);
          } else {
            cov_7p9bcyhz4().b[5][1]++;
          }
          cov_7p9bcyhz4().s[34]++;
          return data;
        } catch (err) {
          cov_7p9bcyhz4().s[35]++;
          console.error("Failed to disable MFA:", err);
          cov_7p9bcyhz4().s[36]++;
          throw err;
        }
      });
      function disableMFA(_x9) {
        return _disableMFA.apply(this, arguments);
      }
      return disableMFA;
    }())
  }, {
    key: "getMFAStatus",
    value: (function () {
      var _getMFAStatus = _asyncToGenerator(function* () {
        cov_7p9bcyhz4().f[6]++;
        cov_7p9bcyhz4().s[37]++;
        try {
          var _ref7 = (cov_7p9bcyhz4().s[38]++, yield this.callMFAEndpoint("status", {}, "GET")),
            data = _ref7.data,
            error = _ref7.error;
          cov_7p9bcyhz4().s[39]++;
          if (error) {
            cov_7p9bcyhz4().b[6][0]++;
            cov_7p9bcyhz4().s[40]++;
            throw new Error(error.message);
          } else {
            cov_7p9bcyhz4().b[6][1]++;
          }
          cov_7p9bcyhz4().s[41]++;
          return data;
        } catch (err) {
          cov_7p9bcyhz4().s[42]++;
          console.error("Failed to get MFA status:", err);
          cov_7p9bcyhz4().s[43]++;
          throw err;
        }
      });
      function getMFAStatus() {
        return _getMFAStatus.apply(this, arguments);
      }
      return getMFAStatus;
    }())
  }, {
    key: "regenerateRecoveryCodes",
    value: (function () {
      var _regenerateRecoveryCodes = _asyncToGenerator(function* (code) {
        cov_7p9bcyhz4().f[7]++;
        cov_7p9bcyhz4().s[44]++;
        try {
          var _ref8 = (cov_7p9bcyhz4().s[45]++, yield this.callMFAEndpoint("regenerate-recovery-codes", {
              code: code
            })),
            data = _ref8.data,
            error = _ref8.error;
          cov_7p9bcyhz4().s[46]++;
          if (error) {
            cov_7p9bcyhz4().b[7][0]++;
            cov_7p9bcyhz4().s[47]++;
            throw new Error(error.message);
          } else {
            cov_7p9bcyhz4().b[7][1]++;
          }
          cov_7p9bcyhz4().s[48]++;
          return data;
        } catch (err) {
          cov_7p9bcyhz4().s[49]++;
          console.error("Failed to regenerate recovery codes:", err);
          cov_7p9bcyhz4().s[50]++;
          throw err;
        }
      });
      function regenerateRecoveryCodes(_x0) {
        return _regenerateRecoveryCodes.apply(this, arguments);
      }
      return regenerateRecoveryCodes;
    }())
  }, {
    key: "isMFARequired",
    value: (function () {
      var _isMFARequired = _asyncToGenerator(function* (userId) {
        cov_7p9bcyhz4().f[8]++;
        cov_7p9bcyhz4().s[51]++;
        try {
          var _ref9 = (cov_7p9bcyhz4().s[52]++, yield supabase.from("profiles").select("mfa_enabled, mfa_verified").eq("id", userId).single()),
            profile = _ref9.data,
            error = _ref9.error;
          cov_7p9bcyhz4().s[53]++;
          if (error) {
            cov_7p9bcyhz4().b[8][0]++;
            cov_7p9bcyhz4().s[54]++;
            throw new Error(error.message);
          } else {
            cov_7p9bcyhz4().b[8][1]++;
          }
          cov_7p9bcyhz4().s[55]++;
          return (cov_7p9bcyhz4().b[9][0]++, profile == null ? void 0 : profile.mfa_enabled) && (cov_7p9bcyhz4().b[9][1]++, profile == null ? void 0 : profile.mfa_verified);
        } catch (err) {
          cov_7p9bcyhz4().s[56]++;
          console.error("Failed to check if MFA is required:", err);
          cov_7p9bcyhz4().s[57]++;
          return false;
        }
      });
      function isMFARequired(_x1) {
        return _isMFARequired.apply(this, arguments);
      }
      return isMFARequired;
    }())
  }, {
    key: "callMFAEndpoint",
    value: (function () {
      var _callMFAEndpoint = _asyncToGenerator(function* (endpoint) {
        var body = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (cov_7p9bcyhz4().b[10][0]++, {});
        var method = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : (cov_7p9bcyhz4().b[11][0]++, "POST");
        cov_7p9bcyhz4().f[9]++;
        cov_7p9bcyhz4().s[58]++;
        try {
          var _ref0 = (cov_7p9bcyhz4().s[59]++, yield supabase.auth.getSession()),
            session = _ref0.data.session;
          cov_7p9bcyhz4().s[60]++;
          if (!session) {
            cov_7p9bcyhz4().b[12][0]++;
            cov_7p9bcyhz4().s[61]++;
            throw new Error("No active session");
          } else {
            cov_7p9bcyhz4().b[12][1]++;
          }
          var url = (cov_7p9bcyhz4().s[62]++, `${this.baseUrl}/${endpoint}`);
          var headers = (cov_7p9bcyhz4().s[63]++, {
            "Content-Type": "application/json",
            "Authorization": `Bearer ${session.access_token}`
          });
          var response;
          cov_7p9bcyhz4().s[64]++;
          if (method === "GET") {
            cov_7p9bcyhz4().b[13][0]++;
            cov_7p9bcyhz4().s[65]++;
            response = yield fetch(url, {
              headers: headers,
              method: method
            });
          } else {
            cov_7p9bcyhz4().b[13][1]++;
            cov_7p9bcyhz4().s[66]++;
            response = yield fetch(url, {
              method: method,
              headers: headers,
              body: JSON.stringify(body)
            });
          }
          cov_7p9bcyhz4().s[67]++;
          if (!response.ok) {
            cov_7p9bcyhz4().b[14][0]++;
            var errorData = (cov_7p9bcyhz4().s[68]++, yield response.json());
            cov_7p9bcyhz4().s[69]++;
            throw new Error((cov_7p9bcyhz4().b[15][0]++, errorData.error) || (cov_7p9bcyhz4().b[15][1]++, `HTTP error ${response.status}`));
          } else {
            cov_7p9bcyhz4().b[14][1]++;
          }
          var data = (cov_7p9bcyhz4().s[70]++, yield response.json());
          cov_7p9bcyhz4().s[71]++;
          return {
            data: data,
            error: null
          };
        } catch (err) {
          cov_7p9bcyhz4().s[72]++;
          return {
            data: {},
            error: err
          };
        }
      });
      function callMFAEndpoint(_x10) {
        return _callMFAEndpoint.apply(this, arguments);
      }
      return callMFAEndpoint;
    }())
  }]);
}();
export var mfaService = (cov_7p9bcyhz4().s[73]++, new MFAService());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,